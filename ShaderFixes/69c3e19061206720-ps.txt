// MANUALLY DUMPED [ShaderRegexKillShadingRGB]
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Jul 12 21:28:41 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 30
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.yz, cb1[129].xxyx
  mov r0.w, cb1[131].w
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
  mov r9.w, cb1[125].x
  mov r12.x, cb1[128].w
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.yz, cb3[129].xxyx
  mov r0.w, cb3[131].w
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
  mov r9.w, cb3[125].x
  mov r12.x, cb3[128].w
endif
mul r12.yzw, v0.zzxy, v1.xxyz
mad r12.yzw, v1.zzxy, v0.xxyz, -r12.yyzw
mul r12.yzw, r12.yyzw, v1.wwww
add r11.xy, -r11.xyxx, v6.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v6.wwww
mov r13.z, v6.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v6.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r0.w, r0.w, cb2[4].w
movc r4.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r4.w
mad r6.xy, v2.xyxx, cb6[7].xxxx, cb6[1].xyxx
sample_b_indexable(texture2d)(float,float,float,float) r6.zw, r6.xyxx, t16.zwxy, s5, cb1[133].x

mad r7.xy, r6.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r7.xyxx, r7.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r7.z, r4.w
mad r7.xyz, r7.xyzx, r12.xxxx, r9.xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, r7.xyzx
mul r8.yzw, r12.yyzw, r7.yyyy
mad r7.xyw, r7.xxxx, v0.yzyx, r8.yzyw
mad r7.xyz, r7.zzzz, v1.yzxy, r7.xywx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, r7.xyzx
mul r7.xyz, r0.wwww, r7.xyzx
ge r0.w, cb1[132].z, -cb1[132].z
frc r4.w, |cb1[132].z|
movc r0.w, r0.w, r4.w, -r4.w
mul r0.w, r0.w, cb6[7].w
mul r0.w, r0.w, l(6.28318548)
sincos r0.w, null, r0.w
mul r0.w, r0.w, cb6[8].x
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, r6.xyxx, t17.wxyz, s6, cb1[133].x



mul r8.yzw, r8.yyzw, cb6[8].yyyy
mul r8.yzw, r8.yyzw, cb6[3].xxyz
mul r9.xyz, r0.wwww, r8.yzwy
lt r0.w, l(0.000001), |cb6[8].z|
ge r4.w, cb6[8].z, l(0.000000)
movc r9.xyz, r4.wwww, r9.xyzx, r8.yzwy
movc r8.yzw, r0.wwww, r9.xxyz, r8.yyzw
add r8.yzw, r8.yyzw, cb6[4].xxyz
sample_b_indexable(texture2d)(float,float,float,float) r9.xyz, r6.xyxx, t18.xyzw, s7, cb1[133].x
dp3 r0.w, r9.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r12.xyz, -r9.xyzx, r0.wwww
mad r9.xyz, cb6[9].yyyy, r12.xyzx, r9.xyzx
dp3 r0.w, l(0.577350259, 0.577350259, 0.577350259, 0.000000), r9.xyzx
mad r9.xyz, -r0.wwww, l(0.577350259, 0.577350259, 0.577350259, 0.000000), r9.xyzx
mul r12.xyz, r9.zxyz, l(0.577350259, 0.577350259, 0.577350259, 0.000000)
mad r12.xyz, r9.zxyz, l(0.577350259, 0.577350259, 0.577350259, 0.000000), -r12.zxyz
sincos r14.x, r15.x, cb6[9].x
mul r12.xyz, r12.xyzx, r14.xxxx
mad r9.xyz, r9.xyzx, r15.xxxx, r12.xyzx
mad r9.xyz, r0.wwww, l(0.577350259, 0.577350259, 0.577350259, 0.000000), r9.xyzx
lt r0.w, l(0.000001), |cb6[9].z|
ge r4.w, cb6[9].z, l(0.000000)
movc r12.xyz, r4.wwww, cb6[6].xyzx, r9.xyzx
movc_sat r9.xyz, r0.wwww, r12.xyzx, r9.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t19.zyxw, s8, cb1[133].x

add_sat r0.w, r6.z, cb6[9].w
ilt r4.w, l(1), r9.w
add r7.w, cb6[10].x, l(-0.333300)
lt r12.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r7.wwww
and r9.w, r12.x, l(8)
movc r9.w, r12.y, l(9), r9.w
movc r9.w, r12.z, l(13), r9.w
utof r11.z, r9.w
add r11.z, r11.z, l(-0.500000)
lt r11.z, r11.z, l(0.000000)
movc r11.z, r12.w, l(0), r11.z
and r11.z, r4.w, r11.z
discard_nz r11.z
not r4.w, r4.w
lt r7.w, r7.w, l(0.000000)
and r7.w, r4.w, r7.w
discard_nz r7.w
or r4.w, r4.w, r12.w
movc oMask, r4.w, l(15), r9.w
mov_sat r6.xy, r6.xyxx
mad r6.z, r0.w, r0.z, r0.y
lt r0.y, l(0.000000), cb2[12].x
lt r0.z, l(0.000000), cb1[163].w
and r0.y, r0.z, r0.y
div r0.zw, r13.xxxy, r13.wwww
mad r10.xy, r0.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r14.xyz, r14.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r14.xyz, r7.xyzx, r14.wwww, r14.xyzx
mad r16.xz, r6.xxzx, r15.wwww, r15.xxzx
mad r16.y, r15.w, l(0.500000), r15.y
mad r12.xyz, r9.xyzx, r12.wwww, r12.xyzx
movc r7.xyz, r0.yyyy, r14.xyzx, r7.xyzx
movc r9.xyz, r0.yyyy, r12.xyzx, r9.xyzx
mov r6.w, l(0.500000)
movc r0.yzw, r0.yyyy, r16.xxyz, r6.xxwz
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, v3.zwzz, t15.xyzw, s4
mad r14.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r12.xyzw, r12.xyzw, cb5[7].xyzw, r14.xyzw
mul r12.xyzw, r12.xyzw, r12.xyzw
mul r12.xyzw, r12.xyzw, cb5[6].xyzw
mul r4.w, r0.z, l(0.080000)
mad r6.xzw, -r0.zzzz, l(0.080000, 0.000000, 0.080000, 0.080000), r9.xxyz
mad r6.xzw, r0.yyyy, r6.xxzw, r4.wwww
mad r14.xyz, -r9.xyzx, r0.yyyy, r9.xyzx
mad r14.xyz, r14.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r6.xzw, r6.xxzw, cb1[127].wwww, cb1[127].xxyz
mul r0.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r11.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r0.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r11.zwzz, t14.xyzw, s3
// APPLYING SHADINGRGB EDITS 
mov r30.xyz,  r14.xyzx

mad r0.y, r16.w, l(0.00392156886), r15.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb5[18].w, cb5[20].w
mul r15.xyz, r15.xyzx, r15.xyzx
mad r15.xyz, r15.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r16.xyzw, r16.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r7.w, l(1.000000)
dp4 r0.z, r16.xyzw, r7.xyzw
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
mul r15.xyz, r15.xyzx, r0.yyyy
mul r15.xyz, r15.xyzx, cb1[146].xyzx
dp3 r0.y, r15.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.z, l(1), cb1[125].x
if_nz r0.z
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r16.xy, r11.zwzz
  mov r16.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r16.xyzz, t10.yzxw
  mad r4.w, r0.z, cb1[57].x, cb1[57].y
  mad r0.z, r0.z, cb1[57].z, -cb1[57].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r4.w
  mad r0.z, -r13.z, l(1.000000), r0.z
  div r0.z, |r0.z|, r13.w
  lt r0.z, l(0.010000), r0.z
  if_nz r0.z
    mov r17.y, -cb1[123].z
    mov r17.z, l(0)
    add r17.yz, r10.xxyx, r17.yyzy
    iadd r18.xyzw, r16.xxyy, l(1, -1, 1, -1)
    mov r16.w, r18.y
    ld_indexable(texture2d)(float,float,float,float) r0.z, r16.wyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r17.x, |r0.z|
    lt r0.z, r17.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r17.xyz, r0.zzzz, r17.xyzx, r10.zxyz
    mov r19.y, l(0)
    mov r19.z, cb1[123].w
    add r19.yz, r10.xxyx, r19.yyzy
    mov r20.xz, r16.xxzx
    mov r20.yw, r18.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r17.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r19.y, cb1[123].z
    mov r19.z, l(0)
    add r19.yz, r10.xxyx, r19.yyzy
    mov r18.yzw, r16.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.z, r18.xyzw, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r16.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r10.zw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xwzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    lt r0.z, |r0.z|, r16.x
    movc r10.xy, r0.zzzz, r10.zwzz, r16.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.zw, l(0), t9.zwxy
utof r10.zw, r10.zzzw
mul r10.zw, r10.zzzw, r10.xxxy
round_z r10.zw, r10.zzzw
ftoi r16.xy, r10.zwzz
mov r16.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r16.xyzw, t9.yzxw
mul r4.w, cb2[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb1[164].y, l(1.000000)
add r0.z, r0.z, l(-1.000000)
mad r0.z, r4.w, r0.z, l(1.000000)
mul r13.xyz, r0.zzzz, r15.xyzx
mul r0.y, r0.z, r0.y
mul r13.xyz, r14.xyzx, r13.xyzx
mad r15.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r16.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r9.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r15.xyz, r6.yyyy, r15.xyzx, r16.xyzx
mad r9.xyz, r15.xyzx, r6.yyyy, r9.xyzx
mul r9.xyz, r6.yyyy, r9.xyzx
max r9.xyz, r6.yyyy, r9.xyzx
ftou r10.zw, r11.xxxy
if_z r0.x
  mov r4.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r9.w, cb4[3].z
  mov r11.xyz, cb4[1].zxyz
  mov r11.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r9.w, cb4[43].z
  mov r11.xyz, cb4[41].zxyz
  mov r11.w, cb4[42].x
endif
mad r4.w, v6.w, r4.w, r7.w
log r4.w, r4.w
mul r4.w, r9.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r7.w, r11.x, l(-1)
umin r4.w, r4.w, r7.w
ushr r10.zw, r10.zzzw, r11.wwww
imad r4.w, r4.w, r11.z, r10.w
imad r4.w, r4.w, r11.y, r10.z
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r7.w, cb4[0].z
  mov r9.w, cb4[6].x
  mov r11.xy, cb4[6].zwzz
  mov r15.xyz, cb4[5].xyzx
  mov r16.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r9.w, cb4[46].x
  mov r11.xy, cb4[46].zwzz
  mov r15.xyz, cb4[45].xyzx
  mov r16.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r17.xyzw, r9.wwww, l(255, 1, 2, 4)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r7.w, r9.w, l(8)
  movc r18.w, r7.w, l(1.000000), l(0)
  ushr r11.zw, r9.wwww, l(0, 0, 4, 8)
  ubfe r7.w, l(1), l(4), r9.w
  movc r19.x, r7.w, l(1.000000), l(0)
  and r20.xyz, r11.zzzz, l(2, 4, 8, 0)
  movc r19.yzw, r20.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r7.w, r19.xyzw, r10.xyzw
  lt r9.w, r11.y, l(0.000000)
  swapc r19.x, r20.x, r9.w, l(1.000000), r7.w
  if_nz r17.x
    mov r18.xyz, r17.yzwy
    dp4 r7.w, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r9.w, r12.xyzw, r18.xyzw
    add r9.w, r9.w, l(-1.000000)
    mad r7.w, r7.w, r9.w, l(1.000000)
    mad_sat r9.w, r13.w, r11.x, r11.y
    mul r9.w, r9.w, r9.w
    add r7.w, -r19.x, r7.w
    mad r7.w, r9.w, r7.w, r19.x
    min r9.w, r20.x, r7.w
    mul r11.x, r20.x, r7.w
    mul r11.y, r20.x, r9.w
  else
    mov r11.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r11.y, r11.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r16.xyzx, r16.xyzx
    rsq r7.w, r7.w
    mul r16.xyz, r7.wwww, r16.xyzx
    dp3 r7.w, r7.zxyz, r16.xyzx
    mov_sat r9.w, r7.w
    max r11.y, r0.w, l(0.020000)
    dp3 r11.z, r7.zxyz, r4.xyzx
    dp3 r13.w, r4.xyzx, r16.xyzx
    mad r14.w, r13.w, l(2.000000), l(2.000000)
    rsq r14.w, r14.w
    add r7.w, r7.w, r11.z
    mul_sat r7.w, r14.w, r7.w
    mad_sat r13.w, r14.w, r13.w, r14.w
    add r11.z, |r11.z|, l(0.000010)
    min r11.z, r11.z, l(1.000000)
    mul r16.xyz, r9.wwww, r14.xyzx
    mul r14.w, r11.y, r11.y
    mul r15.w, r14.w, r14.w
    mad r16.w, r7.w, r15.w, -r7.w
    mad r7.w, r16.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r15.w, r7.w
    mad r11.y, -r11.y, r11.y, l(1.000000)
    mad r15.w, r11.z, r11.y, r14.w
    mad r11.y, r9.w, r11.y, r14.w
    mul r11.y, r11.y, r11.z
    mad r11.y, r9.w, r15.w, r11.y
    rcp r11.y, r11.y
    mul r7.w, r7.w, r11.y
    add r11.y, -r13.w, l(1.000000)
    mul r11.z, r11.y, r11.y
    mul r11.z, r11.z, r11.z
    mul r13.w, r11.y, r11.z
    mul_sat r14.w, r6.z, l(50.000000)
    mad r11.y, -r11.z, r11.y, l(1.000000)
    mul r17.xyz, r6.xzwx, r11.yyyy
    mad r17.xyz, r14.wwww, r13.wwww, r17.xyzx
    mul r7.w, r7.w, l(0.500000)
    mul r17.xyz, r17.xyzx, r7.wwww
    mul r17.xyz, r9.wwww, r17.xyzx
    mad r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r17.xyzx
    mul r11.xyz, r11.xxxx, r15.xyzx
    mul r11.xyz, r11.xyzx, r16.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r7.w, r11.w, cb2[16].w
  movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r9.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t1.yzwx
else
  ishl r11.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t4.yzwx
  umin r7.w, r11.w, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r4.wwww, t4.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r7.w
dp3 r7.w, -r4.yzxy, r7.xyzx
add r7.w, r7.w, r7.w
mad r15.xyz, r7.zxyz, -r7.wwww, -r4.xyzx
max r7.w, r0.w, l(0.020000)
mul r11.w, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
dp3 r13.w, r7.zxyz, r4.xyzx
add r14.w, r13.w, r13.w
mad r15.w, r14.w, r13.w, l(-1.000000)
add r16.x, |r13.w|, l(0.000010)
min r16.x, r16.x, l(1.000000)
mul r16.yzw, r14.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r17.x, r11.w, r11.w
mul r18.xyzw, r6.zxzw, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r18.x, r18.x
mov r19.y, l(1.000000)
mov r17.yzw, r11.xxyz
mov r19.z, l(0)
loop
  uge r19.w, r19.z, r4.w
  breakc_nz r19.w
  iadd r19.w, r9.w, r19.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r20.x, r19.wwww, t2.xyzw
    imul null, r20.y, r20.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r20.yyyy, t0.xyzw
    imad r20.xyzw, r20.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r20.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r20.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r20.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r19.w, r19.wwww, t5.yzwx
    imul null, r25.x, r19.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.xxxx, t3.xyzw
    imad r25.xyzw, r19.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r25.wwww, t3.wxyz
  endif
  eq r19.w, r22.w, l(0.000000)
  lt r25.x, l(-2.000000), r24.x
  add r21.xyz, -r5.xyzx, r21.xyzx
  dp3 r25.y, r21.xyzx, r21.xyzx
  rsq r25.z, r25.y
  mul r26.xyz, r21.xyzx, r25.zzzz
  mul r25.z, r21.w, r21.w
  mul r25.y, r25.z, r25.y
  mad r25.y, -r25.y, r25.y, l(1.000000)
  max r25.y, r25.y, l(0.000000)
  mul r25.y, r25.y, r25.y
  mul r27.xyz, r21.wwww, r21.xyzx
  dp3 r21.w, r27.xyzx, r27.xyzx
  min r21.w, r21.w, l(1.000000)
  add r21.w, -r21.w, l(1.000000)
  log r21.w, r21.w
  mul r21.w, r21.w, r22.w
  exp r21.w, r21.w
  movc r21.w, r19.w, r25.y, r21.w
  dp3 r22.w, r26.xyzx, r23.yzwy
  add r22.w, -r24.x, r22.w
  mul_sat r22.w, r24.y, r22.w
  mul r22.w, r22.w, r22.w
  mul r22.w, r21.w, r22.w
  movc r21.w, r25.x, r22.w, r21.w
  lt r22.w, l(0.000000), r21.w
  if_nz r22.w
    and r22.w, r23.x, l(255)
    movc r22.w, r22.w, l(1), l(0)
    if_nz r22.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r22.w, r23.x, l(4)
      ubfe r23.y, l(1), l(4), r23.x
      movc r26.x, r23.y, l(1.000000), l(0)
      and r23.yzw, r22.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r22.w, r26.xyzw, r10.xyzw
      dp4 r23.y, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r23.z, r12.xyzw, r25.xyzw
      add r23.z, r23.z, l(-1.000000)
      mad r23.y, r23.y, r23.z, l(1.000000)
      mul r23.yz, r22.wwww, r23.yyyy
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r22.w, r23.z, r23.y
    lt r22.w, l(0.000000), r22.w
    if_nz r22.w
      f16tof32 r22.w, r24.w
      mul r23.z, r22.w, l(0.500000)
      mad r24.xyw, -r23.zzzz, r20.yzyw, r21.xyxz
      mad r20.yzw, r23.zzzz, r20.yyzw, r21.xxyz
      lt r21.x, l(0.000000), r22.w
      if_nz r21.x
        dp3 r21.y, r24.xywx, r24.xywx
        dp3 r21.z, r20.yzwy, r20.yzwy
        rsq r21.y, r21.y
        rsq r21.z, r21.z
        mul r23.z, r21.z, r21.y
        dp3 r23.w, r24.xywx, r20.yzwy
        mul r23.w, r23.z, r23.w
        mad r25.x, r23.w, l(0.500000), r23.z
        add r25.x, r25.x, l(0.500000)
        div r25.y, r23.z, r25.x
        dp3 r23.z, r7.zxyz, r24.xywx
        dp3 r25.z, r7.zxyz, r20.yzwy
        mul r21.z, r21.z, r25.z
        mad r21.y, r23.z, r21.y, r21.z
        mul r25.x, r21.y, l(0.500000)
      else
        dp3 r21.y, r24.xywx, r24.xywx
        add r21.z, r21.y, l(1.000000)
        rcp r25.y, r21.z
        rsq r21.y, r21.y
        mul r26.xyz, r21.yyyy, r24.xywx
        dp3 r25.x, r7.zxyz, r26.xyzx
        mov r23.w, l(1.000000)
      endif
      lt r21.y, l(0.000000), r24.z
      mul r21.z, r24.z, r24.z
      mul_sat r21.z, r25.y, r21.z
      sqrt r21.z, r21.z
      lt r23.z, r25.x, r21.z
      max r25.z, -r21.z, r25.x
      add r25.z, r21.z, r25.z
      mul r25.z, r25.z, r25.z
      mul r21.z, r21.z, l(4.000000)
      div r21.z, r25.z, r21.z
      movc r21.z, r23.z, r21.z, r25.x
      movc_sat r21.y, r21.y, r21.z, r25.x
      movc r19.w, r19.w, r25.y, l(1.000000)
      add r20.yzw, -r24.xxyw, r20.yyzw
      dp3 r21.z, r15.xyzx, r20.yzwy
      mad r25.xyz, r21.zzzz, r15.xyzx, -r20.yzwy
      dp3 r23.z, r24.xywx, r25.xyzx
      mul r21.z, r21.z, r21.z
      mad r21.z, r22.w, r22.w, -r21.z
      div_sat r21.z, r23.z, r21.z
      mad r20.yzw, r21.zzzz, r20.yyzw, r24.xxyw
      movc r20.yzw, r21.xxxx, r20.yyzw, r24.xxyw
      dp3 r21.x, r20.yzwy, r20.yzwy
      rsq r21.x, r21.x
      mul r20.yzw, r20.yyzw, r21.xxxx
      mul r21.z, r21.x, r24.z
      mul_sat r21.z, r7.w, r21.z
      mul_sat r20.x, r20.x, r21.x
      dp3 r21.x, r7.zxyz, r20.yzwy
      dp3 r20.y, r4.xyzx, r20.yzwy
      mad r20.z, r20.y, l(2.000000), l(2.000000)
      rsq r20.z, r20.z
      add r20.w, r13.w, r21.x
      mul_sat r20.w, r20.z, r20.w
      mad_sat r20.z, r20.z, r20.y, r20.z
      lt r22.w, l(0.000000), r21.z
      if_nz r22.w
        mad r23.z, -r21.z, r21.z, l(1.000000)
        sqrt r23.z, r23.z
        dp2 r24.x, r13.wwww, r21.xxxx
        add r24.y, -r20.y, r24.x
        ge r24.z, r24.y, r23.z
        if_nz r24.z
          mov r20.w, l(1.000000)
          mov r20.z, |r13.w|
        else
          mad r24.z, -r24.y, r24.y, l(1.000000)
          rsq r24.z, r24.z
          mul r24.z, r21.z, r24.z
          mad r24.w, -r24.y, r21.x, r13.w
          mul r25.x, r24.w, r24.z
          mad r24.y, -r24.y, r20.y, r15.w
          mul r25.y, r21.x, r21.x
          mad r25.y, -r13.w, r13.w, -r25.y
          add r25.y, r25.y, l(1.000000)
          mad r25.y, -r20.y, r20.y, r25.y
          mad_sat r24.x, r24.x, r20.y, r25.y
          sqrt r24.x, r24.x
          mul r24.xy, r24.xyxx, r24.zzzz
          mul r25.y, r13.w, r24.x
          add r25.z, r25.y, r25.y
          mad r25.w, r21.x, r23.z, r13.w
          mad r24.z, r24.z, r24.w, r25.w
          mad r24.w, r20.y, r23.z, r24.y
          add r24.w, r24.w, l(1.000000)
          mul r26.xy, r24.wwww, r24.xzxx
          mul r26.z, r24.z, r25.z
          mul r25.y, r25.y, r24.z
          mul r25.y, r25.y, l(0.500000)
          mad r25.y, r26.x, l(-0.500000), r25.y
          mul r25.y, r25.y, r26.y
          mad r26.w, -r26.x, l(2.000000), r26.z
          mul r26.z, r26.w, r26.z
          mad r26.x, r26.x, r26.x, r26.z
          mul r26.z, r24.w, r24.w
          mad r24.w, r20.y, r23.z, r24.w
          mad r24.w, r24.w, l(-0.500000), l(-0.500000)
          mul r24.w, r24.w, r26.y
          mad r24.w, r25.w, r26.z, r24.w
          mad r24.z, r24.z, r24.w, r26.x
          add r24.w, r25.y, r25.y
          mul r25.w, r25.y, r25.y
          mad r25.w, r24.z, r24.z, r25.w
          div r24.w, r24.w, r25.w
          mul r24.z, r24.z, r24.w
          mad r24.w, -r24.w, r25.y, l(1.000000)
          mul r24.x, r24.x, r24.z
          mad r24.x, r24.w, r25.x, r24.x
          mul r24.z, r25.z, r24.z
          mad r24.y, r24.w, r24.y, r24.z
          mad r21.x, r21.x, r23.z, r24.x
          mad r20.y, r20.y, r23.z, r24.y
          mad r23.z, r20.y, l(2.000000), l(2.000000)
          rsq r23.z, r23.z
          add r21.x, r13.w, r21.x
          mul_sat r20.w, r23.z, r21.x
          mad_sat r20.z, r23.z, r20.y, r23.z
        endif
      endif
      mul r19.w, r21.y, r19.w
      lt r20.y, l(0.000000), r20.x
      mul r20.x, r20.x, r20.x
      mad r21.x, r20.z, l(3.600000), l(0.400000)
      div r20.x, r20.x, r21.x
      mad r20.x, r11.w, r11.w, r20.x
      min r20.x, r20.x, l(1.000000)
      movc r19.x, r20.y, r20.x, r17.x
      mul r20.x, r21.z, l(0.250000)
      ishr r20.y, r19.x, l(1)
      iadd r20.y, r20.y, l(0x1fbd1df5)
      mad r20.y, r20.y, l(3.000000), r21.z
      mul r20.x, r20.y, r20.x
      add r20.y, r20.z, l(0.001000)
      div r20.x, r20.x, r20.y
      add r24.x, r19.x, r20.x
      div r24.y, r19.x, r24.x
      movc r21.xz, r22.wwww, r24.xxyx, r19.xxyx
      lt r20.x, r23.w, l(1.000000)
      add r22.w, -r23.w, l(1.000100)
      add r23.z, r23.w, l(1.000000)
      div r22.w, r22.w, r23.z
      sqrt r22.w, r22.w
      mul r23.z, r22.w, l(0.250000)
      ishr r23.w, r21.x, l(1)
      iadd r23.w, r23.w, l(0x1fbd1df5)
      mad r22.w, r23.w, l(3.000000), r22.w
      mul r22.w, r22.w, r23.z
      div r20.y, r22.w, r20.y
      add r20.y, r20.y, r21.x
      div r20.y, r21.x, r20.y
      sqrt r20.y, r20.y
      mul r20.y, r20.y, r21.z
      movc r20.x, r20.x, r20.y, r21.z
      mad r20.y, r20.w, r19.x, -r20.w
      mad r20.y, r20.y, r20.w, l(1.000000)
      mul r20.y, r20.y, r20.y
      mul r20.y, r20.y, l(3.14159274)
      div r20.y, r19.x, r20.y
      mul r20.x, r20.x, r20.y
      sqrt r19.x, r19.x
      add r20.y, -r19.x, l(1.000000)
      mad r20.w, r16.x, r20.y, r19.x
      mad r19.x, r21.y, r20.y, r19.x
      mul r19.x, r16.x, r19.x
      mad r19.x, r21.y, r20.w, r19.x
      rcp r19.x, r19.x
      mul r19.x, r19.x, r20.x
      add r20.x, -r20.z, l(1.000000)
      mul r20.y, r20.x, r20.x
      mul r20.y, r20.y, r20.y
      mul r20.z, r20.x, r20.y
      mad r20.x, -r20.y, r20.x, l(1.000000)
      mul r20.xyw, r6.xzxw, r20.xxxx
      mad r20.xyz, r18.xxxx, r20.zzzz, r20.xywx
      mul r19.x, r19.x, l(0.500000)
      mul r20.xyz, r20.xyzx, r19.xxxx
      mul r20.xyz, r19.wwww, r20.xyzx
      mad r20.xyz, r19.wwww, r16.yzwy, r20.xyzx
      mul r21.xyz, r21.wwww, r22.xyzx
      mul r21.xyz, r23.yyyy, r21.xyzx
      mul r20.xyz, r20.xyzx, r21.xyzx
    else
      mov r20.xyz, l(0,0,0,0)
    endif
  else
    mov r20.xyz, l(0,0,0,0)
  endif
  ushr r19.x, r23.x, l(8)
  and r19.x, r19.x, cb2[16].w
  add r20.xyz, r17.yzwy, r20.xyzx
  movc r17.yzw, r19.xxxx, r20.xxyz, r17.yyzw
  iadd r19.z, r19.z, l(1)
endloop
mad r4.xyz, r14.wwww, r7.zxyz, -r4.xyzx
mov_sat r13.w, r13.w
log r0.x, r0.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r7.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r7.x
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r0.w, cb1[165].x, cb1[165].y
mad r7.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r7.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r7.xyz, r18.yzwy, r0.yyyy, -r4.xyzx
mad r4.xyz, r8.xxxx, r7.xyzx, r4.xyzx
mad r7.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r7.x, r7.x
mul r0.y, r13.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r7.x, r7.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r7.zwzz
mul r0.y, r18.x, r0.y
mad r0.xyw, r6.xzxw, r0.xxxx, r0.yyyy
mul r0.xyw, r0.xyxw, r4.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mad r4.xyz, r6.xzwx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r7.xyz, r6.xzwx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r10.xyz, r6.xzwx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r6.yyyy, r4.xyzx, r7.xyzx
mad r4.xyz, r4.xyzx, r6.yyyy, r10.xyzx
mul r4.xyz, r6.yyyy, r4.xyzx
max r4.xyz, r4.xyzx, r6.yyyy
mad r0.xyz, r0.xyzx, r4.xyzx, r17.yzwy
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r6.xxzw, l(0.000000, 0.450000, 0.450000, 0.450000), r14.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, r8.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r9.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
add o0.xyz, r30.xyzw, r2.yzwy
ret
// Approximately 0 instruction slots used
