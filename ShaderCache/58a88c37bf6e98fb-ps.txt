//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 20:21:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[152], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 17
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.y, r0.x, cb0[57].x, cb0[57].y
mad r0.x, r0.x, cb0[57].z, -cb0[57].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, r0.y
mul r0.yz, cb0[149].xxxx, l(0.000000, 0.000010, 100.000000, 0.000000)
add r0.w, cb0[59].z, -cb0[148].w
mul r0.w, r0.w, cb0[149].y
mul r1.xy, r0.yyyy, cb0[59].xyxx
mad r1.w, r0.w, r0.y, l(6360.009766)
dp3 r0.w, r1.xywx, r1.xywx
sqrt r2.z, r0.w
dp3 r1.z, v1.xyzx, v1.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, v1.xyzx
dp3 r4.x, r1.xywx, r3.xyzx
div r2.w, r4.x, r2.z
mad r4.y, r2.w, r2.w, l(-1.000000)
mad r4.yz, r0.wwww, r4.yyyy, l(0.000000, 40449600.000000, 41344900.000000, 0.000000)
sqrt r4.yz, r4.yyzy
add r5.xy, -r4.yzyy, -r4.xxxx
mul r0.w, r0.y, r0.x
mad r4.x, r0.x, r0.y, -cb0[149].w
max r4.x, r4.x, l(0.000000)
mul r4.y, r4.x, l(0.100000)
div r4.y, r4.y, cb0[149].w
min r4.y, r4.y, l(1.000000)
lt r0.z, r0.w, r0.z
mul r6.y, r4.y, cb0[148].x
mad r0.x, r0.x, r0.y, cb0[150].x
max r6.x, r0.x, l(1.000000)
mov r5.z, l(1.000000)
movc r2.xy, r0.zzzz, r6.xyxx, r5.xzxx
lt r0.x, l(0.000000), r5.y
mad r5.xzw, r5.yyyy, r3.xxyz, r1.xxyw
add r6.x, -r5.y, r2.x
mul r6.z, r4.z, l(-0.000155520989)
movc r5.xyz, r0.xxxx, r5.xzwx, r1.xywx
mov r6.y, l(6430.000000)
movc r0.xyw, r0.xxxx, r6.xyxz, r2.xzxw
lt r2.z, r0.y, l(6360.014648)
add r2.w, -r0.y, l(6360.014648)
mad r6.xyz, -r2.wwww, r3.xyzx, r5.xyzx
add r7.x, r0.x, -r2.w
dp3 r2.w, r6.xyzx, r3.xyzx
mul r7.z, r2.w, l(0.000157232338)
mov r7.y, l(6360.014648)
movc r0.xyw, r2.zzzz, r7.xyxz, r0.xyxw
ge r2.w, l(6430.000000), r0.y
lt r4.x, l(0.000000), r4.x
and r2.w, r2.w, r4.x
if_nz r2.w
  movc r4.xzw, r2.zzzz, r6.xxyz, r5.xxyz
  dp3 r2.z, r3.xyzx, cb0[147].xyzx
  dp3 r2.w, r4.xzwx, cb0[147].xyzx
  div r2.w, r2.w, r0.y
  div r5.x, l(6360.000000), r0.y
  mad r5.x, -r5.x, r5.x, l(1.000000)
  sqrt r5.x, r5.x
  add r5.yz, -r5.xxxx, l(0.000000, 0.155000, 0.005000, 0.000000)
  max r5.yw, r0.wwww, r5.yyyz
  movc r6.x, r0.z, r5.y, r5.w
  mul r0.w, r3.z, l(-1.442695)
  exp r0.w, r0.w
  add_sat r7.y, r0.w, l(-0.500000)
  lt r0.w, r7.y, l(1.000000)
  max r3.w, r3.z, l(0.150000)
  dp3 r5.y, r3.xywx, r3.xywx
  rsq r5.y, r5.y
  mul r8.xyz, r3.xywx, r5.yyyy
  mad r9.xyz, r0.xxxx, r8.xyzx, r4.xzwx
  dp3 r3.w, r9.xyzx, r9.xyzx
  sqrt r3.w, r3.w
  dp3 r5.y, r9.xyzx, r8.xyzx
  div r8.w, r5.y, r3.w
  mov r6.yzw, r3.xxyz
  movc r8.xyzw, r0.wwww, r8.xyzw, r6.yzwx
  mov r7.x, r8.w
  mov r6.y, l(0)
  movc r7.xy, r0.zzzz, r7.xyxx, r6.xyxx
  mad r0.w, r2.z, r2.z, l(1.000000)
  mul r3.w, r0.w, l(0.0596831031)
  mad r5.y, -r2.z, l(1.600000), l(1.640000)
  log r5.y, |r5.y|
  mul r5.y, r5.y, l(-1.500000)
  exp r5.y, r5.y
  mul r0.w, r0.w, r5.y
  mul r9.x, r0.w, l(0.0162772108)
  mul r0.w, r0.y, r0.y
  mad r5.y, r0.y, r0.y, l(-40449600.000000)
  sqrt r5.y, r5.y
  mul r5.w, r0.y, r7.x
  mad r6.y, r5.w, r5.w, -r0.w
  add r6.y, r6.y, l(40449600.000000)
  lt r6.z, r5.w, l(0.000000)
  lt r6.w, l(0.000000), r6.y
  and r6.z, r6.w, r6.z
  movc r10.xyzw, r6.zzzz, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
  utof r6.z, cb0[150].w
  div r6.w, l(0.500000), r6.z
  mul r7.w, r5.y, l(0.00105685578)
  div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
  add r6.z, -r6.z, l(1.000000)
  mad r11.z, r7.w, r6.z, r6.w
  add r6.y, r6.y, r10.y
  sqrt r6.y, r6.y
  mad r5.w, r5.w, r10.x, r6.y
  add r6.y, r5.y, r10.z
  div r5.w, r5.w, r6.y
  mad r11.w, r5.w, l(0.492187500), r10.w
  max r5.w, r2.w, l(-0.197500)
  mul r5.w, r5.w, l(5.34962368)
  min r6.y, |r5.w|, l(1.000000)
  max r7.w, |r5.w|, l(1.000000)
  div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mul r6.y, r6.y, r7.w
  mul r7.w, r6.y, r6.y
  mad r8.w, r7.w, l(0.0208350997), l(-0.085133)
  mad r8.w, r7.w, r8.w, l(0.180141)
  mad r8.w, r7.w, r8.w, l(-0.330299497)
  mad r7.w, r7.w, r8.w, l(0.999866)
  mul r8.w, r6.y, r7.w
  lt r10.x, l(1.000000), |r5.w|
  mad r8.w, r8.w, l(-2.000000), l(1.57079637)
  and r8.w, r10.x, r8.w
  mad r6.y, r6.y, r7.w, r8.w
  min r5.w, r5.w, l(1.000000)
  lt r5.w, r5.w, -r5.w
  movc r5.w, r5.w, -r6.y, r6.y
  mad r5.w, r5.w, l(0.909090877), l(0.740000)
  mad r5.w, r5.w, l(0.484375), l(0.015625)
  add r2.z, r2.z, l(1.000000)
  mul r6.y, r2.z, l(3.500000)
  round_ni r6.y, r6.y
  mad r2.z, r2.z, l(3.500000), -r6.y
  add r5.w, r5.w, r6.y
  mul r11.y, r5.w, l(0.125000)
  sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r11.ywzy, t3.xyzw, s3, l(0.000000)
  add r7.w, -r2.z, l(1.000000)
  add r5.w, r5.w, l(1.000000)
  mul r11.x, r5.w, l(0.125000)
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyzw, r11.xwzx, t3.xyzw, s3, l(0.000000)
  mul r12.xyzw, r2.zzzz, r12.xyzw
  mad r10.xyzw, r10.xyzw, r7.wwww, r12.xyzw
  max r10.xyzw, r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  lt r5.w, l(0.000000), r0.x
  if_nz r5.w
    mad r4.xzw, r0.xxxx, r3.xxyz, r4.xxzw
    dp3 r5.w, r4.xzwx, r4.xzwx
    sqrt r5.w, r5.w
    div r8.w, l(0.500000), cb0[149].z
    mul r8.w, r0.y, r8.w
    sqrt r8.w, r8.w
    div r12.x, r0.x, r0.y
    add r7.z, r7.x, r12.x
    mul r12.xy, r7.xzxx, r8.wwww
    lt r12.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xxxy
    lt r13.xy, r12.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    iadd r12.zw, -r12.zzzw, r13.xxxy
    itof r12.zw, r12.zzzw
    mul r13.xyz, r12.xxyx, r12.xxyx
    lt r8.w, r12.z, r12.w
    mul r13.x, r13.x, l(1.442695)
    exp r13.x, r13.x
    and r8.w, r8.w, r13.x
    mad r13.xy, r13.yzyy, l(1.520000, 1.520000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
    sqrt r13.xy, r13.xyxx
    mad r12.xy, |r12.xyxx|, l(2.319300, 2.319300, 0.000000, 0.000000), r13.xyxx
    div r12.xy, r12.zwzz, r12.xyxx
    div r12.z, -r0.x, cb0[149].z
    add r12.w, r0.y, r0.y
    div r13.x, r0.x, r12.w
    add r13.x, r7.x, r13.x
    mul r12.z, r12.z, r13.x
    mul r12.z, r12.z, l(1.442695)
    exp r14.y, r12.z
    mov r14.xz, l(1.000000,0,1.000000,0)
    mul r12.xy, r12.xyxx, r14.xyxx
    mul r12.z, r0.y, cb0[149].z
    mul r12.z, r12.z, l(6.283100)
    sqrt r12.z, r12.z
    add r13.y, -r0.y, l(6360.000000)
    div r13.z, r13.y, cb0[149].z
    mul r13.z, r13.z, l(1.442695)
    exp r13.z, r13.z
    mul r12.z, r12.z, r13.z
    dp2 r12.x, r12.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
    add r8.w, r8.w, r12.x
    mul r8.w, r8.w, r12.z
    mul r12.xy, r0.yyyy, l(0.416666657, 7.53972054, 0.000000, 0.000000)
    sqrt r12.xy, r12.xyxx
    mul r12.xz, r7.xxzx, r12.xxxx
    lt r13.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xxxz
    lt r14.xy, r12.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    iadd r13.zw, -r13.zzzw, r14.xxxy
    itof r13.zw, r13.zzzw
    mul r15.xyz, r12.xxzx, r12.xxzx
    lt r7.z, r13.z, r13.w
    mul r14.x, r15.x, l(1.442695)
    exp r14.x, r14.x
    and r7.z, r7.z, r14.x
    mad r14.xy, r15.yzyy, l(1.520000, 1.520000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
    sqrt r14.xy, r14.xyxx
    mad r12.xz, |r12.xxzx|, l(2.319300, 0.000000, 2.319300, 0.000000), r14.xxyx
    div r12.xz, r13.zzwz, r12.xxzx
    mul r13.x, -r0.x, r13.x
    mul r13.x, r13.x, l(1.20224583)
    exp r14.w, r13.x
    mul r12.xz, r12.xxzx, r14.zzwz
    mul r13.x, r13.y, l(1.20224583)
    exp r13.x, r13.x
    mul r12.y, r12.y, r13.x
    dp2 r12.x, r12.xzxx, l(1.000000, -1.000000, 0.000000, 0.000000)
    add r7.z, r7.z, r12.x
    mul r7.z, r7.z, r12.y
    mul r7.z, r7.z, l(0.00444444455)
    mad r12.xyz, r8.wwww, l(-0.005800, -0.013500, -0.033100, 0.000000), -r7.zzzz
    mul r12.xyz, r12.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
    exp r12.xyz, r12.xyzx
    max r7.z, r0.y, r5.w
    movc r7.z, r0.z, r7.z, r5.w
    lt r8.w, l(6360.009766), r7.z
    if_nz r8.w
      lt r8.w, r7.y, l(1.000000)
      if_nz r8.w
        movc r8.xyz, r0.zzzz, r8.xyzx, r3.xyzx
        dp3 r8.x, r4.xzwx, r8.xyzx
        div r8.x, r8.x, r5.w
        dp3 r4.x, r4.xzwx, cb0[147].xyzx
        div r4.x, r4.x, r5.w
        mul r4.z, r7.z, r7.z
        mad r4.w, r7.z, r7.z, l(-40449600.000000)
        sqrt r4.w, r4.w
        mul r5.w, r7.z, r8.x
        mad r4.z, r5.w, r5.w, -r4.z
        add r4.z, r4.z, l(40449600.000000)
        lt r7.z, r5.w, l(0.000000)
        lt r8.x, l(0.000000), r4.z
        and r7.z, r7.z, r8.x
        movc r8.xyzw, r7.zzzz, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
        mul r7.z, r6.z, r4.w
        mad r13.y, r7.z, l(0.00105685578), r6.w
        add r4.zw, r4.zzzw, r8.yyyz
        sqrt r4.z, r4.z
        mad r4.z, r5.w, r8.x, r4.z
        div r4.z, r4.z, r4.w
        mad r13.x, r4.z, l(0.492187500), r8.w
        max r4.x, r4.x, l(-0.197500)
        mul r4.x, r4.x, l(5.34962368)
        min r4.z, |r4.x|, l(1.000000)
        max r4.w, |r4.x|, l(1.000000)
        div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
        mul r4.z, r4.w, r4.z
        mul r4.w, r4.z, r4.z
        mad r5.w, r4.w, l(0.0208350997), l(-0.085133)
        mad r5.w, r4.w, r5.w, l(0.180141)
        mad r5.w, r4.w, r5.w, l(-0.330299497)
        mad r4.w, r4.w, r5.w, l(0.999866)
        mul r5.w, r4.w, r4.z
        lt r7.z, l(1.000000), |r4.x|
        mad r5.w, r5.w, l(-2.000000), l(1.57079637)
        and r5.w, r7.z, r5.w
        mad r4.z, r4.z, r4.w, r5.w
        min r4.x, r4.x, l(1.000000)
        lt r4.x, r4.x, -r4.x
        movc r4.x, r4.x, -r4.z, r4.z
        mad r4.x, r4.x, l(0.909090877), l(0.740000)
        mad r4.x, r4.x, l(0.484375), r6.y
        add r4.xz, r4.xxxx, l(0.015625, 0.000000, 1.015625, 0.000000)
        mul r13.zw, r4.xxxz, l(0.000000, 0.000000, 0.125000, 0.125000)
        sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r13.zxyz, t3.xyzw, s3, l(0.000000)
        sample_l_indexable(texture3d)(float,float,float,float) r14.xyzw, r13.wxyw, t3.xyzw, s3, l(0.000000)
        mul r14.xyzw, r2.zzzz, r14.xyzw
        mad r8.xyzw, r8.xyzw, r7.wwww, r14.xyzw
        mad r8.xyzw, -r12.xyzx, r8.xyzw, r10.xyzw
        max r10.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
        if_z r0.z
          add r4.x, r5.x, r7.x
          lt r4.z, |r4.x|, l(0.005000)
          if_nz r4.z
            add r4.x, r4.x, l(0.005000)
            mul r4.x, r4.x, l(100.000000)
            add r4.z, -r5.x, l(-0.005000)
            mad r4.w, r0.x, r0.x, r0.w
            mul r5.x, r0.x, r12.w
            mad r5.w, r5.x, r4.z, r4.w
            sqrt r5.w, r5.w
            mul r6.y, r0.y, r4.z
            mad r4.z, r0.y, r4.z, r0.x
            div r4.z, r4.z, r5.w
            max r4.z, r4.z, r5.z
            mad r7.x, r6.y, r6.y, -r0.w
            add r7.x, r7.x, l(40449600.000000)
            lt r7.z, r6.y, l(0.000000)
            lt r8.x, l(0.000000), r7.x
            and r7.z, r7.z, r8.x
            movc r8.xyzw, r7.zzzz, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
            add r7.x, r7.x, r8.y
            sqrt r7.x, r7.x
            mad r6.y, r6.y, r8.x, r7.x
            add r7.x, r5.y, r8.z
            div r6.y, r6.y, r7.x
            mad r8.x, r6.y, l(0.492187500), r8.w
            mov r8.yz, r11.yyzy
            sample_l_indexable(texture3d)(float,float,float,float) r14.xyzw, r8.yxzy, t3.xyzw, s3, l(0.000000)
            mov r11.y, r8.x
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r11.xyzx, t3.xyzw, s3, l(0.000000)
            mul r15.xyzw, r2.zzzz, r15.xyzw
            mad r14.xyzw, r14.xyzw, r7.wwww, r15.xyzw
            mul r6.y, r5.w, r5.w
            mad r7.x, r5.w, r5.w, l(-40449600.000000)
            sqrt r7.x, r7.x
            mul r4.z, r4.z, r5.w
            mad r5.w, r4.z, r4.z, -r6.y
            add r5.w, r5.w, l(40449600.000000)
            lt r6.y, r4.z, l(0.000000)
            lt r7.z, l(0.000000), r5.w
            and r6.y, r6.y, r7.z
            movc r15.xyzw, r6.yyyy, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
            mul r6.y, r6.z, r7.x
            mad r13.y, r6.y, l(0.00105685578), r6.w
            add r5.w, r5.w, r15.y
            sqrt r5.w, r5.w
            mad r4.z, r4.z, r15.x, r5.w
            add r5.w, r7.x, r15.z
            div r4.z, r4.z, r5.w
            mad r13.x, r4.z, l(0.492187500), r15.w
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r13.zxyz, t3.xyzw, s3, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r13.wxyw, t3.xyzw, s3, l(0.000000)
            mul r16.xyzw, r2.zzzz, r16.xyzw
            mad r15.xyzw, r15.xyzw, r7.wwww, r16.xyzw
            mad r14.xyzw, -r12.xyzx, r15.xyzw, r14.xyzw
            max r14.xyzw, r14.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            mad r4.z, r5.x, r5.z, r4.w
            sqrt r4.z, r4.z
            mul r4.w, r0.y, r5.z
            mad r0.x, r0.y, r5.z, r0.x
            div r0.x, r0.x, r4.z
            max r0.x, r0.x, r5.z
            mad r5.x, r4.w, r4.w, -r0.w
            add r5.x, r5.x, l(40449600.000000)
            lt r5.z, r4.w, l(0.000000)
            lt r5.w, l(0.000000), r5.x
            and r5.z, r5.w, r5.z
            movc r15.xyzw, r5.zzzz, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
            add r5.x, r5.x, r15.y
            sqrt r5.x, r5.x
            mad r4.w, r4.w, r15.x, r5.x
            add r5.x, r5.y, r15.z
            div r4.w, r4.w, r5.x
            mad r8.w, r4.w, l(0.492187500), r15.w
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r8.ywzy, t3.xyzw, s3, l(0.000000)
            mov r11.w, r8.w
            sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r11.xwzx, t3.xyzw, s3, l(0.000000)
            mul r8.xyzw, r2.zzzz, r8.xyzw
            mad r8.xyzw, r15.xyzw, r7.wwww, r8.xyzw
            mul r4.w, r4.z, r4.z
            mad r5.x, r4.z, r4.z, l(-40449600.000000)
            sqrt r5.x, r5.x
            mul r0.x, r0.x, r4.z
            mad r4.z, r0.x, r0.x, -r4.w
            add r4.z, r4.z, l(40449600.000000)
            lt r4.w, r0.x, l(0.000000)
            lt r5.z, l(0.000000), r4.z
            and r4.w, r4.w, r5.z
            movc r15.xyzw, r4.wwww, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
            mul r4.w, r6.z, r5.x
            mad r13.y, r4.w, l(0.00105685578), r6.w
            add r4.z, r4.z, r15.y
            sqrt r4.z, r4.z
            mad r0.x, r0.x, r15.x, r4.z
            add r4.z, r5.x, r15.z
            div r0.x, r0.x, r4.z
            mad r13.x, r0.x, l(0.492187500), r15.w
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r13.zxyz, t3.xyzw, s3, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r13.wxyw, t3.xyzw, s3, l(0.000000)
            mul r13.xyzw, r2.zzzz, r13.xyzw
            mad r13.xyzw, r15.xyzw, r7.wwww, r13.xyzw
            mad r8.xyzw, -r12.xyzx, r13.xyzw, r8.xyzw
            max r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            add r8.xyzw, -r14.xyzw, r8.xyzw
            mad r10.xyzw, r4.xxxx, r8.xyzw, r14.xyzw
          endif
        else
          lt r0.x, l(0.000000), r7.y
          if_nz r0.x
            add r8.xyzw, -r12.xyzx, l(1.000000, 1.000000, 1.000000, 1.000000)
            mul r0.x, r0.y, r6.x
            mad r0.y, r0.x, r0.x, -r0.w
            add r0.y, r0.y, l(40449600.000000)
            lt r0.w, r0.x, l(0.000000)
            lt r4.x, l(0.000000), r0.y
            and r0.w, r0.w, r4.x
            movc r6.xyzw, r0.wwww, l(1.000000,0,0,0.496093750), l(-1.000000,895300.000000,946.202942,0.503906250)
            add r0.y, r0.y, r6.y
            sqrt r0.y, r0.y
            mad r0.x, r0.x, r6.x, r0.y
            add r0.y, r5.y, r6.z
            div r0.x, r0.x, r0.y
            mad r5.y, r0.x, l(0.492187500), r6.w
            mov r5.xz, r11.yyzy
            sample_l_indexable(texture3d)(float,float,float,float) r6.xyzw, r5.xyzx, t3.xyzw, s3, l(0.000000)
            mov r5.xz, r11.xxzx
            sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xyzx, t3.xyzw, s3, l(0.000000)
            mul r5.xyzw, r2.zzzz, r5.xyzw
            mad r5.xyzw, r6.xyzw, r7.wwww, r5.xyzw
            max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
            mad r5.xyzw, r8.xyzw, r5.xyzw, -r10.xyzw
            mad r10.xyzw, r7.yyyy, r5.xyzw, r10.xyzw
          endif
        endif
      else
        add r5.xyzw, -r12.xyzx, l(1.000000, 1.000000, 1.000000, 1.000000)
        mul r10.xyzw, r10.xyzw, r5.xyzw
      endif
    endif
  else
    mov r12.xyz, l(1.000000,1.000000,1.000000,0)
  endif
  mul_sat r0.x, r2.w, l(50.000000)
  mad r0.y, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r0.y
  mul r0.x, r0.x, r10.w
  mul r0.xyw, r0.xxxx, r10.xyxz
  max r2.z, r10.x, l(0.000100)
  div r0.xyw, r0.xyxw, r2.zzzz
  mov r9.yzw, l(0,1.000000,0.429629624,0.175226584)
  mul r0.xyw, r9.yxyx, r0.xyxw
  mul r0.xyw, r9.xzxw, r0.xyxw
  mad r0.xyw, r10.xyxz, r3.wwww, r0.xyxw
  max r0.xyw, r0.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
else
  mov r12.xyz, l(1.000000,1.000000,1.000000,0)
  mov r0.xyw, l(0,0,0,0)
endif
lt r2.z, l(0.000000), r2.x
if_nz r2.z
  mad r1.xyw, r2.xxxx, r3.xyxz, r1.xyxw
  dp3 r2.x, r1.xywx, r1.xywx
  sqrt r2.x, r2.x
  div r1.xyw, r1.xyxw, r2.xxxx
  dp3 r2.z, r1.xywx, cb0[147].xyzx
  add r2.x, r2.x, l(-6360.000000)
  mul r5.z, r2.x, l(0.0142857144)
  sqrt r6.y, r5.z
  add r2.xw, r2.zzzz, l(0.150000, 0.000000, 0.000000, 0.200000)
  mul r5.xy, r2.xwxx, l(12.262105, 0.833333313, 0.000000, 0.000000)
  min r2.x, |r5.x|, l(1.000000)
  max r2.w, |r5.x|, l(1.000000)
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r2.x, r2.w, r2.x
  mul r2.w, r2.x, r2.x
  mad r3.w, r2.w, l(0.0208350997), l(-0.085133)
  mad r3.w, r2.w, r3.w, l(0.180141)
  mad r3.w, r2.w, r3.w, l(-0.330299497)
  mad r2.w, r2.w, r3.w, l(0.999866)
  mul r3.w, r2.w, r2.x
  lt r4.x, l(1.000000), |r5.x|
  mad r3.w, r3.w, l(-2.000000), l(1.57079637)
  and r3.w, r4.x, r3.w
  mad r2.x, r2.x, r2.w, r3.w
  min r2.w, r5.x, l(1.000000)
  lt r2.w, r2.w, -r2.w
  movc r2.x, r2.w, -r2.x, r2.x
  mul r6.x, r2.x, l(0.666666687)
  sample_l_indexable(texture2d)(float,float,float,float) r4.xzw, r6.xyxx, t1.xwyz, s1, l(0.000000)
  movc r4.xzw, r0.zzzz, l(0,0,0,0), r4.xxzw
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.yzyy, t2.xyzw, s2, l(0.000000)
  max r2.x, r2.z, l(0.000000)
  mad r2.xzw, r2.xxxx, r4.xxzw, r5.xxyz
  mul r2.xzw, r2.xxzw, l(0.00318309898, 0.000000, 0.00318309898, 0.00318309898)
  mad r5.xyz, -v1.xyzx, r1.zzzz, cb0[147].xyzx
  dp3 r1.z, r5.xyzx, r5.xyzx
  rsq r1.z, r1.z
  mul r5.xyz, r1.zzzz, r5.xyzx
  dp3 r1.z, -r3.xyzx, r5.xyzx
  add r1.z, -r1.z, l(1.000000)
  mul r3.x, r1.z, r1.z
  mul r3.x, r3.x, r3.x
  mul r1.z, r1.z, r3.x
  mad r1.z, r1.z, l(0.980000), l(0.020000)
  dp3 r1.x, r5.xyzx, r1.xywx
  max r1.x, r1.x, l(0.000000)
  log r1.x, r1.x
  mul r1.x, r1.x, l(150.000000)
  exp r1.x, r1.x
  mul r1.x, r1.x, r1.z
  max r1.x, r1.x, l(0.000000)
  mad r1.xyz, r1.xxxx, r4.xzwx, r2.xzwx
  movc r1.xyz, r0.zzzz, r2.xzwx, r1.xyzx
  mul r1.xyz, r1.xyzx, r12.xyzx
else
  mov r1.xyz, l(0,0,0,0)
endif
add r0.xyz, r0.xywx, r1.xyzx
mul r0.w, r2.y, cb0[147].w
mul r1.xyz, r0.wwww, cb0[151].xyzx
mul o0.xyz, r0.xyzx, r1.xyzx
mad_sat r0.x, r12.x, cb0[148].y, -cb0[148].z
add r0.y, -r4.y, l(1.000000)
add r0.z, -r0.x, l(1.000000)
mad o0.w, r0.y, r0.z, r0.x
ret
// Approximately 0 instruction slots used
