// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 19:13:29 2019
Buffer<float4> t5 : register(t5);

Buffer<float4> t4 : register(t4);

Buffer<float4> t3 : register(t3);

Buffer<float4> t2 : register(t2);

Buffer<float4> t1 : register(t1);

TextureCube<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[17];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[1];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[5];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[178];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[15];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_InstanceID0,
  uint v2 : SV_VertexID0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : COLOR1,
  out float4 o3 : TEXCOORD0,
  out float4 o4 : TEXCOORD4,
  out uint o5 : PACKED_EYE_INDEX0,
  out float4 o6 : TEXCOORD7,
  out float4 o7 : SV_POSITION0,
  out float o8 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, instance_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v2.x, vertex_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[7].x == 0) {
    r0.x = cb1[0].x;
    r0.y = cb1[1].x;
    r0.z = cb1[2].x;
    r0.w = cb1[3].x;
    r1.x = cb1[0].y;
    r1.y = cb1[1].y;
    r1.z = cb1[2].y;
    r1.w = cb1[3].y;
    r2.x = cb1[0].z;
    r2.y = cb1[1].z;
    r2.z = cb1[2].z;
    r2.w = cb1[3].z;
    r3.x = cb1[0].w;
    r3.y = cb1[1].w;
    r3.z = cb1[2].w;
    r3.w = cb1[3].w;
    r4.xyz = cb1[62].xyz;
    r4.w = cb1[163].y;
    r5.xyz = cb1[60].xyz;
  } else {
    r0.x = cb3[0].x;
    r0.y = cb3[1].x;
    r0.z = cb3[2].x;
    r0.w = cb3[3].x;
    r1.x = cb3[0].y;
    r1.y = cb3[1].y;
    r1.z = cb3[2].y;
    r1.w = cb3[3].y;
    r2.x = cb3[0].z;
    r2.y = cb3[1].z;
    r2.z = cb3[2].z;
    r2.w = cb3[3].z;
    r3.x = cb3[0].w;
    r3.y = cb3[1].w;
    r3.z = cb3[2].w;
    r3.w = cb3[3].w;
    r4.xyz = cb3[62].xyz;
    r4.w = cb3[163].y;
    r5.xyz = cb3[60].xyz;
  }
  r5.w = (int)v1.x + asint(cb0[14].x);
  r6.x = (int)r5.w * 3;
  r6.xyzw = t4.Load(r6.x).xyzw;
  r7.xy = mad(int2(3,3), (int2)r5.ww, int2(1,2));
  r7.xzw = t4.Load(r7.x).xyz;
  r8.xyz = t4.Load(r7.y).xyz;
  r9.xyzw = t3.Load(r5.w).xyzw;
  r10.xy = t5.Load(r5.w).xy;
  r5.w = (int)v2.x + asint(cb0[14].y);
  r7.y = (uint)r5.w << 1;
  r11.xyz = t2.Load(r7.y).xyz;
  bitmask.y = ((~(-1 << 31)) << 1) & 0xffffffff;  r7.y = (((uint)r5.w << 1) & bitmask.y) | ((uint)1 & ~bitmask.y);
  r12.xyzw = t2.Load(r7.y).xyzw;
  r13.xyz = r12.yzx * r11.xyz;
  r11.xyz = r12.xyz * r11.yzx + -r13.xyz;
  r11.xyz = r11.xyz * r12.www;
  r13.xyz = r11.xyz * r12.yzx;
  r11.xyz = r11.zxy * r12.zxy + -r13.xyz;
  r11.xyz = r11.xyz * r12.www;
  r13.xyz = cb2[1].xyz * r6.yyy;
  r13.xyz = r6.xxx * cb2[0].xyz + r13.xyz;
  r13.xyz = r6.zzz * cb2[2].xyz + r13.xyz;
  r14.xyz = cb2[1].xyz * r7.zzz;
  r14.xyz = r7.xxx * cb2[0].xyz + r14.xyz;
  r14.xyz = r7.www * cb2[2].xyz + r14.xyz;
  r15.xyz = cb2[1].xyz * r8.yyy;
  r15.xyz = r8.xxx * cb2[0].xyz + r15.xyz;
  r15.xyz = r8.zzz * cb2[2].xyz + r15.xyz;
  r7.y = dot(r13.xyz, r13.xyz);
  r7.y = rsqrt(r7.y);
  r13.xyz = r13.xyz * r7.yyy;
  r7.y = dot(r14.xyz, r14.xyz);
  r7.y = rsqrt(r7.y);
  r14.xyz = r14.xyz * r7.yyy;
  r7.y = dot(r15.xyz, r15.xyz);
  r7.y = rsqrt(r7.y);
  r15.xyz = r15.xyz * r7.yyy;
  r16.xyz = r14.xyz * r11.yyy;
  r11.xyw = r11.xxx * r13.xyz + r16.xyz;
  o0.xyz = r11.zzz * r15.xyz + r11.xyw;
  r11.xyz = r14.xyz * r12.yyy;
  r11.xyz = r12.xxx * r13.xyz + r11.xyz;
  o1.xyz = r12.zzz * r15.xyz + r11.xyz;
  o1.w = cb2[4].w * r12.w;
  r6.w = 0.00390625 * r6.w;
  r6.w = trunc(r6.w);
  r11.xyz = cb2[1].xyz * r9.yyy;
  r11.xyz = cb2[0].xyz * r9.xxx + r11.xyz;
  r11.xyz = cb2[2].xyz * r9.zzz + r11.xyz;
  r11.xyz = cb2[3].xyz + r11.xyz;
  r12.xyz = r11.xyz + r4.xyz;
  r7.y = dot(r12.xyz, r12.xyz);
  r7.y = sqrt(r7.y);
  r7.y = -cb0[13].x + r7.y;
  r7.y = saturate(cb0[13].y * r7.y);
  o2.y = 1 + -r7.y;
  r7.y = 1 + -r6.w;
  r7.y = cb0[13].w * r7.y;
  r6.w = cb0[13].z * r6.w + r7.y;
  r12.xyz = -cb0[11].xyz + r11.xyz;
  r7.y = dot(r12.xyz, r12.xyz);
  r7.y = sqrt(r7.y);
  r7.y = cb0[8].w * r9.w + r7.y;
  r11.xyz = -cb0[12].xyz + r11.xyz;
  r10.z = dot(r11.xyz, r11.xyz);
  r10.z = sqrt(r10.z);
  r10.z = cb0[8].w * r9.w + r10.z;
  r11.xyz = cmp(cb0[8].xyz < r7.yyy);
  r11.xyz = r11.xyz ? float3(1,1,1) : 0;
  r7.y = dot(r11.xyz, cb0[10].xyz);
  r11.xyz = cmp(cb0[9].xyz < r10.zzz);
  r11.xyz = r11.xyz ? float3(1,1,1) : 0;
  r10.z = dot(r11.xyz, cb0[10].xyz);
  r10.z = cb0[12].w * r10.z;
  r10.w = r7.y * cb0[11].w + r10.z;
  r7.y = cmp(abs(r10.w) < 0.999000013);
  r7.y = r7.y ? 1.000000 : 0;
  r10.z = r7.y * r6.w;
  r11.x = r6.x;
  r11.y = r7.x;
  r11.z = r8.x;
  r11.w = r9.x;
  r6.x = dot(v0.xyzw, r11.xyzw);
  r11.x = r6.y;
  r11.y = r7.z;
  r11.z = r8.y;
  r11.w = r9.y;
  r6.y = dot(v0.xyzw, r11.xyzw);
  r8.x = r6.z;
  r8.y = r7.w;
  r8.w = r9.z;
  r6.z = dot(v0.xyzw, r8.xyzw);
  r7.xyz = cb2[1].xyz * r6.yyy;
  r6.xyw = cb2[0].xyz * r6.xxx + r7.xyz;
  r6.xyz = cb2[2].xyz * r6.zzz + r6.xyw;
  r4.xyz = cb2[3].xyz + r4.xyz;
  r6.xyz = r6.xyz + r4.xyz;
  r6.w = 1;
  r7.xyzw = r6.xyzw * r10.zzzz;
  r4.x = (int)r5.w * asint(cb5[0].y);
  r4.xy = t1.Load(r4.x).xy;
  r0.x = dot(r7.xyzw, r0.xyzw);
  r0.y = dot(r7.xyzw, r1.xyzw);
  r0.z = dot(r7.xyzw, r2.xyzw);
  r0.w = dot(r7.xyzw, r3.xyzw);
  if (cb0[0].x != 0) {
    r1.x = cb0[7].x;
    r2.x = icb[r1.x+0].x;
    r2.y = 1;
    o8.x = dot(r0.xw, r2.xy);
    r1.y = 0.5 * r4.w;
    r1.x = icb[r1.x+0].x * r0.w;
    r1.z = -r4.w * 0.5 + 1;
    r1.x = r1.x * r1.z;
    r0.x = r0.x * r1.y + r1.x;
  } else {
    o8.x = 0;
  }
  r1.x = mad(asint(cb5[0].y), (int)r5.w, asint(cb5[0].z));
  r1.xy = t1.Load(r1.x).xy;
  o4.xy = r1.xy * cb6[16].xy + r10.xy;
  r1.x = cb0[0].x ? -0 : 0;
  o5.x = (int)r1.x | asint(cb0[7].x);
  r1.xyz = r6.xyz * r10.zzz + -r5.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r2.x = sqrt(r1.w);
  r2.y = dot(r1.xyz, cb1[52].xyz);
  r2.x = r2.x / r2.y;
  r2.x = cb1[177].z * r2.x;
  r2.x = max(0, r2.x);
  r2.y = rsqrt(r1.w);
  r1.w = r2.y * r1.w;
  r3.xyz = r2.yyy * r1.xyz;
  r2.x = max(cb4[85].w, r2.x);
  r2.z = cmp(0 < r2.x);
  r2.w = r2.x * r2.y;
  r3.w = r2.w * r1.z + cb1[59].z;
  r2.w = -r2.w * r1.z + r1.z;
  r2.x = -r2.x * r2.y + 1;
  r2.x = r2.x * r1.w;
  r2.y = -cb4[87].y + r3.w;
  r2.y = cb4[85].y * r2.y;
  r2.y = max(-127, r2.y);
  r2.y = exp2(-r2.y);
  r2.y = cb4[87].x * r2.y;
  r2.y = r2.z ? r2.y : cb4[85].x;
  r2.x = r2.z ? r2.x : r1.w;
  r2.z = r2.z ? r2.w : r1.z;
  r2.z = cb4[85].y * r2.z;
  r2.z = max(-127, r2.z);
  r2.w = exp2(-r2.z);
  r2.w = 1 + -r2.w;
  r2.w = r2.w / r2.z;
  r3.w = -r2.z * 0.240226507 + 0.693147182;
  r2.z = cmp(0.00999999978 < abs(r2.z));
  r2.z = r2.z ? r2.w : r3.w;
  r2.y = r2.y * r2.z;
  r2.z = r2.y * r2.x;
  r4.zw = cmp(float2(0,0) < cb4[87].zw);
  if (r4.z != 0) {
    r2.w = saturate(r1.w * cb4[91].x + cb4[91].y);
    r5.xy = float2(1,-1) * cb4[90].yx;
    r5.x = dot(r1.xy, r5.xy);
    r5.y = dot(r1.xy, cb4[90].xy);
    r5.z = r1.z;
    r1.xyz = t0.SampleLevel(s0_s, r5.xyz, 0).xyz;
    r5.xyz = t0.SampleLevel(s0_s, r5.xyz, cb4[91].z).xyz;
    r1.xyz = -r5.xyz + r1.xyz;
    r1.xyz = r2.www * r1.xyz + r5.xyz;
    r1.xyz = cb4[86].xyz * r1.xyz;
  } else {
    r1.xyz = cb4[86].xyz;
  }
  r2.w = cmp(cb4[88].w >= 0);
  r3.w = cmp(cb4[87].z == 0.000000);
  r2.w = r2.w ? r3.w : 0;
  r3.x = saturate(dot(r3.xyz, cb4[88].xyz));
  r3.x = log2(r3.x);
  r3.x = cb4[89].w * r3.x;
  r3.x = exp2(r3.x);
  r3.xyz = cb4[89].xyz * r3.xxx;
  r2.x = -cb4[88].w + r2.x;
  r2.x = max(0, r2.x);
  r2.x = r2.y * r2.x;
  r2.x = exp2(-r2.x);
  r2.x = min(1, r2.x);
  r2.x = 1 + -r2.x;
  r3.xyz = r3.xyz * r2.xxx;
  r3.xyz = r2.www ? r3.xyz : 0;
  r2.x = exp2(-r2.z);
  r2.x = min(1, r2.x);
  r3.w = max(cb4[86].w, r2.x);
  r1.w = cmp(cb4[87].w < r1.w);
  r1.w = r1.w ? r4.w : 0;
  r2.xyzw = r1.wwww ? float4(0,0,0,1) : r3.xyzw;
  r1.w = 1 + -r2.w;
  o6.xyz = r1.xyz * r1.www + r2.xyz;
  o0.w = 0;
  o2.x = r9.w;
  o2.zw = r10.zw;
  o3.xy = r4.xy;
  o3.zw = float2(0,0);
  o4.zw = float2(0,0);
  o6.w = r2.w;
  o7.xyzw = r0.xyzw;
  return;
}