//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:46:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[15], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v2.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v4.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v4.wwww
mov r13.z, v4.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v4.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
ge r0.y, cb6[12].z, l(0.500000)
movc r7.x, r0.y, cb6[12].x, cb6[12].y
movc r7.y, r0.y, cb6[12].w, cb6[13].x
movc r7.z, r0.y, cb6[13].y, cb6[13].z
add r7.xyz, r7.xyzx, cb6[8].xyzx
mov_sat r8.yzw, cb6[10].xxyz
mov_sat r9.y, cb6[13].w
mov_sat r0.y, cb6[14].x
mad r9.z, r0.y, r0.w, r0.z
lt r0.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxzx
lt r0.w, l(0.000000), cb1[163].w
and r0.y, r0.w, r0.y
div r11.zw, r13.xxxy, r13.wwww
mad r10.xy, r11.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t14.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t15.xyzw, s2, l(0.000000)
mad r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r14.xyz, r6.xyzx, r14.wwww, r14.xyzx
mad r15.yz, r9.yyzy, r15.wwww, r15.yyzy
mad r12.xyz, r8.yzwy, r12.wwww, r12.xyzx
movc r6.xyz, r0.yyyy, r14.xyzx, r6.xyzx
movc r8.yzw, r0.yyyy, r12.xxyz, r8.yyzw
mov r9.x, l(0)
movc r9.xyz, r0.yyyy, r15.xyzx, r9.xyzx
if_nz r0.z
  mad r0.yzw, r5.xxyz, cb1[178].xxyz, cb1[179].xxyz
  max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.yzw, r0.yyzw, l(0.000000, 0.990000, 0.990000, 0.990000)
  mul r0.yzw, r0.yyzw, cb1[180].xxyz
  ftoi r12.xyz, r0.yzwy
  mov r12.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
  utof r12.xyzw, r12.xyzw
  add r4.w, cb1[180].w, l(1.000000)
  div r0.yzw, r0.yyzw, r12.wwww
  frc r0.yzw, r0.yyzw
  mul r0.yzw, r0.yyzw, cb1[180].wwww
  mad r0.yzw, r12.xxyz, r4.wwww, r0.yyzw
  add r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r0.yzw, r0.yyzw, cb1[181].xxyz
  sample_l_indexable(texture3d)(float,float,float,float) r0.y, r0.yzwy, t1.wxyz, s0, l(0.000000)
else
  lt r4.w, l(0.000000), cb2[10].w
  movc r0.y, r4.w, cb5[5].x, l(1.000000)
endif
mul r4.w, r9.y, l(0.080000)
mad r12.xyz, -r9.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r12.xyz, r9.xxxx, r12.xyzx, r4.wwww
mad r9.xyw, -r8.yzyw, r9.xxxx, r8.yzyw
mad r9.xyw, r9.xyxw, cb1[126].wwww, cb1[126].xyxz
mad r12.xyz, r12.xyzx, cb1[127].wwww, cb1[127].xyzx
mul r14.xyz, r6.yzxy, r6.yzyy
mul r15.yw, r6.yyyx, r6.zzzz
mad r4.w, r6.x, r6.x, -r14.x
mul r16.yzw, r6.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r15.xz, r14.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r14.xyzw, r15.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r4.w, r4.w, l(0.429042608)
mov r16.x, l(0.886227548)
dp4 r6.w, cb5[8].xyzw, r16.xyzw
dp4 r7.w, cb5[11].xyzw, r14.xyzw
add r6.w, r6.w, r7.w
mad r15.x, cb5[14].x, r4.w, r6.w
dp4 r6.w, cb5[9].xyzw, r16.xyzw
dp4 r7.w, cb5[12].xyzw, r14.xyzw
add r6.w, r6.w, r7.w
mad r15.y, cb5[14].y, r4.w, r6.w
dp4 r6.w, cb5[10].xyzw, r16.xyzw
dp4 r7.w, cb5[13].xyzw, r14.xyzw
add r6.w, r6.w, r7.w
mad r15.z, cb5[14].z, r4.w, r6.w
max r14.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r14.xyz, r14.xyzx, cb1[146].xyzx
dp3 r4.w, r14.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r6.w, l(1), cb1[125].x
if_nz r6.w
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r15.xy, r11.zwzz
  mov r15.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r6.w, r15.xyzz, t12.yzwx
  mad r7.w, r6.w, cb1[57].x, cb1[57].y
  mad r6.w, r6.w, cb1[57].z, -cb1[57].w
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  add r6.w, r6.w, r7.w
  mad r6.w, -r13.z, l(1.000000), r6.w
  div r6.w, |r6.w|, r13.w
  lt r6.w, l(0.010000), r6.w
  if_nz r6.w
    mov r16.y, -cb1[123].z
    mov r16.z, l(0)
    add r16.yz, r10.xxyx, r16.yyzy
    iadd r17.xyzw, r15.xxyy, l(1, -1, 1, -1)
    mov r15.w, r17.y
    ld_indexable(texture2d)(float,float,float,float) r6.w, r15.wyzz, t12.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r16.x, |r6.w|
    lt r6.w, r16.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r16.xyz, r6.wwww, r16.xyzx, r10.zxyz
    mov r18.y, l(0)
    mov r18.z, cb1[123].w
    add r18.yz, r10.xxyx, r18.yyzy
    mov r19.xz, r15.xxzx
    mov r19.yw, r17.zzzw
    ld_indexable(texture2d)(float,float,float,float) r6.w, r19.xyzz, t12.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r18.x, |r6.w|
    lt r6.w, r18.x, r16.x
    movc r16.xyz, r6.wwww, r18.xyzx, r16.xyzx
    mov r18.y, cb1[123].z
    mov r18.z, l(0)
    add r18.yz, r10.xxyx, r18.yyzy
    mov r17.yzw, r15.yyzz
    ld_indexable(texture2d)(float,float,float,float) r6.w, r17.xyzw, t12.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r18.x, |r6.w|
    lt r6.w, r18.x, r16.x
    movc r15.xyz, r6.wwww, r18.xyzx, r16.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r10.zw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r6.w, r19.xwzz, t12.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    lt r6.w, |r6.w|, r15.x
    movc r10.xy, r6.wwww, r10.zwzz, r15.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.zw, l(0), t11.zwxy
utof r10.zw, r10.zzzw
mul r10.zw, r10.zzzw, r10.xxxy
round_z r10.zw, r10.zzzw
ftoi r15.xy, r10.zwzz
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.w, r15.xyzw, t11.yzwx
mul r7.w, cb2[12].y, l(3.999000)
ftou r7.w, r7.w
and r7.w, r7.w, l(2)
movc r7.w, r7.w, cb1[164].y, l(1.000000)
add r6.w, r6.w, l(-1.000000)
mad r6.w, r7.w, r6.w, l(1.000000)
mul r13.xyz, r6.wwww, r14.xyzx
mul r4.w, r4.w, r6.w
mul r13.xyz, r9.xywx, r13.xyzx
mad r14.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r8.yzw, r8.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r14.xxyz
add r8.yzw, r8.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r8.yzw, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
ftou r10.zw, r11.xxxy
if_z r0.x
  mov r7.w, cb4[3].x
  mov r11.xy, cb4[3].yzyy
  mov r11.z, cb4[1].z
  mov r14.xy, cb4[1].xyxx
  mov r11.w, cb4[2].x
else
  mov r7.w, cb4[43].x
  mov r11.xy, cb4[43].yzyy
  mov r11.z, cb4[41].z
  mov r14.xy, cb4[41].xyxx
  mov r11.w, cb4[42].x
endif
mad r7.w, v4.w, r7.w, r11.x
log r7.w, r7.w
mul r7.w, r11.y, r7.w
max r7.w, r7.w, l(0.000000)
ftou r7.w, r7.w
iadd r11.x, r11.z, l(-1)
umin r7.w, r7.w, r11.x
ushr r10.zw, r10.zzzw, r11.wwww
imad r7.w, r7.w, r14.y, r10.w
imad r7.w, r7.w, r14.x, r10.z
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t10.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r11.x, cb4[0].z
  mov r11.yzw, cb4[6].xxzw
  mov r14.xyz, cb4[5].xyzx
  mov r15.xyz, cb4[4].xyzx
else
  mov r11.x, cb4[40].z
  mov r11.yzw, cb4[46].xxzw
  mov r14.xyz, cb4[45].xyzx
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r11.x
  and r16.xyzw, r11.yyyy, l(255, 1, 2, 4)
  movc r16.xyzw, r16.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r11.x, r11.y, l(8)
  movc r17.w, r11.x, l(1.000000), l(0)
  ushr r18.xy, r11.yyyy, l(4, 8, 0, 0)
  ubfe r11.x, l(1), l(4), r11.y
  movc r19.x, r11.x, l(1.000000), l(0)
  and r18.xzw, r18.xxxx, l(2, 0, 4, 8)
  movc r19.yzw, r18.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r11.x, r19.xyzw, r10.xyzw
  lt r11.y, r11.w, l(0.000000)
  swapc r11.x, r18.x, r11.y, l(1.000000), r11.x
  if_nz r16.x
    mov r17.xyz, r16.yzwy
    dp4 r11.y, r17.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r0.z, l(1.000000)
    dp4 r0.z, r0.yzzz, r17.xyzw
    add r0.z, r0.z, l(-1.000000)
    mad r0.z, r11.y, r0.z, l(1.000000)
    mad_sat r11.y, r13.w, r11.z, r11.w
    mul r11.y, r11.y, r11.y
    add r0.z, -r11.x, r0.z
    mad r0.z, r11.y, r0.z, r11.x
    min r11.x, r18.x, r0.z
    mul r16.x, r18.x, r0.z
    mul r16.y, r18.x, r11.x
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.z, r16.y, r16.x
  lt r0.z, l(0.000000), r0.z
  if_nz r0.z
    dp3 r0.z, r15.xyzx, r15.xyzx
    rsq r0.z, r0.z
    mul r11.xyz, r0.zzzz, r15.xyzx
    dp3 r0.z, r6.xyzx, r11.xyzx
    mov_sat r11.w, r0.z
    max r12.w, r9.z, l(0.020000)
    dp3 r13.w, r6.xyzx, r4.xyzx
    dp3 r11.x, r4.xyzx, r11.xyzx
    mad r11.y, r11.x, l(2.000000), l(2.000000)
    rsq r11.y, r11.y
    add r0.z, r0.z, r13.w
    mul_sat r0.z, r11.y, r0.z
    mad_sat r11.x, r11.y, r11.x, r11.y
    add r11.y, |r13.w|, l(0.000010)
    min r11.y, r11.y, l(1.000000)
    mul r15.xyz, r9.xywx, r11.wwww
    mul r11.z, r12.w, r12.w
    mul r13.w, r11.z, r11.z
    mad r14.w, r0.z, r13.w, -r0.z
    mad r0.z, r14.w, r0.z, l(1.000000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, l(3.14159274)
    div r0.z, r13.w, r0.z
    mad r12.w, -r12.w, r12.w, l(1.000000)
    mad r13.w, r11.y, r12.w, r11.z
    mad r11.z, r11.w, r12.w, r11.z
    mul r11.y, r11.z, r11.y
    mad r11.y, r11.w, r13.w, r11.y
    rcp r11.y, r11.y
    mul r0.z, r0.z, r11.y
    add r11.x, -r11.x, l(1.000000)
    mul r11.y, r11.x, r11.x
    mul r11.y, r11.y, r11.y
    mul r11.z, r11.x, r11.y
    mul_sat r12.w, r12.y, l(50.000000)
    mad r11.x, -r11.y, r11.x, l(1.000000)
    mul r16.yzw, r12.xxyz, r11.xxxx
    mad r11.xyz, r12.wwww, r11.zzzz, r16.yzwy
    mul r0.z, r0.z, l(0.500000)
    mul r11.xyz, r11.xyzx, r0.zzzz
    mul r11.xyz, r11.xyzx, r11.wwww
    mad r11.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r11.xyzx
    mul r14.xyz, r14.xyzx, r16.xxxx
    mul r11.xyz, r11.xyzx, r14.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r0.z, r18.y, cb2[16].w
  movc r11.xyz, r0.zzzz, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.z, r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t3.yzxw
  umin r0.z, r0.z, cb4[0].x
  bfi r11.w, l(31), l(1), r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t3.yzwx
else
  ishl r12.w, r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r12.wwww, t6.yzwx
  umin r0.z, r12.w, cb4[40].x
  bfi r7.w, l(31), l(1), r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r7.wwww, t6.yzwx
endif
movc r7.w, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r7.w
dp3 r7.w, -r4.xyzx, r6.xyzx
add r7.w, r7.w, r7.w
mad r14.xyz, r6.xyzx, -r7.wwww, -r4.xyzx
max r7.w, r9.z, l(0.020000)
mul r12.w, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
dp3 r13.w, r6.xyzx, r4.xyzx
add r14.w, r13.w, r13.w
mad r15.x, r14.w, r13.w, l(-1.000000)
add r15.y, |r13.w|, l(0.000010)
min r15.y, r15.y, l(1.000000)
mul r16.xyz, r9.xywx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r15.z, r12.w, r12.w
mul r17.xyzw, r12.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r0.w, l(1.000000)
mov r18.y, l(1.000000)
mov r19.xyz, r11.xyzx
mov r15.w, l(0)
loop
  uge r16.w, r15.w, r0.z
  breakc_nz r16.w
  iadd r16.w, r11.w, r15.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r18.z, r16.wwww, t4.yzxw
    imul null, r18.w, r18.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.wwww, t2.xyzw
    imad r21.xyzw, r18.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t2.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t2.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r16.wwww, t7.yzwx
    imul null, r18.z, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.zzzz, t5.xyzw
    imad r25.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t5.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t5.wxyz
  endif
  eq r16.w, r22.w, l(0.000000)
  lt r18.z, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r18.w, r20.xyzx, r20.xyzx
  rsq r19.w, r18.w
  mul r25.xyz, r19.wwww, r20.xyzx
  mul r19.w, r20.w, r20.w
  mul r18.w, r18.w, r19.w
  mad r18.w, -r18.w, r18.w, l(1.000000)
  max r18.w, r18.w, l(0.000000)
  mul r18.w, r18.w, r18.w
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r19.w, r26.xyzx, r26.xyzx
  min r19.w, r19.w, l(1.000000)
  add r19.w, -r19.w, l(1.000000)
  log r19.w, r19.w
  mul r19.w, r19.w, r22.w
  exp r19.w, r19.w
  movc r18.w, r16.w, r18.w, r19.w
  dp3 r19.w, r25.xyzx, r23.yzwy
  add r19.w, -r24.x, r19.w
  mul_sat r19.w, r24.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r18.w, r19.w
  movc r18.z, r18.z, r19.w, r18.w
  lt r18.w, l(0.000000), r18.z
  if_nz r18.w
    and r18.w, r23.x, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r23.x, l(4)
      ubfe r19.w, l(1), l(4), r23.x
      movc r26.x, r19.w, l(1.000000), l(0)
      and r23.yzw, r18.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r26.xyzw, r10.xyzw
      dp4 r19.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r20.w, r0.ywww, r25.xyzw
      add r20.w, r20.w, l(-1.000000)
      mad r19.w, r19.w, r20.w, l(1.000000)
      mul r23.yz, r18.wwww, r19.wwww
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r18.w, r23.z, r23.y
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r24.w
      mul r19.w, r18.w, l(0.500000)
      mad r24.xyw, -r19.wwww, r21.yzyw, r20.xyxz
      mad r20.xyz, r19.wwww, r21.yzwy, r20.xyzx
      lt r19.w, l(0.000000), r18.w
      if_nz r19.w
        dp3 r20.w, r24.xywx, r24.xywx
        dp3 r21.y, r20.xyzx, r20.xyzx
        rsq r20.w, r20.w
        rsq r21.y, r21.y
        mul r21.z, r20.w, r21.y
        dp3 r21.w, r24.xywx, r20.xyzx
        mul r21.w, r21.z, r21.w
        mad r22.w, r21.w, l(0.500000), r21.z
        add r22.w, r22.w, l(0.500000)
        div r25.y, r21.z, r22.w
        dp3 r21.z, r6.xyzx, r24.xywx
        dp3 r22.w, r6.xyzx, r20.xyzx
        mul r21.y, r21.y, r22.w
        mad r20.w, r21.z, r20.w, r21.y
        mul r25.x, r20.w, l(0.500000)
      else
        dp3 r20.w, r24.xywx, r24.xywx
        add r21.y, r20.w, l(1.000000)
        rcp r25.y, r21.y
        rsq r20.w, r20.w
        mul r26.xyz, r20.wwww, r24.xywx
        dp3 r25.x, r6.xyzx, r26.xyzx
        mov r21.w, l(1.000000)
      endif
      lt r20.w, l(0.000000), r24.z
      mul r21.y, r24.z, r24.z
      mul_sat r21.y, r25.y, r21.y
      sqrt r21.y, r21.y
      lt r21.z, r25.x, r21.y
      max r22.w, -r21.y, r25.x
      add r22.w, r21.y, r22.w
      mul r22.w, r22.w, r22.w
      mul r21.y, r21.y, l(4.000000)
      div r21.y, r22.w, r21.y
      movc r21.y, r21.z, r21.y, r25.x
      movc_sat r20.w, r20.w, r21.y, r25.x
      movc r16.w, r16.w, r25.y, l(1.000000)
      add r20.xyz, -r24.xywx, r20.xyzx
      dp3 r21.y, r14.xyzx, r20.xyzx
      mad r25.xyz, r21.yyyy, r14.xyzx, -r20.xyzx
      dp3 r21.z, r24.xywx, r25.xyzx
      mul r21.y, r21.y, r21.y
      mad r18.w, r18.w, r18.w, -r21.y
      div_sat r18.w, r21.z, r18.w
      mad r20.xyz, r18.wwww, r20.xyzx, r24.xywx
      movc r20.xyz, r19.wwww, r20.xyzx, r24.xywx
      dp3 r18.w, r20.xyzx, r20.xyzx
      rsq r18.w, r18.w
      mul r20.xyz, r18.wwww, r20.xyzx
      mul r19.w, r18.w, r24.z
      mul_sat r19.w, r7.w, r19.w
      mul_sat r18.w, r18.w, r21.x
      dp3 r21.x, r6.xyzx, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r13.w, r21.x
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.y, l(0.000000), r19.w
      if_nz r21.y
        mad r21.z, -r19.w, r19.w, l(1.000000)
        sqrt r21.z, r21.z
        dp2 r22.w, r13.wwww, r21.xxxx
        add r23.z, -r20.x, r22.w
        ge r23.w, r23.z, r21.z
        if_nz r23.w
          mov r20.z, l(1.000000)
          mov r20.y, |r13.w|
        else
          mad r23.w, -r23.z, r23.z, l(1.000000)
          rsq r23.w, r23.w
          mul r23.w, r19.w, r23.w
          mad r24.x, -r23.z, r21.x, r13.w
          mul r24.y, r23.w, r24.x
          mad r23.z, -r23.z, r20.x, r15.x
          mul r23.z, r23.z, r23.w
          mul r24.z, r21.x, r21.x
          mad r24.z, -r13.w, r13.w, -r24.z
          add r24.z, r24.z, l(1.000000)
          mad r24.z, -r20.x, r20.x, r24.z
          mad_sat r22.w, r22.w, r20.x, r24.z
          sqrt r22.w, r22.w
          mul r22.w, r22.w, r23.w
          mul r24.z, r13.w, r22.w
          add r24.w, r24.z, r24.z
          mad r25.x, r21.x, r21.z, r13.w
          mad r23.w, r23.w, r24.x, r25.x
          mad r24.x, r20.x, r21.z, r23.z
          add r24.x, r24.x, l(1.000000)
          mul r25.y, r22.w, r24.x
          mul r25.z, r23.w, r24.x
          mul r25.w, r23.w, r24.w
          mul r24.z, r24.z, r23.w
          mul r24.z, r24.z, l(0.500000)
          mad r24.z, r25.y, l(-0.500000), r24.z
          mad r26.x, -r25.y, l(2.000000), r25.w
          mul r25.w, r25.w, r26.x
          mad r25.y, r25.y, r25.y, r25.w
          mul r25.w, r24.x, r24.x
          mad r24.x, r20.x, r21.z, r24.x
          mad r24.x, r24.x, l(-0.500000), l(-0.500000)
          mul r24.xz, r24.xxzx, r25.zzzz
          mad r24.x, r25.x, r25.w, r24.x
          mad r23.w, r23.w, r24.x, r25.y
          add r24.x, r24.z, r24.z
          mul r25.x, r24.z, r24.z
          mad r25.x, r23.w, r23.w, r25.x
          div r24.x, r24.x, r25.x
          mul r23.w, r23.w, r24.x
          mad r24.x, -r24.x, r24.z, l(1.000000)
          mul r22.w, r22.w, r23.w
          mad r22.w, r24.x, r24.y, r22.w
          mul r23.w, r24.w, r23.w
          mad r23.z, r24.x, r23.z, r23.w
          mad r21.x, r21.x, r21.z, r22.w
          mad r20.x, r20.x, r21.z, r23.z
          mad r21.z, r20.x, l(2.000000), l(2.000000)
          rsq r21.z, r21.z
          add r21.x, r13.w, r21.x
          mul_sat r20.z, r21.z, r21.x
          mad_sat r20.y, r21.z, r20.x, r21.z
        endif
      endif
      mul r16.w, r20.w, r16.w
      lt r20.x, l(0.000000), r18.w
      mul r18.w, r18.w, r18.w
      mad r21.x, r20.y, l(3.600000), l(0.400000)
      div r18.w, r18.w, r21.x
      mad r18.w, r12.w, r12.w, r18.w
      min r18.w, r18.w, l(1.000000)
      movc r18.x, r20.x, r18.w, r15.z
      mul r18.w, r19.w, l(0.250000)
      ishr r20.x, r18.x, l(1)
      iadd r20.x, r20.x, l(0x1fbd1df5)
      mad r19.w, r20.x, l(3.000000), r19.w
      mul r18.w, r18.w, r19.w
      add r19.w, r20.y, l(0.001000)
      div r18.w, r18.w, r19.w
      add r24.x, r18.w, r18.x
      div r24.y, r18.x, r24.x
      movc r21.xy, r21.yyyy, r24.xyxx, r18.xyxx
      lt r18.w, r21.w, l(1.000000)
      add r20.x, -r21.w, l(1.000100)
      add r21.z, r21.w, l(1.000000)
      div r20.x, r20.x, r21.z
      sqrt r20.x, r20.x
      mul r21.z, r20.x, l(0.250000)
      ishr r21.w, r21.x, l(1)
      iadd r21.w, r21.w, l(0x1fbd1df5)
      mad r20.x, r21.w, l(3.000000), r20.x
      mul r20.x, r20.x, r21.z
      div r19.w, r20.x, r19.w
      add r19.w, r19.w, r21.x
      div r19.w, r21.x, r19.w
      sqrt r19.w, r19.w
      mul r19.w, r19.w, r21.y
      movc r18.w, r18.w, r19.w, r21.y
      mad r19.w, r20.z, r18.x, -r20.z
      mad r19.w, r19.w, r20.z, l(1.000000)
      mul r19.w, r19.w, r19.w
      mul r19.w, r19.w, l(3.14159274)
      div r19.w, r18.x, r19.w
      mul r18.w, r18.w, r19.w
      sqrt r18.x, r18.x
      add r19.w, -r18.x, l(1.000000)
      mad r20.x, r15.y, r19.w, r18.x
      mad r18.x, r20.w, r19.w, r18.x
      mul r18.x, r15.y, r18.x
      mad r18.x, r20.w, r20.x, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r18.w
      add r18.w, -r20.y, l(1.000000)
      mul r19.w, r18.w, r18.w
      mul r19.w, r19.w, r19.w
      mul r20.x, r18.w, r19.w
      mad r18.w, -r19.w, r18.w, l(1.000000)
      mul r20.yzw, r12.xxyz, r18.wwww
      mad r20.xyz, r17.xxxx, r20.xxxx, r20.yzwy
      mul r18.x, r18.x, l(0.500000)
      mul r20.xyz, r20.xyzx, r18.xxxx
      mul r20.xyz, r16.wwww, r20.xyzx
      mad r20.xyz, r16.wwww, r16.xyzx, r20.xyzx
      mul r18.xzw, r18.zzzz, r22.xxyz
      mul r18.xzw, r23.yyyy, r18.xxzw
      mul r18.xzw, r18.xxzw, r20.xxyz
    else
      mov r18.xzw, l(0,0,0,0)
    endif
  else
    mov r18.xzw, l(0,0,0,0)
  endif
  ushr r16.w, r23.x, l(8)
  and r16.w, r16.w, cb2[16].w
  add r18.xzw, r18.xxzw, r19.xxyz
  movc r19.xyz, r16.wwww, r18.xzwx, r19.xyzx
  iadd r15.w, r15.w, l(1)
endloop
mad r0.xyz, r14.wwww, r6.xyzx, -r4.xyzx
mov_sat r13.w, r13.w
log r4.x, r9.z
mad r4.x, -r4.x, l(1.200000), l(1.000000)
add r4.y, cb1[163].z, l(-1.000000)
add r4.x, -r4.x, r4.y
itof r0.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw, s1, r4.x
mul r0.xyz, r0.xyzx, cb0[31].xxxx
mul r0.xyz, r0.xyzx, cb1[146].xyzx
dp3 r0.w, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.w, r0.w, cb0[29].w
mad_sat r4.x, r9.z, cb1[165].x, cb1[165].y
mad r4.y, r4.x, l(-2.000000), l(3.000000)
mul r4.x, r4.x, r4.x
mul r4.x, r4.x, r4.y
max r0.w, r0.w, l(0.000100)
div r0.w, r4.w, r0.w
min r0.w, r0.w, cb1[165].z
add r0.w, r0.w, l(-1.000000)
mad r0.w, r4.x, r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mad r4.xyz, r17.yzwy, r4.wwww, -r0.xyzx
mad r0.xyz, r8.xxxx, r4.xyzx, r0.xyzx
mad r4.xyzw, r9.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r4.x, r4.x
mul r6.x, r13.w, l(-9.280000)
exp r6.x, r6.x
min r0.w, r0.w, r6.x
mad r0.w, r0.w, r4.x, r4.y
mad r4.xy, r0.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r4.zwzz
mul r0.w, r17.x, r4.y
mad r4.xyz, r12.xyzx, r4.xxxx, r0.wwww
mul r0.xyz, r0.xyzx, r4.xyzx
mul r0.xyz, r6.wwww, r0.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r19.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t9.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r2.x, v3.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r9.xxyw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
