//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 31 12:50:18 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 24
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v5.wwww
mov r13.z, v5.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r6.xy, v2.xyxx, cb6[5].xxxx
mad r6.xy, r6.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r7.x, r6.xyxx, cb6[1].xyxx
dp2 r7.y, r6.xyxx, cb6[2].xyxx
add r6.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r6.zw, r6.xyxx, t16.zwxy, s3, cb1[133].x
mad r7.xy, r6.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r7.xyxx, r7.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r7.z, r4.w
mad r7.xyz, r7.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx
mul r8.yzw, r12.xxyz, r7.yyyy
mad r7.xyw, r7.xxxx, v0.xyxz, r8.yzyw
mad r7.xyz, r7.zzzz, v1.xyzx, r7.xywx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, r6.xyxx, t17.wxyz, s4, cb1[133].x
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r6.xyxx, t18.yxzw, s5, cb1[133].x
add_sat r0.y, r0.y, cb6[6].w
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t19.yzwx, s6, cb1[133].x
mov_sat r8.yzw, r8.yyzw
mov_sat r6.x, cb6[6].z
mov_sat r4.w, r4.w
mad r6.z, r0.y, r0.w, r0.z
lt r0.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxzx
lt r0.w, l(0.000000), cb1[163].w
and r0.y, r0.w, r0.y
div r9.xy, r13.xyxx, r13.wwww
mad r9.xy, r9.xyxx, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r9.xyxx, t13.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r9.xyxx, t14.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r9.xyxx, t15.xyzw, s2, l(0.000000)
mad r12.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r12.xyz, r7.xyzx, r12.wwww, r12.xyzx
mad r15.xz, r6.xxzx, r14.wwww, r14.xxzx
mad r15.y, r14.w, l(0.500000), r14.y
mad r10.xyz, r8.yzwy, r10.wwww, r10.xyzx
movc r7.xyz, r0.yyyy, r12.xyzx, r7.xyzx
movc r8.yzw, r0.yyyy, r10.xxyz, r8.yyzw
mov r6.y, l(0.500000)
movc r6.xyz, r0.yyyy, r15.xyzx, r6.xyzx
if_nz r0.z
  mad r0.yzw, r5.xxyz, cb1[178].xxyz, cb1[179].xxyz
  max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.yzw, r0.yyzw, l(0.000000, 0.990000, 0.990000, 0.990000)
  mul r0.yzw, r0.yyzw, cb1[180].xxyz
  ftoi r10.xyz, r0.yzwy
  mov r10.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r10.xyzw, r10.xyzw, t0.xyzw
  utof r10.xyzw, r10.xyzw
  add r6.w, cb1[180].w, l(1.000000)
  div r0.yzw, r0.yyzw, r10.wwww
  frc r0.yzw, r0.yyzw
  mul r0.yzw, r0.yyzw, cb1[180].wwww
  mad r0.yzw, r10.xxyz, r6.wwww, r0.yyzw
  add r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r0.yzw, r0.yyzw, cb1[181].xxyz
  sample_l_indexable(texture3d)(float,float,float,float) r0.y, r0.yzwy, t1.wxyz, s0, l(0.000000)
else
  lt r6.w, l(0.000000), cb2[10].w
  movc r0.y, r6.w, cb5[5].x, l(1.000000)
endif
mul r6.w, r6.y, l(0.080000)
mad r10.xyz, -r6.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r10.xyz, r6.xxxx, r10.xyzx, r6.wwww
mad r6.xyw, -r8.yzyw, r6.xxxx, r8.yzyw
mad r6.xyw, r6.xyxw, cb1[126].wwww, cb1[126].xyxz
mad r8.yzw, r10.xxyz, cb1[127].wwww, cb1[127].xxyz
ilt r7.w, l(1), cb1[125].x
if_nz r7.w
  mul r10.xy, r9.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r7.w, r10.xyzz, t12.yzwx
  mad r9.w, r7.w, cb1[57].x, cb1[57].y
  mad r7.w, r7.w, cb1[57].z, -cb1[57].w
  div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  add r7.w, r7.w, r9.w
  mad r7.w, -r13.z, l(1.000000), r7.w
  div r7.w, |r7.w|, r13.w
  lt r7.w, l(0.010000), r7.w
  if_nz r7.w
    mov r12.y, -cb1[123].z
    mov r12.z, l(0)
    add r12.yz, r9.xxyx, r12.yyzy
    iadd r14.xyzw, r10.xxyy, l(1, -1, 1, -1)
    mov r10.w, r14.y
    ld_indexable(texture2d)(float,float,float,float) r7.w, r10.wyzz, t12.yzwx
    mad r9.w, r7.w, cb1[57].x, cb1[57].y
    mad r7.w, r7.w, cb1[57].z, -cb1[57].w
    div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
    add r7.w, r7.w, r9.w
    mad r7.w, -r13.z, l(1.000000), r7.w
    mov r12.x, |r7.w|
    lt r7.w, r12.x, l(100000000.000000)
    mov r9.z, l(100000000.000000)
    movc r12.xyz, r7.wwww, r12.xyzx, r9.zxyz
    mov r15.y, l(0)
    mov r15.z, cb1[123].w
    add r15.yz, r9.xxyx, r15.yyzy
    mov r16.xz, r10.xxzx
    mov r16.yw, r14.zzzw
    ld_indexable(texture2d)(float,float,float,float) r7.w, r16.xyzz, t12.yzwx
    mad r9.z, r7.w, cb1[57].x, cb1[57].y
    mad r7.w, r7.w, cb1[57].z, -cb1[57].w
    div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
    add r7.w, r7.w, r9.z
    mad r7.w, -r13.z, l(1.000000), r7.w
    mov r15.x, |r7.w|
    lt r7.w, r15.x, r12.x
    movc r12.xyz, r7.wwww, r15.xyzx, r12.xyzx
    mov r15.y, cb1[123].z
    mov r15.z, l(0)
    add r15.yz, r9.xxyx, r15.yyzy
    mov r14.yzw, r10.yyzz
    ld_indexable(texture2d)(float,float,float,float) r7.w, r14.xyzw, t12.yzwx
    mad r9.z, r7.w, cb1[57].x, cb1[57].y
    mad r7.w, r7.w, cb1[57].z, -cb1[57].w
    div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
    add r7.w, r7.w, r9.z
    mad r7.w, -r13.z, l(1.000000), r7.w
    mov r15.x, |r7.w|
    lt r7.w, r15.x, r12.x
    movc r10.xyz, r7.wwww, r15.xyzx, r12.xyzx
    mov r12.x, l(0)
    mov r12.y, -cb1[123].w
    add r9.zw, r9.xxxy, r12.xxxy
    ld_indexable(texture2d)(float,float,float,float) r7.w, r16.xwzz, t12.yzwx
    mad r10.w, r7.w, cb1[57].x, cb1[57].y
    mad r7.w, r7.w, cb1[57].z, -cb1[57].w
    div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
    add r7.w, r7.w, r10.w
    mad r7.w, -r13.z, l(1.000000), r7.w
    lt r7.w, |r7.w|, r10.x
    movc r9.xy, r7.wwww, r9.zwzz, r10.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r9.zw, l(0), t11.zwxy
utof r9.zw, r9.zzzw
mul r9.zw, r9.zzzw, r9.xxxy
round_z r9.zw, r9.zzzw
ftoi r10.xy, r9.zwzz
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.w, r10.xyzw, t11.yzwx
mul r9.z, cb2[12].y, l(3.999000)
ftou r9.z, r9.z
and r9.z, r9.z, l(2)
movc r9.z, r9.z, cb1[164].y, l(1.000000)
add r7.w, r7.w, l(-1.000000)
mad r7.w, r9.z, r7.w, l(1.000000)
ftou r9.zw, r11.xxxy
if_z r0.x
  mov r10.xyz, cb4[3].xyzx
  mov r10.w, cb4[1].z
  mov r11.xy, cb4[1].xyxx
  mov r11.z, cb4[2].x
else
  mov r10.xyz, cb4[43].xyzx
  mov r10.w, cb4[41].z
  mov r11.xy, cb4[41].xyxx
  mov r11.z, cb4[42].x
endif
mad r10.x, v5.w, r10.x, r10.y
log r10.x, r10.x
mul r10.x, r10.z, r10.x
max r10.x, r10.x, l(0.000000)
ftou r10.x, r10.x
iadd r10.y, r10.w, l(-1)
umin r10.x, r10.y, r10.x
ushr r9.zw, r9.zzzw, r11.zzzz
imad r9.w, r10.x, r11.y, r9.w
imad r9.z, r9.w, r11.x, r9.z
if_nz cb4[95].x
  mul r9.xy, r9.xyxx, cb1[123].xyxx
  round_z r9.xy, r9.xyxx
  ftoi r10.xy, r9.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t10.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r9.x, cb4[0].z
  mov r9.yw, cb4[6].xxxz
  mov r11.x, cb4[6].w
  mov r11.yzw, cb4[5].xxyz
  mov r12.xyz, cb4[4].xyzx
else
  mov r9.x, cb4[40].z
  mov r9.yw, cb4[46].xxxz
  mov r11.x, cb4[46].w
  mov r11.yzw, cb4[45].xxyz
  mov r12.xyz, cb4[44].xyzx
endif
if_nz r9.x
  and r14.xyzw, r9.yyyy, l(255, 1, 2, 4)
  movc r14.xyzw, r14.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r9.x, r9.y, l(8)
  movc r15.w, r9.x, l(1.000000), l(0)
  ushr r13.xy, r9.yyyy, l(4, 8, 0, 0)
  ubfe r9.x, l(1), l(4), r9.y
  movc r16.x, r9.x, l(1.000000), l(0)
  and r17.xyz, r13.xxxx, l(2, 4, 8, 0)
  movc r16.yzw, r17.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r9.x, r16.xyzw, r10.xyzw
  lt r9.y, r11.x, l(0.000000)
  swapc r9.x, r13.x, r9.y, l(1.000000), r9.x
  if_nz r14.x
    mov r15.xyz, r14.yzwy
    dp4 r9.y, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r0.z, l(1.000000)
    dp4 r0.z, r0.yzzz, r15.xyzw
    add r0.z, r0.z, l(-1.000000)
    mad r0.z, r9.y, r0.z, l(1.000000)
    mad_sat r9.y, r13.w, r9.w, r11.x
    mul r9.y, r9.y, r9.y
    add r0.z, -r9.x, r0.z
    mad r0.z, r9.y, r0.z, r9.x
    min r9.x, r13.x, r0.z
    mul r14.x, r13.x, r0.z
    mul r14.y, r13.x, r9.x
  else
    mov r14.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.z, r14.y, r14.x
  lt r0.z, l(0.000000), r0.z
  if_nz r0.z
    dp3 r0.z, r12.xyzx, r12.xyzx
    rsq r0.z, r0.z
    mul r9.xyw, r0.zzzz, r12.xyxz
    dp3 r0.z, r7.xyzx, r9.xywx
    mov_sat r11.x, r0.z
    max r12.x, r6.z, l(0.020000)
    dp3 r12.y, r7.xyzx, r4.xyzx
    dp3 r9.x, r4.xyzx, r9.xywx
    mad r9.y, r9.x, l(2.000000), l(2.000000)
    rsq r9.y, r9.y
    add r0.z, r0.z, r12.y
    mul_sat r0.z, r9.y, r0.z
    mad_sat r9.x, r9.y, r9.x, r9.y
    add r9.y, |r12.y|, l(0.000010)
    min r9.y, r9.y, l(1.000000)
    mul r12.yzw, r6.xxyw, r11.xxxx
    mul r9.w, r12.x, r12.x
    mul r13.x, r9.w, r9.w
    mad r13.z, r0.z, r13.x, -r0.z
    mad r0.z, r13.z, r0.z, l(1.000000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, l(3.14159274)
    div r0.z, r13.x, r0.z
    mad r12.x, -r12.x, r12.x, l(1.000000)
    mad r13.x, r9.y, r12.x, r9.w
    mad r9.w, r11.x, r12.x, r9.w
    mul r9.y, r9.w, r9.y
    mad r9.y, r11.x, r13.x, r9.y
    rcp r9.y, r9.y
    mul r0.z, r0.z, r9.y
    add r9.x, -r9.x, l(1.000000)
    mul r9.y, r9.x, r9.x
    mul r9.y, r9.y, r9.y
    mul r9.w, r9.x, r9.y
    mul_sat r12.x, r8.z, l(50.000000)
    mad r9.x, -r9.y, r9.x, l(1.000000)
    mul r13.xzw, r8.yyzw, r9.xxxx
    mad r9.xyw, r12.xxxx, r9.wwww, r13.xzxw
    mul r0.z, r0.z, l(0.500000)
    mul r9.xyw, r9.xyxw, r0.zzzz
    mul r9.xyw, r9.xyxw, r11.xxxx
    mad r9.xyw, r12.yzyw, l(0.318309873, 0.318309873, 0.000000, 0.318309873), r9.xyxw
    mul r11.xyz, r11.yzwy, r14.xxxx
    mul r9.xyw, r9.xyxw, r11.xyxz
  else
    mov r9.xyw, l(0,0,0,0)
  endif
  and r0.z, r13.y, cb2[16].w
  movc r9.xyw, r0.zzzz, r9.xyxw, l(0,0,0,0)
else
  mov r9.xyw, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.z, r9.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t3.yzxw
  umin r0.z, r0.z, cb4[0].x
  bfi r11.x, l(31), l(1), r9.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.x, r11.xxxx, t3.xyzw
else
  ishl r11.y, r9.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.y, r11.yyyy, t6.yxzw
  umin r0.z, r11.y, cb4[40].x
  bfi r9.z, l(31), l(1), r9.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.x, r9.zzzz, t6.xyzw
endif
movc r9.z, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r9.z
dp3 r9.z, -r4.xyzx, r7.xyzx
add r9.z, r9.z, r9.z
mad r11.yzw, r7.xxyz, -r9.zzzz, -r4.xxyz
max r9.z, r6.z, l(0.020000)
mul r12.x, r9.z, r9.z
mad r9.z, -r9.z, r9.z, l(1.000000)
dp3 r12.y, r7.xyzx, r4.xyzx
add r12.z, r12.y, r12.y
mad r12.w, r12.z, r12.y, l(-1.000000)
add r13.x, |r12.y|, l(0.000010)
min r13.x, r13.x, l(1.000000)
mul r13.yzw, r6.xxyw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r14.x, r12.x, r12.x
mul r14.y, r8.z, l(50.000000)
mov_sat r14.y, r14.y
mov r0.w, l(1.000000)
mov r15.y, l(1.000000)
mov r16.xyz, r9.xywx
mov r14.z, l(0)
loop
  uge r14.w, r14.z, r0.z
  breakc_nz r14.w
  iadd r14.w, r11.x, r14.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r15.z, r14.wwww, t4.yzxw
    imul null, r15.w, r15.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.wwww, t2.xyzw
    imad r18.xyzw, r15.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.xxxx, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.yyyy, t2.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r18.zzzz, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r18.wwww, t2.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r14.w, r14.wwww, t7.yzwx
    imul null, r15.z, r14.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.zzzz, t5.xyzw
    imad r22.xyzw, r14.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r22.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r22.yyyy, t5.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r22.zzzz, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r22.wwww, t5.wxyz
  endif
  eq r14.w, r19.w, l(0.000000)
  lt r15.z, l(-2.000000), r21.x
  add r17.xyz, -r5.xyzx, r17.xyzx
  dp3 r15.w, r17.xyzx, r17.xyzx
  rsq r16.w, r15.w
  mul r22.xyz, r16.wwww, r17.xyzx
  mul r16.w, r17.w, r17.w
  mul r15.w, r15.w, r16.w
  mad r15.w, -r15.w, r15.w, l(1.000000)
  max r15.w, r15.w, l(0.000000)
  mul r15.w, r15.w, r15.w
  mul r23.xyz, r17.wwww, r17.xyzx
  dp3 r16.w, r23.xyzx, r23.xyzx
  min r16.w, r16.w, l(1.000000)
  add r16.w, -r16.w, l(1.000000)
  log r16.w, r16.w
  mul r16.w, r16.w, r19.w
  exp r16.w, r16.w
  movc r15.w, r14.w, r15.w, r16.w
  dp3 r16.w, r22.xyzx, r20.yzwy
  add r16.w, -r21.x, r16.w
  mul_sat r16.w, r21.y, r16.w
  mul r16.w, r16.w, r16.w
  mul r16.w, r15.w, r16.w
  movc r15.z, r15.z, r16.w, r15.w
  lt r15.w, l(0.000000), r15.z
  if_nz r15.w
    and r15.w, r20.x, l(255)
    movc r15.w, r15.w, l(1), l(0)
    if_nz r15.w
      and r22.xyzw, r20.xxxx, l(1, 2, 4, 8)
      movc r22.xyzw, r22.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r15.w, r20.x, l(4)
      ubfe r16.w, l(1), l(4), r20.x
      movc r23.x, r16.w, l(1.000000), l(0)
      and r20.yzw, r15.wwww, l(0, 2, 4, 8)
      movc r23.yzw, r20.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r15.w, r23.xyzw, r10.xyzw
      dp4 r16.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r17.w, r0.ywww, r22.xyzw
      add r17.w, r17.w, l(-1.000000)
      mad r16.w, r16.w, r17.w, l(1.000000)
      mul r20.yz, r15.wwww, r16.wwww
    else
      mov r20.yz, l(0,1.000000,1.000000,0)
    endif
    add r15.w, r20.z, r20.y
    lt r15.w, l(0.000000), r15.w
    if_nz r15.w
      f16tof32 r15.w, r21.w
      mul r16.w, r15.w, l(0.500000)
      mad r21.xyw, -r16.wwww, r18.yzyw, r17.xyxz
      mad r17.xyz, r16.wwww, r18.yzwy, r17.xyzx
      lt r16.w, l(0.000000), r15.w
      if_nz r16.w
        dp3 r17.w, r21.xywx, r21.xywx
        dp3 r18.y, r17.xyzx, r17.xyzx
        rsq r17.w, r17.w
        rsq r18.y, r18.y
        mul r18.z, r17.w, r18.y
        dp3 r18.w, r21.xywx, r17.xyzx
        mul r18.w, r18.z, r18.w
        mad r19.w, r18.w, l(0.500000), r18.z
        add r19.w, r19.w, l(0.500000)
        div r22.y, r18.z, r19.w
        dp3 r18.z, r7.xyzx, r21.xywx
        dp3 r19.w, r7.xyzx, r17.xyzx
        mul r18.y, r18.y, r19.w
        mad r17.w, r18.z, r17.w, r18.y
        mul r22.x, r17.w, l(0.500000)
      else
        dp3 r17.w, r21.xywx, r21.xywx
        add r18.y, r17.w, l(1.000000)
        rcp r22.y, r18.y
        rsq r17.w, r17.w
        mul r23.xyz, r17.wwww, r21.xywx
        dp3 r22.x, r7.xyzx, r23.xyzx
        mov r18.w, l(1.000000)
      endif
      lt r17.w, l(0.000000), r21.z
      mul r18.y, r21.z, r21.z
      mul_sat r18.y, r22.y, r18.y
      sqrt r18.y, r18.y
      lt r18.z, r22.x, r18.y
      max r19.w, -r18.y, r22.x
      add r19.w, r18.y, r19.w
      mul r19.w, r19.w, r19.w
      mul r18.y, r18.y, l(4.000000)
      div r18.y, r19.w, r18.y
      movc r18.y, r18.z, r18.y, r22.x
      movc_sat r17.w, r17.w, r18.y, r22.x
      movc r14.w, r14.w, r22.y, l(1.000000)
      add r17.xyz, -r21.xywx, r17.xyzx
      dp3 r18.y, r11.yzwy, r17.xyzx
      mad r22.xyz, r18.yyyy, r11.yzwy, -r17.xyzx
      dp3 r18.z, r21.xywx, r22.xyzx
      mul r18.y, r18.y, r18.y
      mad r15.w, r15.w, r15.w, -r18.y
      div_sat r15.w, r18.z, r15.w
      mad r17.xyz, r15.wwww, r17.xyzx, r21.xywx
      movc r17.xyz, r16.wwww, r17.xyzx, r21.xywx
      dp3 r15.w, r17.xyzx, r17.xyzx
      rsq r15.w, r15.w
      mul r17.xyz, r15.wwww, r17.xyzx
      mul r16.w, r15.w, r21.z
      mul_sat r16.w, r9.z, r16.w
      mul_sat r15.w, r15.w, r18.x
      dp3 r18.x, r7.xyzx, r17.xyzx
      dp3 r17.x, r4.xyzx, r17.xyzx
      mad r17.y, r17.x, l(2.000000), l(2.000000)
      rsq r17.y, r17.y
      add r17.z, r12.y, r18.x
      mul_sat r17.z, r17.y, r17.z
      mad_sat r17.y, r17.y, r17.x, r17.y
      lt r18.y, l(0.000000), r16.w
      if_nz r18.y
        mad r18.z, -r16.w, r16.w, l(1.000000)
        sqrt r18.z, r18.z
        dp2 r19.w, r12.yyyy, r18.xxxx
        add r20.z, -r17.x, r19.w
        ge r20.w, r20.z, r18.z
        if_nz r20.w
          mov r17.z, l(1.000000)
          mov r17.y, |r12.y|
        else
          mad r20.w, -r20.z, r20.z, l(1.000000)
          rsq r20.w, r20.w
          mul r20.w, r16.w, r20.w
          mad r21.x, -r20.z, r18.x, r12.y
          mul r21.y, r20.w, r21.x
          mad r20.z, -r20.z, r17.x, r12.w
          mul r20.z, r20.z, r20.w
          mul r21.z, r18.x, r18.x
          mad r21.z, -r12.y, r12.y, -r21.z
          add r21.z, r21.z, l(1.000000)
          mad r21.z, -r17.x, r17.x, r21.z
          mad_sat r19.w, r19.w, r17.x, r21.z
          sqrt r19.w, r19.w
          mul r19.w, r19.w, r20.w
          mul r21.z, r12.y, r19.w
          add r21.w, r21.z, r21.z
          mad r22.x, r18.x, r18.z, r12.y
          mad r20.w, r20.w, r21.x, r22.x
          mad r21.x, r17.x, r18.z, r20.z
          add r21.x, r21.x, l(1.000000)
          mul r22.y, r19.w, r21.x
          mul r22.z, r20.w, r21.x
          mul r22.w, r20.w, r21.w
          mul r21.z, r21.z, r20.w
          mul r21.z, r21.z, l(0.500000)
          mad r21.z, r22.y, l(-0.500000), r21.z
          mad r23.x, -r22.y, l(2.000000), r22.w
          mul r22.w, r22.w, r23.x
          mad r22.y, r22.y, r22.y, r22.w
          mul r22.w, r21.x, r21.x
          mad r21.x, r17.x, r18.z, r21.x
          mad r21.x, r21.x, l(-0.500000), l(-0.500000)
          mul r21.xz, r21.xxzx, r22.zzzz
          mad r21.x, r22.x, r22.w, r21.x
          mad r20.w, r20.w, r21.x, r22.y
          add r21.x, r21.z, r21.z
          mul r22.x, r21.z, r21.z
          mad r22.x, r20.w, r20.w, r22.x
          div r21.x, r21.x, r22.x
          mul r20.w, r20.w, r21.x
          mad r21.x, -r21.x, r21.z, l(1.000000)
          mul r19.w, r19.w, r20.w
          mad r19.w, r21.x, r21.y, r19.w
          mul r20.w, r21.w, r20.w
          mad r20.z, r21.x, r20.z, r20.w
          mad r18.x, r18.x, r18.z, r19.w
          mad r17.x, r17.x, r18.z, r20.z
          mad r18.z, r17.x, l(2.000000), l(2.000000)
          rsq r18.z, r18.z
          add r18.x, r12.y, r18.x
          mul_sat r17.z, r18.z, r18.x
          mad_sat r17.y, r18.z, r17.x, r18.z
        endif
      endif
      mul r14.w, r17.w, r14.w
      lt r17.x, l(0.000000), r15.w
      mul r15.w, r15.w, r15.w
      mad r18.x, r17.y, l(3.600000), l(0.400000)
      div r15.w, r15.w, r18.x
      mad r15.w, r12.x, r12.x, r15.w
      min r15.w, r15.w, l(1.000000)
      movc r15.x, r17.x, r15.w, r14.x
      mul r15.w, r16.w, l(0.250000)
      ishr r17.x, r15.x, l(1)
      iadd r17.x, r17.x, l(0x1fbd1df5)
      mad r16.w, r17.x, l(3.000000), r16.w
      mul r15.w, r15.w, r16.w
      add r16.w, r17.y, l(0.001000)
      div r15.w, r15.w, r16.w
      add r21.x, r15.w, r15.x
      div r21.y, r15.x, r21.x
      movc r18.xy, r18.yyyy, r21.xyxx, r15.xyxx
      lt r15.w, r18.w, l(1.000000)
      add r17.x, -r18.w, l(1.000100)
      add r18.z, r18.w, l(1.000000)
      div r17.x, r17.x, r18.z
      sqrt r17.x, r17.x
      mul r18.z, r17.x, l(0.250000)
      ishr r18.w, r18.x, l(1)
      iadd r18.w, r18.w, l(0x1fbd1df5)
      mad r17.x, r18.w, l(3.000000), r17.x
      mul r17.x, r17.x, r18.z
      div r16.w, r17.x, r16.w
      add r16.w, r16.w, r18.x
      div r16.w, r18.x, r16.w
      sqrt r16.w, r16.w
      mul r16.w, r16.w, r18.y
      movc r15.w, r15.w, r16.w, r18.y
      mad r16.w, r17.z, r15.x, -r17.z
      mad r16.w, r16.w, r17.z, l(1.000000)
      mul r16.w, r16.w, r16.w
      mul r16.w, r16.w, l(3.14159274)
      div r16.w, r15.x, r16.w
      mul r15.w, r15.w, r16.w
      sqrt r15.x, r15.x
      add r16.w, -r15.x, l(1.000000)
      mad r17.x, r13.x, r16.w, r15.x
      mad r15.x, r17.w, r16.w, r15.x
      mul r15.x, r13.x, r15.x
      mad r15.x, r17.w, r17.x, r15.x
      rcp r15.x, r15.x
      mul r15.x, r15.x, r15.w
      add r15.w, -r17.y, l(1.000000)
      mul r16.w, r15.w, r15.w
      mul r16.w, r16.w, r16.w
      mul r17.x, r15.w, r16.w
      mad r15.w, -r16.w, r15.w, l(1.000000)
      mul r17.yzw, r8.yyzw, r15.wwww
      mad r17.xyz, r14.yyyy, r17.xxxx, r17.yzwy
      mul r15.x, r15.x, l(0.500000)
      mul r17.xyz, r17.xyzx, r15.xxxx
      mul r17.xyz, r14.wwww, r17.xyzx
      mad r17.xyz, r14.wwww, r13.yzwy, r17.xyzx
      mul r15.xzw, r15.zzzz, r19.xxyz
      mul r15.xzw, r20.yyyy, r15.xxzw
      mul r15.xzw, r15.xxzw, r17.xxyz
    else
      mov r15.xzw, l(0,0,0,0)
    endif
  else
    mov r15.xzw, l(0,0,0,0)
  endif
  ushr r14.w, r20.x, l(8)
  and r14.w, r14.w, cb2[16].w
  add r15.xzw, r15.xxzw, r16.xxyz
  movc r16.xyz, r14.wwww, r15.xzwx, r16.xyzx
  iadd r14.z, r14.z, l(1)
endloop
mad r0.xyz, r12.zzzz, r7.xyzx, -r4.xyzx
mov_sat r12.y, r12.y
log r4.x, r6.z
mad r4.x, -r4.x, l(1.200000), l(1.000000)
add r4.y, cb1[163].z, l(-1.000000)
add r4.x, -r4.x, r4.y
itof r0.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw, s1, r4.x
mul r0.xyz, r0.xyzx, cb0[31].xxxx
mul r0.xyz, r0.xyzx, cb1[146].xyzx
mad_sat r0.w, r6.z, cb1[165].x, cb1[165].y
mad r4.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.x
min r4.x, cb1[165].z, l(0.000000)
add r4.x, r4.x, l(-1.000000)
mad r0.w, r0.w, r4.x, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r8.xxxx, -r0.xyzx, r0.xyzx
mad r9.xyzw, r6.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r9.x, r9.x
mul r4.x, r12.y, l(-9.280000)
exp r4.x, r4.x
min r0.w, r0.w, r4.x
mad r0.w, r0.w, r9.x, r9.y
mad r4.xy, r0.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r9.zwzz
mul r0.w, r14.y, r4.y
mad r4.xyz, r8.yzwy, r4.xxxx, r0.wwww
mul r0.xyz, r0.xyzx, r4.xyzx
mul r0.xyz, r7.wwww, r0.xyzx
mad r4.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r7.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r9.xyz, r8.yzwy, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, r7.xyzx
mad r4.xyz, r4.xyzx, r4.wwww, r9.xyzx
mul r4.xyz, r4.wwww, r4.xyzx
max r4.xyz, r4.xyzx, r4.wwww
mad r0.xyz, r0.xyzx, r4.xyzx, r16.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t9.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r8.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r6.xxyw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[4].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
add r0.xyz, r0.xyzx, r2.yzwy
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
