//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Tue Sep 17 23:54:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float      w
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.w
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 21
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v5.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, cb1[132].zzzz, l(0.001000, 6.28318548, 0.200000, 0.000000)
sincos r9.x, r11.x, r7.y
mul r7.yw, v2.xxxy, l(0.000000, 0.100000, 0.000000, 0.500000)
mad r8.yz, r7.xxxx, |r11.xxxx|, r7.yywy
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, r8.yzyy, t12.wxyz, s3, cb1[133].x
mad r7.xy, r7.zzzz, |r9.xxxx|, r7.ywyy
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t13.xyzw, s4, cb1[133].x
add r7.xyzw, r7.xxyz, r8.yyzw
mul r7.xyzw, r7.xyzw, l(0.300000, 0.600000, 0.600000, 0.600000)
mov_sat r7.yzw, r7.yyzw
log r7.yzw, r7.yyzw
mul r7.yzw, r7.yyzw, l(0.000000, -0.200000, -0.200000, -0.200000)
exp r7.yzw, r7.yyzw
mad r7.yzw, r7.yyzw, l(0.000000, 100.000000, 10.000000, 100.000000), cb6[1].xxyz
mad r8.yz, cb1[132].zzzz, l(0.000000, 0.300000, 0.300000, 0.000000), v2.xxyx
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r8.yzyy, t14.yxzw, s5, cb1[133].x
mad r9.xyzw, cb1[132].zzzz, l(-0.300000, -0.300000, -0.300000, 0.300000), v2.xyxy
add r9.xyzw, r9.xyzw, l(0.418100, 0.354800, 0.864861, 0.148384)
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r9.xyxx, t14.yzwx, s5, cb1[133].x
add r0.y, r0.y, r4.w
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r9.zwzz, t14.yzwx, s5, cb1[133].x
mad r8.yz, cb1[132].zzzz, l(0.000000, 0.300000, -0.300000, 0.000000), v2.xxyx
add r8.yz, r8.yyzy, l(0.000000, 0.651340, 0.751638, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r6.w, r8.yzyy, t14.yzwx, s5, cb1[133].x
add r4.w, r4.w, r6.w
add r0.y, r0.y, r4.w
mad r0.y, -r0.y, l(0.250000), r7.x
mul_sat r9.w, r0.y, cb6[2].x
mad r0.y, r0.w, l(0.500000), r0.z
mad r8.yzw, r5.xxyz, cb1[178].xxyz, cb1[179].xxyz
max r8.yzw, r8.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r8.yzw, r8.yyzw, l(0.000000, 0.990000, 0.990000, 0.990000)
mul r8.yzw, r8.yyzw, cb1[180].xxyz
ftoi r11.xyz, r8.yzwy
mov r11.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r11.xyzw, r11.xyzw, t0.xyzw
utof r11.xyzw, r11.xyzw
add r0.z, cb1[180].w, l(1.000000)
div r8.yzw, r8.yyzw, r11.wwww
frc r8.yzw, r8.yyzw
mul r8.yzw, r8.yyzw, cb1[180].wwww
mad r8.yzw, r11.xxyz, r0.zzzz, r8.yyzw
add r8.yzw, r8.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
mul r8.yzw, r8.yyzw, cb1[181].xxyz
lt r0.z, l(0.000000), cb2[12].z
if_nz r0.z
  sample_l_indexable(texture3d)(float,float,float,float) r0.z, r8.yzwy, t2.zwxy, s0, l(0.000000)
else
  lt r4.w, l(0.000000), cb2[10].w
  movc r0.z, r4.w, cb5[5].x, l(1.000000)
endif
mad r11.xyz, cb1[127].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb1[127].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t1.wxyz, s0, l(0.000000)
mul r8.yzw, r8.yyzw, l(0.000000, 0.886227548, 0.886227548, 0.886227548)
max r8.yzw, r8.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.yzw, r8.yyzw, cb1[146].xxyz
mul r8.yzw, r8.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
dp3 r4.w, r8.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
add r10.xy, -r10.xyxx, v5.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.x, cb4[3].y
  mov r10.z, cb4[3].z
  mov r10.w, cb4[1].z
  mov r12.xy, cb4[1].xyxx
  mov r11.w, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.x, cb4[43].y
  mov r10.z, cb4[43].z
  mov r10.w, cb4[41].z
  mov r12.xy, cb4[41].xyxx
  mov r11.w, cb4[42].x
endif
mad r6.w, v5.w, r6.w, r7.x
log r6.w, r6.w
mul r6.w, r10.z, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.x, r10.w, l(-1)
umin r6.w, r6.w, r7.x
ushr r10.xy, r10.xyxx, r11.wwww
imad r6.w, r6.w, r12.y, r10.y
imad r6.w, r6.w, r12.x, r10.x
if_z r0.x
  mov r7.x, cb4[0].z
  mov r10.xyz, cb4[6].xzwx
  mov r12.xyz, cb4[5].xyzx
else
  mov r7.x, cb4[40].z
  mov r10.xyz, cb4[46].xzwx
  mov r12.xyz, cb4[45].xyzx
endif
if_nz r7.x
  and r13.xyzw, r10.xxxx, l(255, 2, 4, 8)
  movc r13.xyzw, r13.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r7.x, cb4[7].x
    mov r10.w, l(0)
    loop
      uge r11.w, r10.w, cb4[7].x
      breakc_nz r11.w
      dp4 r11.w, cb4[8].xyzw, icb[r10.w + 0].xyzw
      lt r11.w, v5.w, r11.w
      if_nz r11.w
        mov r7.x, r10.w
        break
      endif
      iadd r10.w, r10.w, l(1)
    endloop
    ult r10.w, r7.x, cb4[7].x
    if_nz r10.w
      ishl r10.w, r7.x, l(2)
      mul r14.xyzw, r5.yyyy, cb4[r10.w + 10].xyzw
      mad r14.xyzw, r5.xxxx, cb4[r10.w + 9].xyzw, r14.xyzw
      mad r14.xyzw, r5.zzzz, cb4[r10.w + 11].xyzw, r14.xyzw
      add r14.xyzw, r14.xyzw, cb4[r10.w + 12].xyzw
      div r15.xyzw, r14.xyxy, r14.wwww
      ge r14.xy, r15.zwzz, cb4[r7.x + 25].xyxx
      ge r16.xy, cb4[r7.x + 25].zwzz, r15.zwzz
      and r14.xy, r14.xyxx, r16.xyxx
      and r7.x, r14.y, r14.x
      if_nz r7.x
        mad r15.xyzw, r15.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r14.xy, r15.zwzz
        round_ni r15.xyzw, r15.xyzw
        add r16.xyzw, r15.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r16.xyzw, r16.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r17.x, r16.xyxx, t3.xyzw, s1, l(0.000000)
        add r15.xyzw, r15.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r15.xyzw, r15.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r17.y, r15.xyxx, t3.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r17.z, r15.zwzz, t3.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r17.w, r16.zwzz, t3.yzwx, s1, l(0.000000)
        add r15.xyzw, -r14.zzzz, r17.xyzw
        mad_sat r15.xyzw, r15.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r14.zw, -r15.wwwx, r15.zzzy
        mad r14.xz, r14.xxxx, r14.zzwz, r15.wwxw
        add r7.x, -r14.x, r14.z
        mad r7.x, r14.y, r7.x, r14.x
      else
        mov r7.x, l(1.000000)
      endif
    else
      mov r7.x, l(1.000000)
    endif
  else
    mov r7.x, l(1.000000)
  endif
  if_nz r13.x
    mov r13.x, l(1.000000)
    dp4 r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.xyzw
    add r11.w, r10.w, l(-1.000000)
    mad r10.w, r10.w, r11.w, l(1.000000)
    mad_sat r10.y, v5.w, r10.y, r10.z
    mul r10.y, r10.y, r10.y
    add r10.z, -r7.x, r10.w
    mad r13.x, r10.y, r10.z, r7.x
    min r13.y, r13.x, l(1.000000)
  else
    mov r13.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.x, r13.y, r13.x
  lt r7.x, l(0.000000), r7.x
  if_nz r7.x
    mul r10.yzw, cb1[126].xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r12.xyz, r12.xyzx, r13.xxxx
    mul r10.yzw, r10.yyzw, r12.xxyz
  else
    mov r10.yzw, l(0,0,0,0)
  endif
  ushr r7.x, r10.x, l(8)
  and r7.x, r7.x, cb2[16].w
  movc r10.xyz, r7.xxxx, r10.yzwy, l(0,0,0,0)
  mov r0.z, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.x, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.x, r7.xxxx, t5.xyzw
  umin r7.x, r7.x, cb4[0].x
  bfi r10.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t5.yzwx
else
  ishl r11.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t8.yzwx
  umin r7.x, r11.w, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r6.wwww, t8.yzwx
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r6.w, r6.w, r7.x
mul r12.xyz, cb1[126].xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r0.w, l(1.000000)
mov r13.xyz, r10.xyzx
mov r7.x, l(0)
loop
  uge r11.w, r7.x, r6.w
  breakc_nz r11.w
  iadd r11.w, r7.x, r10.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r11.wwww, t6.yzwx
    imul null, r13.w, r12.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r13.wwww, t4.xyzw
    imad r15.xyzw, r12.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r15.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r15.zzzz, t4.xywz
    ld_indexable(buffer)(float,float,float,float) r18.xyz, r15.wwww, t4.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t9.yzwx
    imul null, r12.w, r11.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r12.wwww, t7.xyzw
    imad r19.xyzw, r11.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r19.xxxx, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r19.yyyy, t7.wxyz
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r19.zzzz, t7.xywz
    ld_indexable(buffer)(float,float,float,float) r18.xyz, r19.wwww, t7.xyzw
  endif
  eq r11.w, r16.w, l(0.000000)
  lt r12.w, l(-2.000000), r15.x
  add r14.xyz, -r5.xyzx, r14.xyzx
  dp3 r13.w, r14.xyzx, r14.xyzx
  rsq r15.w, r13.w
  mul r19.xyz, r14.xyzx, r15.wwww
  mul r15.w, r14.w, r14.w
  mul r13.w, r13.w, r15.w
  mad r13.w, -r13.w, r13.w, l(1.000000)
  max r13.w, r13.w, l(0.000000)
  mul r13.w, r13.w, r13.w
  mul r20.xyz, r14.wwww, r14.xyzx
  dp3 r14.w, r20.xyzx, r20.xyzx
  min r14.w, r14.w, l(1.000000)
  add r14.w, -r14.w, l(1.000000)
  log r14.w, r14.w
  mul r14.w, r14.w, r16.w
  exp r14.w, r14.w
  movc r13.w, r11.w, r13.w, r14.w
  dp3 r14.w, r19.xyzx, r17.yzwy
  add r14.w, -r15.x, r14.w
  mul_sat r14.w, r15.y, r14.w
  mul r14.w, r14.w, r14.w
  mul r14.w, r13.w, r14.w
  movc r12.w, r12.w, r14.w, r13.w
  lt r13.w, l(0.000000), r12.w
  if_nz r13.w
    and r13.w, r17.x, l(255)
    movc r13.w, r13.w, l(1), l(0)
    if_nz r13.w
      and r19.xyzw, r17.xxxx, l(1, 2, 4, 8)
      movc r19.xyzw, r19.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r13.w, r17.x, l(4)
      ubfe r14.w, l(1), l(4), r17.x
      movc r20.x, r14.w, l(1.000000), l(0)
      and r15.xyw, r13.wwww, l(2, 4, 0, 8)
      movc r20.yzw, r15.xxyw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r13.w, r20.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r14.w, r19.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r15.x, r0.zwww, r19.xyzw
      add r15.x, r15.x, l(-1.000000)
      mad r14.w, r14.w, r15.x, l(1.000000)
      mul r15.xy, r13.wwww, r14.wwww
    else
      mov r15.xy, l(1.000000,1.000000,0,0)
    endif
    add r13.w, r15.y, r15.x
    lt r13.w, l(0.000000), r13.w
    if_nz r13.w
      f16tof32 r13.w, r15.z
      mul r14.w, r13.w, l(0.500000)
      mad r15.yzw, -r14.wwww, r18.xxyz, r14.xxyz
      mad r14.xyz, r14.wwww, r18.xyzx, r14.xyzx
      lt r13.w, l(0.000000), r13.w
      if_nz r13.w
        dp3 r13.w, r15.yzwy, r15.yzwy
        dp3 r14.w, r14.xyzx, r14.xyzx
        rsq r13.w, r13.w
        rsq r14.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.x, r15.yzwy, r14.xyzx
        mul r14.x, r13.w, r14.x
        mad r14.x, r14.x, l(0.500000), r13.w
        add r14.x, r14.x, l(0.500000)
        div r13.w, r13.w, r14.x
      else
        dp3 r14.x, r15.yzwy, r15.yzwy
        add r14.x, r14.x, l(1.000000)
        rcp r13.w, r14.x
      endif
      movc r11.w, r11.w, r13.w, l(1.000000)
      mul r14.xyz, r11.wwww, r12.xyzx
      mul r15.yzw, r12.wwww, r16.xxyz
      mul r15.xyz, r15.xxxx, r15.yzwy
      mul r14.xyz, r14.xyzx, r15.xyzx
    else
      mov r14.xyz, l(0,0,0,0)
    endif
  else
    mov r14.xyz, l(0,0,0,0)
  endif
  ushr r11.w, r17.x, l(8)
  and r11.w, r11.w, cb2[16].w
  add r14.xyz, r13.xyzx, r14.xyzx
  movc r13.xyz, r11.wwww, r14.xyzx, r13.xyzx
  iadd r7.x, r7.x, l(1)
endloop
dp3 r0.x, r4.xyzx, r6.xyzx
add r0.z, r0.x, r0.x
mad r6.xyz, r0.zzzz, r6.xyzx, -r4.xyzx
mov_sat r0.x, r0.x
log r0.z, r0.y
mad r0.z, -r0.z, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.z, -r0.z, r0.w
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t10.xyzw, s2, r0.z
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.z, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.z, r0.z, cb0[29].w
mad_sat r0.w, r0.y, cb1[165].x, cb1[165].y
mad r6.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r6.x
max r0.z, r0.z, l(0.000100)
div r0.z, r4.w, r0.z
min r0.z, r0.z, cb1[165].z
add r0.z, r0.z, l(-1.000000)
mad r0.z, r0.w, r0.z, l(1.000000)
mul r4.xyz, r0.zzzz, r4.xyzx
mul r6.xyzw, r11.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mad r6.yzw, r6.yyzw, r4.wwww, -r4.xxyz
mad r4.xyz, r8.xxxx, r6.yzwy, r4.xyzx
mad r10.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r10.x, r10.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r10.x, r10.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r10.zwzz
mov_sat r6.x, r6.x
mul r0.y, r0.y, r6.x
mad r0.xyz, r11.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r11.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r11.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r11.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r13.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzx, t11.xyzw, s0, l(0.000000)
  mul r0.w, r0.w, v4.w
else
  mov r0.w, v4.w
endif
mad r1.xyz, r11.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), cb1[126].xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, cb1[134].zzzz, r1.xyzx, r0.xyzx
max r9.xyz, r7.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.x, l(0.000000), cb1[130].x
if_nz r1.x
  add r1.xyz, r5.xyzx, -cb2[5].xyzx
  add r2.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r1.xyz, r2.xyzx, |r1.xyzx|
  or r1.x, r1.y, r1.x
  or r1.x, r1.z, r1.x
  dp3 r1.y, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.y, r1.y, l(0.002000)
  frc r1.y, r1.y
  lt r1.y, l(0.500000), r1.y
  movc r2.yzw, r1.yyyy, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r2.x, l(1.000000)
  movc r9.xyzw, r1.xxxx, r2.yzwx, r9.xyzw
endif
mad r0.xyz, r8.yzwy, cb1[126].xyzx, r0.xyzx
add r0.xyz, r9.xyzx, r0.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
mul o0.xyz, r9.wwww, r0.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
