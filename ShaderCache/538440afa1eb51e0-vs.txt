//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 30 06:49:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float
// ATTRIBUTE                2   xyzw        2     NONE   float
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float
// SV_VertexID              0   x           6   VERTID    uint   x
// ATTRIBUTE               13   xyzw        7     NONE   float
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// SV_ClipDistance          1   x           1  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[166], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[164], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_input v0.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input_sgv v6.x, vertex_id
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, clip_distance
dcl_temps 15
if_nz cb0[16].w
  mov r0.x, cb1[165].w
else
  and r0.x, v8.x, l(1)
endif
if_z r0.x
  mov r1.x, cb1[0].x
  mov r1.y, cb1[1].x
  mov r1.z, cb1[2].x
  mov r1.w, cb1[3].x
  mov r2.x, cb1[0].y
  mov r2.y, cb1[1].y
  mov r2.z, cb1[2].y
  mov r2.w, cb1[3].y
  mov r3.x, cb1[0].z
  mov r3.y, cb1[1].z
  mov r3.z, cb1[2].z
  mov r3.w, cb1[3].z
  mov r4.x, cb1[0].w
  mov r4.y, cb1[1].w
  mov r4.z, cb1[2].w
  mov r4.w, cb1[3].w
  mov r0.yzw, cb1[62].xxyz
  mov r5.x, cb1[163].y
else
  mov r1.x, cb3[0].x
  mov r1.y, cb3[1].x
  mov r1.z, cb3[2].x
  mov r1.w, cb3[3].x
  mov r2.x, cb3[0].y
  mov r2.y, cb3[1].y
  mov r2.z, cb3[2].y
  mov r2.w, cb3[3].y
  mov r3.x, cb3[0].z
  mov r3.y, cb3[1].z
  mov r3.z, cb3[2].z
  mov r3.w, cb3[3].z
  mov r4.x, cb3[0].w
  mov r4.y, cb3[1].w
  mov r4.z, cb3[2].w
  mov r4.w, cb3[3].w
  mov r0.yzw, cb3[62].xxyz
  mov r5.x, cb3[163].y
endif
iadd r5.y, v6.x, cb0[16].z
iadd r5.y, r5.y, -cb0[16].y
bfi r5.z, l(30), l(2), r5.y, l(3)
ld_indexable(buffer)(float,float,float,float) r5.zw, r5.zzzz, t1.zwxy
ushr r6.xy, r5.zwzz, l(16, 16, 0, 0)
ult r6.y, r6.y, l(0x0000ffff)
if_nz r6.y
  ishl r5.y, r5.y, l(2)
  ld_indexable(buffer)(float,float,float,float) r7.xyzw, r5.yyyy, t1.xyzw
  and r8.xyzw, r5.zzww, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
  imul null, r5.yz, r8.yywy, l(0, 3, 3, 0)
  ld_indexable(buffer)(float,float,float,float) r5.yw, r5.yyyy, t0.zxwy
  imad r8.xyzw, r8.xyzw, l(3, 3, 3, 3), l(1, 2, 1, 2)
  ld_indexable(buffer)(float,float,float,float) r6.zw, r8.xxxx, t0.zwxy
  mul r9.xyz, r5.wwww, cb0[9].xyzx
  mad r9.xyz, r5.yyyy, cb0[8].xyzx, r9.xyzx
  mad r9.xyz, r6.zzzz, cb0[10].xyzx, r9.xyzx
  add r9.xyz, r9.xyzx, cb0[11].xyzx
  ld_indexable(buffer)(float,float,float,float) r5.yw, r8.yyyy, t0.zxwy
  mul r10.xyz, r5.yyyy, cb0[9].xyzx
  mad r10.xyz, r6.wwww, cb0[8].xyzx, r10.xyzx
  mad r10.xyz, r5.wwww, cb0[10].xyzx, r10.xyzx
  mad r9.xyz, r10.xyzx, r7.wwww, r9.xyzx
  imul null, r5.y, r6.x, l(3)
  ld_indexable(buffer)(float,float,float,float) r5.yw, r5.yyyy, t0.zxwy
  imad r6.xz, r6.xxxx, l(3, 0, 3, 0), l(1, 0, 2, 0)
  ld_indexable(buffer)(float,float,float,float) r6.xw, r6.xxxx, t0.xzwy
  mul r10.xyz, r5.wwww, cb0[9].xyzx
  mad r10.xyz, r5.yyyy, cb0[8].xyzx, r10.xyzx
  mad r10.xyz, r6.xxxx, cb0[10].xyzx, r10.xyzx
  add r10.xyz, r10.xyzx, cb0[11].xyzx
  ld_indexable(buffer)(float,float,float,float) r5.yw, r6.zzzz, t0.zxwy
  mul r11.xyz, r5.yyyy, cb0[9].xyzx
  mad r6.xzw, r6.wwww, cb0[8].xxyz, r11.xxyz
  mad r6.xzw, r5.wwww, cb0[10].xxyz, r6.xxzw
  mad r6.xzw, r6.xxzw, r7.wwww, r10.xxyz
  mul r6.xzw, r6.xxzw, r7.yyyy
  mad r6.xzw, r7.xxxx, r9.xxyz, r6.xxzw
  ld_indexable(buffer)(float,float,float,float) r5.yz, r5.zzzz, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r7.xy, r8.zzzz, t0.xyzw
  mul r8.xyz, r5.zzzz, cb0[9].xyzx
  mad r5.yzw, r5.yyyy, cb0[8].xxyz, r8.xxyz
  mad r5.yzw, r7.xxxx, cb0[10].xxyz, r5.yyzw
  add r5.yzw, r5.yyzw, cb0[11].xxyz
  ld_indexable(buffer)(float,float,float,float) r8.xy, r8.wwww, t0.xyzw
  mul r8.xzw, r8.xxxx, cb0[9].xxyz
  mad r8.xzw, r7.yyyy, cb0[8].xxyz, r8.xxzw
  mad r8.xyz, r8.yyyy, cb0[10].xyzx, r8.xzwx
  mad r5.yzw, r8.xxyz, r7.wwww, r5.yyzw
  mad r5.yzw, r7.zzzz, r5.yyzw, r6.xxzw
else
  mov r5.yzw, v0.xxyz
endif
imul null, r7.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t2.xyzw
imad r9.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r9.xxxx, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r9.yyyy, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r7.yyyy, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r9.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r9.wwww, t2.xyzw
mul r12.xyzw, r12.xyzw, v4.yyyy
mul r13.xyzw, r13.xyzw, v4.yyyy
mul r9.xyzw, r9.xyzw, v4.yyyy
mad r8.xyzw, v4.xxxx, r8.xyzw, r12.xyzw
mad r10.xyzw, v4.xxxx, r10.xyzw, r13.xyzw
mad r9.xyzw, v4.xxxx, r11.xyzw, r9.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r7.zzzz, t2.xyzw
imad r12.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.xxxx, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r14.xyzw, r12.yyyy, t2.xyzw
mad r8.xyzw, v4.zzzz, r11.xyzw, r8.xyzw
mad r10.xyzw, v4.zzzz, r13.xyzw, r10.xyzw
mad r9.xyzw, v4.zzzz, r14.xyzw, r9.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r11.xyzw, r12.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r12.wwww, t2.xyzw
mad r7.xyzw, v4.wwww, r7.xyzw, r8.xyzw
mad r8.xyzw, v4.wwww, r11.xyzw, r10.xyzw
mad r9.xyzw, v4.wwww, r12.xyzw, r9.xyzw
mov r10.xyz, v0.xyzx
mov r10.w, l(1.000000)
dp4 r6.x, r7.xyzw, r10.xyzw
dp4 r6.z, r8.xyzw, r10.xyzw
dp4 r6.w, r9.xyzw, r10.xyzw
mul r7.xyz, r6.zzzz, cb2[1].xyzx
mad r7.xyz, r6.xxxx, cb2[0].xyzx, r7.xyzx
mad r6.xzw, r6.wwww, cb2[2].xxyz, r7.xxyz
add r7.xyz, r6.xzwx, cb2[3].xyzx
add r5.yzw, r5.yyzw, -r7.xxyz
mad r5.yzw, cb0[16].xxxx, r5.yyzw, r7.xxyz
add r5.yzw, r0.yyzw, r5.yyzw
add r0.yzw, r0.yyzw, cb2[3].xxyz
add r0.yzw, r0.yyzw, r6.xxzw
movc r6.xyz, r6.yyyy, r5.yzwy, r0.yzwy
mov r6.w, l(1.000000)
dp4 r1.x, r6.xyzw, r1.xyzw
dp4 r1.y, r6.xyzw, r2.xyzw
dp4 r1.z, r6.xyzw, r3.xyzw
dp4 r1.w, r6.xyzw, r4.xyzw
or r0.y, cb0[0].x, cb0[16].w
if_nz r0.y
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o1.x, r1.xwxx, r2.xyxx
  mul r0.y, r5.x, l(0.500000)
  mul r0.x, r1.w, icb[r0.x + 0].x
  mad r0.z, -r5.x, l(0.500000), l(1.000000)
  mul r0.x, r0.z, r0.x
  mad r1.x, r1.x, r0.y, r0.x
else
  mov o1.x, l(0)
endif
mov o0.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used
