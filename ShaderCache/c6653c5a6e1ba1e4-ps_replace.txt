// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:46:54 2019
Texture2D<float4> t11 : register(t11);

Texture3D<float4> t10 : register(t10);

Buffer<uint4> t9 : register(t9);

Buffer<uint4> t8 : register(t8);

Buffer<float4> t7 : register(t7);

Buffer<uint4> t6 : register(t6);

Buffer<uint4> t5 : register(t5);

Buffer<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t1 : register(t1);

Texture3D<uint4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb5 : register(b5)
{
  float4 cb5[3];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[6];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[92];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[132];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[17];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[182];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : PARTICLE_SUBUVS0,
  float4 v1 : TEXCOORD4,
  float4 v2 : TEXCOORD5,
  float3 v3 : PARTICLE_LIGHTING_OFFSET0,
  float4 v4 : TANGENTX0,
  float4 v5 : TANGENTZ0,
  nointerpolation uint v6 : PACKED_EYE_INDEX0,
  float4 v7 : TEXCOORD7,
  float4 v8 : SV_Position0,
  uint v9 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v6.x & 1;
  if (r0.x == 0) {
    r1.x = cb0[4].x;
    r1.y = cb0[5].x;
    r1.z = cb0[6].x;
    r1.w = cb0[7].x;
    r2.x = cb0[4].y;
    r2.y = cb0[5].y;
    r2.z = cb0[6].y;
    r2.w = cb0[7].y;
    r3.x = cb0[4].w;
    r3.y = cb0[5].w;
    r3.z = cb0[6].w;
    r3.w = cb0[7].w;
    r4.x = cb0[40].x;
    r4.y = cb0[41].x;
    r4.z = cb0[42].x;
    r4.w = cb0[43].x;
    r5.x = cb0[40].y;
    r5.y = cb0[41].y;
    r5.z = cb0[42].y;
    r5.w = cb0[43].y;
    r6.x = cb0[40].z;
    r6.y = cb0[41].z;
    r6.z = cb0[42].z;
    r6.w = cb0[43].z;
    r7.x = cb0[40].w;
    r7.y = cb0[41].w;
    r7.z = cb0[42].w;
    r7.w = cb0[43].w;
    r0.yzw = cb0[62].xyz;
    r8.xyzw = cb0[128].xyzw;
    r9.x = cb0[131].w;
    r9.yz = cb0[121].xy;
  } else {
    r1.x = cb2[4].x;
    r1.y = cb2[5].x;
    r1.z = cb2[6].x;
    r1.w = cb2[7].x;
    r2.x = cb2[4].y;
    r2.y = cb2[5].y;
    r2.z = cb2[6].y;
    r2.w = cb2[7].y;
    r3.x = cb2[4].w;
    r3.y = cb2[5].w;
    r3.z = cb2[6].w;
    r3.w = cb2[7].w;
    r4.x = cb2[40].x;
    r4.y = cb2[41].x;
    r4.z = cb2[42].x;
    r4.w = cb2[43].x;
    r5.x = cb2[40].y;
    r5.y = cb2[41].y;
    r5.z = cb2[42].y;
    r5.w = cb2[43].y;
    r6.x = cb2[40].z;
    r6.y = cb2[41].z;
    r6.z = cb2[42].z;
    r6.w = cb2[43].z;
    r7.x = cb2[40].w;
    r7.y = cb2[41].w;
    r7.z = cb2[42].w;
    r7.w = cb2[43].w;
    r0.yzw = cb2[62].xyz;
    r8.xyzw = cb2[128].xyzw;
    r9.x = cb2[131].w;
    r9.yz = cb2[121].xy;
  }
  r10.xyz = v5.zxy * v4.yzx;
  r10.xyz = v5.yzx * v4.zxy + -r10.xyz;
  r10.xyz = v5.www * r10.xyz;
  r11.xyz = v8.xyz;
  r11.w = 1;
  r4.x = dot(r11.xyzw, r4.xyzw);
  r4.y = dot(r11.xyzw, r5.xyzw);
  r4.z = dot(r11.xyzw, r6.xyzw);
  r4.w = dot(r11.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r4.xyz = r4.xyz + -r0.yzw;
  r0.y = cb1[4].w * r9.x;
  r0.z = v9.x ? 1 : -1;
  r0.y = r0.y * r0.z;
  r5.xyz = r8.www * float3(0,0,1) + r8.xyz;
  r0.z = dot(r5.xyz, r5.xyz);
  r0.z = rsqrt(r0.z);
  r5.xyz = r5.xyz * r0.zzz;
  r6.xyz = r5.yyy * r10.xyz;
  r5.xyw = r5.xxx * v4.xyz + r6.xyz;
  r5.xyz = r5.zzz * v5.xyz + r5.xyw;
  r0.z = dot(r5.xyz, r5.xyz);
  r0.z = rsqrt(r0.z);
  r5.xyz = r5.xyz * r0.zzz;
  r0.yzw = r5.xyz * r0.yyy;
  r5.x = t11.Sample(s3_s, v0.xy).x;
  r5.y = t11.Sample(s3_s, v0.zw).x;
  r5.y = r5.y + -r5.x;
  r5.x = v1.x * r5.y + r5.x;
  r5.w = saturate(v2.w * r5.x);
  r6.xyz = saturate(v2.xyz);
  r6.w = cmp(0 < cb1[12].z);
  if (r6.w != 0) {
    r7.xyz = r4.xyz * cb0[178].xyz + cb0[179].xyz;
    r7.xyz = max(float3(0,0,0), r7.xyz);
    r7.xyz = min(float3(0.99000001,0.99000001,0.99000001), r7.xyz);
    r7.xyz = cb0[180].xyz * r7.xyz;
    r8.xyz = (int3)r7.xyz;
    r8.w = 0;
    r8.xyzw = t0.Load(r8.xyzw).xyzw;
    r8.xyzw = (uint4)r8.xyzw;
    r6.w = 1 + cb0[180].w;
    r7.xyz = r7.xyz / r8.www;
    r7.xyz = frac(r7.xyz);
    r7.xyz = cb0[180].www * r7.xyz;
    r7.xyz = r8.xyz * r6.www + r7.xyz;
    r7.xyz = float3(0.5,0.5,0.5) + r7.xyz;
    r7.xyz = cb0[181].xyz * r7.xyz;
    r7.x = t1.SampleLevel(s0_s, r7.xyz, 0).x;
  } else {
    r6.w = cmp(0 < cb1[10].w);
    r7.x = r6.w ? cb4[5].x : 1;
  }
  r6.xyz = r6.xyz * cb0[126].www + cb0[126].xyz;
  r8.xyz = cb0[127].www * float3(0.0799999982,0.0799999982,0.0799999982) + cb0[127].xyz;
  r6.xyz = r8.xyz * float3(0.449999988,0.449999988,0.449999988) + r6.xyz;
  r8.xy = v8.xy + -r9.yz;
  r8.xy = (uint2)r8.xy;
  if (r0.x == 0) {
    r6.w = cb3[3].x;
    r8.zw = cb3[3].yz;
    r9.xyz = cb3[1].zxy;
    r9.w = cb3[2].x;
  } else {
    r6.w = cb3[43].x;
    r8.zw = cb3[43].yz;
    r9.xyz = cb3[41].zxy;
    r9.w = cb3[42].x;
  }
  r6.w = v8.w * r6.w + r8.z;
  r6.w = log2(r6.w);
  r6.w = r6.w * r8.w;
  r6.w = max(0, r6.w);
  r6.w = (uint)r6.w;
  r8.z = (int)r9.x + -1;
  r6.w = min((uint)r8.z, (uint)r6.w);
  r8.xy = (uint2)r8.xy >> (uint2)r9.ww;
  r6.w = mad((int)r6.w, (int)r9.z, (int)r8.y);
  r6.w = mad((int)r6.w, (int)r9.y, (int)r8.x);
  if (r0.x == 0) {
    r8.x = cb3[0].z;
    r8.yzw = cb3[6].xzw;
    r9.xyz = cb3[5].xyz;
    r10.xyz = cb3[4].xyz;
  } else {
    r8.x = cb3[40].z;
    r8.yzw = cb3[46].xzw;
    r9.xyz = cb3[45].xyz;
    r10.xyz = cb3[44].xyz;
  }
  if (r8.x != 0) {
    r11.xyzw = (int4)r8.yyyy & int4(255,2,4,8);
    r11.xyzw = r11.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb3[30].y != 0) {
      r12.xyzw = cb3[33].xyzw * r4.yyyy;
      r12.xyzw = r4.xxxx * cb3[32].xyzw + r12.xyzw;
      r12.xyzw = r4.zzzz * cb3[34].xyzw + r12.xyzw;
      r12.xyzw = cb3[35].xyzw + r12.xyzw;
      r12.xy = r12.xy / r12.ww;
      r13.xy = cmp(r12.xy >= float2(0,0));
      r13.zw = cmp(float2(1,1) >= r12.xy);
      r13.xy = r13.zw ? r13.xy : 0;
      r8.x = r13.y ? r13.x : 0;
      if (r8.x != 0) {
        r8.x = t3.SampleLevel(s2_s, r12.xy, 0).x;
        r9.w = cmp(r12.z < r8.x);
        r8.x = cmp(0.99000001 < r8.x);
        r8.x = (int)r8.x | (int)r9.w;
        r7.x = r8.x ? 1.000000 : 0;
      } else {
        r7.x = 1;
      }
    } else {
      r7.x = 1;
    }
    if (cb3[7].x != 0) {
      r8.x = cb3[7].x;
      r9.w = 0;
      while (true) {
        r10.w = cmp((uint)r9.w >= asuint(cb3[7].x));
        if (r10.w != 0) break;
        r10.w = dot(cb3[8].xyzw, icb[r9.w+0].xyzw);
        r10.w = cmp(v8.w < r10.w);
        if (r10.w != 0) {
          r8.x = r9.w;
          break;
        }
        r9.w = (int)r9.w + 1;
      }
      r9.w = cmp((uint)r8.x < asuint(cb3[7].x));
      if (r9.w != 0) {
        r9.w = (uint)r8.x << 2;
        r12.xyzw = cb3[r9.w+10].xyzw * r4.yyyy;
        r12.xyzw = r4.xxxx * cb3[r9.w+9].xyzw + r12.xyzw;
        r12.xyzw = r4.zzzz * cb3[r9.w+11].xyzw + r12.xyzw;
        r12.xyzw = cb3[r9.w+12].xyzw + r12.xyzw;
        r13.xyzw = r12.xyxy / r12.wwww;
        r12.xy = cmp(r13.zw >= cb3[r8.x+25].xy);
        r14.xy = cmp(cb3[r8.x+25].zw >= r13.zw);
        r12.xy = r12.xy ? r14.xy : 0;
        r8.x = r12.y ? r12.x : 0;
        if (r8.x != 0) {
          r13.xyzw = r13.xyzw * cb3[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r12.xy = frac(r13.zw);
          r13.xyzw = floor(r13.xyzw);
          r14.xyzw = float4(0.5,1.5,0.5,0.5) + r13.zwzw;
          r14.xyzw = cb3[29].zwzw * r14.xyzw;
          r15.x = t2.SampleLevel(s1_s, r14.xy, 0).x;
          r13.xyzw = float4(1.5,1.5,1.5,0.5) + r13.xyzw;
          r13.xyzw = cb3[29].zwzw * r13.xyzw;
          r15.y = t2.SampleLevel(s1_s, r13.xy, 0).x;
          r15.z = t2.SampleLevel(s1_s, r13.zw, 0).x;
          r15.w = t2.SampleLevel(s1_s, r14.zw, 0).x;
          r13.xyzw = r15.xyzw + -r12.zzzz;
          r13.xyzw = saturate(r13.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r12.zw = r13.zy + -r13.wx;
          r12.xz = r12.xx * r12.zw + r13.wx;
          r8.x = r12.z + -r12.x;
          r8.x = r12.y * r8.x + r12.x;
        } else {
          r8.x = 1;
        }
      } else {
        r8.x = 1;
      }
    } else {
      r8.x = 1;
    }
    if (r11.x != 0) {
      r11.x = 1;
      r9.w = dot(float4(1,1,1,1), r11.xyzw);
      r7.yzw = r11.yzw;
      r7.z = dot(r7.xyzw, float4(1,1,1,1));
      r7.z = -1 + r7.z;
      r7.z = r9.w * r7.z + 1;
      r7.w = saturate(v8.w * r8.z + r8.w);
      r7.w = r7.w * r7.w;
      r7.z = r7.z + -r8.x;
      r11.x = r7.w * r7.z + r8.x;
      r11.y = min(1, r11.x);
    } else {
      r11.xy = float2(1,1);
    }
    r7.z = r11.x + r11.y;
    r7.z = cmp(0 < r7.z);
    if (r7.z != 0) {
      r7.z = dot(r10.xyz, r10.xyz);
      r7.z = rsqrt(r7.z);
      r8.xzw = r10.xyz * r7.zzz;
      r7.z = saturate(dot(r0.yzw, r8.xzw));
      r8.xzw = r7.zzz * r6.xyz;
      r8.xzw = float3(0.318309873,0.318309873,0.318309873) * r8.xzw;
      r9.xyz = r11.xxx * r9.xyz;
      r8.xzw = r9.xyz * r8.xzw;
    } else {
      r8.xzw = float3(0,0,0);
    }
    r7.z = (uint)r8.y >> 8;
    r7.z = (int)r7.z & asint(cb1[16].w);
    r8.xyz = r7.zzz ? r8.xzw : float3(0,0,0);
  } else {
    r8.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r7.z = (uint)r6.w << 1;
    r7.z = t5.Load(r7.z).x;
    r7.z = min(asuint(cb3[0].x), (uint)r7.z);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r7.w = (((uint)r6.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r7.w = t5.Load(r7.w).x;
  } else {
    r8.w = (uint)r6.w << 1;
    r8.w = t8.Load(r8.w).x;
    r7.z = min(asuint(cb3[40].x), (uint)r8.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r6.w = (((uint)r6.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r7.w = t8.Load(r6.w).x;
  }
  r6.w = r0.x ? cb3[40].x : cb3[0].x;
  r6.w = min((uint)r7.z, (uint)r6.w);
  r9.xyz = float3(0.318309873,0.318309873,0.318309873) * r6.xyz;
  r7.y = 1;
  r10.xyz = r8.xyz;
  r7.z = 0;
  while (true) {
    r8.w = cmp((uint)r7.z >= (uint)r6.w);
    if (r8.w != 0) break;
    r8.w = (int)r7.z + (int)r7.w;
    if (r0.x == 0) {
      r9.w = t6.Load(r8.w).x;
      r10.w = (int)r9.w * 5;
      r11.xyzw = t4.Load(r10.w).xyzw;
      r12.xyzw = mad((int4)r9.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r13.xyzw = t4.Load(r12.x).xyzw;
      r14.xyzw = t4.Load(r12.y).xyzw;
      r15.xyzw = t4.Load(r12.z).xyzw;
      r12.xyz = t4.Load(r12.w).xyz;
    } else {
      r8.w = t9.Load(r8.w).x;
      r9.w = (int)r8.w * 5;
      r11.xyzw = t7.Load(r9.w).xyzw;
      r16.xyzw = mad((int4)r8.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r13.xyzw = t7.Load(r16.x).xyzw;
      r14.xyzw = t7.Load(r16.y).xyzw;
      r15.xyzw = t7.Load(r16.z).xyzw;
      r12.xyz = t7.Load(r16.w).xyz;
    }
    r8.w = cmp(r13.w == 0.000000);
    r9.w = cmp(-2 < r15.x);
    r11.xyz = r11.xyz + -r4.xyz;
    r10.w = dot(r11.xyz, r11.xyz);
    r12.w = rsqrt(r10.w);
    r16.xyz = r12.www * r11.xyz;
    r12.w = r11.w * r11.w;
    r10.w = r12.w * r10.w;
    r10.w = -r10.w * r10.w + 1;
    r10.w = max(0, r10.w);
    r10.w = r10.w * r10.w;
    r17.xyz = r11.xyz * r11.www;
    r11.w = dot(r17.xyz, r17.xyz);
    r11.w = min(1, r11.w);
    r11.w = 1 + -r11.w;
    r11.w = log2(r11.w);
    r11.w = r13.w * r11.w;
    r11.w = exp2(r11.w);
    r10.w = r8.w ? r10.w : r11.w;
    r11.w = dot(r16.xyz, r14.xyz);
    r11.w = r11.w + -r15.x;
    r11.w = saturate(r11.w * r15.y);
    r11.w = r11.w * r11.w;
    r11.w = r11.w * r10.w;
    r9.w = r9.w ? r11.w : r10.w;
    r10.w = cmp(0 < r9.w);
    if (r10.w != 0) {
      r10.w = (int)r14.w & 255;
      r10.w = r10.w ? 1 : 0;
      if (r10.w != 0) {
        r16.xyzw = (int4)r14.wwww & int4(1,2,4,8);
        r16.xyzw = r16.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r10.w = (uint)r14.w >> 4;
        if (1 == 0) r11.w = 0; else if (1+4 < 32) {         r11.w = (uint)r14.w << (32-(1 + 4)); r11.w = (uint)r11.w >> (32-1);        } else r11.w = (uint)r14.w >> 4;
        r17.x = r11.w ? 1 : 0;
        r14.xyz = (int3)r10.www & int3(2,4,8);
        r17.yzw = r14.xyz ? float3(1,1,1) : float3(0,0,0);
        r10.w = dot(r17.xyzw, float4(1,1,1,1));
        r11.w = dot(r16.xyzw, float4(1,1,1,1));
        r12.w = dot(r7.xyyy, r16.xyzw);
        r12.w = -1 + r12.w;
        r11.w = r11.w * r12.w + 1;
        r14.xy = r11.ww * r10.ww;
      } else {
        r14.xy = float2(1,1);
      }
      r10.w = r14.x + r14.y;
      r10.w = cmp(0 < r10.w);
      if (r10.w != 0) {
        r10.w = f16tof32(r15.w);
        r11.w = 0.5 * r10.w;
        r15.xyw = -r11.www * r12.xyz + r11.xyz;
        r11.xyz = r11.www * r12.xyz + r11.xyz;
        r10.w = cmp(0 < r10.w);
        if (r10.w != 0) {
          r10.w = dot(r15.xyw, r15.xyw);
          r11.w = dot(r11.xyz, r11.xyz);
          r10.w = rsqrt(r10.w);
          r11.w = rsqrt(r11.w);
          r12.x = r11.w * r10.w;
          r12.y = dot(r15.xyw, r11.xyz);
          r12.y = r12.y * r12.x;
          r12.y = r12.y * 0.5 + r12.x;
          r12.y = 0.5 + r12.y;
          r12.y = r12.x / r12.y;
          r12.z = dot(r0.yzw, r15.xyw);
          r11.x = dot(r0.yzw, r11.xyz);
          r11.x = r11.x * r11.w;
          r10.w = r12.z * r10.w + r11.x;
          r12.x = 0.5 * r10.w;
        } else {
          r10.w = dot(r15.xyw, r15.xyw);
          r11.x = 1 + r10.w;
          r12.y = rcp(r11.x);
          r10.w = rsqrt(r10.w);
          r11.xyz = r15.xyw * r10.www;
          r12.x = dot(r0.yzw, r11.xyz);
        }
        r10.w = cmp(0 < r15.z);
        r11.x = r15.z * r15.z;
        r11.x = saturate(r11.x * r12.y);
        r11.x = sqrt(r11.x);
        r11.y = cmp(r12.x < r11.x);
        r11.z = max(r12.x, -r11.x);
        r11.z = r11.x + r11.z;
        r11.z = r11.z * r11.z;
        r11.x = 4 * r11.x;
        r11.x = r11.z / r11.x;
        r11.x = r11.y ? r11.x : r12.x;
        r10.w = saturate(r10.w ? r11.x : r12.x);
        r8.w = r8.w ? r12.y : 1;
        r8.w = r8.w * r10.w;
        r11.xyz = r8.www * r9.xyz;
        r12.xyz = r13.xyz * r9.www;
        r12.xyz = r12.xyz * r14.xxx;
        r11.xyz = r12.xyz * r11.xyz;
      } else {
        r11.xyz = float3(0,0,0);
      }
    } else {
      r11.xyz = float3(0,0,0);
    }
    r8.w = (uint)r14.w >> 8;
    r8.w = (int)r8.w & asint(cb1[16].w);
    r11.xyz = r11.xyz + r10.xyz;
    r10.xyz = r8.www ? r11.xyz : r10.xyz;
    r7.z = (int)r7.z + 1;
  }
  r0.x = cmp(0 < cb3[91].w);
  if (r0.x != 0) {
    r4.w = 1;
    r0.x = dot(r4.xyzw, r1.xyzw);
    r0.y = dot(r4.xyzw, r2.xyzw);
    r0.z = dot(r4.xyzw, r3.xyzw);
    r0.xy = r0.xy / r0.zz;
    r1.xy = r0.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.x = r0.z * cb0[176].x + cb0[176].y;
    r0.x = log2(r0.x);
    r0.x = cb0[176].z * r0.x;
    r1.z = cb0[175].z * r0.x;
    r0.xyzw = t10.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r1.x = v7.w * r0.w;
    r0.xyz = v7.xyz * r0.www + r0.xyz;
  } else {
    r0.xyz = v7.xyz;
    r1.x = v7.w;
  }
  r1.yzw = -r10.xyz + r6.xyz;
  r1.yzw = cb0[134].zzz * r1.yzw + r10.xyz;
  r5.xyz = max(float3(0,0,0), cb5[2].xyz);
  r0.w = cmp(0 < cb0[130].x);
  if (r0.w != 0) {
    r2.xyz = -cb1[5].xyz + r4.xyz;
    r3.xyz = float3(1,1,1) + cb1[11].xyz;
    r2.xyz = cmp(r3.xyz < abs(r2.xyz));
    r0.w = (int)r2.y | (int)r2.x;
    r0.w = (int)r2.z | (int)r0.w;
    r2.x = dot(r4.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.x = 0.00200000009 * r2.x;
    r2.x = frac(r2.x);
    r2.x = cmp(0.5 < r2.x);
    r2.yzw = r2.xxx ? float3(0,1,1) : float3(1,1,0);
    r2.x = 1;
    r5.xyzw = r0.wwww ? r2.yzwx : r5.xyzw;
    o0.w = r5.w;
  } else {
    o0.w = r5.w;
  }
  r1.yzw = r5.xyz + r1.yzw;
  o0.xyz = r1.yzw * r1.xxx + r0.xyz;
  return;
}