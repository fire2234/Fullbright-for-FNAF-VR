//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 19:02:57 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texturecube (float,float,float,float) t13
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v6.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r6.xy, v2.xyxx, cb6[10].xxxx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t11.xyzw, s5, cb1[133].x
mul r4.w, r6.x, cb6[10].y
add r7.xyz, -cb6[2].xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r7.xyz, r4.wwww, r7.xyzx, cb6[2].xyzx
mad r7.xyz, r7.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx
mul r8.yzw, r11.yyzx, r7.yyyy
mad r7.xyw, r7.xxxx, v0.yzyx, r8.yzyw
mad r7.xyz, r7.zzzz, v1.yzxy, r7.xywx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx
dp3 r0.y, r7.zxyz, r4.xyzx
mul r8.yzw, r0.yyyy, r7.zzxy
mad r8.yzw, r8.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r4.xxyz
max r6.z, r0.y, l(0.000000)
add r6.w, -r6.z, l(1.000000)
log r6.w, |r6.w|
mul r6.w, r6.w, cb6[10].z
exp r6.w, r6.w
mad r6.w, r6.w, l(0.960000), l(0.040000)
sample_indexable(texturecube)(float,float,float,float) r9.xyz, r8.yzwy, t13.xyzw, s7
sample_b_indexable(texturecube)(float,float,float,float) r8.yzw, r8.yzwy, t13.wxyz, s7, cb6[10].w
add r8.yzw, -r9.xxyz, r8.yyzw
mad r8.yzw, cb6[11].yyyy, r8.yyzw, r9.xxyz
dp3 r9.x, r8.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
add r9.xyz, -r8.yzwy, r9.xxxx
mad r8.yzw, cb6[11].wwww, r9.xxyz, r8.yyzw
mad r9.xyz, r8.yzwy, cb6[12].xxxx, r6.wwww
mul r9.xyz, r9.xyzx, cb6[12].yyyy
mad r9.xyz, r4.wwww, -r9.xyzx, r9.xyzx
add r9.xyz, r9.xyzx, cb6[3].xyzx
mul r10.zw, v2.xxxy, cb6[12].zzzz
sample_b_indexable(texture2d)(float,float,float,float) r6.w, r10.zwzz, t12.xzwy, s6, cb1[133].x
mul r9.w, r6.w, cb6[12].w
mov_sat r10.z, r9.w
add r10.z, -r10.z, l(1.000000)
mul r8.yzw, r8.yyzw, cb6[6].xxyz
mul r8.yzw, r8.yyzw, cb6[13].yyyy
mad r8.yzw, r10.zzzz, r8.yyzw, cb6[7].xxyz
add r6.x, r6.x, r6.y
mad r12.xyz, r6.xxxx, cb6[9].xyzx, -r8.yzwy
mad_sat r8.yzw, r4.wwww, r12.xxyz, r8.yyzw
mul r6.xy, r10.zzzz, cb6[13].zwzz
mad_sat r6.xy, r4.wwww, -r6.xyxx, r6.xyxx
mad r6.w, -r6.w, cb6[12].w, l(1.000000)
mad_sat r6.w, r4.w, r6.w, r9.w
mul r11.xyz, r11.xyzx, cb6[2].yyyy
mad r11.xyz, cb6[2].xxxx, v0.xyzx, r11.xyzx
mad r11.xyz, cb6[2].zzzz, v1.xyzx, r11.xyzx
dp3 r9.w, r11.xyzx, r4.xyzx
max r9.w, r9.w, l(0.000000)
add r9.w, -r9.w, l(1.000000)
mul r10.z, |r9.w|, |r9.w|
mul r10.z, r10.z, r10.z
mul r9.w, |r9.w|, r10.z
mad r9.w, r9.w, l(0.960000), l(0.040000)
add r10.z, -cb6[14].x, cb6[14].y
mad r9.w, r9.w, r10.z, cb6[14].x
add r10.z, -r9.w, l(1.000000)
mad_sat r11.w, r4.w, r10.z, r9.w
mad r0.z, r6.w, r0.w, r0.z
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, v3.zwzz, t10.xyzw, s4
mad r13.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r12.xyzw, r12.xyzw, cb5[7].xyzw, r13.xyzw
mul r12.xyzw, r12.xyzw, r12.xyzw
mul r12.xyzw, r12.xyzw, cb5[6].xyzw
mul r0.w, r6.y, l(0.080000)
mad r13.xyz, -r6.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r13.xyz, r6.xxxx, r13.xyzx, r0.wwww
mad r6.xyw, -r8.yzyw, r6.xxxx, r8.yzyw
mad r6.xyw, r6.xyxw, cb1[126].wwww, cb1[126].xyxz
mad r13.xyz, r13.xyzx, cb1[127].wwww, cb1[127].xyzx
mul r10.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r14.xy, v3.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r14.xyxx, t9.xyzw, s3
mad r0.w, r14.w, l(0.00392156886), r15.w
add r0.w, r0.w, l(-0.00196078443)
mad r0.w, r0.w, cb5[18].w, cb5[20].w
mul r15.xyz, r15.xyzx, r15.xyzx
mad r15.xyz, r15.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.w, r0.w
add r0.w, r0.w, l(-0.0185813606)
mad r14.xyzw, r14.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r7.w, l(1.000000)
dp4 r4.w, r14.xyzw, r7.xyzw
max r4.w, r4.w, l(0.000000)
mul r0.w, r0.w, r4.w
mul r14.xyz, r15.xyzx, r0.wwww
mul r14.xyz, r14.xyzx, cb1[146].xyzx
dp3 r0.w, r14.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r14.xyz, r6.xywx, r14.xyzx
mad r15.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r15.xyzx
mad r8.yzw, r8.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r15.xxyz
add r8.yzw, r8.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r8.yzw, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
add r10.xy, -r10.xyxx, v6.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r4.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r9.w, cb4[3].z
  mov r10.z, cb4[1].z
  mov r15.xy, cb4[1].xyxx
  mov r10.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r9.w, cb4[43].z
  mov r10.z, cb4[41].z
  mov r15.xy, cb4[41].xyxx
  mov r10.w, cb4[42].x
endif
mad r4.w, v6.w, r4.w, r7.w
log r4.w, r4.w
mul r4.w, r9.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r7.w, r10.z, l(-1)
umin r4.w, r4.w, r7.w
ushr r10.xy, r10.xyxx, r10.wwww
imad r4.w, r4.w, r15.y, r10.y
imad r4.w, r4.w, r15.x, r10.x
if_z r0.x
  mov r7.w, cb4[0].z
  mov r9.w, cb4[6].x
  mov r10.xy, cb4[6].zwzz
  mov r15.xyz, cb4[5].xyzx
  mov r16.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r9.w, cb4[46].x
  mov r10.xy, cb4[46].zwzz
  mov r15.xyz, cb4[45].xyzx
  mov r16.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r17.xyzw, r9.wwww, l(255, 2, 4, 8)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r7.w, cb4[7].x
    mov r10.z, l(0)
    loop
      uge r10.w, r10.z, cb4[7].x
      breakc_nz r10.w
      dp4 r10.w, cb4[8].xyzw, icb[r10.z + 0].xyzw
      lt r10.w, v6.w, r10.w
      if_nz r10.w
        mov r7.w, r10.z
        break
      endif
      iadd r10.z, r10.z, l(1)
    endloop
    ult r10.z, r7.w, cb4[7].x
    if_nz r10.z
      ishl r10.z, r7.w, l(2)
      mul r18.xyzw, r5.yyyy, cb4[r10.z + 10].xyzw
      mad r18.xyzw, r5.xxxx, cb4[r10.z + 9].xyzw, r18.xyzw
      mad r18.xyzw, r5.zzzz, cb4[r10.z + 11].xyzw, r18.xyzw
      add r18.xyzw, r18.xyzw, cb4[r10.z + 12].xyzw
      div r19.xyzw, r18.xyxy, r18.wwww
      ge r10.zw, r19.zzzw, cb4[r7.w + 25].xxxy
      ge r18.xy, cb4[r7.w + 25].zwzz, r19.zwzz
      and r10.zw, r10.zzzw, r18.xxxy
      and r7.w, r10.w, r10.z
      if_nz r7.w
        mad r19.xyzw, r19.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r10.zw, r19.zzzw
        round_ni r19.xyzw, r19.xyzw
        add r20.xyzw, r19.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r20.xyzw, r20.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r21.x, r20.xyxx, t0.xyzw, s1, l(0.000000)
        add r19.xyzw, r19.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r19.xyzw, r19.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r21.y, r19.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r21.z, r19.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r21.w, r20.zwzz, t0.yzwx, s1, l(0.000000)
        add r18.xyzw, -r18.zzzz, r21.xyzw
        mad_sat r18.xyzw, r18.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r18.yz, -r18.wwxw, r18.zzyz
        mad r18.xy, r10.zzzz, r18.yzyy, r18.wxww
        add r7.w, -r18.x, r18.y
        mad r7.w, r10.w, r7.w, r18.x
      else
        mov r7.w, l(1.000000)
      endif
    else
      mov r7.w, l(1.000000)
    endif
  else
    mov r7.w, l(1.000000)
  endif
  if_nz r17.x
    mov r17.x, l(1.000000)
    dp4 r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r17.xyzw
    mov r12.x, l(1.000000)
    dp4 r10.w, r12.xyzw, r17.xyzw
    add r10.w, r10.w, l(-1.000000)
    mad r10.z, r10.z, r10.w, l(1.000000)
    mad_sat r10.x, v6.w, r10.x, r10.y
    mul r10.x, r10.x, r10.x
    add r10.y, -r7.w, r10.z
    mad r10.x, r10.x, r10.y, r7.w
    min r10.y, r10.x, l(1.000000)
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r10.y, r10.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r16.xyzx, r16.xyzx
    rsq r7.w, r7.w
    mul r10.yzw, r7.wwww, r16.xxyz
    dp3 r7.w, r7.zxyz, r10.yzwy
    mov_sat r13.w, r7.w
    max r14.w, r0.z, l(0.020000)
    dp3 r10.y, r4.xyzx, r10.yzwy
    mad r10.z, r10.y, l(2.000000), l(2.000000)
    rsq r10.z, r10.z
    add r7.w, r0.y, r7.w
    mul_sat r7.w, r10.z, r7.w
    mad_sat r10.y, r10.z, r10.y, r10.z
    add r10.z, |r0.y|, l(0.000010)
    min r10.z, r10.z, l(1.000000)
    mul r16.xyz, r6.xywx, r13.wwww
    mul r10.w, r14.w, r14.w
    mul r15.w, r10.w, r10.w
    mad r16.w, r7.w, r15.w, -r7.w
    mad r7.w, r16.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r15.w, r7.w
    mad r14.w, -r14.w, r14.w, l(1.000000)
    mad r15.w, r10.z, r14.w, r10.w
    mad r10.w, r13.w, r14.w, r10.w
    mul r10.z, r10.w, r10.z
    mad r10.z, r13.w, r15.w, r10.z
    rcp r10.z, r10.z
    mul r7.w, r7.w, r10.z
    add r10.y, -r10.y, l(1.000000)
    mul r10.z, r10.y, r10.y
    mul r10.z, r10.z, r10.z
    mul r10.w, r10.y, r10.z
    mul_sat r14.w, r13.y, l(50.000000)
    mad r10.y, -r10.z, r10.y, l(1.000000)
    mul r17.xyz, r13.xyzx, r10.yyyy
    mad r10.yzw, r14.wwww, r10.wwww, r17.xxyz
    mul r7.w, r7.w, l(0.500000)
    mul r10.yzw, r10.yyzw, r7.wwww
    mul r10.yzw, r10.yyzw, r13.wwww
    mad r10.yzw, r16.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), r10.yyzw
    mul r15.xyz, r10.xxxx, r15.xyzx
    mul r10.xyz, r10.yzwy, r15.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r7.w, r9.w, l(8)
  and r7.w, r7.w, cb2[16].w
  movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)
  mov r12.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t2.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r9.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t2.yzwx
else
  ishl r10.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t5.yzwx
  umin r7.w, r10.w, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r4.wwww, t5.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r7.w
dp3 r7.w, -r4.yzxy, r7.xyzx
add r7.w, r7.w, r7.w
mad r15.xyz, r7.zxyz, -r7.wwww, -r4.xyzx
max r7.w, r0.z, l(0.020000)
mul r10.w, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
add r13.w, r0.y, r0.y
mad r14.w, r13.w, r0.y, l(-1.000000)
add r15.w, |r0.y|, l(0.000010)
min r15.w, r15.w, l(1.000000)
mul r16.xyz, r6.xywx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r16.w, r10.w, r10.w
mul r17.xyzw, r13.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r19.xyz, r10.xyzx
mov r18.z, l(0)
loop
  uge r18.w, r18.z, r4.w
  breakc_nz r18.w
  iadd r18.w, r9.w, r18.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r19.w, r18.wwww, t3.yzwx
    imul null, r20.x, r19.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.xxxx, t1.xyzw
    imad r21.xyzw, r19.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t1.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.wwww, t6.yzwx
    imul null, r19.w, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.wwww, t4.xyzw
    imad r25.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t4.wxyz
  endif
  eq r18.w, r22.w, l(0.000000)
  lt r19.w, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r25.x, r20.xyzx, r20.xyzx
  rsq r25.y, r25.x
  mul r25.yzw, r20.xxyz, r25.yyyy
  mul r26.x, r20.w, r20.w
  mul r25.x, r25.x, r26.x
  mad r25.x, -r25.x, r25.x, l(1.000000)
  max r25.x, r25.x, l(0.000000)
  mul r25.x, r25.x, r25.x
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r22.w
  exp r20.w, r20.w
  movc r20.w, r18.w, r25.x, r20.w
  dp3 r22.w, r25.yzwy, r23.yzwy
  add r22.w, -r24.x, r22.w
  mul_sat r22.w, r24.y, r22.w
  mul r22.w, r22.w, r22.w
  mul r22.w, r20.w, r22.w
  movc r19.w, r19.w, r22.w, r20.w
  lt r20.w, l(0.000000), r19.w
  if_nz r20.w
    and r20.w, r23.x, l(255)
    movc r20.w, r20.w, l(1), l(0)
    if_nz r20.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r20.w, r23.x, l(4)
      ubfe r22.w, l(1), l(4), r23.x
      movc r26.x, r22.w, l(1.000000), l(0)
      and r23.yzw, r20.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r20.w, r26.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r22.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r23.y, r12.xyzw, r25.xyzw
      add r23.y, r23.y, l(-1.000000)
      mad r22.w, r22.w, r23.y, l(1.000000)
      mul r23.yz, r20.wwww, r22.wwww
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r20.w, r23.z, r23.y
    lt r20.w, l(0.000000), r20.w
    if_nz r20.w
      f16tof32 r20.w, r24.w
      mul r22.w, r20.w, l(0.500000)
      mad r24.xyw, -r22.wwww, r21.yzyw, r20.xyxz
      mad r20.xyz, r22.wwww, r21.yzwy, r20.xyzx
      lt r21.y, l(0.000000), r20.w
      if_nz r21.y
        dp3 r21.z, r24.xywx, r24.xywx
        dp3 r21.w, r20.xyzx, r20.xyzx
        rsq r21.z, r21.z
        rsq r21.w, r21.w
        mul r22.w, r21.w, r21.z
        dp3 r23.z, r24.xywx, r20.xyzx
        mul r23.z, r22.w, r23.z
        mad r23.w, r23.z, l(0.500000), r22.w
        add r23.w, r23.w, l(0.500000)
        div r25.y, r22.w, r23.w
        dp3 r22.w, r7.zxyz, r24.xywx
        dp3 r23.w, r7.zxyz, r20.xyzx
        mul r21.w, r21.w, r23.w
        mad r21.z, r22.w, r21.z, r21.w
        mul r25.x, r21.z, l(0.500000)
      else
        dp3 r21.z, r24.xywx, r24.xywx
        add r21.w, r21.z, l(1.000000)
        rcp r25.y, r21.w
        rsq r21.z, r21.z
        mul r26.xyz, r21.zzzz, r24.xywx
        dp3 r25.x, r7.zxyz, r26.xyzx
        mov r23.z, l(1.000000)
      endif
      lt r21.z, l(0.000000), r24.z
      mul r21.w, r24.z, r24.z
      mul_sat r21.w, r25.y, r21.w
      sqrt r21.w, r21.w
      lt r22.w, r25.x, r21.w
      max r23.w, -r21.w, r25.x
      add r23.w, r21.w, r23.w
      mul r23.w, r23.w, r23.w
      mul r21.w, r21.w, l(4.000000)
      div r21.w, r23.w, r21.w
      movc r21.w, r22.w, r21.w, r25.x
      movc_sat r21.z, r21.z, r21.w, r25.x
      movc r18.w, r18.w, r25.y, l(1.000000)
      add r20.xyz, -r24.xywx, r20.xyzx
      dp3 r21.w, r15.xyzx, r20.xyzx
      mad r25.xyz, r21.wwww, r15.xyzx, -r20.xyzx
      dp3 r22.w, r24.xywx, r25.xyzx
      mul r21.w, r21.w, r21.w
      mad r20.w, r20.w, r20.w, -r21.w
      div_sat r20.w, r22.w, r20.w
      mad r20.xyz, r20.wwww, r20.xyzx, r24.xywx
      movc r20.xyz, r21.yyyy, r20.xyzx, r24.xywx
      dp3 r20.w, r20.xyzx, r20.xyzx
      rsq r20.w, r20.w
      mul r20.xyz, r20.wwww, r20.xyzx
      mul r21.y, r20.w, r24.z
      mul_sat r21.y, r7.w, r21.y
      mul_sat r20.w, r20.w, r21.x
      dp3 r21.x, r7.zxyz, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r0.y, r21.x
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.w, l(0.000000), r21.y
      if_nz r21.w
        mad r22.w, -r21.y, r21.y, l(1.000000)
        sqrt r22.w, r22.w
        dp2 r23.w, r0.yyyy, r21.xxxx
        add r24.x, -r20.x, r23.w
        ge r24.y, r24.x, r22.w
        if_nz r24.y
          mov r20.z, l(1.000000)
          mov r20.y, |r0.y|
        else
          mad r24.y, -r24.x, r24.x, l(1.000000)
          rsq r24.y, r24.y
          mul r24.y, r21.y, r24.y
          mad r24.z, -r24.x, r21.x, r0.y
          mad r24.x, -r24.x, r20.x, r14.w
          mul r24.xw, r24.xxxz, r24.yyyy
          mul r25.x, r21.x, r21.x
          mad r25.x, -r0.y, r0.y, -r25.x
          add r25.x, r25.x, l(1.000000)
          mad r25.x, -r20.x, r20.x, r25.x
          mad_sat r23.w, r23.w, r20.x, r25.x
          sqrt r23.w, r23.w
          mul r23.w, r23.w, r24.y
          mul r25.x, r0.y, r23.w
          add r25.y, r25.x, r25.x
          mad r25.z, r21.x, r22.w, r0.y
          mad r24.y, r24.y, r24.z, r25.z
          mad r24.z, r20.x, r22.w, r24.x
          add r24.z, r24.z, l(1.000000)
          mul r25.w, r23.w, r24.z
          mul r26.x, r24.z, r24.y
          mul r26.y, r24.y, r25.y
          mul r25.x, r25.x, r24.y
          mul r25.x, r25.x, l(0.500000)
          mad r25.x, r25.w, l(-0.500000), r25.x
          mul r25.x, r25.x, r26.x
          mad r26.z, -r25.w, l(2.000000), r26.y
          mul r26.y, r26.z, r26.y
          mad r25.w, r25.w, r25.w, r26.y
          mul r26.y, r24.z, r24.z
          mad r24.z, r20.x, r22.w, r24.z
          mad r24.z, r24.z, l(-0.500000), l(-0.500000)
          mul r24.z, r24.z, r26.x
          mad r24.z, r25.z, r26.y, r24.z
          mad r24.y, r24.y, r24.z, r25.w
          add r24.z, r25.x, r25.x
          mul r25.z, r25.x, r25.x
          mad r25.z, r24.y, r24.y, r25.z
          div r24.z, r24.z, r25.z
          mul r24.y, r24.y, r24.z
          mad r24.z, -r24.z, r25.x, l(1.000000)
          mul r23.w, r23.w, r24.y
          mad r23.w, r24.z, r24.w, r23.w
          mul r24.y, r25.y, r24.y
          mad r24.x, r24.z, r24.x, r24.y
          mad r21.x, r21.x, r22.w, r23.w
          mad r20.x, r20.x, r22.w, r24.x
          mad r22.w, r20.x, l(2.000000), l(2.000000)
          rsq r22.w, r22.w
          add r21.x, r0.y, r21.x
          mul_sat r20.z, r22.w, r21.x
          mad_sat r20.y, r22.w, r20.x, r22.w
        endif
      endif
      mul r18.w, r21.z, r18.w
      lt r20.x, l(0.000000), r20.w
      mul r20.w, r20.w, r20.w
      mad r21.x, r20.y, l(3.600000), l(0.400000)
      div r20.w, r20.w, r21.x
      mad r20.w, r10.w, r10.w, r20.w
      min r20.w, r20.w, l(1.000000)
      movc r18.x, r20.x, r20.w, r16.w
      mul r20.x, r21.y, l(0.250000)
      ishr r20.w, r18.x, l(1)
      iadd r20.w, r20.w, l(0x1fbd1df5)
      mad r20.w, r20.w, l(3.000000), r21.y
      mul r20.x, r20.w, r20.x
      add r20.w, r20.y, l(0.001000)
      div r20.x, r20.x, r20.w
      add r21.x, r18.x, r20.x
      div r21.y, r18.x, r21.x
      movc r21.xy, r21.wwww, r21.xyxx, r18.xyxx
      lt r20.x, r23.z, l(1.000000)
      add r21.w, -r23.z, l(1.000100)
      add r22.w, r23.z, l(1.000000)
      div r21.w, r21.w, r22.w
      sqrt r21.w, r21.w
      mul r22.w, r21.w, l(0.250000)
      ishr r23.z, r21.x, l(1)
      iadd r23.z, r23.z, l(0x1fbd1df5)
      mad r21.w, r23.z, l(3.000000), r21.w
      mul r21.w, r21.w, r22.w
      div r20.w, r21.w, r20.w
      add r20.w, r20.w, r21.x
      div r20.w, r21.x, r20.w
      sqrt r20.w, r20.w
      mul r20.w, r20.w, r21.y
      movc r20.x, r20.x, r20.w, r21.y
      mad r20.w, r20.z, r18.x, -r20.z
      mad r20.z, r20.w, r20.z, l(1.000000)
      mul r20.z, r20.z, r20.z
      mul r20.z, r20.z, l(3.14159274)
      div r20.z, r18.x, r20.z
      mul r20.x, r20.x, r20.z
      sqrt r18.x, r18.x
      add r20.z, -r18.x, l(1.000000)
      mad r20.w, r15.w, r20.z, r18.x
      mad r18.x, r21.z, r20.z, r18.x
      mul r18.x, r15.w, r18.x
      mad r18.x, r21.z, r20.w, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r20.x
      add r20.x, -r20.y, l(1.000000)
      mul r20.y, r20.x, r20.x
      mul r20.y, r20.y, r20.y
      mul r20.z, r20.x, r20.y
      mad r20.x, -r20.y, r20.x, l(1.000000)
      mul r20.xyw, r13.xyxz, r20.xxxx
      mad r20.xyz, r17.xxxx, r20.zzzz, r20.xywx
      mul r18.x, r18.x, l(0.500000)
      mul r20.xyz, r20.xyzx, r18.xxxx
      mul r20.xyz, r18.wwww, r20.xyzx
      mad r20.xyz, r18.wwww, r16.xyzx, r20.xyzx
      mul r21.xyz, r19.wwww, r22.xyzx
      mul r21.xyz, r23.yyyy, r21.xyzx
      mul r20.xyz, r20.xyzx, r21.xyzx
    else
      mov r20.xyz, l(0,0,0,0)
    endif
  else
    mov r20.xyz, l(0,0,0,0)
  endif
  ushr r18.x, r23.x, l(8)
  and r18.x, r18.x, cb2[16].w
  add r20.xyz, r19.xyzx, r20.xyzx
  movc r19.xyz, r18.xxxx, r20.xyzx, r19.xyzx
  iadd r18.z, r18.z, l(1)
endloop
mad r4.xyz, r13.wwww, r7.zxyz, -r4.xyzx
min r0.x, r6.z, l(1.000000)
log r0.y, r0.z
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r6.z, cb1[163].z, l(-1.000000)
add r0.y, -r0.y, r6.z
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t7.xyzw, s2, r0.y
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.y, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.y, r0.y, cb0[29].w
mad_sat r4.w, r0.z, cb1[165].x, cb1[165].y
mad r6.z, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.z
max r0.y, r0.y, l(0.000100)
div r0.y, r0.w, r0.y
min r0.y, r0.y, cb1[165].z
add r0.y, r0.y, l(-1.000000)
mad r0.y, r4.w, r0.y, l(1.000000)
mul r4.xyz, r0.yyyy, r4.xyzx
mad r7.xyz, r17.yzwy, r0.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r7.xyzx, r4.xyzx
mad r7.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r7.x, r7.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r7.x, r7.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r7.zwzz
mul r0.y, r17.x, r0.y
mad r0.xyz, r13.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r13.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r13.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r13.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r19.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r13.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r6.xxyw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r11.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r11.xyzw, r0.wwww, r3.yzwx, r11.xyzw
  mov o0.w, r11.w
else
  mov o0.w, r11.w
endif
mad r0.xyz, r14.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r11.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
