//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 22:41:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_constantbuffer cb2[153], immediateIndexed
dcl_constantbuffer cb3[92], dynamicIndexed
dcl_constantbuffer cb4[22], immediateIndexed
dcl_constantbuffer cb5[2728], dynamicIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 23
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb0[4].x
  mov r1.y, cb0[5].x
  mov r1.z, cb0[6].x
  mov r1.w, cb0[7].x
  mov r2.x, cb0[4].y
  mov r2.y, cb0[5].y
  mov r2.z, cb0[6].y
  mov r2.w, cb0[7].y
  mov r3.x, cb0[4].w
  mov r3.y, cb0[5].w
  mov r3.z, cb0[6].w
  mov r3.w, cb0[7].w
  mov r4.x, cb0[40].x
  mov r4.y, cb0[41].x
  mov r4.z, cb0[42].x
  mov r4.w, cb0[43].x
  mov r5.x, cb0[40].y
  mov r5.y, cb0[41].y
  mov r5.z, cb0[42].y
  mov r5.w, cb0[43].y
  mov r6.x, cb0[40].z
  mov r6.y, cb0[41].z
  mov r6.z, cb0[42].z
  mov r6.w, cb0[43].z
  mov r7.x, cb0[40].w
  mov r7.y, cb0[41].w
  mov r7.z, cb0[42].w
  mov r7.w, cb0[43].w
  mov r0.yz, cb0[129].xxyx
  mov r0.w, cb0[131].w
  mov r8.x, cb0[152].w
  mov r8.yzw, cb0[62].xxyz
  mov r10.xy, cb0[121].xyxx
  mov r9.xyzw, cb0[128].xyzw
else
  mov r1.x, cb2[4].x
  mov r1.y, cb2[5].x
  mov r1.z, cb2[6].x
  mov r1.w, cb2[7].x
  mov r2.x, cb2[4].y
  mov r2.y, cb2[5].y
  mov r2.z, cb2[6].y
  mov r2.w, cb2[7].y
  mov r3.x, cb2[4].w
  mov r3.y, cb2[5].w
  mov r3.z, cb2[6].w
  mov r3.w, cb2[7].w
  mov r4.x, cb2[40].x
  mov r4.y, cb2[41].x
  mov r4.z, cb2[42].x
  mov r4.w, cb2[43].x
  mov r5.x, cb2[40].y
  mov r5.y, cb2[41].y
  mov r5.z, cb2[42].y
  mov r5.w, cb2[43].y
  mov r6.x, cb2[40].z
  mov r6.y, cb2[41].z
  mov r6.z, cb2[42].z
  mov r6.w, cb2[43].z
  mov r7.x, cb2[40].w
  mov r7.y, cb2[41].w
  mov r7.z, cb2[42].w
  mov r7.w, cb2[43].w
  mov r0.yz, cb2[129].xxyx
  mov r0.w, cb2[131].w
  mov r8.x, cb2[152].w
  mov r8.yzw, cb2[62].xxyz
  mov r10.xy, cb2[121].xyxx
  mov r9.xyzw, cb2[128].xyzw
endif
mul r11.xyz, v0.zxyz, v1.xyzx
mad r11.xyz, v1.zxyz, v0.xyzx, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v6.xyzx
mov r12.w, l(1.000000)
dp4 r4.y, r12.xyzw, r4.xyzw
dp4 r4.z, r12.xyzw, r5.xyzw
dp4 r4.w, r12.xyzw, r6.xyzw
dp4 r4.x, r12.xyzw, r7.xyzw
div r4.xyz, r4.yzwy, r4.xxxx
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r0.w, r0.w, cb1[4].w
movc r4.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r4.w
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t11.xyzw, s5, cb0[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r9.wwww, r9.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t12.xyzw, s6, cb0[133].x
sample_b_indexable(texture2d)(float,float,float,float) r9.w, v2.xyxx, t13.yzwx, s7, cb0[133].x
sample_b_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t14.yzwx, s8, cb0[133].x
mov_sat r7.xyz, r7.xyzx
mov_sat r0.w, r0.w
mad r0.y, r0.z, l(0.500000), r0.y
mov_sat r9.w, r9.w
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, v3.zwzz, t10.xyzw, s4
mad r12.xyzw, cb4[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r11.xyzw, r11.xyzw, cb4[7].xyzw, r12.xyzw
mul r11.xyzw, r11.xyzw, r11.xyzw
mul r11.xyzw, r11.xyzw, cb4[6].xyzw
mad r8.yzw, r7.xxyz, cb0[126].wwww, cb0[126].xxyz
mad r12.xyz, cb0[127].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb0[127].xyzx
mul r10.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r13.xy, v3.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.xyxx, t9.xyzw, s3
mad r0.z, r13.w, l(0.00392156886), r14.w
add r0.z, r0.z, l(-0.00196078443)
mad r0.z, r0.z, cb4[18].w, cb4[20].w
mul r14.xyz, r14.xyzx, r14.xyzx
mad r14.xyz, r14.xyzx, cb4[18].xyzx, cb4[20].xyzx
exp r0.z, r0.z
add r0.z, r0.z, l(-0.0185813606)
mad r13.xyzw, r13.xyzw, cb4[19].xyzw, cb4[21].xyzw
mov r6.w, l(1.000000)
dp4 r4.w, r13.xyzw, r6.xyzw
max r4.w, r4.w, l(0.000000)
mul r0.z, r0.z, r4.w
mul r13.xyz, r14.xyzx, r0.zzzz
mul r13.xyz, r13.xyzx, cb0[146].xyzx
dp3 r0.z, r13.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r13.xyz, r8.yzwy, r13.xyzx
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r14.xyz, r0.wwww, r14.xyzx, r15.xyzx
mad r7.xyz, r14.xyzx, r0.wwww, r7.xyzx
mul r7.xyz, r0.wwww, r7.xyzx
max r7.xyz, r0.wwww, r7.xyzx
add r10.xy, -r10.xyxx, v6.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r4.w, cb3[3].x
  mov r6.w, cb3[3].y
  mov r7.w, cb3[3].z
  mov r10.z, cb3[1].z
  mov r14.xy, cb3[1].xyxx
  mov r10.w, cb3[2].x
else
  mov r4.w, cb3[43].x
  mov r6.w, cb3[43].y
  mov r7.w, cb3[43].z
  mov r10.z, cb3[41].z
  mov r14.xy, cb3[41].xyxx
  mov r10.w, cb3[42].x
endif
mad r4.w, v6.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r10.z, l(-1)
umin r4.w, r4.w, r6.w
ushr r10.xy, r10.xyxx, r10.wwww
imad r4.w, r4.w, r14.y, r10.y
imad r4.w, r4.w, r14.x, r10.x
if_z r0.x
  mov r6.w, cb3[0].z
  mov r7.w, cb3[6].x
  mov r10.xy, cb3[6].zwzz
  mov r14.xyz, cb3[5].xyzx
else
  mov r6.w, cb3[40].z
  mov r7.w, cb3[46].x
  mov r10.xy, cb3[46].zwzz
  mov r14.xyz, cb3[45].xyzx
endif
if_nz r6.w
  and r15.xyzw, r7.wwww, l(255, 2, 4, 8)
  movc r15.xyzw, r15.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb3[7].x
    mov r6.w, cb3[7].x
    mov r10.z, l(0)
    loop
      uge r10.w, r10.z, cb3[7].x
      breakc_nz r10.w
      dp4 r10.w, cb3[8].xyzw, icb[r10.z + 0].xyzw
      lt r10.w, v6.w, r10.w
      if_nz r10.w
        mov r6.w, r10.z
        break
      endif
      iadd r10.z, r10.z, l(1)
    endloop
    ult r10.z, r6.w, cb3[7].x
    if_nz r10.z
      ishl r10.z, r6.w, l(2)
      mul r16.xyzw, r5.yyyy, cb3[r10.z + 10].xyzw
      mad r16.xyzw, r5.xxxx, cb3[r10.z + 9].xyzw, r16.xyzw
      mad r16.xyzw, r5.zzzz, cb3[r10.z + 11].xyzw, r16.xyzw
      add r16.xyzw, r16.xyzw, cb3[r10.z + 12].xyzw
      div r17.xyzw, r16.xyxy, r16.wwww
      ge r10.zw, r17.zzzw, cb3[r6.w + 25].xxxy
      ge r16.xy, cb3[r6.w + 25].zwzz, r17.zwzz
      and r10.zw, r10.zzzw, r16.xxxy
      and r6.w, r10.w, r10.z
      if_nz r6.w
        mad r17.xyzw, r17.xyzw, cb3[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r10.zw, r17.zzzw
        round_ni r17.xyzw, r17.xyzw
        add r18.xyzw, r17.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.x, r18.xyxx, t0.xyzw, s1, l(0.000000)
        add r17.xyzw, r17.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.y, r17.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.z, r17.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.w, r18.zwzz, t0.yzwx, s1, l(0.000000)
        add r16.xyzw, -r16.zzzz, r19.xyzw
        mad_sat r16.xyzw, r16.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r16.yz, -r16.wwxw, r16.zzyz
        mad r16.xy, r10.zzzz, r16.yzyy, r16.wxww
        add r6.w, -r16.x, r16.y
        mad r6.w, r10.w, r6.w, r16.x
      else
        mov r6.w, l(1.000000)
      endif
    else
      mov r6.w, l(1.000000)
    endif
  else
    mov r6.w, l(1.000000)
  endif
  if_nz r15.x
    mov r15.x, l(1.000000)
    dp4 r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r15.xyzw
    mov r11.x, l(1.000000)
    dp4 r10.w, r11.xyzw, r15.xyzw
    add r10.w, r10.w, l(-1.000000)
    mad r10.z, r10.z, r10.w, l(1.000000)
    mad_sat r10.x, v6.w, r10.x, r10.y
    mul r10.x, r10.x, r10.x
    add r10.y, -r6.w, r10.z
    mad r10.x, r10.x, r10.y, r6.w
    min r10.y, r10.x, l(1.000000)
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r10.y, r10.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    mul r10.yzw, r8.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r14.xyz, r10.xxxx, r14.xyzx
    mul r10.xyz, r10.yzwy, r14.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r6.w, r7.w, l(8)
  and r6.w, r6.w, cb1[16].w
  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)
  mov r11.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t2.yzwx
  umin r6.w, r6.w, cb3[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t2.yzwx
else
  ishl r10.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t5.yzwx
  umin r6.w, r10.w, cb3[40].x
  bfi r10.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r10.wwww, t5.yzwx
endif
movc r10.w, r0.x, cb3[40].x, cb3[0].x
umin r6.w, r6.w, r10.w
mul r14.xyz, r8.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r15.xyz, r10.xyzx
mov r10.w, l(0)
loop
  uge r12.w, r10.w, r6.w
  breakc_nz r12.w
  iadd r12.w, r7.w, r10.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r13.w, r12.wwww, t3.yzwx
    imul null, r14.w, r13.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r14.wwww, t1.xyzw
    imad r17.xyzw, r13.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r17.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r17.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r17.xyz, r17.zzzz, t1.xywz
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r17.wwww, t1.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r12.wwww, t6.yzwx
    imul null, r13.w, r12.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r13.wwww, t4.xyzw
    imad r21.xyzw, r12.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r21.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r21.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r17.xyz, r21.zzzz, t4.xywz
    ld_indexable(buffer)(float,float,float,float) r20.xyz, r21.wwww, t4.xyzw
  endif
  eq r12.w, r18.w, l(0.000000)
  lt r13.w, l(-2.000000), r17.x
  add r16.xyz, -r5.xyzx, r16.xyzx
  dp3 r14.w, r16.xyzx, r16.xyzx
  rsq r15.w, r14.w
  mul r21.xyz, r15.wwww, r16.xyzx
  mul r15.w, r16.w, r16.w
  mul r14.w, r14.w, r15.w
  mad r14.w, -r14.w, r14.w, l(1.000000)
  max r14.w, r14.w, l(0.000000)
  mul r14.w, r14.w, r14.w
  mul r22.xyz, r16.wwww, r16.xyzx
  dp3 r15.w, r22.xyzx, r22.xyzx
  min r15.w, r15.w, l(1.000000)
  add r15.w, -r15.w, l(1.000000)
  log r15.w, r15.w
  mul r15.w, r15.w, r18.w
  exp r15.w, r15.w
  movc r14.w, r12.w, r14.w, r15.w
  dp3 r15.w, r21.xyzx, r19.yzwy
  add r15.w, -r17.x, r15.w
  mul_sat r15.w, r17.y, r15.w
  mul r15.w, r15.w, r15.w
  mul r15.w, r14.w, r15.w
  movc r13.w, r13.w, r15.w, r14.w
  lt r14.w, l(0.000000), r13.w
  if_nz r14.w
    and r14.w, r19.x, l(255)
    movc r14.w, r14.w, l(1), l(0)
    if_nz r14.w
      and r21.xyzw, r19.xxxx, l(1, 2, 4, 8)
      movc r21.xyzw, r21.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r14.w, r19.x, l(4)
      ubfe r15.w, l(1), l(4), r19.x
      movc r22.x, r15.w, l(1.000000), l(0)
      and r17.xyw, r14.wwww, l(2, 4, 0, 8)
      movc r22.yzw, r17.xxyw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r14.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r15.w, r21.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r16.w, r11.xyzw, r21.xyzw
      add r16.w, r16.w, l(-1.000000)
      mad r15.w, r15.w, r16.w, l(1.000000)
      mul r17.xy, r14.wwww, r15.wwww
    else
      mov r17.xy, l(1.000000,1.000000,0,0)
    endif
    add r14.w, r17.y, r17.x
    lt r14.w, l(0.000000), r14.w
    if_nz r14.w
      f16tof32 r14.w, r17.z
      mul r15.w, r14.w, l(0.500000)
      mad r17.yzw, -r15.wwww, r20.xxyz, r16.xxyz
      mad r16.xyz, r15.wwww, r20.xyzx, r16.xyzx
      lt r14.w, l(0.000000), r14.w
      if_nz r14.w
        dp3 r14.w, r17.yzwy, r17.yzwy
        dp3 r15.w, r16.xyzx, r16.xyzx
        rsq r14.w, r14.w
        rsq r15.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r17.yzwy, r16.xyzx
        mul r15.w, r14.w, r15.w
        mad r15.w, r15.w, l(0.500000), r14.w
        add r15.w, r15.w, l(0.500000)
        div r14.w, r14.w, r15.w
      else
        dp3 r15.w, r17.yzwy, r17.yzwy
        add r15.w, r15.w, l(1.000000)
        rcp r14.w, r15.w
      endif
      movc r12.w, r12.w, r14.w, l(1.000000)
      mul r16.xyz, r12.wwww, r14.xyzx
      mul r17.yzw, r13.wwww, r18.xxyz
      mul r17.xyz, r17.xxxx, r17.yzwy
      mul r16.xyz, r16.xyzx, r17.xyzx
    else
      mov r16.xyz, l(0,0,0,0)
    endif
  else
    mov r16.xyz, l(0,0,0,0)
  endif
  ushr r12.w, r19.x, l(8)
  and r12.w, r12.w, cb1[16].w
  add r16.xyz, r15.xyzx, r16.xyzx
  movc r15.xyz, r12.wwww, r16.xyzx, r15.xyzx
  iadd r10.w, r10.w, l(1)
endloop
dp3 r6.w, r4.yzxy, r6.xyzx
add r7.w, r6.w, r6.w
mad r10.yzw, r7.wwww, r6.zzxy, -r4.xxyz
mov_sat r6.w, r6.w
if_z r0.x
  iadd r4.x, r4.w, cb3[0].w
  ishl r4.y, r4.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.y, r4.yyyy, t2.yxzw
  umin r4.y, r4.y, cb3[0].y
  bfi r4.x, l(31), l(1), r4.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.x, r4.xxxx, t2.xyzw
else
  iadd r4.z, r4.w, cb3[40].w
  ishl r4.w, r4.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t5.yzwx
  umin r4.y, r4.w, cb3[40].y
  bfi r4.z, l(31), l(1), r4.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.x, r4.zzzz, t5.xyzw
endif
log r4.z, r0.y
mad r4.z, -r4.z, l(1.200000), l(1.000000)
add r4.w, cb0[163].z, l(-1.000000)
add r4.z, -r4.z, r4.w
mov r10.x, l(0)
mov r6.xyz, l(0,0,0,0)
mov r4.w, l(1.000000)
mov r7.w, l(0)
mov r11.xy, l(1.000000,0,0,0)
loop
  uge r11.z, r11.y, r4.y
  breakc_nz r11.z
  lt r11.z, r4.w, l(0.001000)
  if_nz r11.z
    break
  endif
  if_z r0.x
    iadd r11.z, r4.x, r11.y
    ld_indexable(buffer)(uint,uint,uint,uint) r11.z, r11.zzzz, t3.yzxw
  else
    iadd r11.w, r4.x, r11.y
    ld_indexable(buffer)(uint,uint,uint,uint) r11.z, r11.wwww, t6.yzxw
  endif
  add r14.xyz, r5.xyzx, -cb5[r11.z + 0].xyzx
  dp3 r11.w, r14.xyzx, r14.xyzx
  sqrt r12.w, r11.w
  lt r13.w, r12.w, cb5[r11.z + 0].w
  if_nz r13.w
    lt r13.w, l(0.000000), cb5[r11.z + 341].z
    if_nz r13.w
      ishl r13.w, r11.z, l(2)
      mul r16.xyz, r5.yyyy, cb5[r13.w + 1024].xyzx
      mad r16.xyz, r5.xxxx, cb5[r13.w + 1023].xyzx, r16.xyzx
      mad r16.xyz, r5.zzzz, cb5[r13.w + 1025].xyzx, r16.xyzx
      add r16.xyz, r16.xyzx, cb5[r13.w + 1026].xyzx
      mul r17.xyz, r10.zzzz, cb5[r13.w + 1024].xyzx
      mad r17.xyz, r10.yyyy, cb5[r13.w + 1023].xyzx, r17.xyzx
      mad r17.xyz, r10.wwww, cb5[r13.w + 1025].xyzx, r17.xyzx
      rcp r17.xyz, r17.xyzx
      mad r18.xyz, -r16.xyzx, r17.xyzx, -r17.xyzx
      mad r17.xyz, -r16.xyzx, r17.xyzx, r17.xyzx
      max r17.xyz, r17.xyzx, r18.xyzx
      min r13.w, r17.z, r17.y
      min r13.w, r13.w, r17.x
      mad r17.xyz, r13.wwww, r10.yzwy, r5.xyzx
      add r18.xyz, cb5[r11.z + 0].xyzx, cb5[r11.z + 682].xyzx
      add r17.xyz, r17.xyzx, -r18.xyzx
      mul r13.w, l(0.700000), cb5[r11.z + 2387].w
      mad r18.xyz, -cb5[r11.z + 2387].wwww, l(0.500000, 0.500000, 0.500000, 0.000000), cb5[r11.z + 2387].xyzx
      mul r19.xyz, r16.xyzx, cb5[r11.z + 2387].xyzx
      lt r20.xyz, r19.xyzx, -r18.xyzx
      mad r21.xyz, r16.xyzx, cb5[r11.z + 2387].xyzx, r18.xyzx
      mov r21.xyz, |r21.xyzx|
      and r20.xyz, r20.xyzx, r21.xyzx
      lt r19.xyz, r18.xyzx, r19.xyzx
      mad r16.xyz, r16.xyzx, cb5[r11.z + 2387].xyzx, -r18.xyzx
      mov r16.xyz, |r16.xyzx|
      and r16.xyz, r16.xyzx, r19.xyzx
      dp3 r14.w, r20.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      dp3 r15.w, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r14.w, r14.w, r15.w
      div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
      mul_sat r13.w, r13.w, r14.w
      mad r14.w, r13.w, l(-2.000000), l(3.000000)
      mul r13.w, r13.w, r13.w
      mad r16.x, -r14.w, r13.w, l(1.000000)
    else
      div_sat r12.w, r12.w, cb5[r11.z + 0].w
      dp3 r13.w, r10.yzwy, r14.xyzx
      mad r11.w, -cb5[r11.z + 0].w, cb5[r11.z + 0].w, r11.w
      mad r11.w, r13.w, r13.w, -r11.w
      ge r14.w, r11.w, l(0.000000)
      sqrt r11.w, r11.w
      add r11.w, -r13.w, r11.w
      mad r14.xyz, r11.wwww, r10.yzwy, r14.xyzx
      add r18.yzw, r14.xxyz, -cb5[r11.z + 682].xxyz
      mad r11.w, r12.w, l(2.500000), l(-1.500000)
      max r11.w, r11.w, l(0.000000)
      mul r12.w, r11.w, r11.w
      mad r11.w, -r11.w, l(2.000000), l(3.000000)
      mad r18.x, -r12.w, r11.w, l(1.000000)
      movc r16.xyzw, r14.wwww, r18.xyzw, r10.xyzw
      mov r17.xyz, r16.yzwy
    endif
    mov r17.w, cb5[r11.z + 341].y
    sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyzw, r17.xyzw, t7.xyzw, s2, r4.z
    mul r14.xyz, r14.xyzx, cb5[r11.z + 341].xxxx
    mul r14.xyz, r16.xxxx, r14.xyzx
    mad r6.xyz, r14.xyzx, r4.wwww, r6.xyzx
    mad r11.w, -r14.w, r16.x, l(1.000000)
    mul r4.w, r4.w, r11.w
    mul r11.z, r16.x, cb5[r11.z + 682].w
    mad r7.w, r11.z, r11.x, r7.w
    add r11.z, -r16.x, l(1.000000)
    mul r11.x, r11.z, r11.x
  endif
  iadd r11.y, r11.y, l(1)
endloop
mul r4.xyz, r6.xyzx, cb0[146].xyzx
dp3 r0.x, cb0[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, r7.w
mad_sat r4.w, r0.y, cb0[165].x, cb0[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.z, r0.x
min r0.x, r0.x, cb0[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mul r10.xyzw, r12.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mad r6.xyz, r10.yzwy, r0.zzzz, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r11.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r11.x, r11.x
mul r0.y, r6.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r11.x, r11.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r11.zwzz
mov_sat r10.x, r10.x
mul r0.y, r0.y, r10.x
mad r0.xyz, r12.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r10.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r0.wwww, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r0.wwww, r10.xyzx
mul r4.xyz, r0.wwww, r4.xyzx
max r4.xyz, r0.wwww, r4.xyzx
mad r0.xyz, r0.xyzx, r4.xyzx, r15.xyzx
lt r0.w, l(0.000000), cb3[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb0[176].x, cb0[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb0[176].z
  mul r1.z, r0.w, cb0[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb0[134].zzzz, r2.yzwy, r0.xyzx
max r9.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb1[5].xxyz
  add r3.xyz, cb1[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r9.xyzw, r0.wwww, r3.yzwx, r9.xyzw
  mov o0.w, r9.w
else
  mov o0.w, r9.w
endif
mad r0.xyz, r13.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r9.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
