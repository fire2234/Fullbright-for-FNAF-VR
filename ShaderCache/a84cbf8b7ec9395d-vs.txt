//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:47:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// SV_VertexID              0   x           1   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 6   x           5     NONE   float   x
// TEXCOORD                 7    yzw        5     NONE   float    yzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_input v0.xyz
dcl_input_sgv v1.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.x
dcl_output o5.yzw
dcl_output_siv o6.xyzw, position
dcl_temps 5
mov o0.w, l(0)
iadd r0.x, v1.x, cb0[7].y
ishl r0.y, r0.x, l(1)
ld_indexable(buffer)(float,float,float,float) r0.yzw, r0.yyyy, t1.wxyz
bfi r1.x, l(31), l(1), r0.x, l(1)
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.xxxx, t1.xyzw
mul r2.xyz, r0.yzwy, r1.yzxy
mad r0.yzw, r1.xxyz, r0.zzwy, -r2.xxyz
mul r0.yzw, r1.wwww, r0.yyzw
mul r2.xyz, r1.yzxy, r0.yzwy
mad r0.yzw, r0.wwyz, r1.zzxy, -r2.xxyz
mul r0.yzw, r1.wwww, r0.yyzw
mul r2.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r3.xyz, r0.zzzz, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
mul r4.xyz, cb2[0].xyzx, cb2[4].xxxx
mad r3.xyz, r0.yyyy, r4.xyzx, r3.xyzx
mad r2.xyz, r1.xxxx, r4.xyzx, r2.xyzx
mul r4.xyz, cb2[2].xyzx, cb2[4].zzzz
mad o0.xyz, r0.wwww, r4.xyzx, r3.xyzx
mad o1.xyz, r1.zzzz, r4.xyzx, r2.xyzx
mul o1.w, r1.w, cb2[4].w
and r0.y, r0.x, cb3[0].x
imul null, r0.x, r0.x, cb3[0].y
ld_indexable(buffer)(float,float,float,float) r0.xz, r0.xxxx, t0.xzyw
mov o3.xy, r0.xzxx
ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.yyyy, t2.xyzw
mov o2.xyzw, r0.zyxw
mov o3.zw, l(0,0,0,0)
mov o4.x, l(0)
mov o5.x, l(0)
mul r0.xyz, v0.yyyy, cb2[1].xyzx
mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
add r1.xyz, cb1[62].xyzx, cb2[3].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mov o5.yzw, r0.xxyz
mul r1.xyzw, r0.yyyy, cb0[9].xyzw
mad r1.xyzw, r0.xxxx, cb0[8].xyzw, r1.xyzw
mad r0.xyzw, r0.zzzz, cb0[10].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[11].xyzw
lt r1.x, r0.z, l(0.000000)
ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[12].x
and r1.x, r1.x, r1.y
movc r0.zw, r1.xxxx, l(0,0,0.000001,1.000000), r0.zzzw
mov o6.xyw, r0.xyxw
mad r0.x, r0.z, cb0[7].w, cb0[7].z
mul o6.z, r0.w, r0.x
ret
// Approximately 0 instruction slots used
