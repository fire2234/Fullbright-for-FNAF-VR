//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Sep 15 09:55:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// PARTICLE_SUBUVS          0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 4   xyz         1     NONE   float   x
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// PARTICLE_LIGHTING_OFFSET     0   xyz         3     NONE   float
// TANGENTX                 0   xyzw        4     NONE   float   xyz
// TANGENTZ                 0   xyzw        5     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           6     NONE    uint   x
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[182], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_constantbuffer cb2[132], immediateIndexed
dcl_constantbuffer cb3[92], dynamicIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_buffer (float,float,float,float) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_buffer (uint,uint,uint,uint) t13
dcl_resource_buffer (float,float,float,float) t14
dcl_resource_buffer (uint,uint,uint,uint) t15
dcl_resource_buffer (uint,uint,uint,uint) t16
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.x
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps constant v6.x
dcl_input_ps linear v7.xyzw
dcl_input_ps_siv linear noperspective v8.xyzw, position
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 21
and r0.x, v6.x, l(1)
if_z r0.x
  mov r1.x, cb0[4].x
  mov r1.y, cb0[5].x
  mov r1.z, cb0[6].x
  mov r1.w, cb0[7].x
  mov r2.x, cb0[4].y
  mov r2.y, cb0[5].y
  mov r2.z, cb0[6].y
  mov r2.w, cb0[7].y
  mov r3.x, cb0[4].w
  mov r3.y, cb0[5].w
  mov r3.z, cb0[6].w
  mov r3.w, cb0[7].w
  mov r4.x, cb0[40].x
  mov r4.y, cb0[41].x
  mov r4.z, cb0[42].x
  mov r4.w, cb0[43].x
  mov r5.x, cb0[40].y
  mov r5.y, cb0[41].y
  mov r5.z, cb0[42].y
  mov r5.w, cb0[43].y
  mov r6.x, cb0[40].z
  mov r6.y, cb0[41].z
  mov r6.z, cb0[42].z
  mov r6.w, cb0[43].z
  mov r7.x, cb0[40].w
  mov r7.y, cb0[41].w
  mov r7.z, cb0[42].w
  mov r7.w, cb0[43].w
  mov r0.yzw, cb0[62].xxyz
  mov r8.xyzw, cb0[128].xyzw
  mov r9.x, cb0[131].w
  mov r9.yz, cb0[121].xxyx
else
  mov r1.x, cb2[4].x
  mov r1.y, cb2[5].x
  mov r1.z, cb2[6].x
  mov r1.w, cb2[7].x
  mov r2.x, cb2[4].y
  mov r2.y, cb2[5].y
  mov r2.z, cb2[6].y
  mov r2.w, cb2[7].y
  mov r3.x, cb2[4].w
  mov r3.y, cb2[5].w
  mov r3.z, cb2[6].w
  mov r3.w, cb2[7].w
  mov r4.x, cb2[40].x
  mov r4.y, cb2[41].x
  mov r4.z, cb2[42].x
  mov r4.w, cb2[43].x
  mov r5.x, cb2[40].y
  mov r5.y, cb2[41].y
  mov r5.z, cb2[42].y
  mov r5.w, cb2[43].y
  mov r6.x, cb2[40].z
  mov r6.y, cb2[41].z
  mov r6.z, cb2[42].z
  mov r6.w, cb2[43].z
  mov r7.x, cb2[40].w
  mov r7.y, cb2[41].w
  mov r7.z, cb2[42].w
  mov r7.w, cb2[43].w
  mov r0.yzw, cb2[62].xxyz
  mov r8.xyzw, cb2[128].xyzw
  mov r9.x, cb2[131].w
  mov r9.yz, cb2[121].xxyx
endif
mul r10.xyz, v4.yzxy, v5.zxyz
mad r10.xyz, v5.yzxy, v4.zxyz, -r10.xyzx
mul r10.xyz, r10.xyzx, v5.wwww
mov r11.xyz, v8.xyzx
mov r11.w, l(1.000000)
dp4 r4.x, r11.xyzw, r4.xyzw
dp4 r4.y, r11.xyzw, r5.xyzw
dp4 r4.z, r11.xyzw, r6.xyzw
dp4 r4.w, r11.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r4.xyz, -r0.yzwy, r4.xyzx
mul r0.y, r9.x, cb1[4].w
movc r0.z, v9.x, l(1.000000), l(-1.000000)
mul r0.y, r0.z, r0.y
mad r5.xyz, r8.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r8.xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
mul r6.xyz, r10.xyzx, r5.yyyy
mad r5.xyw, r5.xxxx, v4.xyxz, r6.xyxz
mad r5.xyz, r5.zzzz, v5.xyzx, r5.xywx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
mul r0.yzw, r0.yyyy, r5.xxyz
mul r5.x, cb0[132].z, l(6.28318548)
sincos r5.x, r6.x, r5.x
mov r5.y, |r5.x|
mov r5.w, r6.x
mov r5.z, r5.x
add r6.xyz, -r5.wyzw, r5.zwyz
mad r6.xyz, cb5[2].xxxx, r6.xyzx, r5.wyzw
add r6.xyz, -r5.yzwy, r6.xyzx
mad r5.xyz, cb5[2].yyyy, r6.xyzx, r5.yzwy
mul r5.xyz, r5.xyzx, cb5[2].zzzz
mad r5.xyz, v2.xyzx, r5.xyzx, cb5[1].xyzx
sample_indexable(texture2d)(float,float,float,float) r5.w, v0.xyxx, t18.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r6.x, v0.zwzz, t18.xyzw, s3
add r6.x, -r5.w, r6.x
mad r5.w, v1.x, r6.x, r5.w
mul_sat r6.w, r5.w, v2.w
mov_sat r7.xyz, v2.xyzx
mad r8.xyz, r4.xyzx, cb0[178].xyzx, cb0[179].xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r8.xyz, r8.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[180].xyzx
ftoi r10.xyz, r8.xyzx
mov r10.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r10.xyzw, r10.xyzw, t0.xyzw
utof r10.xyzw, r10.xyzw
add r5.w, cb0[180].w, l(1.000000)
div r8.xyz, r8.xyzx, r10.wwww
frc r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[180].wwww
mad r8.xyz, r10.xyzx, r5.wwww, r8.xyzx
add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[181].xyzx
lt r5.w, l(0.000000), cb1[12].z
if_nz r5.w
  sample_l_indexable(texture3d)(float,float,float,float) r10.x, r8.xyzx, t8.xyzw, s0, l(0.000000)
else
  lt r5.w, l(0.000000), cb1[10].w
  movc r10.x, r5.w, cb4[5].x, l(1.000000)
endif
mad r11.xyz, r7.xyzx, cb0[126].wwww, cb0[126].xyzx
mad r12.xyz, cb0[127].wwww, l(0.080000, 0.080000, 0.080000, 0.000000), cb0[127].xyzx
mad r11.xyz, r12.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r11.xyzx
sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r8.xyzx, t1.zxyw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r8.xyzx, t2.xyzw, s0, l(0.000000)
mad r13.xyzw, r13.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r14.xyzw, r8.xyzx, t4.xyzw, s0, l(0.000000)
mad r14.xyzw, r14.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r8.xyzx, t6.xyzw, s0, l(0.000000)
mad r15.xyzw, r15.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r13.xyzw, r12.yyyy, r13.xyzw
mul r13.xyzw, r13.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r14.xyzw, r12.zzzz, r14.xyzw
mul r14.xyzw, r14.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r15.xyzw, r12.xxxx, r15.xyzw
mul r15.xyzw, r15.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r8.xyzx, t3.xyzw, s0, l(0.000000)
mad r16.xyzw, r16.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r17.xyzw, r8.xyzx, t5.xyzw, s0, l(0.000000)
mad r17.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r8.xyzw, r8.xyzx, t7.xyzw, s0, l(0.000000)
mad r8.xyzw, r8.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r16.xyzw, r12.yyyy, r16.xyzw
mul r16.xyzw, r16.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r17.xyzw, r12.zzzz, r17.xyzw
mul r17.xyzw, r17.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r8.xyzw, r12.xxxx, r8.xyzw
mul r8.xyzw, r8.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r18.xyz, r0.zwyz, r0.zwzz
mul r19.yw, r0.zzzy, r0.wwww
mad r5.w, r0.y, r0.y, -r18.x
mul r20.yzw, r0.zzwy, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r19.xz, r18.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r18.xyzw, r19.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r5.w, r5.w, l(0.429042608)
mov r19.x, r12.y
mov r19.yzw, r13.yyzw
mov r20.x, l(0.886227548)
dp4 r7.w, r19.xyzw, r20.xyzw
mov r13.yzw, r16.xxyz
dp4 r9.x, r13.xyzw, r18.xyzw
add r7.w, r7.w, r9.x
mad r13.x, r16.w, r5.w, r7.w
mov r16.x, r12.z
mov r16.yzw, r14.yyzw
dp4 r7.w, r16.xyzw, r20.xyzw
mov r14.yzw, r17.xxyz
dp4 r9.x, r14.xyzw, r18.xyzw
add r7.w, r7.w, r9.x
mad r13.y, r17.w, r5.w, r7.w
mov r12.yzw, r15.yyzw
dp4 r7.w, r12.xyzw, r20.xyzw
mov r15.yzw, r8.xxyz
dp4 r8.x, r15.xyzw, r18.xyzw
add r7.w, r7.w, r8.x
mad r13.z, r8.w, r5.w, r7.w
max r8.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r8.xyzx, cb0[146].xyzx
mul r8.xyz, r11.xyzx, r8.xyzx
mul r8.xyz, r8.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad r12.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r12.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r12.xyzx
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r12.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r9.xy, -r9.yzyy, v8.xyxx
ftou r9.xy, r9.xyxx
if_z r0.x
  mov r5.w, cb3[3].x
  mov r7.w, cb3[3].y
  mov r8.w, cb3[3].z
  mov r9.z, cb3[1].z
  mov r12.xy, cb3[1].xyxx
  mov r9.w, cb3[2].x
else
  mov r5.w, cb3[43].x
  mov r7.w, cb3[43].y
  mov r8.w, cb3[43].z
  mov r9.z, cb3[41].z
  mov r12.xy, cb3[41].xyxx
  mov r9.w, cb3[42].x
endif
mad r5.w, v8.w, r5.w, r7.w
log r5.w, r5.w
mul r5.w, r8.w, r5.w
max r5.w, r5.w, l(0.000000)
ftou r5.w, r5.w
iadd r7.w, r9.z, l(-1)
umin r5.w, r5.w, r7.w
ushr r9.xy, r9.xyxx, r9.wwww
imad r5.w, r5.w, r12.y, r9.y
imad r5.w, r5.w, r12.x, r9.x
if_z r0.x
  mov r7.w, cb3[0].z
  mov r8.w, cb3[6].x
  mov r9.xy, cb3[6].zwzz
  mov r12.xyz, cb3[5].xyzx
  mov r13.xyz, cb3[4].xyzx
else
  mov r7.w, cb3[40].z
  mov r8.w, cb3[46].x
  mov r9.xy, cb3[46].zwzz
  mov r12.xyz, cb3[45].xyzx
  mov r13.xyz, cb3[44].xyzx
endif
if_nz r7.w
  and r14.xyzw, r8.wwww, l(255, 2, 4, 8)
  movc r14.xyzw, r14.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb3[30].y
    mul r15.xyzw, r4.yyyy, cb3[33].xyzw
    mad r15.xyzw, r4.xxxx, cb3[32].xyzw, r15.xyzw
    mad r15.xyzw, r4.zzzz, cb3[34].xyzw, r15.xyzw
    add r15.xyzw, r15.xyzw, cb3[35].xyzw
    div r9.zw, r15.xxxy, r15.wwww
    ge r15.xy, r9.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
    ge r16.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r9.zwzz
    and r15.xy, r15.xyxx, r16.xyxx
    and r7.w, r15.y, r15.x
    if_nz r7.w
      sample_l_indexable(texture2d)(float,float,float,float) r7.w, r9.zwzz, t10.yzwx, s2, l(0.000000)
      lt r9.z, r15.z, r7.w
      lt r7.w, l(0.990000), r7.w
      or r7.w, r7.w, r9.z
      and r10.x, r7.w, l(0x3f800000)
    else
      mov r10.x, l(1.000000)
    endif
  else
    mov r10.x, l(1.000000)
  endif
  if_nz cb3[7].x
    mov r7.w, cb3[7].x
    mov r9.z, l(0)
    loop
      uge r9.w, r9.z, cb3[7].x
      breakc_nz r9.w
      dp4 r9.w, cb3[8].xyzw, icb[r9.z + 0].xyzw
      lt r9.w, v8.w, r9.w
      if_nz r9.w
        mov r7.w, r9.z
        break
      endif
      iadd r9.z, r9.z, l(1)
    endloop
    ult r9.z, r7.w, cb3[7].x
    if_nz r9.z
      ishl r9.z, r7.w, l(2)
      mul r15.xyzw, r4.yyyy, cb3[r9.z + 10].xyzw
      mad r15.xyzw, r4.xxxx, cb3[r9.z + 9].xyzw, r15.xyzw
      mad r15.xyzw, r4.zzzz, cb3[r9.z + 11].xyzw, r15.xyzw
      add r15.xyzw, r15.xyzw, cb3[r9.z + 12].xyzw
      div r16.xyzw, r15.xyxy, r15.wwww
      ge r9.zw, r16.zzzw, cb3[r7.w + 25].xxxy
      ge r15.xy, cb3[r7.w + 25].zwzz, r16.zwzz
      and r9.zw, r9.zzzw, r15.xxxy
      and r7.w, r9.w, r9.z
      if_nz r7.w
        mad r16.xyzw, r16.xyzw, cb3[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r9.zw, r16.zzzw
        round_ni r16.xyzw, r16.xyzw
        add r17.xyzw, r16.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r18.x, r17.xyxx, t9.xyzw, s1, l(0.000000)
        add r16.xyzw, r16.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r16.xyzw, r16.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r18.y, r16.xyxx, t9.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r18.z, r16.zwzz, t9.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r18.w, r17.zwzz, t9.yzwx, s1, l(0.000000)
        add r15.xyzw, -r15.zzzz, r18.xyzw
        mad_sat r15.xyzw, r15.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r15.yz, -r15.wwxw, r15.zzyz
        mad r15.xy, r9.zzzz, r15.yzyy, r15.wxww
        add r7.w, -r15.x, r15.y
        mad r7.w, r9.w, r7.w, r15.x
      else
        mov r7.w, l(1.000000)
      endif
    else
      mov r7.w, l(1.000000)
    endif
  else
    mov r7.w, l(1.000000)
  endif
  if_nz r14.x
    mov r14.x, l(1.000000)
    dp4 r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r14.xyzw
    mov r10.yzw, r14.yyzw
    dp4 r9.w, r10.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r9.w, r9.w, l(-1.000000)
    mad r9.z, r9.z, r9.w, l(1.000000)
    mad_sat r9.x, v8.w, r9.x, r9.y
    mul r9.x, r9.x, r9.x
    add r9.y, -r7.w, r9.z
    mad r9.x, r9.x, r9.y, r7.w
    min r9.y, r9.x, l(1.000000)
  else
    mov r9.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r9.y, r9.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r13.xyzx, r13.xyzx
    rsq r7.w, r7.w
    mul r9.yzw, r7.wwww, r13.xxyz
    dp3_sat r7.w, r0.yzwy, r9.yzwy
    mul r9.yzw, r7.wwww, r11.xxyz
    mul r9.yzw, r9.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r12.xyz, r9.xxxx, r12.xyzx
    mul r9.xyz, r9.yzwy, r12.xyzx
  else
    mov r9.xyz, l(0,0,0,0)
  endif
  ushr r7.w, r8.w, l(8)
  and r7.w, r7.w, cb1[16].w
  movc r9.xyz, r7.wwww, r9.xyzx, l(0,0,0,0)
else
  mov r9.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t12.yzwx
  umin r7.w, r7.w, cb3[0].x
  bfi r8.w, l(31), l(1), r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r8.wwww, t12.yzwx
else
  ishl r9.w, r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t15.yzwx
  umin r7.w, r9.w, cb3[40].x
  bfi r5.w, l(31), l(1), r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r5.wwww, t15.yzwx
endif
movc r5.w, r0.x, cb3[40].x, cb3[0].x
umin r5.w, r5.w, r7.w
mul r12.xyz, r11.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r10.y, l(1.000000)
mov r13.xyz, r9.xyzx
mov r7.w, l(0)
loop
  uge r9.w, r7.w, r5.w
  breakc_nz r9.w
  iadd r9.w, r7.w, r8.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r10.z, r9.wwww, t13.yzxw
    imul null, r10.w, r10.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r10.wwww, t11.xyzw
    imad r15.xyzw, r10.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r15.xxxx, t11.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.yyyy, t11.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r15.zzzz, t11.xyzw
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r15.wwww, t11.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t16.yzwx
    imul null, r10.z, r9.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r10.zzzz, t14.xyzw
    imad r19.xyzw, r9.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r19.xxxx, t14.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r19.yyyy, t14.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r19.zzzz, t14.xyzw
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r19.wwww, t14.xyzw
  endif
  eq r9.w, r16.w, l(0.000000)
  lt r10.z, l(-2.000000), r18.x
  add r14.xyz, -r4.xyzx, r14.xyzx
  dp3 r10.w, r14.xyzx, r14.xyzx
  rsq r11.w, r10.w
  mul r19.xyz, r11.wwww, r14.xyzx
  mul r11.w, r14.w, r14.w
  mul r10.w, r10.w, r11.w
  mad r10.w, -r10.w, r10.w, l(1.000000)
  max r10.w, r10.w, l(0.000000)
  mul r10.w, r10.w, r10.w
  mul r20.xyz, r14.wwww, r14.xyzx
  dp3 r11.w, r20.xyzx, r20.xyzx
  min r11.w, r11.w, l(1.000000)
  add r11.w, -r11.w, l(1.000000)
  log r11.w, r11.w
  mul r11.w, r11.w, r16.w
  exp r11.w, r11.w
  movc r10.w, r9.w, r10.w, r11.w
  dp3 r11.w, r19.xyzx, r17.xyzx
  add r11.w, -r18.x, r11.w
  mul_sat r11.w, r18.y, r11.w
  mul r11.w, r11.w, r11.w
  mul r11.w, r10.w, r11.w
  movc r10.z, r10.z, r11.w, r10.w
  lt r10.w, l(0.000000), r10.z
  if_nz r10.w
    and r10.w, r17.w, l(255)
    movc r10.w, r10.w, l(1), l(0)
    if_nz r10.w
      and r19.xyzw, r17.wwww, l(1, 2, 4, 8)
      movc r19.xyzw, r19.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r10.w, r17.w, l(4)
      ubfe r11.w, l(1), l(4), r17.w
      movc r20.x, r11.w, l(1.000000), l(0)
      and r17.xyz, r10.wwww, l(2, 4, 8, 0)
      movc r20.yzw, r17.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r10.w, r20.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r11.w, r19.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r12.w, r10.xyyy, r19.xyzw
      add r12.w, r12.w, l(-1.000000)
      mad r11.w, r11.w, r12.w, l(1.000000)
      mul r17.xy, r10.wwww, r11.wwww
    else
      mov r17.xy, l(1.000000,1.000000,0,0)
    endif
    add r10.w, r17.y, r17.x
    lt r10.w, l(0.000000), r10.w
    if_nz r10.w
      f16tof32 r10.w, r18.w
      mul r11.w, r10.w, l(0.500000)
      mad r18.xyw, -r11.wwww, r15.xyxz, r14.xyxz
      mad r14.xyz, r11.wwww, r15.xyzx, r14.xyzx
      lt r10.w, l(0.000000), r10.w
      if_nz r10.w
        dp3 r10.w, r18.xywx, r18.xywx
        dp3 r11.w, r14.xyzx, r14.xyzx
        rsq r10.w, r10.w
        rsq r11.w, r11.w
        mul r12.w, r10.w, r11.w
        dp3 r13.w, r18.xywx, r14.xyzx
        mul r13.w, r12.w, r13.w
        mad r13.w, r13.w, l(0.500000), r12.w
        add r13.w, r13.w, l(0.500000)
        div r15.y, r12.w, r13.w
        dp3 r12.w, r0.yzwy, r18.xywx
        dp3 r13.w, r0.yzwy, r14.xyzx
        mul r11.w, r11.w, r13.w
        mad r10.w, r12.w, r10.w, r11.w
        mul r15.x, r10.w, l(0.500000)
      else
        dp3 r10.w, r18.xywx, r18.xywx
        add r11.w, r10.w, l(1.000000)
        rcp r15.y, r11.w
        rsq r10.w, r10.w
        mul r14.xyz, r10.wwww, r18.xywx
        dp3 r15.x, r0.yzwy, r14.xyzx
      endif
      lt r10.w, l(0.000000), r18.z
      mul r11.w, r18.z, r18.z
      mul_sat r11.w, r15.y, r11.w
      sqrt r11.w, r11.w
      lt r12.w, r15.x, r11.w
      max r13.w, -r11.w, r15.x
      add r13.w, r11.w, r13.w
      mul r13.w, r13.w, r13.w
      mul r11.w, r11.w, l(4.000000)
      div r11.w, r13.w, r11.w
      movc r11.w, r12.w, r11.w, r15.x
      movc_sat r10.w, r10.w, r11.w, r15.x
      movc r9.w, r9.w, r15.y, l(1.000000)
      mul r9.w, r10.w, r9.w
      mul r14.xyz, r12.xyzx, r9.wwww
      mul r15.xyz, r10.zzzz, r16.xyzx
      mul r15.xyz, r17.xxxx, r15.xyzx
      mul r14.xyz, r14.xyzx, r15.xyzx
    else
      mov r14.xyz, l(0,0,0,0)
    endif
  else
    mov r14.xyz, l(0,0,0,0)
  endif
  ushr r9.w, r17.w, l(8)
  and r9.w, r9.w, cb1[16].w
  add r14.xyz, r13.xyzx, r14.xyzx
  movc r13.xyz, r9.wwww, r14.xyzx, r13.xyzx
  iadd r7.w, r7.w, l(1)
endloop
lt r0.x, l(0.000000), cb3[91].w
if_nz r0.x
  mov r4.w, l(1.000000)
  dp4 r0.x, r4.xyzw, r1.xyzw
  dp4 r0.y, r4.xyzw, r2.xyzw
  dp4 r0.z, r4.xyzw, r3.xyzw
  div r0.xy, r0.xyxx, r0.zzzz
  mad r1.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.x, r0.z, cb0[176].x, cb0[176].y
  log r0.x, r0.x
  mul r0.x, r0.x, cb0[176].z
  mul r1.z, r0.x, cb0[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r0.xyzw, r1.xyzx, t17.xyzw, s0, l(0.000000)
  mul r1.x, r0.w, v7.w
  mad r0.xyz, v7.xyzx, r0.wwww, r0.xyzx
else
  mov r0.xyz, v7.xyzx
  mov r1.x, v7.w
endif
add r1.yzw, r11.xxyz, -r13.xxyz
mad r1.yzw, cb0[134].zzzz, r1.yyzw, r13.xxyz
max r6.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[130].x
if_nz r0.w
  add r2.xyz, r4.xyzx, -cb1[5].xyzx
  add r3.xyz, cb1[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r0.w, r2.y, r2.x
  or r0.w, r2.z, r0.w
  dp3 r2.x, r4.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.x, r2.x, l(0.002000)
  frc r2.x, r2.x
  lt r2.x, l(0.500000), r2.x
  movc r2.yzw, r2.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r2.x, l(1.000000)
  movc r6.xyzw, r0.wwww, r2.yzwx, r6.xyzw
  mov o0.w, r6.w
else
  mov o0.w, r6.w
endif
mad r1.yzw, r8.xxyz, r7.xxyz, r1.yyzw
add r1.yzw, r6.xxyz, r1.yyzw
mad o0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
ret
// Approximately 0 instruction slots used
