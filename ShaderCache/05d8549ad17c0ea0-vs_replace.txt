// ---- Created with 3Dmigoto v1.3.16 on Wed Sep 18 18:13:00 2019
Buffer<float4> t1 : register(t1);

Buffer<float4> t0 : register(t0);

cbuffer cb4 : register(b4)
{
  float4 cb4[1];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[5];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[166];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_VertexID0,
  uint v2 : SV_InstanceID0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : TEXCOORD0,
  out uint o3 : PACKED_EYE_INDEX0,
  out float4 o4 : SV_POSITION0,
  out float o5 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, vertex_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v2.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[7].z != 0) {
    r0.x = cb1[165].w;
  } else {
    r0.x = (int)v2.x & 1;
  }
  if (r0.x == 0) {
    r1.x = cb1[0].x;
    r1.y = cb1[1].x;
    r1.z = cb1[2].x;
    r1.w = cb1[3].x;
    r2.x = cb1[0].y;
    r2.y = cb1[1].y;
    r2.z = cb1[2].y;
    r2.w = cb1[3].y;
    r3.x = cb1[0].z;
    r3.y = cb1[1].z;
    r3.z = cb1[2].z;
    r3.w = cb1[3].z;
    r4.x = cb1[0].w;
    r4.y = cb1[1].w;
    r4.z = cb1[2].w;
    r4.w = cb1[3].w;
    r0.yzw = cb1[62].xyz;
    r5.x = cb1[163].y;
  } else {
    r1.x = cb3[0].x;
    r1.y = cb3[1].x;
    r1.z = cb3[2].x;
    r1.w = cb3[3].x;
    r2.x = cb3[0].y;
    r2.y = cb3[1].y;
    r2.z = cb3[2].y;
    r2.w = cb3[3].y;
    r3.x = cb3[0].z;
    r3.y = cb3[1].z;
    r3.z = cb3[2].z;
    r3.w = cb3[3].z;
    r4.x = cb3[0].w;
    r4.y = cb3[1].w;
    r4.z = cb3[2].w;
    r4.w = cb3[3].w;
    r0.yzw = cb3[62].xyz;
    r5.x = cb3[163].y;
  }
  r5.y = (int)v1.x + asint(cb0[7].y);
  r5.z = (uint)r5.y << 1;
  r6.xyz = t1.Load(r5.z).xyz;
  bitmask.z = ((~(-1 << 31)) << 1) & 0xffffffff;  r5.z = (((uint)r5.y << 1) & bitmask.z) | ((uint)1 & ~bitmask.z);
  r7.xyzw = t1.Load(r5.z).xyzw;
  r8.xyz = r7.yzx * r6.xyz;
  r6.xyz = r7.xyz * r6.yzx + -r8.xyz;
  r6.xyz = r6.xyz * r7.www;
  r8.xyz = r6.xyz * r7.yzx;
  r6.xyz = r6.zxy * r7.zxy + -r8.xyz;
  r6.xyz = r6.xyz * r7.www;
  r8.xyz = cb2[4].xxx * cb2[0].xyz;
  r9.xyz = cb2[4].yyy * cb2[1].xyz;
  r10.xyz = cb2[4].zzz * cb2[2].xyz;
  r11.xyz = r9.xyz * r6.yyy;
  r6.xyw = r6.xxx * r8.xyz + r11.xyz;
  o0.xyz = r6.zzz * r10.xyz + r6.xyw;
  r6.xyz = r9.xyz * r7.yyy;
  r6.xyz = r7.xxx * r8.xyz + r6.xyz;
  o1.xyz = r7.zzz * r10.xyz + r6.xyz;
  o1.w = cb2[4].w * r7.w;
  r6.xyz = cb2[1].xyz * v0.yyy;
  r6.xyz = cb2[0].xyz * v0.xxx + r6.xyz;
  r6.xyz = cb2[2].xyz * v0.zzz + r6.xyz;
  r0.yzw = cb2[3].xyz + r0.yzw;
  r6.xyz = r6.xyz + r0.yzw;
  r0.y = (int)r5.y * asint(cb4[0].y);
  r0.yz = t0.Load(r0.y).xy;
  r6.w = 1;
  r1.x = dot(r6.xyzw, r1.xyzw);
  r1.y = dot(r6.xyzw, r2.xyzw);
  r1.z = dot(r6.xyzw, r3.xyzw);
  r1.w = dot(r6.xyzw, r4.xyzw);
  r0.w = asint(cb0[0].x) | asint(cb0[7].z);
  if (r0.w != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o5.x = dot(r1.xw, r2.xy);
    r0.w = 0.5 * r5.x;
    r2.x = icb[r0.x+0].x * r1.w;
    r2.y = -r5.x * 0.5 + 1;
    r2.x = r2.x * r2.y;
    r1.x = r1.x * r0.w + r2.x;
  } else {
    o5.x = 0;
  }
  r0.w = cb0[0].x ? -0 : 0;
  o3.x = (int)r0.x | (int)r0.w;
  o0.w = 0;
  o2.xy = r0.yz;
  o2.zw = float2(0,0);
  o4.xyzw = r1.xyzw;
  return;
}