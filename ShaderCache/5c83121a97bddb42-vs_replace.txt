// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 20:16:05 2019
cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[166];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[18];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float3 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  float4 v3 : ATTRIBUTE3,
  float2 v4 : ATTRIBUTE4,
  uint v5 : SV_InstanceID0,
  out float4 o0 : TEXCOORD0,
  out uint o1 : PACKED_EYE_INDEX0,
  out float4 o2 : SV_POSITION0,
  out float o3 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v5.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[17].w != 0) {
    r0.x = cb1[165].w;
  } else {
    r0.x = (int)v5.x & 1;
  }
  if (r0.x == 0) {
    r1.x = cb1[0].x;
    r1.y = cb1[1].x;
    r1.z = cb1[2].x;
    r1.w = cb1[3].x;
    r2.x = cb1[0].y;
    r2.y = cb1[1].y;
    r2.z = cb1[2].y;
    r2.w = cb1[3].y;
    r3.x = cb1[0].z;
    r3.y = cb1[1].z;
    r3.z = cb1[2].z;
    r3.w = cb1[3].z;
    r4.x = cb1[0].w;
    r4.y = cb1[1].w;
    r4.z = cb1[2].w;
    r4.w = cb1[3].w;
    r0.yzw = cb1[62].xyz;
    r5.x = cb1[163].y;
  } else {
    r1.x = cb3[0].x;
    r1.y = cb3[1].x;
    r1.z = cb3[2].x;
    r1.w = cb3[3].x;
    r2.x = cb3[0].y;
    r2.y = cb3[1].y;
    r2.z = cb3[2].y;
    r2.w = cb3[3].y;
    r3.x = cb3[0].z;
    r3.y = cb3[1].z;
    r3.z = cb3[2].z;
    r3.w = cb3[3].z;
    r4.x = cb3[0].w;
    r4.y = cb3[1].w;
    r4.z = cb3[2].w;
    r4.w = cb3[3].w;
    r0.yzw = cb3[62].xyz;
    r5.x = cb3[163].y;
  }
  r5.y = dot(v0.xyz, cb0[15].xyz);
  r5.y = r5.y * cb0[14].y + -cb0[14].x;
  r5.z = saturate(r5.y);
  r5.w = r5.z * -2 + 3;
  r5.z = r5.z * r5.z;
  r5.z = r5.w * r5.z;
  r5.z = cb0[13].w ? r5.z : r5.y;
  r5.w = r5.y * r5.y;
  r6.x = r5.w * r5.y;
  r6.y = 3 * r5.w;
  r6.z = r6.x * 2 + -r6.y;
  r6.z = 1 + r6.z;
  r6.w = -r5.w * 2 + r6.x;
  r6.w = r6.w + r5.y;
  r7.xyz = cb0[8].xyz * r6.www;
  r7.xyz = r6.zzz * cb0[7].xyz + r7.xyz;
  r6.z = r5.w * r5.y + -r5.w;
  r7.xyz = r6.zzz * cb0[11].xyz + r7.xyz;
  r6.x = r6.x * -2 + r6.y;
  r6.xyz = r6.xxx * cb0[10].xyz + r7.xyz;
  r7.xyz = float3(3,3,3) * cb0[8].zxy;
  r7.xyz = cb0[7].zxy * float3(6,6,6) + r7.xyz;
  r7.xyz = cb0[11].zxy * float3(3,3,3) + r7.xyz;
  r7.xyz = -cb0[10].zxy * float3(6,6,6) + r7.xyz;
  r8.xyz = float3(4,4,4) * cb0[8].zxy;
  r8.xyz = cb0[7].zxy * float3(-6,-6,-6) + -r8.xyz;
  r8.xyz = -cb0[11].zxy * float3(2,2,2) + r8.xyz;
  r8.xyz = cb0[10].zxy * float3(6,6,6) + r8.xyz;
  r8.xyz = r8.xyz * r5.yyy;
  r7.xyz = r7.xyz * r5.www + r8.xyz;
  r7.xyz = cb0[8].zxy + r7.xyz;
  r5.y = dot(r7.xyz, r7.xyz);
  r5.y = rsqrt(r5.y);
  r7.xyz = r7.xyz * r5.yyy;
  r8.xyz = cb0[13].zxy * r7.zxy;
  r8.xyz = cb0[13].yzx * r7.xyz + -r8.xyz;
  r5.y = dot(r8.xyz, r8.xyz);
  r5.y = rsqrt(r5.y);
  r8.xyz = r8.xyz * r5.yyy;
  r9.xyz = r8.yzx * r7.xyz;
  r7.xyz = r7.zxy * r8.zxy + -r9.xyz;
  r5.y = dot(r7.xyz, r7.xyz);
  r5.y = rsqrt(r5.y);
  r7.xyz = r7.xyz * r5.yyy;
  r9.xyzw = cb0[12].zwxy + -cb0[9].zwxy;
  r9.xyzw = r5.zzzz * r9.xyzw + cb0[9].zwxy;
  r6.xyz = r9.xxx * r8.xyz + r6.xyz;
  r6.xyz = r9.yyy * r7.xyz + r6.xyz;
  r5.y = cb0[11].w + -cb0[8].w;
  r5.y = r5.z * r5.y + cb0[8].w;
  sincos(r5.y, r9.x, r10.x);
  r5.yzw = r9.xxx * r7.xyz;
  r5.yzw = r10.xxx * r8.xyz + -r5.yzw;
  r8.xyz = r9.xxx * r8.xyz;
  r7.xyz = r10.xxx * r7.xyz + r8.xyz;
  r5.yzw = r5.yzw * r9.zzz;
  r7.xyz = r7.xyz * r9.www;
  r8.xyz = cb0[17].xyz * r7.xxx;
  r8.xyz = cb0[16].xyz * r5.yyy + r8.xyz;
  r7.xyw = cb0[17].xyz * r7.yyy;
  r9.xyz = cb0[16].xyz * r5.zzz + r7.xyw;
  r7.xyz = cb0[17].xyz * r7.zzz;
  r7.xyz = cb0[16].xyz * r5.www + r7.xyz;
  r8.w = r6.x;
  r5.y = dot(v0.xyzw, r8.xyzw);
  r9.w = r6.y;
  r5.z = dot(v0.xyzw, r9.xyzw);
  r7.w = r6.z;
  r5.w = dot(v0.xyzw, r7.xyzw);
  r6.xyz = cb2[1].xyz * r5.zzz;
  r6.xyz = cb2[0].xyz * r5.yyy + r6.xyz;
  r5.yzw = cb2[2].xyz * r5.www + r6.xyz;
  r0.yzw = cb2[3].xyz + r0.yzw;
  r6.xyz = r5.yzw + r0.yzw;
  r6.w = 1;
  r1.x = dot(r6.xyzw, r1.xyzw);
  r1.y = dot(r6.xyzw, r2.xyzw);
  r1.z = dot(r6.xyzw, r3.xyzw);
  r1.w = dot(r6.xyzw, r4.xyzw);
  r0.y = asint(cb0[0].x) | asint(cb0[17].w);
  if (r0.y != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o3.x = dot(r1.xw, r2.xy);
    r0.y = 0.5 * r5.x;
    r0.z = icb[r0.x+0].x * r1.w;
    r0.w = -r5.x * 0.5 + 1;
    r0.z = r0.z * r0.w;
    r1.x = r1.x * r0.y + r0.z;
  } else {
    o3.x = 0;
  }
  r0.y = cb0[0].x ? -0 : 0;
  o1.x = (int)r0.x | (int)r0.y;
  o0.xy = v4.xy;
  o0.zw = float2(0,0);
  o2.xyzw = r1.xyzw;
  return;
}