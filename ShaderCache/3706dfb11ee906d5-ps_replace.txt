// ---- Created with 3Dmigoto v1.3.16 on Wed Sep 18 18:36:43 2019
TextureCube<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[5];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear noperspective float2 v0 : TEXCOORD0,
  float4 v1 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = cmp(asint(cb0[2].xxxx) == int4(1,2,3,4));
  r1.xy = v0.xy * float2(2,-2) + float2(-1,1);
  r1.z = 1;
  r2.xy = v0.xy * float2(-2,-2) + float2(1,1);
  r2.z = -1;
  r2.xyz = r0.www ? r1.xyz : r2.xyz;
  r3.yz = v0.yx * float2(-2,2) + float2(1,-1);
  r3.x = -1;
  r2.xyz = r0.zzz ? r3.zxy : r2.xyz;
  r4.xz = v0.xy * float2(2,2) + float2(-1,-1);
  r4.y = 1;
  r0.yzw = r0.yyy ? r4.xyz : r2.xyz;
  r0.xyz = r0.xxx ? r3.xyz : r0.yzw;
  r1.w = v0.x * -2 + 1;
  r0.xyz = cb0[2].xxx ? r0.xyz : r1.zyw;
  r0.w = asuint(cb0[4].z);
  r1.x = asint(cb0[4].w) + -1;
  r1.y = (uint)r1.x;
  r1.y = -1 + r1.y;
  r0.w = r1.y + -r0.w;
  r0.w = 1 + -r0.w;
  r0.w = 0.833333313 * r0.w;
  r0.w = exp2(r0.w);
  r1.y = cmp(r0.w < 0.00999999978);
  if (r1.y != 0) {
    o0.xyzw = t0.SampleLevel(s0_s, r0.xyz, 0).xyzw;
    return;
  }
  r1.y = dot(r0.xyz, r0.xyz);
  r1.y = rsqrt(r1.y);
  r0.xyz = r1.yyy * r0.xyz;
  r1.y = cmp(abs(r0.z) < 0.999000013);
  r1.yzw = r1.yyy ? float3(1,0,0) : float3(0,1,0);
  r2.xyz = r1.yzw * r0.yzx;
  r1.yzw = r1.wyz * r0.zxy + -r2.xyz;
  r2.x = dot(r1.yzw, r1.yzw);
  r2.x = rsqrt(r2.x);
  r1.yzw = r2.xxx * r1.yzw;
  r2.xyz = r1.zwy * r0.zxy;
  r2.xyz = r0.yzx * r1.wyz + -r2.xyz;
  r3.xy = int2(1,6) << (int2)r1.xx;
  r1.x = (int)r3.x * (int)r3.y;
  r1.x = (uint)r1.x;
  r1.x = 12.566371 / r1.x;
  r1.x = r1.x + r1.x;
  r2.w = cmp(r0.w < 0.100000001);
  r3.x = r2.w ? 32 : 64;
  r3.y = cmp(0.99000001 < r0.w);
  if (r3.y != 0) {
    r4.xyzw = float4(0,0,0,0);
    r3.y = 0;
    while (true) {
      r3.z = cmp((uint)r3.y >= (uint)r3.x);
      if (r3.z != 0) break;
      r3.z = (uint)r3.y;
      r3.z = 0.015625 * r3.z;
      r3.z = frac(r3.z);
      r3.w = reversebits((uint)r3.y);
      r3.w = (int)r3.w ^ 0;
      r3.w = (uint)r3.w;
      r3.zw = float2(6.28318548,2.32830644e-010) * r3.zw;
      r3.w = sqrt(r3.w);
      r5.x = 1 + -r3.w;
      r5.x = sqrt(r5.x);
      sincos(r3.z, r6.x, r7.x);
      r3.z = r7.x * r5.x;
      r5.x = r6.x * r5.x;
      r5.y = 20.3718319 * r3.w;
      r5.y = 1 / r5.y;
      r5.y = r5.y / r1.x;
      r5.y = log2(r5.y);
      r5.y = 0.5 * r5.y;
      r5.xzw = r5.xxx * r2.xyz;
      r5.xzw = r3.zzz * r1.yzw + r5.xzw;
      r5.xzw = r3.www * r0.xyz + r5.xzw;
      r5.xyzw = t0.SampleLevel(s0_s, r5.xzw, r5.y).xyzw;
      r4.xyzw = r5.xyzw + r4.xyzw;
      r3.y = (int)r3.y + 1;
    }
    o0.xyzw = float4(0.015625,0.015625,0.015625,0.015625) * r4.xyzw;
  } else {
    r2.w = r2.w ? 32 : 64;
    r0.w = r0.w * r0.w;
    r3.y = r0.w * r0.w;
    r0.w = r0.w * r0.w + -1;
    r4.xyzw = float4(0,0,0,0);
    r3.zw = float2(0,0);
    while (true) {
      r5.x = cmp((uint)r3.w >= (uint)r3.x);
      if (r5.x != 0) break;
      r5.x = (uint)r3.w;
      r5.x = r5.x / r2.w;
      r5.x = frac(r5.x);
      r5.y = reversebits((uint)r3.w);
      r5.y = (int)r5.y ^ 0;
      r5.y = (uint)r5.y;
      r5.xz = float2(6.28318548,2.31666492e-010) * r5.xy;
      r5.y = -r5.y * 2.31666492e-010 + 1;
      r5.z = r0.w * r5.z + 1;
      r5.y = r5.y / r5.z;
      r6.z = sqrt(r5.y);
      r5.y = 1 + -r5.y;
      r5.y = sqrt(r5.y);
      sincos(r5.x, r5.x, r7.x);
      r6.x = r7.x * r5.y;
      r6.y = r5.y * r5.x;
      r5.x = r6.z + r6.z;
      r5.xyz = r5.xxx * r6.xyz + float3(-0,-0,-1);
      r5.w = cmp(0 < r5.z);
      if (r5.w != 0) {
        r5.w = r6.z * r3.y + -r6.z;
        r5.w = r5.w * r6.z + 1;
        r5.w = r5.w * r5.w;
        r5.w = 3.14159274 * r5.w;
        r5.w = r3.y / r5.w;
        r5.w = r5.w * r2.w;
        r5.w = 0.25 * r5.w;
        r5.w = 1 / r5.w;
        r5.w = r5.w / r1.x;
        r5.w = log2(r5.w);
        r5.w = 0.5 * r5.w;
        r6.xyz = r5.yyy * r2.xyz;
        r6.xyz = r5.xxx * r1.yzw + r6.xyz;
        r6.xyz = r5.zzz * r0.xyz + r6.xyz;
        r6.xyzw = t0.SampleLevel(s0_s, r6.xyz, r5.w).xyzw;
        r4.xyzw = r6.xyzw * r5.zzzz + r4.xyzw;
        r3.z = r5.z + r3.z;
      }
      r3.w = (int)r3.w + 1;
    }
    o0.xyzw = r4.xyzw / r3.zzzz;
  }
  return;
}