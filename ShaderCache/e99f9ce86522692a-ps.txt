//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:46:55 2019
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[124], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 6
mad r0.xy, v0.xyxx, cb1[123].zwzz, -cb1[58].wzww
div r0.xy, r0.xyxx, cb1[58].xyxx
mul r0.zw, v0.xxxy, cb1[123].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0, l(0.000000)
mad r0.w, r0.z, cb1[57].z, -cb1[57].w
mad r0.z, r0.z, cb1[57].x, cb1[57].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.z, r0.w, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mul r1.xyzw, r0.yyyy, cb0[29].xyzw
mad r1.xyzw, r0.xxxx, cb0[28].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[30].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[31].xyzw
div r1.xy, r1.xyxx, r1.wwww
min r0.w, r1.z, l(0.999990)
mad r1.xy, r1.xyxx, cb0[1].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
round_ni r1.zw, r1.xxxy
frc r1.xy, r1.xyxx
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r1.zw, r1.zzzw, cb0[1].zzzw
gather4_aoffimmi_indexable(1,-1,0)(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t1.xyzw, s1.x
add r2.xyzw, -r0.wwww, r2.xyzw
mad_sat r2.xyzw, r2.xyzw, cb0[0].wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
gather4_aoffimmi_indexable(-1,-1,0)(texture2d)(float,float,float,float) r3.xyzw, r1.zwzz, t1.xyzw, s1.x
add r3.xyzw, -r0.wwww, r3.xyzw
mad_sat r3.xyzw, r3.xyzw, cb0[0].wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
add r4.xy, -r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r3.xy, r3.wxww, r4.xxxx, r3.zyzz
add r2.xw, r2.wwwx, r3.xxxy
mad r2.xy, r2.zyzz, r1.xxxx, r2.xwxx
gather4_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r3.xyzw, r1.zwzz, t1.xyzw, s1.x
gather4_aoffimmi_indexable(-1,1,0)(texture2d)(float,float,float,float) r5.xyzw, r1.zwzz, t1.xyzw, s1.x
add r5.xyzw, -r0.wwww, r5.xyzw
add r3.xyzw, -r0.wwww, r3.xyzw
mad_sat r3.xyzw, r3.xyzw, cb0[0].wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
mad_sat r5.xyzw, r5.xyzw, cb0[0].wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.zw, r5.wwwx, r4.xxxx, r5.zzzy
mul r4.x, r4.y, l(0.111111112)
add r1.zw, r3.wwwx, r1.zzzw
mad r2.zw, r3.zzzy, r1.xxxx, r1.zzzw
mul r4.w, r1.y, l(0.111111112)
mov r4.yz, l(0,0.111111112,0.111111112,0)
dp4 r0.w, r2.xyzw, r4.xyzw
add r0.w, r0.w, l(-0.500000)
mad_sat r0.w, r0.w, cb0[26].z, l(0.500000)
mad r0.w, r0.w, r0.w, l(-1.000000)
mul r0.w, r0.w, cb0[26].y
mul r1.xyz, r0.yyyy, cb1[45].xyzx
mad r1.xyz, r0.xxxx, cb1[44].xyzx, r1.xyzx
mad r0.xyz, r0.zzzz, cb1[46].xyzx, r1.xyzx
add r0.xyz, r0.xyzx, cb1[47].xyzx
add r0.xyz, -r0.xyzx, cb2[0].xyzx
mul r1.xyz, r0.xyzx, cb2[0].wwww
dp3 r1.x, r1.xyzx, r1.xyzx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb2[1].w
exp r1.x, r1.x
dp3 r1.y, r0.xyzx, r0.xyzx
mul r1.z, cb2[0].w, cb2[0].w
mul r1.z, r1.z, r1.y
rsq r1.y, r1.y
mul r0.xyz, r0.xyzx, r1.yyyy
dp3 r0.x, r0.xyzx, cb2[2].xyzx
add r0.x, r0.x, -cb2[4].x
mul_sat r0.x, r0.x, cb2[4].y
mul r0.x, r0.x, r0.x
mad r0.y, -r1.z, r1.z, l(1.000000)
max r0.y, r0.y, l(0.000000)
mul r0.y, r0.y, r0.y
eq r0.z, cb2[1].w, l(0.000000)
movc r1.x, r0.z, r0.y, r1.x
lt r0.y, l(-2.000000), cb2[4].x
movc r1.y, r0.y, r0.x, l(1.000000)
lt r0.x, l(0.000000), cb2[0].w
movc r0.xy, r0.xxxx, r1.xyxx, l(1.000000,1.000000,0,0)
mul r0.x, r0.y, r0.x
lt r0.x, l(0.000000), r0.x
and r0.x, r0.x, l(0x3f800000)
mad r0.x, r0.x, r0.w, l(1.000000)
sqrt o0.xyzw, r0.xxxx
ret
// Approximately 0 instruction slots used
