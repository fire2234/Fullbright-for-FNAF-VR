// ---- Created with 3Dmigoto v1.3.16 on Thu Oct 24 00:27:14 2019
Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

Texture2D<float4> t13 : register(t13);

Texture2D<float4> t12 : register(t12);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t10 : register(t10);

Texture2D<float4> t9 : register(t9);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture3D<float4> t6 : register(t6);

Buffer<uint4> t5 : register(t5);

Buffer<uint4> t4 : register(t4);

Buffer<float4> t3 : register(t3);

Buffer<uint4> t2 : register(t2);

Buffer<uint4> t1 : register(t1);

Buffer<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb5 : register(b5)
{
  float4 cb5[3];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[22];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[96];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[129];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[17];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[177];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD4,
  nointerpolation uint v4 : PACKED_EYE_INDEX0,
  float4 v5 : TEXCOORD7,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out uint oMask : SV_Coverage)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v4.x & 1;
  if (r0.x == 0) {
    r1.x = cb0[4].x;
    r1.y = cb0[5].x;
    r1.z = cb0[6].x;
    r1.w = cb0[7].x;
    r2.x = cb0[4].y;
    r2.y = cb0[5].y;
    r2.z = cb0[6].y;
    r2.w = cb0[7].y;
    r3.x = cb0[4].w;
    r3.y = cb0[5].w;
    r3.z = cb0[6].w;
    r3.w = cb0[7].w;
    r4.x = cb0[40].x;
    r4.y = cb0[41].x;
    r4.z = cb0[42].x;
    r4.w = cb0[43].x;
    r5.x = cb0[40].y;
    r5.y = cb0[41].y;
    r5.z = cb0[42].y;
    r5.w = cb0[43].y;
    r6.x = cb0[40].z;
    r6.y = cb0[41].z;
    r6.z = cb0[42].z;
    r6.w = cb0[43].z;
    r7.x = cb0[40].w;
    r7.y = cb0[41].w;
    r7.z = cb0[42].w;
    r7.w = cb0[43].w;
    r0.yzw = cb0[62].xyz;
    r8.x = cb0[125].x;
    r8.y = cb0[128].w;
    r9.xyz = cb0[128].xyz;
    r8.zw = cb0[58].xy;
    r10.xy = cb0[58].zw;
    r10.zw = cb0[121].xy;
    r11.xy = cb0[122].zw;
  } else {
    r1.x = cb2[4].x;
    r1.y = cb2[5].x;
    r1.z = cb2[6].x;
    r1.w = cb2[7].x;
    r2.x = cb2[4].y;
    r2.y = cb2[5].y;
    r2.z = cb2[6].y;
    r2.w = cb2[7].y;
    r3.x = cb2[4].w;
    r3.y = cb2[5].w;
    r3.z = cb2[6].w;
    r3.w = cb2[7].w;
    r4.x = cb2[40].x;
    r4.y = cb2[41].x;
    r4.z = cb2[42].x;
    r4.w = cb2[43].x;
    r5.x = cb2[40].y;
    r5.y = cb2[41].y;
    r5.z = cb2[42].y;
    r5.w = cb2[43].y;
    r6.x = cb2[40].z;
    r6.y = cb2[41].z;
    r6.z = cb2[42].z;
    r6.w = cb2[43].z;
    r7.x = cb2[40].w;
    r7.y = cb2[41].w;
    r7.z = cb2[42].w;
    r7.w = cb2[43].w;
    r0.yzw = cb2[62].xyz;
    r8.x = cb2[125].x;
    r8.y = cb2[128].w;
    r9.xyz = cb2[128].xyz;
    r8.zw = cb2[58].xy;
    r10.xy = cb2[58].zw;
    r10.zw = cb2[121].xy;
    r11.xy = cb2[122].zw;
  }
  r12.xyz = v1.xyz * v0.zxy;
  r12.xyz = v1.zxy * v0.xyz + -r12.xyz;
  r12.xyz = v1.www * r12.xyz;
  r10.zw = v6.xy + -r10.zw;
  r11.xy = r10.zw * r11.xy + float2(-0.5,-0.5);
  r11.xy = v6.ww * r11.xy;
  r11.z = v6.w;
  r11.xyw = float3(2,-2,1) * r11.xyz;
  r13.xyz = v6.xyz;
  r13.w = 1;
  r4.x = dot(r13.xyzw, r4.xyzw);
  r4.y = dot(r13.xyzw, r5.xyzw);
  r4.z = dot(r13.xyzw, r6.xyzw);
  r4.w = dot(r13.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r4.xyz = r4.xyz + -r0.yzw;
  r0.yz = t14.SampleBias(s3_s, v2.xy, cb0[133].x).xy;
  r5.xy = r0.yz * float2(2,2) + float2(-1,-1);
  r0.y = dot(r5.xy, r5.xy);
  r0.y = 1 + -r0.y;
  r0.y = max(0, r0.y);
  r5.z = sqrt(r0.y);
  r0.yzw = r5.xyz * r8.yyy + r9.xyz;
  r5.x = dot(r0.yzw, r0.yzw);
  r5.x = rsqrt(r5.x);
  r0.yzw = r5.xxx * r0.yzw;
  r5.xyz = r0.zzz * r12.xyz;
  r5.xyz = r0.yyy * v0.yzx + r5.xyz;
  r0.yzw = r0.www * v1.yzx + r5.xyz;
  r5.x = dot(r0.yzw, r0.yzw);
  r5.x = rsqrt(r5.x);
  r0.yzw = r5.xxx * r0.yzw;
  r5.xyzw = t15.SampleBias(s4_s, v2.xy, cb0[133].x).xyzw;
  r6.x = cmp(1 < (int)r8.x);
  r5.w = -0.333299994 + r5.w;
  r7.xyzw = cmp(float4(0.00666699978,0.166675001,0.333350003,0.500024974) < r5.wwww);
  r6.y = r7.x ? 0.000000 : 0;
  r6.y = r7.y ? 9 : r6.y;
  r6.y = r7.z ? 13 : r6.y;
  r6.z = (uint)r6.y;
  r6.z = -0.5 + r6.z;
  r6.z = cmp(r6.z < 0);
  r6.z = r7.w ? 0 : r6.z;
  r6.z = r6.x ? r6.z : 0;
  if (r6.z != 0) discard;
  r6.x = ~(int)r6.x;
  r5.w = cmp(r5.w < 0);
  r5.w = r6.x ? r5.w : 0;
  if (r5.w != 0) discard;
  r5.w = (int)r6.x | (int)r7.w;
  oMask = r5.w ? 15 : r6.y;
  r5.xyz = saturate(r5.xyz);
  r5.w = cmp(0 < cb1[12].x);
  r6.x = cmp(0 < cb0[163].w);
  r5.w = r5.w ? r6.x : 0;
  r6.xy = r11.xy / r11.ww;
  r6.xy = r6.xy * r8.zw + r10.yx;
  r7.xyzw = t10.SampleLevel(s1_s, r6.xy, 0).xyzw;
  r8.xyzw = t11.SampleLevel(s1_s, r6.xy, 0).xyzw;
  r9.xyz = t12.SampleLevel(s1_s, r6.xy, 0).xyw;
  r8.xyz = r8.yzx * float3(2,2,2) + float3(-1.00392163,-1.00392163,-1.00392163);
  r8.xyz = r0.yzw * r8.www + r8.xyz;
  r9.y = r9.z * 0.200000003 + r9.y;
  r7.xyz = r5.xyz * r7.www + r7.xyz;
  r8.xyz = r5.www ? r8.xyz : r0.yzw;
  r0.yzw = r5.www ? r7.xyz : r5.xyz;
  r5.xy = r5.ww ? r9.xy : float2(0,0.200000003);
  r5.z = 0.0799999982 * r5.y;
  r7.xyz = -r5.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r0.yzw;
  r5.yzw = r5.xxx * r7.xyz + r5.zzz;
  r7.xyz = -r0.yzw * r5.xxx + r0.yzw;
  r7.xyz = r7.xyz * cb0[126].www + cb0[126].xyz;
  r5.xyz = r5.yzw * cb0[127].www + cb0[127].xyz;
  r5.xyz = r5.xyz * float3(0.449999988,0.449999988,0.449999988) + r7.xyz;
  r7.xy = float2(1,0.5) * v3.xy;
  r7.zw = v3.xy * float2(1,0.5) + float2(0,0.5);
  r9.xyzw = t13.Sample(s2_s, r7.xy).xyzw;
  r7.xyzw = t13.Sample(s2_s, r7.zw).xyzw;
  r5.w = r7.w * 0.00392156886 + r9.w;
  r5.w = -0.00196078443 + r5.w;
  r5.w = r5.w * cb4[18].w + cb4[20].w;
  r9.xyz = r9.xyz * r9.xyz;
  r9.xyz = r9.xyz * cb4[18].xyz + cb4[20].xyz;
  r5.w = exp2(r5.w);
  r5.w = -0.0185813606 + r5.w;
  r7.xyzw = r7.xyzw * cb4[19].xyzw + cb4[21].xyzw;
  r8.w = 1;
  r6.w = dot(r7.xyzw, r8.xyzw);
  r6.w = max(0, r6.w);
  r5.w = r6.w * r5.w;
  r7.xyz = r5.www * r9.xyz;
  r7.xyz = cb0[146].xyz * r7.xyz;
  r5.w = cmp(1 < asint(cb0[125].x));
  if (r5.w != 0) {
    r9.xy = cb0[123].xy * r6.xy;
    r9.xy = trunc(r9.xy);
    r9.xy = (int2)r9.xy;
    r9.z = 0;
    r5.w = t9.Load(r9.xyz).x;
    r6.w = r5.w * cb0[57].x + cb0[57].y;
    r5.w = r5.w * cb0[57].z + -cb0[57].w;
    r5.w = 1 / r5.w;
    r5.w = r6.w + r5.w;
    r5.w = -r11.z * 1 + r5.w;
    r5.w = abs(r5.w) / r11.w;
    r5.w = cmp(0.00999999978 < r5.w);
    if (r5.w != 0) {
      r12.y = -cb0[123].z;
      r12.z = 0;
      r12.yz = r12.yz + r6.xy;
      r13.xyzw = (int4)r9.xxyy + int4(1,-1,1,-1);
      r9.w = r13.y;
      r5.w = t9.Load(r9.wyz).x;
      r6.w = r5.w * cb0[57].x + cb0[57].y;
      r5.w = r5.w * cb0[57].z + -cb0[57].w;
      r5.w = 1 / r5.w;
      r5.w = r6.w + r5.w;
      r5.w = -r11.z * 1 + r5.w;
      r12.x = abs(r5.w);
      r5.w = cmp(r12.x < 100000000);
      r6.z = 100000000;
      r12.xyz = r5.www ? r12.xyz : r6.zxy;
      r14.y = 0;
      r14.z = cb0[123].w;
      r14.yz = r14.yz + r6.xy;
      r15.xz = r9.xz;
      r15.yw = r13.zw;
      r5.w = t9.Load(r15.xyz).x;
      r6.z = r5.w * cb0[57].x + cb0[57].y;
      r5.w = r5.w * cb0[57].z + -cb0[57].w;
      r5.w = 1 / r5.w;
      r5.w = r6.z + r5.w;
      r5.w = -r11.z * 1 + r5.w;
      r14.x = abs(r5.w);
      r5.w = cmp(r14.x < r12.x);
      r12.xyz = r5.www ? r14.xyz : r12.xyz;
      r14.y = cb0[123].z;
      r14.z = 0;
      r14.yz = r14.yz + r6.xy;
      r13.yzw = r9.yzz;
      r5.w = t9.Load(r13.xyz).x;
      r6.z = r5.w * cb0[57].x + cb0[57].y;
      r5.w = r5.w * cb0[57].z + -cb0[57].w;
      r5.w = 1 / r5.w;
      r5.w = r6.z + r5.w;
      r5.w = -r11.z * 1 + r5.w;
      r14.x = abs(r5.w);
      r5.w = cmp(r14.x < r12.x);
      r9.xyz = r5.www ? r14.xyz : r12.xyz;
      r10.x = 0;
      r10.y = -cb0[123].w;
      r6.zw = r10.xy + r6.xy;
      r5.w = t9.Load(r15.xwz).x;
      r7.w = r5.w * cb0[57].x + cb0[57].y;
      r5.w = r5.w * cb0[57].z + -cb0[57].w;
      r5.w = 1 / r5.w;
      r5.w = r7.w + r5.w;
      r5.w = -r11.z * 1 + r5.w;
      r5.w = cmp(abs(r5.w) < r9.x);
      r6.xy = r5.ww ? r6.zw : r9.yz;
    }
  }
  t8.GetDimensions(0, uiDest.x, uiDest.y, uiDest.z);
  r6.zw = uiDest.xy;
  r6.zw = (uint2)r6.zw;
  r6.zw = r6.xy * r6.zw;
  r6.zw = trunc(r6.zw);
  r9.xy = (int2)r6.zw;
  r9.zw = float2(0,0);
  r5.w = t8.Load(r9.xyz).x;
  r6.z = 3.99900007 * cb1[12].y;
  r6.z = (uint)r6.z;
  r6.z = (int)r6.z & 2;
  r6.z = r6.z ? cb0[164].y : 1;
  r5.w = -1 + r5.w;
  r5.w = r6.z * r5.w + 1;
  r7.xyz = r7.xyz * r5.www;
  r7.xyz = r7.xyz * r5.xyz;
  r9.xyz = r0.yzw * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r9.xyz = r0.yzw * float3(-4.79510021,-4.79510021,-4.79510021) + r9.xyz;
  r0.yzw = r0.yzw * float3(2.75519991,2.75519991,2.75519991) + r9.xyz;
  r0.yzw = float3(1.33200002,1.33200002,1.33200002) + r0.yzw;
  r0.yzw = max(float3(1,1,1), r0.yzw);
  r6.zw = (uint2)r10.zw;
  if (r0.x == 0) {
    r5.w = cb3[3].x;
    r7.w = cb3[3].y;
    r8.w = cb3[3].z;
    r9.xyz = cb3[1].zxy;
    r9.w = cb3[2].x;
  } else {
    r5.w = cb3[43].x;
    r7.w = cb3[43].y;
    r8.w = cb3[43].z;
    r9.xyz = cb3[41].zxy;
    r9.w = cb3[42].x;
  }
  r5.w = v6.w * r5.w + r7.w;
  r5.w = log2(r5.w);
  r5.w = r5.w * r8.w;
  r5.w = max(0, r5.w);
  r5.w = (uint)r5.w;
  r7.w = (int)r9.x + -1;
  r5.w = min((uint)r7.w, (uint)r5.w);
  r6.zw = (uint2)r6.zw >> (uint2)r9.ww;
  r5.w = mad((int)r5.w, (int)r9.z, (int)r6.w);
  r5.w = mad((int)r5.w, (int)r9.y, (int)r6.z);
  if (cb3[95].x != 0) {
    r6.xy = cb0[123].xy * r6.xy;
    r6.xy = trunc(r6.xy);
    r6.xy = (int2)r6.xy;
    r6.zw = float2(0,0);
    r6.xyzw = t7.Load(r6.xyz).xyzw;
  } else {
    r6.xyzw = float4(1,1,1,1);
  }
  r6.xyzw = r6.xyzw * r6.xyzw;
  if (r0.x == 0) {
    r7.w = cb3[0].z;
    r8.w = cb3[6].x;
    r9.xy = cb3[6].zw;
    r10.xyz = cb3[5].xyz;
    r11.xyz = cb3[4].xyz;
  } else {
    r7.w = cb3[40].z;
    r8.w = cb3[46].x;
    r9.xy = cb3[46].zw;
    r10.xyz = cb3[45].xyz;
    r11.xyz = cb3[44].xyz;
  }
  if (r7.w != 0) {
    r12.xyzw = (int4)r8.wwww & int4(255,1,2,4);
    r12.xyzw = r12.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    r7.w = (int)r8.w & 8;
    r13.w = r7.w ? 1 : 0;
    r9.zw = (uint2)r8.ww >> int2(4,8);
    if (1 == 0) r7.w = 0; else if (1+4 < 32) {     r7.w = (uint)r8.w << (32-(1 + 4)); r7.w = (uint)r7.w >> (32-1);    } else r7.w = (uint)r8.w >> 4;
    r14.x = r7.w ? 1 : 0;
    r15.xyz = (int3)r9.zzz & int3(2,4,8);
    r14.yzw = r15.xyz ? float3(1,1,1) : float3(0,0,0);
    r7.w = dot(r14.xyzw, r6.xyzw);
    r8.w = cmp(r9.y < 0);
    r14.x = (int)r8.w ? r7.w : 1.000000; r15.x = (int)r8.w ? 1.000000 : r7.w;
    if (r12.x != 0) {
      r13.xyz = r12.yzw;
      r7.w = dot(r13.xyzw, float4(1,1,1,1));
      r7.w = 1 + -r7.w;
      r8.w = saturate(r11.w * r9.x + r9.y);
      r8.w = r8.w * r8.w;
      r7.w = r7.w + -r14.x;
      r7.w = r8.w * r7.w + r14.x;
      r8.w = min(r7.w, r15.x);
      r9.x = r7.w * r15.x;
      r9.y = r8.w * r15.x;
    } else {
      r9.xy = float2(1,1);
    }
    r7.w = r9.x + r9.y;
    r7.w = cmp(0 < r7.w);
    if (r7.w != 0) {
      r7.w = dot(r11.xyz, r11.xyz);
      r7.w = rsqrt(r7.w);
      r11.xyz = r11.xyz * r7.www;
      r7.w = saturate(dot(r8.zxy, r11.xyz));
      r11.xyz = r7.www * r5.xyz;
      r11.xyz = float3(0.318309873,0.318309873,0.318309873) * r11.xyz;
      r9.xyz = r10.xyz * r9.xxx;
      r9.xyz = r11.xyz * r9.xyz;
    } else {
      r9.xyz = float3(0,0,0);
    }
    r7.w = (int)r9.w & asint(cb1[16].w);
    r9.xyz = r7.www ? r9.xyz : float3(0,0,0);
  } else {
    r9.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r7.w = (uint)r5.w << 1;
    r7.w = t1.Load(r7.w).x;
    r7.w = min(asuint(cb3[0].x), (uint)r7.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r8.w = (((uint)r5.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r8.w = t1.Load(r8.w).x;
  } else {
    r9.w = (uint)r5.w << 1;
    r9.w = t4.Load(r9.w).x;
    r7.w = min(asuint(cb3[40].x), (uint)r9.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r5.w = (((uint)r5.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r8.w = t4.Load(r5.w).x;
  }
  r5.w = r0.x ? cb3[40].x : cb3[0].x;
  r5.w = min((uint)r7.w, (uint)r5.w);
  r10.xyz = float3(0.318309873,0.318309873,0.318309873) * r5.xyz;
  r11.xyz = r9.xyz;
  r7.w = 0;
  while (true) {
    r9.w = cmp((uint)r7.w >= (uint)r5.w);
    if (r9.w != 0) break;
    r9.w = (int)r7.w + (int)r8.w;
    if (r0.x == 0) {
      r10.w = t2.Load(r9.w).x;
      r11.w = (int)r10.w * 5;
      r12.xyzw = t0.Load(r11.w).xyzw;
      r13.xyzw = mad((int4)r10.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r14.xyzw = t0.Load(r13.x).xyzw;
      r15.xyzw = t0.Load(r13.y).xyzw;
      r16.xyzw = t0.Load(r13.z).xyzw;
      r13.xyz = t0.Load(r13.w).xyz;
    } else {
      r9.w = t5.Load(r9.w).x;
      r10.w = (int)r9.w * 5;
      r12.xyzw = t3.Load(r10.w).xyzw;
      r17.xyzw = mad((int4)r9.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r14.xyzw = t3.Load(r17.x).xyzw;
      r15.xyzw = t3.Load(r17.y).xyzw;
      r16.xyzw = t3.Load(r17.z).xyzw;
      r13.xyz = t3.Load(r17.w).xyz;
    }
    r9.w = cmp(r14.w == 0.000000);
    r10.w = cmp(-2 < r16.x);
    r12.xyz = r12.xyz + -r4.xyz;
    r11.w = dot(r12.xyz, r12.xyz);
    r13.w = rsqrt(r11.w);
    r17.xyz = r13.www * r12.xyz;
    r13.w = r12.w * r12.w;
    r11.w = r13.w * r11.w;
    r11.w = -r11.w * r11.w + 1;
    r11.w = max(0, r11.w);
    r11.w = r11.w * r11.w;
    r18.xyz = r12.xyz * r12.www;
    r12.w = dot(r18.xyz, r18.xyz);
    r12.w = min(1, r12.w);
    r12.w = 1 + -r12.w;
    r12.w = log2(r12.w);
    r12.w = r14.w * r12.w;
    r12.w = exp2(r12.w);
    r11.w = r9.w ? r11.w : r12.w;
    r12.w = dot(r17.xyz, r15.xyz);
    r12.w = r12.w + -r16.x;
    r12.w = saturate(r12.w * r16.y);
    r12.w = r12.w * r12.w;
    r12.w = r12.w * r11.w;
    r10.w = r10.w ? r12.w : r11.w;
    r11.w = cmp(0 < r10.w);
    if (r11.w != 0) {
      r11.w = (int)r15.w & 255;
      r11.w = r11.w ? 1 : 0;
      if (r11.w != 0) {
        r17.xyzw = (int4)r15.wwww & int4(1,2,4,8);
        r17.xyzw = r17.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r11.w = (uint)r15.w >> 4;
        if (1 == 0) r12.w = 0; else if (1+4 < 32) {         r12.w = (uint)r15.w << (32-(1 + 4)); r12.w = (uint)r12.w >> (32-1);        } else r12.w = (uint)r15.w >> 4;
        r18.x = r12.w ? 1 : 0;
        r15.xyz = (int3)r11.www & int3(2,4,8);
        r18.yzw = r15.xyz ? float3(1,1,1) : float3(0,0,0);
        r11.w = dot(r18.xyzw, r6.xyzw);
        r12.w = dot(r17.xyzw, float4(1,1,1,1));
        r12.w = 1 + -r12.w;
        r15.xy = r12.ww * r11.ww;
      } else {
        r15.xy = float2(1,1);
      }
      r11.w = r15.x + r15.y;
      r11.w = cmp(0 < r11.w);
      if (r11.w != 0) {
        r11.w = f16tof32(r16.w);
        r12.w = 0.5 * r11.w;
        r16.xyw = -r12.www * r13.xyz + r12.xyz;
        r12.xyz = r12.www * r13.xyz + r12.xyz;
        r11.w = cmp(0 < r11.w);
        if (r11.w != 0) {
          r11.w = dot(r16.xyw, r16.xyw);
          r12.w = dot(r12.xyz, r12.xyz);
          r11.w = rsqrt(r11.w);
          r12.w = rsqrt(r12.w);
          r13.x = r12.w * r11.w;
          r13.y = dot(r16.xyw, r12.xyz);
          r13.y = r13.y * r13.x;
          r13.y = r13.y * 0.5 + r13.x;
          r13.y = 0.5 + r13.y;
          r13.y = r13.x / r13.y;
          r13.z = dot(r8.zxy, r16.xyw);
          r12.x = dot(r8.zxy, r12.xyz);
          r12.x = r12.x * r12.w;
          r11.w = r13.z * r11.w + r12.x;
          r13.x = 0.5 * r11.w;
        } else {
          r11.w = dot(r16.xyw, r16.xyw);
          r12.x = 1 + r11.w;
          r13.y = rcp(r12.x);
          r11.w = rsqrt(r11.w);
          r12.xyz = r16.xyw * r11.www;
          r13.x = dot(r8.zxy, r12.xyz);
        }
        r11.w = cmp(0 < r16.z);
        r12.x = r16.z * r16.z;
        r12.x = saturate(r12.x * r13.y);
        r12.x = sqrt(r12.x);
        r12.y = cmp(r13.x < r12.x);
        r12.z = max(r13.x, -r12.x);
        r12.z = r12.x + r12.z;
        r12.z = r12.z * r12.z;
        r12.x = 4 * r12.x;
        r12.x = r12.z / r12.x;
        r12.x = r12.y ? r12.x : r13.x;
        r11.w = saturate(r11.w ? r12.x : r13.x);
        r9.w = r9.w ? r13.y : 1;
        r9.w = r9.w * r11.w;
        r12.xyz = r9.www * r10.xyz;
        r13.xyz = r14.xyz * r10.www;
        r13.xyz = r13.xyz * r15.xxx;
        r12.xyz = r13.xyz * r12.xyz;
      } else {
        r12.xyz = float3(0,0,0);
      }
    } else {
      r12.xyz = float3(0,0,0);
    }
    r9.w = (uint)r15.w >> 8;
    r9.w = (int)r9.w & asint(cb1[16].w);
    r12.xyz = r12.xyz + r11.xyz;
    r11.xyz = r9.www ? r12.xyz : r11.xyz;
    r7.w = (int)r7.w + 1;
  }
  r0.x = cmp(0 < cb3[91].w);
  if (r0.x != 0) {
    r4.w = 1;
    r1.x = dot(r4.xyzw, r1.xyzw);
    r1.y = dot(r4.xyzw, r2.xyzw);
    r0.x = dot(r4.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.xx;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.x = r0.x * cb0[176].x + cb0[176].y;
    r0.x = log2(r0.x);
    r0.x = cb0[176].z * r0.x;
    r1.z = cb0[175].z * r0.x;
    r1.xyzw = t6.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r0.x = v5.w * r1.w;
    r1.xyz = v5.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v5.xyz;
    r0.x = v5.w;
  }
  r2.xyz = -r11.xyz + r5.xyz;
  r2.xyz = cb0[134].zzz * r2.xyz + r11.xyz;
  r3.xyz = max(float3(0,0,0), cb5[2].xyz);
  r1.w = cmp(0 < cb0[130].x);
  if (r1.w != 0) {
    r5.xyz = -cb1[5].xyz + r4.xyz;
    r6.xyz = float3(1,1,1) + cb1[11].xyz;
    r5.xyz = cmp(r6.xyz < abs(r5.xyz));
    r1.w = (int)r5.y | (int)r5.x;
    r1.w = (int)r5.z | (int)r1.w;
    r2.w = dot(r4.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.w = 0.00200000009 * r2.w;
    r2.w = frac(r2.w);
    r2.w = cmp(0.5 < r2.w);
    r4.xyz = r2.www ? float3(0,1,1) : float3(1,1,0);
    r3.xyz = r1.www ? r4.xyz : r3.xyz;
  }
  r0.yzw = r7.xyz * r0.yzw + r2.xyz;
  r0.yzw = r0.yzw + r3.xyz;
  o0.xyz = r0.yzw * r0.xxx + r1.xyz;
  o0.w = 0;
  return;
}