//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Aug 19 10:22:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xy
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 25
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.yz, cb1[129].xxyx
  mov r0.w, cb1[131].w
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
  mov r9.xyzw, cb1[128].xyzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.yz, cb3[129].xxyx
  mov r0.w, cb3[131].w
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
  mov r9.xyzw, cb3[128].xyzw
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v6.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v6.wwww
mov r13.z, v6.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v6.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r0.w, r0.w, cb2[4].w
movc r4.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r4.w
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t15.xyzw, s4, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r4.w, r4.w
add r6.z, r4.w, l(1.000000)
mul r7.xy, v2.xyxx, cb6[6].xxxx
sample_b_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t16.xyzw, s5, cb1[133].x
mad r7.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r7.xyxx, r7.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r14.z, r4.w
mov r14.xy, -r7.xyxx
dp3 r4.w, r6.xyzx, r14.xyzx
mul r7.xyz, r6.zzzz, r14.xyzx
mad r6.xyz, r6.xyzx, r4.wwww, -r7.xyzx
mad r6.xyz, r6.xyzx, r9.wwww, r9.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
dp3 r0.w, cb6[5].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul_sat r0.w, r0.w, cb6[6].z
sample_b_indexable(texture2d)(float,float,float,float) r4.w, v2.xyxx, t17.yzwx, s6, cb1[133].x
mov_sat r7.xyz, cb6[5].xyzx
mov_sat r4.w, r4.w
mov_sat r6.w, cb6[6].y
mad r9.z, r6.w, r0.z, r0.y
lt r0.y, l(0.000000), cb2[12].x
lt r0.z, l(0.000000), cb1[163].w
and r0.y, r0.z, r0.y
div r8.yz, r13.xxyx, r13.wwww
mad r10.xy, r8.yzyy, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r8.yzw, r14.yyzx, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.00392163, -1.00392163, -1.00392163)
mad r8.yzw, r6.xxyz, r14.wwww, r8.yyzw
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.500000), r15.y
mul r0.z, r0.w, r12.w
mad r12.xyz, r7.xyzx, r12.wwww, r12.xyzx
movc r6.xyz, r0.yyyy, r8.yzwy, r6.xyzx
movc r7.xyz, r0.yyyy, r12.xyzx, r7.xyzx
movc r0.z, r0.y, r0.z, r0.w
mov r9.xy, l(0,0.500000,0,0)
movc r8.yzw, r0.yyyy, r15.xxyz, r9.xxyz
mul r0.y, r8.z, l(0.080000)
mad r9.xyz, -r8.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xyzx
mad r9.xyz, r8.yyyy, r9.xyzx, r0.yyyy
mad r12.xyz, -r7.xyzx, r8.yyyy, r7.xyzx
mad r12.xyz, r12.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r9.xyz, r9.xyzx, cb1[127].wwww, cb1[127].xyzx
add r14.xyz, r0.zzzz, r12.xyzx
mul r0.yw, v3.xxxy, l(0.000000, 1.000000, 0.000000, 0.500000)
mad r8.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000), l(0.000000, 0.000000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r0.ywyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r8.yzyy, t14.xyzw, s3
mad r0.y, r16.w, l(0.00392156886), r15.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb5[18].w, cb5[20].w
mul r15.xyz, r15.xyzx, r15.xyzx
mad r15.xyz, r15.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r16.xyzw, r16.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r0.w, r16.xyzw, r6.xyzw
max r0.w, r0.w, l(0.000000)
mul r0.y, r0.w, r0.y
mul r15.xyz, r15.xyzx, r0.yyyy
mul r15.xyz, r15.xyzx, cb1[146].xyzx
dp3 r0.y, r15.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.w, l(1), cb1[125].x
if_nz r0.w
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r16.xy, r8.yzyy
  mov r16.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r16.xyzz, t10.yzwx
  mad r6.w, r0.w, cb1[57].x, cb1[57].y
  mad r0.w, r0.w, cb1[57].z, -cb1[57].w
  div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  add r0.w, r0.w, r6.w
  mad r0.w, -r13.z, l(1.000000), r0.w
  div r0.w, |r0.w|, r13.w
  lt r0.w, l(0.010000), r0.w
  if_nz r0.w
    mov r8.y, -cb1[123].z
    mov r8.z, l(0)
    add r17.yz, r8.yyzy, r10.xxyx
    iadd r18.xyzw, r16.xxyy, l(1, -1, 1, -1)
    mov r16.w, r18.y
    ld_indexable(texture2d)(float,float,float,float) r0.w, r16.wyzz, t10.yzwx
    mad r6.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r6.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r17.x, |r0.w|
    lt r0.w, r17.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r17.xyz, r0.wwww, r17.xyzx, r10.zxyz
    mov r8.y, l(0)
    mov r8.z, cb1[123].w
    add r19.yz, r8.yyzy, r10.xxyx
    mov r20.xz, r16.xxzx
    mov r20.yw, r18.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.w, r20.xyzz, t10.yzwx
    mad r6.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r6.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r19.x, |r0.w|
    lt r0.w, r19.x, r17.x
    movc r17.xyz, r0.wwww, r19.xyzx, r17.xyzx
    mov r8.y, cb1[123].z
    mov r8.z, l(0)
    add r19.yz, r8.yyzy, r10.xxyx
    mov r18.yzw, r16.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.w, r18.xyzw, t10.yzwx
    mad r6.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r6.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r19.x, |r0.w|
    lt r0.w, r19.x, r17.x
    movc r16.xyz, r0.wwww, r19.xyzx, r17.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r8.yz, r10.xxyx, r13.xxyx
    ld_indexable(texture2d)(float,float,float,float) r0.w, r20.xwzz, t10.yzwx
    mad r6.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r6.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    lt r0.w, |r0.w|, r16.x
    movc r10.xy, r0.wwww, r8.yzyy, r16.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r8.yz, l(0), t9.zxyw
utof r8.yz, r8.yyzy
mul r8.yz, r8.yyzy, r10.xxyx
round_z r8.yz, r8.yyzy
ftoi r16.xy, r8.yzyy
mov r16.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r16.xyzw, t9.yzwx
mul r6.w, cb2[12].y, l(3.999000)
ftou r6.w, r6.w
and r6.w, r6.w, l(2)
movc r6.w, r6.w, cb1[164].y, l(1.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.w, r6.w, r0.w, l(1.000000)
mul r13.xyz, r0.wwww, r15.xyzx
mul r0.y, r0.w, r0.y
mul r13.xyz, r14.xyzx, r13.xyzx
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r14.xyz, r4.wwww, r14.xyzx, r15.xyzx
mad r7.xyz, r14.xyzx, r4.wwww, r7.xyzx
mul r7.xyz, r4.wwww, r7.xyzx
max r7.xyz, r4.wwww, r7.xyzx
ftou r8.yz, r11.xxyx
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r9.w, cb4[3].z
  mov r10.z, cb4[1].z
  mov r11.xy, cb4[1].xyxx
  mov r10.w, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r9.w, cb4[43].z
  mov r10.z, cb4[41].z
  mov r11.xy, cb4[41].xyxx
  mov r10.w, cb4[42].x
endif
mad r6.w, v6.w, r6.w, r7.w
log r6.w, r6.w
mul r6.w, r9.w, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.w, r10.z, l(-1)
umin r6.w, r6.w, r7.w
ushr r8.yz, r8.yyzy, r10.wwww
imad r6.w, r6.w, r11.y, r8.z
imad r6.w, r6.w, r11.x, r8.y
if_nz cb4[95].x
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r10.xy, r8.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r7.w, cb4[0].z
  mov r8.yz, cb4[6].xxzx
  mov r9.w, cb4[6].w
  mov r11.xyz, cb4[5].xyzx
  mov r14.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r8.yz, cb4[46].xxzx
  mov r9.w, cb4[46].w
  mov r11.xyz, cb4[45].xyzx
  mov r14.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r15.xyzw, r8.yyyy, l(255, 1, 2, 4)
  movc r15.xyzw, r15.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r7.w, r8.y, l(8)
  movc r16.w, r7.w, l(1.000000), l(0)
  ushr r17.xy, r8.yyyy, l(4, 8, 0, 0)
  ubfe r7.w, l(1), l(4), r8.y
  movc r18.x, r7.w, l(1.000000), l(0)
  and r17.xzw, r17.xxxx, l(2, 0, 4, 8)
  movc r18.yzw, r17.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r7.w, r18.xyzw, r10.xyzw
  lt r8.y, r9.w, l(0.000000)
  swapc r17.x, r18.x, r8.y, l(1.000000), r7.w
  if_nz r15.x
    mov r16.xyz, r15.yzwy
    dp4 r7.w, r16.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r7.w, -r7.w, l(1.000000)
    mad_sat r8.y, r13.w, r8.z, r9.w
    mul r8.y, r8.y, r8.y
    add r7.w, -r17.x, r7.w
    mad r7.w, r8.y, r7.w, r17.x
    min r8.y, r18.x, r7.w
    mul r15.x, r18.x, r7.w
    mul r15.y, r18.x, r8.y
  else
    mov r15.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r15.y, r15.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r14.xyzx, r14.xyzx
    rsq r7.w, r7.w
    mul r14.xyz, r7.wwww, r14.xyzx
    dp3 r7.w, r6.zxyz, r14.xyzx
    mov_sat r8.y, r7.w
    max r8.z, r8.w, l(0.020000)
    mov_sat r9.w, r0.z
    dp3 r11.w, r6.zxyz, r4.xyzx
    dp3 r12.w, r4.xyzx, r14.xyzx
    mad r13.w, r12.w, l(2.000000), l(2.000000)
    rsq r13.w, r13.w
    add r7.w, r7.w, r11.w
    mul_sat r7.w, r13.w, r7.w
    mad_sat r12.w, r13.w, r12.w, r13.w
    add r11.w, |r11.w|, l(0.000010)
    min r11.w, r11.w, l(1.000000)
    mul r8.z, r8.z, r8.z
    mul r8.z, r8.z, r8.z
    add r12.w, -r12.w, l(1.000000)
    mul r13.w, r12.w, r12.w
    mul r13.w, r13.w, r13.w
    mul r14.x, r12.w, r13.w
    mad r12.w, -r13.w, r12.w, l(1.000000)
    mad r13.w, -r8.z, r7.w, r7.w
    mad r7.w, r13.w, r7.w, r8.z
    mul r13.w, r8.z, l(4.000000)
    mad r14.y, r8.z, l(4.000000), l(1.000000)
    mul r14.y, r14.y, l(3.14159274)
    rcp r14.y, r14.y
    mul r8.z, r8.z, r13.w
    mul r7.w, r7.w, r7.w
    div r7.w, r8.z, r7.w
    add r7.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r14.y
    add r8.z, r8.y, r11.w
    mad r8.z, -r8.y, r11.w, r8.z
    mul r8.z, r8.z, l(4.000000)
    rcp r8.z, r8.z
    mul r11.w, r9.w, l(50.000000)
    min r11.w, r11.w, l(1.000000)
    mul r9.w, r9.w, r12.w
    mad r9.w, r11.w, r14.x, r9.w
    mul r7.w, r7.w, r8.z
    mul r7.w, r7.w, r8.y
    mul r7.w, r9.w, r7.w
    mul r14.xyz, r8.yyyy, r12.xyzx
    mad r14.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r7.wwww
    mul r11.xyz, r11.xyzx, r15.xxxx
    mul r11.xyz, r11.xyzx, r14.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r7.w, r17.y, cb2[16].w
  movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r8.y, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.y, r8.yyyy, t1.yxzw
else
  ishl r8.z, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.z, r8.zzzz, t4.yzxw
  umin r7.w, r8.z, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.y, r6.wwww, t4.yxzw
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r6.w, r6.w, r7.w
dp3 r7.w, -r4.yzxy, r6.xyzx
add r7.w, r7.w, r7.w
mad r14.xyz, r6.zxyz, -r7.wwww, -r4.xyzx
max r7.w, r8.w, l(0.020000)
mul r8.z, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
mov_sat r0.z, r0.z
dp3 r9.w, r6.zxyz, r4.xyzx
add r11.w, r9.w, r9.w
mad r12.w, r11.w, r9.w, l(-1.000000)
add r13.w, |r9.w|, l(0.000010)
min r13.w, r13.w, l(1.000000)
mul r8.z, r8.z, r8.z
mul r14.w, r8.z, l(4.000000)
mad r15.x, r8.z, l(4.000000), l(1.000000)
mul r15.x, r15.x, l(3.14159274)
rcp r15.x, r15.x
mul r14.w, r8.z, r14.w
mul r15.y, r0.z, l(50.000000)
min r15.y, r15.y, l(1.000000)
mul r16.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r17.xyz, r11.xyzx
mov r15.z, l(0)
loop
  uge r15.w, r15.z, r6.w
  breakc_nz r15.w
  iadd r15.w, r8.y, r15.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r15.wwww, t2.yzwx
    imul null, r17.w, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r17.wwww, t0.xyzw
    imad r19.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r19.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r19.wwww, t0.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t5.yzwx
    imul null, r16.w, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.wwww, t3.xyzw
    imad r23.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r23.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r23.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r23.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyz, r23.wwww, t3.xyzw
  endif
  eq r15.w, r20.w, l(0.000000)
  lt r16.w, l(-2.000000), r22.x
  add r18.xyz, -r5.xyzx, r18.xyzx
  dp3 r17.w, r18.xyzx, r18.xyzx
  rsq r19.w, r17.w
  mul r23.xyz, r18.xyzx, r19.wwww
  mul r19.w, r18.w, r18.w
  mul r17.w, r17.w, r19.w
  mad r17.w, -r17.w, r17.w, l(1.000000)
  max r17.w, r17.w, l(0.000000)
  mul r17.w, r17.w, r17.w
  mul r24.xyz, r18.wwww, r18.xyzx
  dp3 r18.w, r24.xyzx, r24.xyzx
  min r18.w, r18.w, l(1.000000)
  add r18.w, -r18.w, l(1.000000)
  log r18.w, r18.w
  mul r18.w, r18.w, r20.w
  exp r18.w, r18.w
  movc r17.w, r15.w, r17.w, r18.w
  dp3 r18.w, r23.xyzx, r21.yzwy
  add r18.w, -r22.x, r18.w
  mul_sat r18.w, r22.y, r18.w
  mul r18.w, r18.w, r18.w
  mul r18.w, r17.w, r18.w
  movc r16.w, r16.w, r18.w, r17.w
  lt r17.w, l(0.000000), r16.w
  if_nz r17.w
    and r17.w, r21.x, l(255)
    movc r17.w, r17.w, l(1), l(0)
    if_nz r17.w
      and r23.xyzw, r21.xxxx, l(1, 2, 4, 8)
      movc r23.xyzw, r23.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r17.w, r21.x, l(4)
      ubfe r18.w, l(1), l(4), r21.x
      movc r24.x, r18.w, l(1.000000), l(0)
      and r21.yzw, r17.wwww, l(0, 2, 4, 8)
      movc r24.yzw, r21.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r17.w, r24.xyzw, r10.xyzw
      dp4 r18.w, r23.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r18.w, -r18.w, l(1.000000)
      mul r21.yz, r17.wwww, r18.wwww
    else
      mov r21.yz, l(0,1.000000,1.000000,0)
    endif
    add r17.w, r21.z, r21.y
    lt r17.w, l(0.000000), r17.w
    if_nz r17.w
      f16tof32 r17.w, r22.w
      mul r18.w, r17.w, l(0.500000)
      mad r22.xyw, -r18.wwww, r19.xyxz, r18.xyxz
      mad r18.xyz, r18.wwww, r19.xyzx, r18.xyzx
      lt r18.w, l(0.000000), r17.w
      if_nz r18.w
        dp3 r19.x, r22.xywx, r22.xywx
        dp3 r19.y, r18.xyzx, r18.xyzx
        rsq r19.x, r19.x
        rsq r19.y, r19.y
        mul r19.z, r19.y, r19.x
        dp3 r19.w, r22.xywx, r18.xyzx
        mul r19.w, r19.z, r19.w
        mad r19.w, r19.w, l(0.500000), r19.z
        add r19.w, r19.w, l(0.500000)
        div r23.y, r19.z, r19.w
        dp3 r19.z, r6.zxyz, r22.xywx
        dp3 r19.w, r6.zxyz, r18.xyzx
        mul r19.y, r19.y, r19.w
        mad r19.x, r19.z, r19.x, r19.y
        mul r23.x, r19.x, l(0.500000)
      else
        dp3 r19.x, r22.xywx, r22.xywx
        add r19.y, r19.x, l(1.000000)
        rcp r23.y, r19.y
        rsq r19.x, r19.x
        mul r19.xyz, r19.xxxx, r22.xywx
        dp3 r23.x, r6.zxyz, r19.xyzx
      endif
      lt r19.x, l(0.000000), r22.z
      mul r19.y, r22.z, r22.z
      mul_sat r19.y, r23.y, r19.y
      sqrt r19.y, r19.y
      lt r19.z, r23.x, r19.y
      max r19.w, -r19.y, r23.x
      add r19.w, r19.w, r19.y
      mul r19.w, r19.w, r19.w
      mul r19.y, r19.y, l(4.000000)
      div r19.y, r19.w, r19.y
      movc r19.y, r19.z, r19.y, r23.x
      movc_sat r19.x, r19.x, r19.y, r23.x
      movc r15.w, r15.w, r23.y, l(1.000000)
      add r18.xyz, -r22.xywx, r18.xyzx
      dp3 r19.y, r14.xyzx, r18.xyzx
      mad r23.xyz, r19.yyyy, r14.xyzx, -r18.xyzx
      dp3 r19.z, r22.xywx, r23.xyzx
      mul r19.y, r19.y, r19.y
      mad r17.w, r17.w, r17.w, -r19.y
      div_sat r17.w, r19.z, r17.w
      mad r18.xyz, r17.wwww, r18.xyzx, r22.xywx
      movc r18.xyz, r18.wwww, r18.xyzx, r22.xywx
      dp3 r17.w, r18.xyzx, r18.xyzx
      rsq r17.w, r17.w
      mul r18.xyz, r17.wwww, r18.xyzx
      mul r17.w, r17.w, r22.z
      mul_sat r17.w, r7.w, r17.w
      dp3 r18.w, r6.zxyz, r18.xyzx
      dp3 r18.x, r4.xyzx, r18.xyzx
      mad r18.y, r18.x, l(2.000000), l(2.000000)
      rsq r18.y, r18.y
      add r18.z, r9.w, r18.w
      mul_sat r18.z, r18.y, r18.z
      mad_sat r18.y, r18.y, r18.x, r18.y
      lt r19.y, l(0.000000), r17.w
      if_nz r19.y
        mad r19.y, -r17.w, r17.w, l(1.000000)
        sqrt r19.y, r19.y
        dp2 r19.z, r9.wwww, r18.wwww
        add r19.w, -r18.x, r19.z
        ge r20.w, r19.w, r19.y
        if_nz r20.w
          mov r18.z, l(1.000000)
          mov r18.y, |r9.w|
        else
          mad r20.w, -r19.w, r19.w, l(1.000000)
          rsq r20.w, r20.w
          mul r17.w, r17.w, r20.w
          mad r20.w, -r19.w, r18.w, r9.w
          mul r21.z, r17.w, r20.w
          mad r19.w, -r19.w, r18.x, r12.w
          mul r21.w, r18.w, r18.w
          mad r21.w, -r9.w, r9.w, -r21.w
          add r21.w, r21.w, l(1.000000)
          mad r21.w, -r18.x, r18.x, r21.w
          mad_sat r19.z, r19.z, r18.x, r21.w
          sqrt r19.z, r19.z
          mul r19.zw, r17.wwww, r19.zzzw
          mul r21.w, r9.w, r19.z
          add r22.x, r21.w, r21.w
          mad r22.y, r18.w, r19.y, r9.w
          mad r17.w, r17.w, r20.w, r22.y
          mad r20.w, r18.x, r19.y, r19.w
          add r20.w, r20.w, l(1.000000)
          mul r22.z, r19.z, r20.w
          mul r22.w, r17.w, r20.w
          mul r23.x, r17.w, r22.x
          mul r21.w, r21.w, r17.w
          mul r21.w, r21.w, l(0.500000)
          mad r21.w, r22.z, l(-0.500000), r21.w
          mul r21.w, r21.w, r22.w
          mad r23.y, -r22.z, l(2.000000), r23.x
          mul r23.x, r23.y, r23.x
          mad r22.z, r22.z, r22.z, r23.x
          mul r23.x, r20.w, r20.w
          mad r20.w, r18.x, r19.y, r20.w
          mad r20.w, r20.w, l(-0.500000), l(-0.500000)
          mul r20.w, r20.w, r22.w
          mad r20.w, r22.y, r23.x, r20.w
          mad r17.w, r17.w, r20.w, r22.z
          add r20.w, r21.w, r21.w
          mul r22.y, r21.w, r21.w
          mad r22.y, r17.w, r17.w, r22.y
          div r20.w, r20.w, r22.y
          mul r17.w, r17.w, r20.w
          mad r20.w, -r20.w, r21.w, l(1.000000)
          mul r19.z, r19.z, r17.w
          mad r19.z, r20.w, r21.z, r19.z
          mul r17.w, r22.x, r17.w
          mad r17.w, r20.w, r19.w, r17.w
          mad r18.w, r18.w, r19.y, r19.z
          mad r17.w, r18.x, r19.y, r17.w
          mad r18.x, r17.w, l(2.000000), l(2.000000)
          rsq r18.x, r18.x
          add r18.w, r9.w, r18.w
          mul_sat r18.z, r18.x, r18.w
          mad_sat r18.y, r18.x, r17.w, r18.x
        endif
      endif
      mul r15.w, r19.x, r15.w
      add r17.w, -r18.y, l(1.000000)
      mul r18.x, r17.w, r17.w
      mul r18.x, r18.x, r18.x
      mul r18.y, r17.w, r18.x
      mad r17.w, -r18.x, r17.w, l(1.000000)
      mad r18.x, -r8.z, r18.z, r18.z
      mad r18.x, r18.x, r18.z, r8.z
      mul r18.x, r18.x, r18.x
      div r18.x, r14.w, r18.x
      add r18.x, r18.x, l(1.000000)
      mul r18.x, r15.x, r18.x
      add r18.z, r13.w, r19.x
      mad r18.z, -r19.x, r13.w, r18.z
      mul r18.z, r18.z, l(4.000000)
      rcp r18.z, r18.z
      mul r17.w, r0.z, r17.w
      mad r17.w, r15.y, r18.y, r17.w
      mul r18.x, r18.z, r18.x
      mul r18.x, r15.w, r18.x
      mul r17.w, r17.w, r18.x
      mad r18.xyz, r15.wwww, r16.xyzx, r17.wwww
      mul r19.xyz, r16.wwww, r20.xyzx
      mul r19.xyz, r21.yyyy, r19.xyzx
      mul r18.xyz, r18.xyzx, r19.xyzx
    else
      mov r18.xyz, l(0,0,0,0)
    endif
  else
    mov r18.xyz, l(0,0,0,0)
  endif
  ushr r15.w, r21.x, l(8)
  and r15.w, r15.w, cb2[16].w
  add r18.xyz, r17.xyzx, r18.xyzx
  movc r17.xyz, r15.wwww, r18.xyzx, r17.xyzx
  iadd r15.z, r15.z, l(1)
endloop
mad r6.xyz, r11.wwww, r6.zxyz, -r4.xyzx
mov_sat r9.w, r9.w
log r0.x, r8.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r0.z, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r0.z
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r0.z, r8.w, cb1[165].x, cb1[165].y
mad r6.x, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.z, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mul r6.xyzw, r9.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mad r0.xyz, r6.yzwy, r0.yyyy, -r4.xyzx
mad r0.xyz, r8.xxxx, r0.xyzx, r4.xyzx
mad r8.xyzw, r8.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r4.x, r8.x, r8.x
mul r4.y, r9.w, l(-9.280000)
exp r4.y, r4.y
min r4.x, r4.y, r4.x
mad r4.x, r4.x, r8.x, r8.y
mad r4.xy, r4.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r8.zwzz
mov_sat r6.x, r6.x
mul r4.y, r4.y, r6.x
mad r4.xyz, r9.xyzx, r4.xxxx, r4.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
mad r4.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r8.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r4.wwww, r8.xyzx
mul r4.xyz, r4.wwww, r4.xyzx
max r4.xyz, r4.xyzx, r4.wwww
mad r0.xyz, r0.xyzx, r4.xyzx, r17.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r9.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r12.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
