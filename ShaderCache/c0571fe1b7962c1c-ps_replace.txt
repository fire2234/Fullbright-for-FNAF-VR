// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 19:02:23 2019
Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

Texture2D<float4> t13 : register(t13);

Texture2D<float4> t12 : register(t12);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t10 : register(t10);

Texture3D<float4> t9 : register(t9);

TextureCubeArray<float4> t8 : register(t8);

Buffer<uint4> t7 : register(t7);

Buffer<uint4> t6 : register(t6);

Buffer<float4> t5 : register(t5);

Buffer<uint4> t4 : register(t4);

Buffer<uint4> t3 : register(t3);

Buffer<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s9_s : register(s9);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[4];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[22];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[177];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD4,
  nointerpolation uint v4 : PACKED_EYE_INDEX0,
  float4 v5 : TEXCOORD7,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v4.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.y = cb1[128].w;
    r0.zw = cb1[129].xy;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r9.xyz = cb1[128].xyz;
    r10.xy = cb1[121].xy;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.y = cb3[128].w;
    r0.zw = cb3[129].xy;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r9.xyz = cb3[128].xyz;
    r10.xy = cb3[121].xy;
  }
  r11.xyz = v1.xyz * v0.zxy;
  r11.xyz = v1.zxy * v0.xyz + -r11.xyz;
  r11.xyz = v1.www * r11.xyz;
  r12.xyz = v6.xyz;
  r12.w = 1;
  r4.x = dot(r12.xyzw, r4.xyzw);
  r4.y = dot(r12.xyzw, r5.xyzw);
  r4.z = dot(r12.xyzw, r6.xyzw);
  r4.w = dot(r12.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r6.xy = t12.SampleBias(s6_s, v2.xy, cb1[133].x).xy;
  r6.xy = r6.xy * float2(2,2) + float2(-1,-1);
  r4.w = dot(r6.xy, r6.xy);
  r4.w = 1 + -r4.w;
  r4.w = max(0, r4.w);
  r6.z = sqrt(r4.w);
  r6.xyz = r6.xyz * r0.yyy + r9.xyz;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = r6.yyy * r11.xyz;
  r6.xyw = r6.xxx * v0.yzx + r7.xyz;
  r6.xyz = r6.zzz * v1.yzx + r6.xyw;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = t13.SampleBias(s7_s, v2.xy, cb1[133].x).xyz;
  r8.yzw = t14.SampleBias(s8_s, v2.xy, cb1[133].x).zxy;
  r0.y = saturate(cb6[3].x + r8.w);
  r4.w = t15.SampleBias(s9_s, v2.xy, cb1[133].x).x;
  r9.w = saturate(cb6[3].y * r4.w);
  r7.xyz = saturate(r7.xyz);
  r8.yz = saturate(r8.yz);
  r0.y = r0.y * r0.w + r0.z;
  r11.xyzw = t11.Sample(s5_s, v3.zw).xyzw;
  r12.xyzw = cb5[7].xyzw * float4(-0.5,-0.5,-0.5,-0.5) + float4(0.5,0.5,0.5,0.5);
  r11.xyzw = saturate(r11.xyzw * cb5[7].xyzw + r12.xyzw);
  r11.xyzw = r11.xyzw * r11.xyzw;
  r11.xyzw = cb5[6].xyzw * r11.xyzw;
  r12.xyz = float3(-0.0399999991,-0.0399999991,-0.0399999991) + r7.xyz;
  r12.xyz = r8.yyy * r12.xyz + float3(0.0399999991,0.0399999991,0.0399999991);
  r13.xyz = -r7.xyz * r8.yyy + r7.xyz;
  r13.xyz = r13.xyz * cb1[126].www + cb1[126].xyz;
  r12.xyz = r12.xyz * cb1[127].www + cb1[127].xyz;
  r0.zw = float2(1,0.5) * v3.xy;
  r8.yw = v3.xy * float2(1,0.5) + float2(0,0.5);
  r14.xyzw = t10.Sample(s4_s, r0.zw).xyzw;
  r15.xyzw = t10.Sample(s4_s, r8.yw).xyzw;
  r0.z = r15.w * 0.00392156886 + r14.w;
  r0.z = -0.00196078443 + r0.z;
  r0.z = r0.z * cb5[18].w + cb5[20].w;
  r14.xyz = r14.xyz * r14.xyz;
  r14.xyz = r14.xyz * cb5[18].xyz + cb5[20].xyz;
  r0.z = exp2(r0.z);
  r0.z = -0.0185813606 + r0.z;
  r15.xyzw = r15.xyzw * cb5[19].xyzw + cb5[21].xyzw;
  r6.w = 1;
  r0.w = dot(r15.xyzw, r6.xyzw);
  r0.w = max(0, r0.w);
  r0.z = r0.z * r0.w;
  r14.xyz = r0.zzz * r14.xyz;
  r14.xyz = cb1[146].xyz * r14.xyz;
  r0.z = dot(r14.xyz, float3(0.300000012,0.589999974,0.109999999));
  r14.xyz = r14.xyz * r13.xyz;
  r15.xyz = r7.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r16.xyz = r7.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + float3(0.641700029,0.641700029,0.641700029);
  r7.xyz = r7.xyz * float3(2.75519991,2.75519991,2.75519991) + float3(0.690299988,0.690299988,0.690299988);
  r15.xyz = r8.zzz * r15.xyz + r16.xyz;
  r7.xyz = r15.xyz * r8.zzz + r7.xyz;
  r7.xyz = r7.xyz * r8.zzz;
  r7.xyz = max(r8.zzz, r7.xyz);
  r8.yw = v6.xy + -r10.xy;
  r8.yw = (uint2)r8.yw;
  if (r0.x == 0) {
    r0.w = cb4[3].x;
    r4.w = cb4[3].y;
    r6.w = cb4[3].z;
    r7.w = cb4[1].z;
    r10.xy = cb4[1].xy;
    r10.z = cb4[2].x;
  } else {
    r0.w = cb4[43].x;
    r4.w = cb4[43].y;
    r6.w = cb4[43].z;
    r7.w = cb4[41].z;
    r10.xy = cb4[41].xy;
    r10.z = cb4[42].x;
  }
  r0.w = v6.w * r0.w + r4.w;
  r0.w = log2(r0.w);
  r0.w = r0.w * r6.w;
  r0.w = max(0, r0.w);
  r0.w = (uint)r0.w;
  r4.w = (int)r7.w + -1;
  r0.w = min((uint)r4.w, (uint)r0.w);
  r8.yw = (uint2)r8.yw >> (uint2)r10.zz;
  r0.w = mad((int)r0.w, (int)r10.y, (int)r8.w);
  r0.w = mad((int)r0.w, (int)r10.x, (int)r8.y);
  if (r0.x == 0) {
    r4.w = cb4[0].z;
    r6.w = cb4[6].x;
    r7.w = cb4[6].z;
    r8.y = cb4[6].w;
    r10.xyz = cb4[5].xyz;
    r15.xyz = cb4[4].xyz;
  } else {
    r4.w = cb4[40].z;
    r6.w = cb4[46].x;
    r7.w = cb4[46].z;
    r8.y = cb4[46].w;
    r10.xyz = cb4[45].xyz;
    r15.xyz = cb4[44].xyz;
  }
  if (r4.w != 0) {
    r16.xyzw = (int4)r6.wwww & int4(255,2,4,8);
    r16.xyzw = r16.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb4[30].y != 0) {
      r17.xyzw = cb4[33].xyzw * r5.yyyy;
      r17.xyzw = r5.xxxx * cb4[32].xyzw + r17.xyzw;
      r17.xyzw = r5.zzzz * cb4[34].xyzw + r17.xyzw;
      r17.xyzw = cb4[35].xyzw + r17.xyzw;
      r17.xy = r17.xy / r17.ww;
      r18.xy = cmp(r17.xy >= float2(0,0));
      r18.zw = cmp(float2(1,1) >= r17.xy);
      r18.xy = r18.zw ? r18.xy : 0;
      r4.w = r18.y ? r18.x : 0;
      if (r4.w != 0) {
        r4.w = t1.SampleLevel(s2_s, r17.xy, 0).x;
        r8.w = cmp(r17.z < r4.w);
        r4.w = cmp(0.99000001 < r4.w);
        r4.w = (int)r4.w | (int)r8.w;
        r11.x = r4.w ? 1.000000 : 0;
      } else {
        r11.x = 1;
      }
    } else {
      r11.x = 1;
    }
    if (cb4[7].x != 0) {
      r4.w = cb4[7].x;
      r8.w = 0;
      while (true) {
        r10.w = cmp((uint)r8.w >= asuint(cb4[7].x));
        if (r10.w != 0) break;
        r10.w = dot(cb4[8].xyzw, icb[r8.w+0].xyzw);
        r10.w = cmp(v6.w < r10.w);
        if (r10.w != 0) {
          r4.w = r8.w;
          break;
        }
        r8.w = (int)r8.w + 1;
      }
      r8.w = cmp((uint)r4.w < asuint(cb4[7].x));
      if (r8.w != 0) {
        r8.w = (uint)r4.w << 2;
        r17.xyzw = cb4[r8.w+10].xyzw * r5.yyyy;
        r17.xyzw = r5.xxxx * cb4[r8.w+9].xyzw + r17.xyzw;
        r17.xyzw = r5.zzzz * cb4[r8.w+11].xyzw + r17.xyzw;
        r17.xyzw = cb4[r8.w+12].xyzw + r17.xyzw;
        r18.xyzw = r17.xyxy / r17.wwww;
        r17.xy = cmp(r18.zw >= cb4[r4.w+25].xy);
        r19.xy = cmp(cb4[r4.w+25].zw >= r18.zw);
        r17.xy = r17.xy ? r19.xy : 0;
        r4.w = r17.y ? r17.x : 0;
        if (r4.w != 0) {
          r18.xyzw = r18.xyzw * cb4[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r17.xy = frac(r18.zw);
          r18.xyzw = floor(r18.xyzw);
          r19.xyzw = float4(0.5,1.5,0.5,0.5) + r18.zwzw;
          r19.xyzw = cb4[29].zwzw * r19.xyzw;
          r20.x = t0.SampleLevel(s1_s, r19.xy, 0).x;
          r18.xyzw = float4(1.5,1.5,1.5,0.5) + r18.xyzw;
          r18.xyzw = cb4[29].zwzw * r18.xyzw;
          r20.y = t0.SampleLevel(s1_s, r18.xy, 0).x;
          r20.z = t0.SampleLevel(s1_s, r18.zw, 0).x;
          r20.w = t0.SampleLevel(s1_s, r19.zw, 0).x;
          r18.xyzw = r20.xyzw + -r17.zzzz;
          r18.xyzw = saturate(r18.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r17.zw = r18.zy + -r18.wx;
          r17.xz = r17.xx * r17.zw + r18.wx;
          r4.w = r17.z + -r17.x;
          r4.w = r17.y * r4.w + r17.x;
        } else {
          r4.w = 1;
        }
      } else {
        r4.w = 1;
      }
    } else {
      r4.w = 1;
    }
    if (r16.x != 0) {
      r16.x = 1;
      r8.w = dot(float4(1,1,1,1), r16.xyzw);
      r10.w = dot(r11.xyzw, r16.xyzw);
      r10.w = -1 + r10.w;
      r8.w = r8.w * r10.w + 1;
      r7.w = saturate(v6.w * r7.w + r8.y);
      r7.w = r7.w * r7.w;
      r8.y = r8.w + -r4.w;
      r16.x = r7.w * r8.y + r4.w;
      r16.y = min(1, r16.x);
    } else {
      r16.xy = float2(1,1);
    }
    r4.w = r16.x + r16.y;
    r4.w = cmp(0 < r4.w);
    if (r4.w != 0) {
      r4.w = dot(r15.xyz, r15.xyz);
      r4.w = rsqrt(r4.w);
      r15.xyz = r15.xyz * r4.www;
      r4.w = dot(r6.zxy, r15.xyz);
      r7.w = saturate(r4.w);
      r8.y = max(0.0199999996, r0.y);
      r8.w = dot(r6.zxy, r4.xyz);
      r10.w = dot(r4.xyz, r15.xyz);
      r12.w = r10.w * 2 + 2;
      r12.w = rsqrt(r12.w);
      r4.w = r8.w + r4.w;
      r4.w = saturate(r4.w * r12.w);
      r10.w = saturate(r12.w * r10.w + r12.w);
      r8.w = 9.99999975e-006 + abs(r8.w);
      r8.w = min(1, r8.w);
      r15.xyz = r13.xyz * r7.www;
      r12.w = r8.y * r8.y;
      r13.w = r12.w * r12.w;
      r14.w = r4.w * r13.w + -r4.w;
      r4.w = r14.w * r4.w + 1;
      r4.w = r4.w * r4.w;
      r4.w = 3.14159274 * r4.w;
      r4.w = r13.w / r4.w;
      r8.y = -r8.y * r8.y + 1;
      r13.w = r8.w * r8.y + r12.w;
      r8.y = r7.w * r8.y + r12.w;
      r8.y = r8.w * r8.y;
      r8.y = r7.w * r13.w + r8.y;
      r8.y = rcp(r8.y);
      r4.w = r8.y * r4.w;
      r8.y = 1 + -r10.w;
      r8.w = r8.y * r8.y;
      r8.w = r8.w * r8.w;
      r10.w = r8.w * r8.y;
      r12.w = saturate(50 * r12.y);
      r8.y = -r8.w * r8.y + 1;
      r16.yzw = r8.yyy * r12.xyz;
      r16.yzw = r12.www * r10.www + r16.yzw;
      r4.w = 0.5 * r4.w;
      r16.yzw = r4.www * r16.yzw;
      r16.yzw = r16.yzw * r7.www;
      r15.xyz = r15.xyz * float3(0.318309873,0.318309873,0.318309873) + r16.yzw;
      r10.xyz = r16.xxx * r10.xyz;
      r10.xyz = r15.xyz * r10.xyz;
    } else {
      r10.xyz = float3(0,0,0);
    }
    r4.w = (uint)r6.w >> 8;
    r4.w = (int)r4.w & asint(cb2[16].w);
    r10.xyz = r4.www ? r10.xyz : float3(0,0,0);
  } else {
    r10.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r4.w = (uint)r0.w << 1;
    r4.w = t3.Load(r4.w).x;
    r4.w = min(asuint(cb4[0].x), (uint)r4.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r6.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r6.w = t3.Load(r6.w).x;
  } else {
    r7.w = (uint)r0.w << 1;
    r7.w = t6.Load(r7.w).x;
    r4.w = min(asuint(cb4[40].x), (uint)r7.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r0.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r6.w = t6.Load(r0.w).x;
  }
  r0.w = r0.x ? cb4[40].x : cb4[0].x;
  r0.w = min((uint)r4.w, (uint)r0.w);
  r4.w = dot(-r4.yzx, r6.xyz);
  r4.w = r4.w + r4.w;
  r15.xyz = r6.zxy * -r4.www + -r4.xyz;
  r4.w = max(0.0199999996, r0.y);
  r7.w = r4.w * r4.w;
  r4.w = -r4.w * r4.w + 1;
  r8.y = dot(r6.zxy, r4.xyz);
  r8.w = r8.y + r8.y;
  r10.w = r8.w * r8.y + -1;
  r12.w = 9.99999975e-006 + abs(r8.y);
  r12.w = min(1, r12.w);
  r16.xyz = float3(0.318309873,0.318309873,0.318309873) * r13.xyz;
  r13.w = r7.w * r7.w;
  r17.xyzw = float4(50,0.449999988,0.449999988,0.449999988) * r12.yxyz;
  r17.x = saturate(r17.x);
  r18.y = 1;
  r19.xyz = r10.xyz;
  r14.w = 0;
  while (true) {
    r15.w = cmp((uint)r14.w >= (uint)r0.w);
    if (r15.w != 0) break;
    r15.w = (int)r6.w + (int)r14.w;
    if (r0.x == 0) {
      r16.w = t4.Load(r15.w).x;
      r18.z = (int)r16.w * 5;
      r20.xyzw = t2.Load(r18.z).xyzw;
      r21.xyzw = mad((int4)r16.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r22.xyzw = t2.Load(r21.x).xyzw;
      r23.xyzw = t2.Load(r21.y).wxyz;
      r24.xyzw = t2.Load(r21.z).xyzw;
      r21.xyzw = t2.Load(r21.w).wxyz;
    } else {
      r15.w = t7.Load(r15.w).x;
      r16.w = (int)r15.w * 5;
      r20.xyzw = t5.Load(r16.w).xyzw;
      r25.xyzw = mad((int4)r15.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r22.xyzw = t5.Load(r25.x).xyzw;
      r23.xyzw = t5.Load(r25.y).wxyz;
      r24.xyzw = t5.Load(r25.z).xyzw;
      r21.xyzw = t5.Load(r25.w).wxyz;
    }
    r15.w = cmp(r22.w == 0.000000);
    r16.w = cmp(-2 < r24.x);
    r20.xyz = r20.xyz + -r5.xyz;
    r18.z = dot(r20.xyz, r20.xyz);
    r18.w = rsqrt(r18.z);
    r25.xyz = r20.xyz * r18.www;
    r18.w = r20.w * r20.w;
    r18.z = r18.z * r18.w;
    r18.z = -r18.z * r18.z + 1;
    r18.z = max(0, r18.z);
    r18.z = r18.z * r18.z;
    r26.xyz = r20.xyz * r20.www;
    r18.w = dot(r26.xyz, r26.xyz);
    r18.w = min(1, r18.w);
    r18.w = 1 + -r18.w;
    r18.w = log2(r18.w);
    r18.w = r22.w * r18.w;
    r18.w = exp2(r18.w);
    r18.z = r15.w ? r18.z : r18.w;
    r18.w = dot(r25.xyz, r23.yzw);
    r18.w = r18.w + -r24.x;
    r18.w = saturate(r18.w * r24.y);
    r18.w = r18.w * r18.w;
    r18.w = r18.z * r18.w;
    r16.w = r16.w ? r18.w : r18.z;
    r18.z = cmp(0 < r16.w);
    if (r18.z != 0) {
      r18.z = (int)r23.x & 255;
      r18.z = r18.z ? 1 : 0;
      if (r18.z != 0) {
        r25.xyzw = (int4)r23.xxxx & int4(1,2,4,8);
        r25.xyzw = r25.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r18.z = (uint)r23.x >> 4;
        if (1 == 0) r18.w = 0; else if (1+4 < 32) {         r18.w = (uint)r23.x << (32-(1 + 4)); r18.w = (uint)r18.w >> (32-1);        } else r18.w = (uint)r23.x >> 4;
        r26.x = r18.w ? 1 : 0;
        r23.yzw = (int3)r18.zzz & int3(2,4,8);
        r26.yzw = r23.yzw ? float3(1,1,1) : float3(0,0,0);
        r18.z = dot(r26.xyzw, float4(1,1,1,1));
        r18.w = dot(r25.xyzw, float4(1,1,1,1));
        r19.w = dot(r11.xyzw, r25.xyzw);
        r19.w = -1 + r19.w;
        r18.w = r18.w * r19.w + 1;
        r18.zw = r18.zz * r18.ww;
      } else {
        r18.zw = float2(1,1);
      }
      r18.w = r18.z + r18.w;
      r18.w = cmp(0 < r18.w);
      if (r18.w != 0) {
        r18.w = f16tof32(r24.w);
        r19.w = 0.5 * r18.w;
        r23.yzw = -r19.www * r21.yzw + r20.xyz;
        r20.xyz = r19.www * r21.yzw + r20.xyz;
        r19.w = cmp(0 < r18.w);
        if (r19.w != 0) {
          r20.w = dot(r23.yzw, r23.yzw);
          r21.y = dot(r20.xyz, r20.xyz);
          r20.w = rsqrt(r20.w);
          r21.y = rsqrt(r21.y);
          r21.z = r21.y * r20.w;
          r21.w = dot(r23.yzw, r20.xyz);
          r21.w = r21.w * r21.z;
          r22.w = r21.w * 0.5 + r21.z;
          r22.w = 0.5 + r22.w;
          r24.y = r21.z / r22.w;
          r21.z = dot(r6.zxy, r23.yzw);
          r22.w = dot(r6.zxy, r20.xyz);
          r21.y = r22.w * r21.y;
          r20.w = r21.z * r20.w + r21.y;
          r24.x = 0.5 * r20.w;
        } else {
          r20.w = dot(r23.yzw, r23.yzw);
          r21.y = 1 + r20.w;
          r24.y = rcp(r21.y);
          r20.w = rsqrt(r20.w);
          r25.xyz = r23.yzw * r20.www;
          r24.x = dot(r6.zxy, r25.xyz);
          r21.w = 1;
        }
        r20.w = cmp(0 < r24.z);
        r21.y = r24.z * r24.z;
        r21.y = saturate(r21.y * r24.y);
        r21.y = sqrt(r21.y);
        r21.z = cmp(r24.x < r21.y);
        r22.w = max(r24.x, -r21.y);
        r22.w = r22.w + r21.y;
        r22.w = r22.w * r22.w;
        r21.y = 4 * r21.y;
        r21.y = r22.w / r21.y;
        r21.y = r21.z ? r21.y : r24.x;
        r20.w = saturate(r20.w ? r21.y : r24.x);
        r15.w = r15.w ? r24.y : 1;
        r20.xyz = r20.xyz + -r23.yzw;
        r21.y = dot(r15.xyz, r20.xyz);
        r24.xyw = r21.yyy * r15.xyz + -r20.xyz;
        r21.z = dot(r23.yzw, r24.xyw);
        r21.y = r21.y * r21.y;
        r18.w = r18.w * r18.w + -r21.y;
        r18.w = saturate(r21.z / r18.w);
        r20.xyz = r18.www * r20.xyz + r23.yzw;
        r20.xyz = r19.www ? r20.xyz : r23.yzw;
        r18.w = dot(r20.xyz, r20.xyz);
        r18.w = rsqrt(r18.w);
        r20.xyz = r20.xyz * r18.www;
        r19.w = r24.z * r18.w;
        r19.w = saturate(r19.w * r4.w);
        r18.w = saturate(r21.x * r18.w);
        r21.x = dot(r6.zxy, r20.xyz);
        r20.x = dot(r4.xyz, r20.xyz);
        r20.y = r20.x * 2 + 2;
        r20.y = rsqrt(r20.y);
        r20.z = r21.x + r8.y;
        r20.z = saturate(r20.z * r20.y);
        r20.y = saturate(r20.y * r20.x + r20.y);
        r21.y = cmp(0 < r19.w);
        if (r21.y != 0) {
          r21.z = -r19.w * r19.w + 1;
          r21.z = sqrt(r21.z);
          r22.w = dot(r8.yy, r21.xx);
          r23.y = r22.w + -r20.x;
          r23.z = cmp(r23.y >= r21.z);
          if (r23.z != 0) {
            r20.z = 1;
            r20.y = abs(r8.y);
          } else {
            r23.z = -r23.y * r23.y + 1;
            r23.z = rsqrt(r23.z);
            r23.z = r23.z * r19.w;
            r23.w = -r23.y * r21.x + r8.y;
            r24.x = r23.z * r23.w;
            r23.y = -r23.y * r20.x + r10.w;
            r23.y = r23.z * r23.y;
            r24.y = r21.x * r21.x;
            r24.y = -r8.y * r8.y + -r24.y;
            r24.y = 1 + r24.y;
            r24.y = -r20.x * r20.x + r24.y;
            r22.w = saturate(r22.w * r20.x + r24.y);
            r22.w = sqrt(r22.w);
            r22.w = r23.z * r22.w;
            r24.y = r22.w * r8.y;
            r24.z = r24.y + r24.y;
            r24.w = r21.x * r21.z + r8.y;
            r23.z = r23.z * r23.w + r24.w;
            r23.w = r20.x * r21.z + r23.y;
            r23.w = 1 + r23.w;
            r25.x = r23.w * r22.w;
            r25.y = r23.z * r23.w;
            r25.z = r24.z * r23.z;
            r24.y = r23.z * r24.y;
            r24.y = 0.5 * r24.y;
            r24.y = r25.x * -0.5 + r24.y;
            r24.y = r25.y * r24.y;
            r25.w = -r25.x * 2 + r25.z;
            r25.z = r25.z * r25.w;
            r25.x = r25.x * r25.x + r25.z;
            r25.z = r23.w * r23.w;
            r23.w = r20.x * r21.z + r23.w;
            r23.w = r23.w * -0.5 + -0.5;
            r23.w = r25.y * r23.w;
            r23.w = r24.w * r25.z + r23.w;
            r23.z = r23.z * r23.w + r25.x;
            r23.w = r24.y + r24.y;
            r24.w = r24.y * r24.y;
            r24.w = r23.z * r23.z + r24.w;
            r23.w = r23.w / r24.w;
            r23.z = r23.w * r23.z;
            r23.w = -r23.w * r24.y + 1;
            r22.w = r23.z * r22.w;
            r22.w = r23.w * r24.x + r22.w;
            r23.z = r23.z * r24.z;
            r23.y = r23.w * r23.y + r23.z;
            r21.x = r21.x * r21.z + r22.w;
            r20.x = r20.x * r21.z + r23.y;
            r21.z = r20.x * 2 + 2;
            r21.z = rsqrt(r21.z);
            r21.x = r21.x + r8.y;
            r20.z = saturate(r21.x * r21.z);
            r20.y = saturate(r21.z * r20.x + r21.z);
          }
        }
        r15.w = r15.w * r20.w;
        r20.x = cmp(0 < r18.w);
        r18.w = r18.w * r18.w;
        r21.x = r20.y * 3.5999999 + 0.400000006;
        r18.w = r18.w / r21.x;
        r18.w = r7.w * r7.w + r18.w;
        r18.w = min(1, r18.w);
        r18.x = r20.x ? r18.w : r13.w;
        r18.w = 0.25 * r19.w;
        r20.x = (uint)r18.x >> 1;
        r20.x = (int)r20.x + 0x1fbd1df5;
        r19.w = r20.x * 3 + r19.w;
        r18.w = r19.w * r18.w;
        r19.w = 0.00100000005 + r20.y;
        r18.w = r18.w / r19.w;
        r24.x = r18.x + r18.w;
        r24.y = r18.x / r24.x;
        r21.xy = r21.yy ? r24.xy : r18.xy;
        r18.w = cmp(r21.w < 1);
        r20.x = 1.00010002 + -r21.w;
        r21.z = 1 + r21.w;
        r20.x = r20.x / r21.z;
        r20.x = sqrt(r20.x);
        r21.z = 0.25 * r20.x;
        r21.w = (uint)r21.x >> 1;
        r21.w = (int)r21.w + 0x1fbd1df5;
        r20.x = r21.w * 3 + r20.x;
        r20.x = r21.z * r20.x;
        r19.w = r20.x / r19.w;
        r19.w = r21.x + r19.w;
        r19.w = r21.x / r19.w;
        r19.w = sqrt(r19.w);
        r19.w = r21.y * r19.w;
        r18.w = r18.w ? r19.w : r21.y;
        r19.w = r20.z * r18.x + -r20.z;
        r19.w = r19.w * r20.z + 1;
        r19.w = r19.w * r19.w;
        r19.w = 3.14159274 * r19.w;
        r19.w = r18.x / r19.w;
        r18.w = r19.w * r18.w;
        r18.x = sqrt(r18.x);
        r19.w = 1 + -r18.x;
        r20.x = r12.w * r19.w + r18.x;
        r18.x = r20.w * r19.w + r18.x;
        r18.x = r18.x * r12.w;
        r18.x = r20.w * r20.x + r18.x;
        r18.x = rcp(r18.x);
        r18.x = r18.w * r18.x;
        r18.w = 1 + -r20.y;
        r19.w = r18.w * r18.w;
        r19.w = r19.w * r19.w;
        r20.x = r19.w * r18.w;
        r18.w = -r19.w * r18.w + 1;
        r20.yzw = r18.www * r12.xyz;
        r20.xyz = r17.xxx * r20.xxx + r20.yzw;
        r18.x = 0.5 * r18.x;
        r20.xyz = r18.xxx * r20.xyz;
        r20.xyz = r20.xyz * r15.www;
        r20.xyz = r15.www * r16.xyz + r20.xyz;
        r21.xyz = r22.xyz * r16.www;
        r18.xzw = r21.xyz * r18.zzz;
        r18.xzw = r20.xyz * r18.xzw;
      } else {
        r18.xzw = float3(0,0,0);
      }
    } else {
      r18.xzw = float3(0,0,0);
    }
    r15.w = (uint)r23.x >> 8;
    r15.w = (int)r15.w & asint(cb2[16].w);
    r18.xzw = r19.xyz + r18.xzw;
    r19.xyz = r15.www ? r18.xzw : r19.xyz;
    r14.w = (int)r14.w + 1;
  }
  r4.xyz = r8.www * r6.zxy + -r4.xyz;
  r8.y = saturate(r8.y);
  r0.x = log2(r0.y);
  r0.x = -r0.x * 1.20000005 + 1;
  r0.w = -1 + cb1[163].z;
  r0.x = r0.w + -r0.x;
  r4.w = asint(cb0[28].x);
  r4.xyz = t8.SampleLevel(s3_s, r4.xyzw, r0.x).xyz;
  r4.xyz = cb0[31].xxx * r4.xyz;
  r4.xyz = cb1[146].xyz * r4.xyz;
  r0.x = dot(cb1[146].xyz, float3(0.300000012,0.589999974,0.109999999));
  r0.x = cb0[29].w * r0.x;
  r0.w = saturate(r0.y * cb1[165].x + cb1[165].y);
  r4.w = r0.w * -2 + 3;
  r0.w = r0.w * r0.w;
  r0.w = r4.w * r0.w;
  r0.x = max(9.99999975e-005, r0.x);
  r0.x = r0.z / r0.x;
  r0.x = min(cb1[165].z, r0.x);
  r0.x = -1 + r0.x;
  r0.x = r0.w * r0.x + 1;
  r4.xyz = r4.xyz * r0.xxx;
  r0.xzw = r17.yzw * r0.zzz + -r4.xyz;
  r0.xzw = r8.xxx * r0.xzw + r4.xyz;
  r4.xyzw = r0.yyyy * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.y = r4.x * r4.x;
  r6.x = -9.27999973 * r8.y;
  r6.x = exp2(r6.x);
  r0.y = min(r6.x, r0.y);
  r0.y = r0.y * r4.x + r4.y;
  r4.xy = r0.yy * float2(-1.03999996,1.03999996) + r4.zw;
  r0.y = r4.y * r17.x;
  r4.xyz = r12.xyz * r4.xxx + r0.yyy;
  r0.xyz = r4.xyz * r0.xzw;
  r4.xyz = r12.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r6.xyz = r12.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + float3(0.641700029,0.641700029,0.641700029);
  r8.xyw = r12.xyz * float3(2.75519991,2.75519991,2.75519991) + float3(0.690299988,0.690299988,0.690299988);
  r4.xyz = r8.zzz * r4.xyz + r6.xyz;
  r4.xyz = r4.xyz * r8.zzz + r8.xyw;
  r4.xyz = r4.xyz * r8.zzz;
  r4.xyz = max(r8.zzz, r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r19.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t9.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v5.w * r1.w;
    r1.xyz = v5.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v5.xyz;
    r2.x = v5.w;
  }
  r2.yzw = r12.xyz * float3(0.449999988,0.449999988,0.449999988) + r13.xyz;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r9.xyz = max(float3(0,0,0), cb6[2].xyz);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r2.yzw = -cb2[5].xyz + r5.xyz;
    r3.xyz = float3(1,1,1) + cb2[11].xyz;
    r2.yzw = cmp(r3.xyz < abs(r2.yzw));
    r0.w = (int)r2.z | (int)r2.y;
    r0.w = (int)r2.w | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r9.xyzw = r0.wwww ? r3.yzwx : r9.xyzw;
    o0.w = r9.w;
  } else {
    o0.w = r9.w;
  }
  r0.xyz = r14.xyz * r7.xyz + r0.xyz;
  r0.xyz = r0.xyz + r9.xyz;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  return;
}