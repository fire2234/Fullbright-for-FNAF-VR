//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 19:02:12 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 24
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v5.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t12.xyzw, s4, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t13.xyzw, s5, cb1[133].x
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, v2.xyxx, t14.wzxy, s6, cb1[133].x
add_sat r0.y, r8.w, cb6[3].x
sample_b_indexable(texture2d)(float,float,float,float) r4.w, v2.xyxx, t15.yzwx, s7, cb1[133].x
mul_sat r9.w, r4.w, cb6[3].y
mov_sat r7.xyz, r7.xyzx
mov_sat r8.yz, r8.yyzy
mad r0.y, r0.y, r0.w, r0.z
lt r0.z, l(0.000000), cb2[12].z
if_nz r0.z
  mad r11.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
  max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r11.xyz, r11.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r11.xyz, r11.xyzx, cb1[180].xyzx
  ftoi r12.xyz, r11.xyzx
  mov r12.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
  utof r12.xyzw, r12.xyzw
  add r0.z, cb1[180].w, l(1.000000)
  div r11.xyz, r11.xyzx, r12.wwww
  frc r11.xyz, r11.xyzx
  mul r11.xyz, r11.xyzx, cb1[180].wwww
  mad r11.xyz, r12.xyzx, r0.zzzz, r11.xyzx
  add r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r11.xyz, r11.xyzx, cb1[181].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r11.x, r11.xyzx, t1.xyzw, s0, l(0.000000)
else
  lt r0.z, l(0.000000), cb2[10].w
  movc r11.x, r0.z, cb5[5].x, l(1.000000)
endif
add r12.xyz, r7.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r12.xyz, r8.yyyy, r12.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r7.xyz, -r7.xyzx, r8.yyyy, r7.xyzx
mad r7.xyz, r7.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r12.xyz, r12.xyzx, cb1[127].wwww, cb1[127].xyzx
add r0.zw, -r10.xxxy, v5.xxxy
ftou r0.zw, r0.zzzw
if_z r0.x
  mov r4.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r8.y, cb4[1].z
  mov r10.xy, cb4[1].xyxx
  mov r8.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r8.y, cb4[41].z
  mov r10.xy, cb4[41].xyxx
  mov r8.w, cb4[42].x
endif
mad r4.w, v5.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r8.y, l(-1)
umin r4.w, r4.w, r6.w
ushr r0.zw, r0.zzzw, r8.wwww
imad r0.w, r4.w, r10.y, r0.w
imad r0.z, r0.w, r10.x, r0.z
if_z r0.x
  mov r0.w, cb4[0].z
  mov r4.w, cb4[6].x
  mov r6.w, cb4[6].z
  mov r7.w, cb4[6].w
  mov r10.xyz, cb4[5].xyzx
  mov r13.xyz, cb4[4].xyzx
else
  mov r0.w, cb4[40].z
  mov r4.w, cb4[46].x
  mov r6.w, cb4[46].z
  mov r7.w, cb4[46].w
  mov r10.xyz, cb4[45].xyzx
  mov r13.xyz, cb4[44].xyzx
endif
if_nz r0.w
  and r14.xyzw, r4.wwww, l(255, 2, 4, 8)
  movc r14.xyzw, r14.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[30].y
    mul r15.xyzw, r5.yyyy, cb4[33].xyzw
    mad r15.xyzw, r5.xxxx, cb4[32].xyzw, r15.xyzw
    mad r15.xyzw, r5.zzzz, cb4[34].xyzw, r15.xyzw
    add r15.xyzw, r15.xyzw, cb4[35].xyzw
    div r8.yw, r15.xxxy, r15.wwww
    ge r15.xy, r8.ywyy, l(0.000000, 0.000000, 0.000000, 0.000000)
    ge r16.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r8.ywyy
    and r15.xy, r15.xyxx, r16.xyxx
    and r0.w, r15.y, r15.x
    if_nz r0.w
      sample_l_indexable(texture2d)(float,float,float,float) r0.w, r8.ywyy, t3.yzwx, s2, l(0.000000)
      lt r8.y, r15.z, r0.w
      lt r0.w, l(0.990000), r0.w
      or r0.w, r0.w, r8.y
      and r11.x, r0.w, l(0x3f800000)
    else
      mov r11.x, l(1.000000)
    endif
  else
    mov r11.x, l(1.000000)
  endif
  if_nz cb4[7].x
    mov r0.w, cb4[7].x
    mov r8.y, l(0)
    loop
      uge r8.w, r8.y, cb4[7].x
      breakc_nz r8.w
      dp4 r8.w, cb4[8].xyzw, icb[r8.y + 0].xyzw
      lt r8.w, v5.w, r8.w
      if_nz r8.w
        mov r0.w, r8.y
        break
      endif
      iadd r8.y, r8.y, l(1)
    endloop
    ult r8.y, r0.w, cb4[7].x
    if_nz r8.y
      ishl r8.y, r0.w, l(2)
      mul r15.xyzw, r5.yyyy, cb4[r8.y + 10].xyzw
      mad r15.xyzw, r5.xxxx, cb4[r8.y + 9].xyzw, r15.xyzw
      mad r15.xyzw, r5.zzzz, cb4[r8.y + 11].xyzw, r15.xyzw
      add r15.xyzw, r15.xyzw, cb4[r8.y + 12].xyzw
      div r16.xyzw, r15.xyxy, r15.wwww
      ge r8.yw, r16.zzzw, cb4[r0.w + 25].xxxy
      ge r15.xy, cb4[r0.w + 25].zwzz, r16.zwzz
      and r8.yw, r8.yyyw, r15.xxxy
      and r0.w, r8.w, r8.y
      if_nz r0.w
        mad r16.xyzw, r16.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r8.yw, r16.zzzw
        round_ni r16.xyzw, r16.xyzw
        add r17.xyzw, r16.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r18.x, r17.xyxx, t2.xyzw, s1, l(0.000000)
        add r16.xyzw, r16.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r16.xyzw, r16.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r18.y, r16.xyxx, t2.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r18.z, r16.zwzz, t2.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r18.w, r17.zwzz, t2.yzwx, s1, l(0.000000)
        add r15.xyzw, -r15.zzzz, r18.xyzw
        mad_sat r15.xyzw, r15.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r15.yz, -r15.wwxw, r15.zzyz
        mad r15.xy, r8.yyyy, r15.yzyy, r15.wxww
        add r0.w, -r15.x, r15.y
        mad r0.w, r8.w, r0.w, r15.x
      else
        mov r0.w, l(1.000000)
      endif
    else
      mov r0.w, l(1.000000)
    endif
  else
    mov r0.w, l(1.000000)
  endif
  if_nz r14.x
    mov r14.x, l(1.000000)
    dp4 r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r14.xyzw
    mov r11.yzw, r14.yyzw
    dp4 r8.w, r11.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r8.w, r8.w, l(-1.000000)
    mad r8.y, r8.y, r8.w, l(1.000000)
    mad_sat r6.w, v5.w, r6.w, r7.w
    mul r6.w, r6.w, r6.w
    add r7.w, -r0.w, r8.y
    mad r14.x, r6.w, r7.w, r0.w
    min r14.y, r14.x, l(1.000000)
  else
    mov r14.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.w, r14.y, r14.x
  lt r0.w, l(0.000000), r0.w
  if_nz r0.w
    dp3 r0.w, r13.xyzx, r13.xyzx
    rsq r0.w, r0.w
    mul r13.xyz, r0.wwww, r13.xyzx
    dp3 r0.w, r6.xyzx, r13.xyzx
    mov_sat r6.w, r0.w
    max r7.w, r0.y, l(0.020000)
    dp3 r8.y, r6.xyzx, r4.xyzx
    dp3 r8.w, r4.xyzx, r13.xyzx
    mad r10.w, r8.w, l(2.000000), l(2.000000)
    rsq r10.w, r10.w
    add r0.w, r0.w, r8.y
    mul_sat r0.w, r10.w, r0.w
    mad_sat r8.w, r10.w, r8.w, r10.w
    add r8.y, |r8.y|, l(0.000010)
    min r8.y, r8.y, l(1.000000)
    mul r13.xyz, r6.wwww, r7.xyzx
    mul r10.w, r7.w, r7.w
    mul r12.w, r10.w, r10.w
    mad r13.w, r0.w, r12.w, -r0.w
    mad r0.w, r13.w, r0.w, l(1.000000)
    mul r0.w, r0.w, r0.w
    mul r0.w, r0.w, l(3.14159274)
    div r0.w, r12.w, r0.w
    mad r7.w, -r7.w, r7.w, l(1.000000)
    mad r12.w, r8.y, r7.w, r10.w
    mad r7.w, r6.w, r7.w, r10.w
    mul r7.w, r7.w, r8.y
    mad r7.w, r6.w, r12.w, r7.w
    rcp r7.w, r7.w
    mul r0.w, r0.w, r7.w
    add r7.w, -r8.w, l(1.000000)
    mul r8.y, r7.w, r7.w
    mul r8.y, r8.y, r8.y
    mul r8.w, r7.w, r8.y
    mul_sat r10.w, r12.y, l(50.000000)
    mad r7.w, -r8.y, r7.w, l(1.000000)
    mul r14.yzw, r12.xxyz, r7.wwww
    mad r14.yzw, r10.wwww, r8.wwww, r14.yyzw
    mul r0.w, r0.w, l(0.500000)
    mul r14.yzw, r14.yyzw, r0.wwww
    mul r14.yzw, r6.wwww, r14.yyzw
    mad r13.xyz, r13.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r14.yzwy
    mul r10.xyz, r10.xyzx, r14.xxxx
    mul r10.xyz, r10.xyzx, r13.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r0.w, r4.w, l(8)
  and r0.w, r0.w, cb2[16].w
  movc r10.xyz, r0.wwww, r10.xyzx, l(0,0,0,0)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.w, r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.w, r0.wwww, t5.yzwx
  umin r0.w, r0.w, cb4[0].x
  bfi r4.w, l(31), l(1), r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t5.yzwx
else
  ishl r6.w, r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t8.yzwx
  umin r0.w, r6.w, cb4[40].x
  bfi r0.z, l(31), l(1), r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r0.zzzz, t8.yzwx
endif
movc r0.z, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r0.w
dp3 r0.w, -r4.xyzx, r6.xyzx
add r0.w, r0.w, r0.w
mad r13.xyz, r6.xyzx, -r0.wwww, -r4.xyzx
max r0.w, r0.y, l(0.020000)
mul r6.w, r0.w, r0.w
mad r0.w, -r0.w, r0.w, l(1.000000)
dp3 r7.w, r6.xyzx, r4.xyzx
add r8.y, r7.w, r7.w
mad r8.w, r8.y, r7.w, l(-1.000000)
add r10.w, |r7.w|, l(0.000010)
min r10.w, r10.w, l(1.000000)
mul r14.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r12.w, r6.w, r6.w
mul r13.w, r12.y, l(50.000000)
mov_sat r13.w, r13.w
mov r11.yw, l(0,1.000000,0,1.000000)
mov r15.xyz, r10.xyzx
mov r14.w, l(0)
loop
  uge r15.w, r14.w, r0.z
  breakc_nz r15.w
  iadd r15.w, r4.w, r14.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.x, r15.wwww, t6.xyzw
    imul null, r16.y, r16.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.yyyy, t4.xyzw
    imad r16.xyzw, r16.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r16.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r16.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r16.wwww, t4.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t9.yzwx
    imul null, r21.x, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r21.xxxx, t7.xyzw
    imad r21.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r21.xxxx, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r21.yyyy, t7.wxyz
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r21.zzzz, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r21.wwww, t7.wxyz
  endif
  eq r15.w, r18.w, l(0.000000)
  lt r21.x, l(-2.000000), r20.x
  add r17.xyz, -r5.xyzx, r17.xyzx
  dp3 r21.y, r17.xyzx, r17.xyzx
  rsq r21.z, r21.y
  mul r22.xyz, r17.xyzx, r21.zzzz
  mul r21.z, r17.w, r17.w
  mul r21.y, r21.z, r21.y
  mad r21.y, -r21.y, r21.y, l(1.000000)
  max r21.y, r21.y, l(0.000000)
  mul r21.y, r21.y, r21.y
  mul r23.xyz, r17.wwww, r17.xyzx
  dp3 r17.w, r23.xyzx, r23.xyzx
  min r17.w, r17.w, l(1.000000)
  add r17.w, -r17.w, l(1.000000)
  log r17.w, r17.w
  mul r17.w, r17.w, r18.w
  exp r17.w, r17.w
  movc r17.w, r15.w, r21.y, r17.w
  dp3 r18.w, r22.xyzx, r19.yzwy
  add r18.w, -r20.x, r18.w
  mul_sat r18.w, r20.y, r18.w
  mul r18.w, r18.w, r18.w
  mul r18.w, r17.w, r18.w
  movc r17.w, r21.x, r18.w, r17.w
  lt r18.w, l(0.000000), r17.w
  if_nz r18.w
    and r18.w, r19.x, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r21.xyzw, r19.xxxx, l(1, 2, 4, 8)
      movc r21.xyzw, r21.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r19.x, l(4)
      ubfe r19.y, l(1), l(4), r19.x
      movc r22.x, r19.y, l(1.000000), l(0)
      and r19.yzw, r18.wwww, l(0, 2, 4, 8)
      movc r22.yzw, r19.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.y, r21.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.z, r11.xyyy, r21.xyzw
      add r19.z, r19.z, l(-1.000000)
      mad r19.y, r19.y, r19.z, l(1.000000)
      mul r19.yz, r18.wwww, r19.yyyy
    else
      mov r19.yz, l(0,1.000000,1.000000,0)
    endif
    add r18.w, r19.z, r19.y
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r20.w
      mul r19.z, r18.w, l(0.500000)
      mad r20.xyw, -r19.zzzz, r16.yzyw, r17.xyxz
      mad r16.yzw, r19.zzzz, r16.yyzw, r17.xxyz
      lt r17.x, l(0.000000), r18.w
      if_nz r17.x
        dp3 r17.y, r20.xywx, r20.xywx
        dp3 r17.z, r16.yzwy, r16.yzwy
        rsq r17.y, r17.y
        rsq r17.z, r17.z
        mul r19.z, r17.z, r17.y
        dp3 r19.w, r20.xywx, r16.yzwy
        mul r19.w, r19.z, r19.w
        mad r21.x, r19.w, l(0.500000), r19.z
        add r21.x, r21.x, l(0.500000)
        div r21.y, r19.z, r21.x
        dp3 r19.z, r6.xyzx, r20.xywx
        dp3 r21.z, r6.xyzx, r16.yzwy
        mul r17.z, r17.z, r21.z
        mad r17.y, r19.z, r17.y, r17.z
        mul r21.x, r17.y, l(0.500000)
      else
        dp3 r17.y, r20.xywx, r20.xywx
        add r17.z, r17.y, l(1.000000)
        rcp r21.y, r17.z
        rsq r17.y, r17.y
        mul r22.xyz, r17.yyyy, r20.xywx
        dp3 r21.x, r6.xyzx, r22.xyzx
        mov r19.w, l(1.000000)
      endif
      lt r17.y, l(0.000000), r20.z
      mul r17.z, r20.z, r20.z
      mul_sat r17.z, r21.y, r17.z
      sqrt r17.z, r17.z
      lt r19.z, r21.x, r17.z
      max r21.z, -r17.z, r21.x
      add r21.z, r17.z, r21.z
      mul r21.z, r21.z, r21.z
      mul r17.z, r17.z, l(4.000000)
      div r17.z, r21.z, r17.z
      movc r17.z, r19.z, r17.z, r21.x
      movc_sat r17.y, r17.y, r17.z, r21.x
      movc r15.w, r15.w, r21.y, l(1.000000)
      add r16.yzw, -r20.xxyw, r16.yyzw
      dp3 r17.z, r13.xyzx, r16.yzwy
      mad r21.xyz, r17.zzzz, r13.xyzx, -r16.yzwy
      dp3 r19.z, r20.xywx, r21.xyzx
      mul r17.z, r17.z, r17.z
      mad r17.z, r18.w, r18.w, -r17.z
      div_sat r17.z, r19.z, r17.z
      mad r16.yzw, r17.zzzz, r16.yyzw, r20.xxyw
      movc r16.yzw, r17.xxxx, r16.yyzw, r20.xxyw
      dp3 r17.x, r16.yzwy, r16.yzwy
      rsq r17.x, r17.x
      mul r16.yzw, r16.yyzw, r17.xxxx
      mul r17.z, r17.x, r20.z
      mul_sat r17.z, r0.w, r17.z
      mul_sat r16.x, r16.x, r17.x
      dp3 r17.x, r6.xyzx, r16.yzwy
      dp3 r16.y, r4.xyzx, r16.yzwy
      mad r16.z, r16.y, l(2.000000), l(2.000000)
      rsq r16.z, r16.z
      add r16.w, r7.w, r17.x
      mul_sat r16.w, r16.z, r16.w
      mad_sat r16.z, r16.z, r16.y, r16.z
      lt r18.w, l(0.000000), r17.z
      if_nz r18.w
        mad r19.z, -r17.z, r17.z, l(1.000000)
        sqrt r19.z, r19.z
        dp2 r20.x, r7.wwww, r17.xxxx
        add r20.y, -r16.y, r20.x
        ge r20.z, r20.y, r19.z
        if_nz r20.z
          mov r16.w, l(1.000000)
          mov r16.z, |r7.w|
        else
          mad r20.z, -r20.y, r20.y, l(1.000000)
          rsq r20.z, r20.z
          mul r20.z, r17.z, r20.z
          mad r20.w, -r20.y, r17.x, r7.w
          mul r21.x, r20.w, r20.z
          mad r20.y, -r20.y, r16.y, r8.w
          mul r21.y, r17.x, r17.x
          mad r21.y, -r7.w, r7.w, -r21.y
          add r21.y, r21.y, l(1.000000)
          mad r21.y, -r16.y, r16.y, r21.y
          mad_sat r20.x, r20.x, r16.y, r21.y
          sqrt r20.x, r20.x
          mul r20.xy, r20.xyxx, r20.zzzz
          mul r21.y, r7.w, r20.x
          add r21.z, r21.y, r21.y
          mad r21.w, r17.x, r19.z, r7.w
          mad r20.z, r20.z, r20.w, r21.w
          mad r20.w, r16.y, r19.z, r20.y
          add r20.w, r20.w, l(1.000000)
          mul r22.xy, r20.wwww, r20.xzxx
          mul r22.z, r20.z, r21.z
          mul r21.y, r21.y, r20.z
          mul r21.y, r21.y, l(0.500000)
          mad r21.y, r22.x, l(-0.500000), r21.y
          mul r21.y, r21.y, r22.y
          mad r22.w, -r22.x, l(2.000000), r22.z
          mul r22.z, r22.w, r22.z
          mad r22.x, r22.x, r22.x, r22.z
          mul r22.z, r20.w, r20.w
          mad r20.w, r16.y, r19.z, r20.w
          mad r20.w, r20.w, l(-0.500000), l(-0.500000)
          mul r20.w, r20.w, r22.y
          mad r20.w, r21.w, r22.z, r20.w
          mad r20.z, r20.z, r20.w, r22.x
          add r20.w, r21.y, r21.y
          mul r21.w, r21.y, r21.y
          mad r21.w, r20.z, r20.z, r21.w
          div r20.w, r20.w, r21.w
          mul r20.z, r20.z, r20.w
          mad r20.w, -r20.w, r21.y, l(1.000000)
          mul r20.x, r20.x, r20.z
          mad r20.x, r20.w, r21.x, r20.x
          mul r20.z, r21.z, r20.z
          mad r20.y, r20.w, r20.y, r20.z
          mad r17.x, r17.x, r19.z, r20.x
          mad r16.y, r16.y, r19.z, r20.y
          mad r19.z, r16.y, l(2.000000), l(2.000000)
          rsq r19.z, r19.z
          add r17.x, r7.w, r17.x
          mul_sat r16.w, r19.z, r17.x
          mad_sat r16.z, r19.z, r16.y, r19.z
        endif
      endif
      mul r15.w, r17.y, r15.w
      lt r16.y, l(0.000000), r16.x
      mul r16.x, r16.x, r16.x
      mad r17.x, r16.z, l(3.600000), l(0.400000)
      div r16.x, r16.x, r17.x
      mad r16.x, r6.w, r6.w, r16.x
      min r16.x, r16.x, l(1.000000)
      movc r11.z, r16.y, r16.x, r12.w
      mul r16.x, r17.z, l(0.250000)
      ishr r16.y, r11.z, l(1)
      iadd r16.y, r16.y, l(0x1fbd1df5)
      mad r16.y, r16.y, l(3.000000), r17.z
      mul r16.x, r16.y, r16.x
      add r16.y, r16.z, l(0.001000)
      div r16.x, r16.x, r16.y
      add r20.x, r11.z, r16.x
      div r20.y, r11.z, r20.x
      movc r17.xz, r18.wwww, r20.xxyx, r11.zzwz
      lt r16.x, r19.w, l(1.000000)
      add r18.w, -r19.w, l(1.000100)
      add r19.z, r19.w, l(1.000000)
      div r18.w, r18.w, r19.z
      sqrt r18.w, r18.w
      mul r19.z, r18.w, l(0.250000)
      ishr r19.w, r17.x, l(1)
      iadd r19.w, r19.w, l(0x1fbd1df5)
      mad r18.w, r19.w, l(3.000000), r18.w
      mul r18.w, r18.w, r19.z
      div r16.y, r18.w, r16.y
      add r16.y, r16.y, r17.x
      div r16.y, r17.x, r16.y
      sqrt r16.y, r16.y
      mul r16.y, r16.y, r17.z
      movc r16.x, r16.x, r16.y, r17.z
      mad r16.y, r16.w, r11.z, -r16.w
      mad r16.y, r16.y, r16.w, l(1.000000)
      mul r16.y, r16.y, r16.y
      mul r16.y, r16.y, l(3.14159274)
      div r16.y, r11.z, r16.y
      mul r16.x, r16.x, r16.y
      sqrt r11.z, r11.z
      add r16.y, -r11.z, l(1.000000)
      mad r16.w, r10.w, r16.y, r11.z
      mad r11.z, r17.y, r16.y, r11.z
      mul r11.z, r10.w, r11.z
      mad r11.z, r17.y, r16.w, r11.z
      rcp r11.z, r11.z
      mul r11.z, r11.z, r16.x
      add r16.x, -r16.z, l(1.000000)
      mul r16.y, r16.x, r16.x
      mul r16.y, r16.y, r16.y
      mul r16.z, r16.x, r16.y
      mad r16.x, -r16.y, r16.x, l(1.000000)
      mul r16.xyw, r12.xyxz, r16.xxxx
      mad r16.xyz, r13.wwww, r16.zzzz, r16.xywx
      mul r11.z, r11.z, l(0.500000)
      mul r16.xyz, r16.xyzx, r11.zzzz
      mul r16.xyz, r15.wwww, r16.xyzx
      mad r16.xyz, r15.wwww, r14.xyzx, r16.xyzx
      mul r17.xyz, r17.wwww, r18.xyzx
      mul r17.xyz, r19.yyyy, r17.xyzx
      mul r16.xyz, r16.xyzx, r17.xyzx
    else
      mov r16.xyz, l(0,0,0,0)
    endif
  else
    mov r16.xyz, l(0,0,0,0)
  endif
  ushr r11.z, r19.x, l(8)
  and r11.z, r11.z, cb2[16].w
  add r16.xyz, r15.xyzx, r16.xyzx
  movc r15.xyz, r11.zzzz, r16.xyzx, r15.xyzx
  iadd r14.w, r14.w, l(1)
endloop
mad r4.xyz, r8.yyyy, r6.xyzx, -r4.xyzx
mov_sat r7.w, r7.w
log r0.x, r0.y
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r0.z, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r0.z
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r0.xzw, r4.xyzw, t10.xwyz, s3, r0.x
mul r0.xzw, r0.xxzw, cb0[31].xxxx
mul r0.xzw, r0.xxzw, cb1[146].xxyz
mad_sat r4.x, r0.y, cb1[165].x, cb1[165].y
mad r4.y, r4.x, l(-2.000000), l(3.000000)
mul r4.x, r4.x, r4.x
mul r4.x, r4.x, r4.y
min r4.y, cb1[165].z, l(0.000000)
add r4.y, r4.y, l(-1.000000)
mad r4.x, r4.x, r4.y, l(1.000000)
mul r0.xzw, r0.xxzw, r4.xxxx
mad r0.xzw, r8.xxxx, -r0.xxzw, r0.xxzw
mad r4.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r4.x, r4.x
mul r6.x, r7.w, l(-9.280000)
exp r6.x, r6.x
min r0.y, r0.y, r6.x
mad r0.y, r0.y, r4.x, r4.y
mad r4.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r4.zwzz
mul r0.y, r13.w, r4.y
mad r4.xyz, r12.xyzx, r4.xxxx, r0.yyyy
mul r0.xyz, r0.xzwx, r4.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r8.xyw, r12.xyxz, l(2.755200, 2.755200, 0.000000, 2.755200), l(0.690300, 0.690300, 0.000000, 0.690300)
mad r4.xyz, r8.zzzz, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r8.zzzz, r8.xywx
mul r4.xyz, r8.zzzz, r4.xyzx
max r4.xyz, r4.xyzx, r8.zzzz
mad r0.xyz, r0.xyzx, r4.xyzx, r15.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t11.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r7.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r9.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r9.xyzw, r0.wwww, r3.yzwx, r9.xyzw
  mov o0.w, r9.w
else
  mov o0.w, r9.w
endif
add r0.xyz, r0.xyzx, r9.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
