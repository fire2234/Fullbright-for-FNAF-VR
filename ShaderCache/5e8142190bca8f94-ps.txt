//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 20:16:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[15], immediateIndexed
dcl_constantbuffer cb6[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 29
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.yz, cb1[129].xxyx
  mov r0.w, cb1[131].w
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
  mov r9.w, cb1[125].x
  mov r12.x, cb1[128].w
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.yz, cb3[129].xxyx
  mov r0.w, cb3[131].w
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
  mov r9.w, cb3[125].x
  mov r12.x, cb3[128].w
endif
mul r13.xyz, v0.yzxy, v1.zxyz
mad r13.xyz, v1.yzxy, v0.zxyz, -r13.xyzx
mul r13.xyz, r13.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r14.xy, r11.zwzz, v5.wwww
mov r14.z, v5.w
mul r14.xyw, r14.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r15.xyz, v5.xyzx
mov r15.w, l(1.000000)
dp4 r4.x, r15.xyzw, r4.xyzw
dp4 r4.y, r15.xyzw, r5.xyzw
dp4 r4.z, r15.xyzw, r6.xyzw
dp4 r4.w, r15.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, -r4.xyzx
mul r0.w, r0.w, cb2[4].w
movc r6.w, v6.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r6.w
mul r7.xy, v2.xyxx, l(1.000000, 0.900000, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r7.zw, r7.xyxx, t16.zwxy, s3, cb1[133].x
mad r15.xy, r7.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r6.w, r15.xyxx, r15.xyxx
add r6.w, -r6.w, l(1.000000)
max r6.w, r6.w, l(0.000000)
sqrt r15.z, r6.w
mov r12.yz, l(0,1.000000,0.090000,0)
mul r8.yzw, r12.xxxy, r15.xxyz
mad r8.yzw, r8.yyzw, r12.zzzx, r9.xxyz
dp3 r6.w, r8.yzwy, r8.yzwy
rsq r6.w, r6.w
mul r8.yzw, r6.wwww, r8.yyzw
mul r9.xyz, r13.xyzx, r8.zzzz
mad r9.xyz, r8.yyyy, v0.xyzx, r9.xyzx
mad r8.yzw, r8.wwww, v1.xxyz, r9.xxyz
dp3 r6.w, r8.yzwy, r8.yzwy
rsq r6.w, r6.w
mul r8.yzw, r6.wwww, r8.yyzw
mul r8.yzw, r0.wwww, r8.yyzw
sample_b_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t17.xwyz, s4, cb1[133].x
mul r7.xzw, r7.xxxx, cb6[4].xxyz
mad_sat r7.xzw, r7.xxzw, l(1.020000, 0.000000, 1.020000, 1.020000), l(-0.010000, 0.000000, -0.010000, -0.010000)
dp3 r0.w, r7.xzwx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r9.xyz, -r7.xzwx, r0.wwww
mad r7.xzw, cb6[5].xxxx, r9.xxyz, r7.xxzw
add r0.w, -v2.y, l(1.000000)
add r0.w, r0.w, -cb6[5].y
mul_sat r7.xzw, r0.wwww, r7.xxzw
sample_b_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t18.yzwx, s5, cb1[133].x
add_sat r0.w, r0.w, l(0.400000)
ilt r6.w, l(1), r9.w
add r7.y, r7.y, l(-0.333300)
lt r9.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r7.yyyy
and r9.x, r9.x, l(8)
movc r9.x, r9.y, l(9), r9.x
movc r9.x, r9.z, l(13), r9.x
utof r9.y, r9.x
add r9.y, r9.y, l(-0.500000)
lt r9.y, r9.y, l(0.000000)
movc r9.y, r9.w, l(0), r9.y
and r9.y, r6.w, r9.y
discard_nz r9.y
not r6.w, r6.w
lt r7.y, r7.y, l(0.000000)
and r7.y, r6.w, r7.y
discard_nz r7.y
or r6.w, r6.w, r9.w
movc oMask, r6.w, l(15), r9.x
mad r9.z, r0.w, r0.z, r0.y
mad r0.yzw, r7.xxzw, cb1[126].wwww, cb1[126].xxyz
lt r11.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxxz
lt r6.w, l(0.000000), cb1[163].w
and r6.w, r6.w, r11.z
div r12.xy, r14.xyxx, r14.wwww
mad r10.xy, r12.xyxx, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r13.xyzw, r10.xyxx, t14.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t15.xyzw, s2, l(0.000000)
mad r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r13.xyz, r8.yzwy, r13.wwww, r13.xyzx
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.065000), r15.y
mul r16.xyz, r0.yzwy, r12.wwww
mad r12.xyz, r7.xzwx, r12.wwww, r12.xyzx
movc r8.yzw, r6.wwww, r13.xxyz, r8.yyzw
movc r7.xyz, r6.wwww, r12.xyzx, r7.xzwx
movc r0.yzw, r6.wwww, r16.xxyz, r0.yyzw
mov r9.xy, l(0,0.065000,0,0)
movc r9.xyz, r6.wwww, r15.xyzx, r9.xyzx
mov_sat r6.w, cb6[5].z
if_nz r11.w
  mad r12.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
  max r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r12.xyz, r12.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r12.xyz, r12.xyzx, cb1[180].xyzx
  ftoi r13.xyz, r12.xyzx
  mov r13.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r13.xyzw, r13.xyzw, t0.xyzw
  utof r13.xyzw, r13.xyzw
  add r7.w, cb1[180].w, l(1.000000)
  div r12.xyz, r12.xyzx, r13.wwww
  frc r12.xyz, r12.xyzx
  mul r12.xyz, r12.xyzx, cb1[180].wwww
  mad r12.xyz, r13.xyzx, r7.wwww, r12.xyzx
  add r12.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r12.xyz, r12.xyzx, cb1[181].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r12.x, r12.xyzx, t1.xyzw, s0, l(0.000000)
else
  lt r7.w, l(0.000000), cb2[10].w
  movc r12.x, r7.w, cb5[5].x, l(1.000000)
endif
mov_sat r13.xyz, r0.yzwy
mul r7.w, r9.y, l(0.080000)
mad r15.xyz, -r9.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xyzx
mad r15.xyz, r9.xxxx, r15.xyzx, r7.wwww
mad r9.xyw, -r7.xyxz, r9.xxxx, r7.xyxz
mad r9.xyw, r9.xyxw, cb1[126].wwww, cb1[126].xyxz
mad r15.xyz, r15.xyzx, cb1[127].wwww, cb1[127].xyzx
dp3 r7.w, r15.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mad r10.w, r7.w, l(2.040400), l(-0.332400)
mad r10.w, r7.w, l(-4.795100), r10.w
mad r7.w, r7.w, l(2.755200), r10.w
add r7.w, r7.w, l(1.332000)
add r0.yzw, r0.yyzw, r9.xxyw
mul r16.xyz, r8.zwyz, r8.zwzz
mul r17.yw, r8.zzzy, r8.wwww
mad r10.w, r8.y, r8.y, -r16.x
mul r18.yzw, r8.zzwy, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r17.xz, r16.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r16.xyzw, r17.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r10.w, r10.w, l(0.429042608)
mov r18.x, l(0.886227548)
dp4 r11.z, cb5[8].xyzw, r18.xyzw
dp4 r11.w, cb5[11].xyzw, r16.xyzw
add r11.z, r11.w, r11.z
mad r17.x, cb5[14].x, r10.w, r11.z
dp4 r11.z, cb5[9].xyzw, r18.xyzw
dp4 r11.w, cb5[12].xyzw, r16.xyzw
add r11.z, r11.w, r11.z
mad r17.y, cb5[14].y, r10.w, r11.z
dp4 r11.z, cb5[10].xyzw, r18.xyzw
dp4 r11.w, cb5[13].xyzw, r16.xyzw
add r11.z, r11.w, r11.z
mad r17.z, cb5[14].z, r10.w, r11.z
max r16.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r16.xyz, r16.xyzx, cb1[146].xyzx
dp3 r10.w, r16.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r11.z, l(1), cb1[125].x
if_nz r11.z
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r17.xy, r11.zwzz
  mov r17.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r11.z, r17.xyzz, t12.yzxw
  mad r11.w, r11.z, cb1[57].x, cb1[57].y
  mad r11.z, r11.z, cb1[57].z, -cb1[57].w
  div r11.z, l(1.000000, 1.000000, 1.000000, 1.000000), r11.z
  add r11.z, r11.z, r11.w
  mad r11.z, -r14.z, l(1.000000), r11.z
  div r11.z, |r11.z|, r14.w
  lt r11.z, l(0.010000), r11.z
  if_nz r11.z
    mov r18.y, -cb1[123].z
    mov r18.z, l(0)
    add r18.yz, r10.xxyx, r18.yyzy
    iadd r19.xyzw, r17.xxyy, l(1, -1, 1, -1)
    mov r17.w, r19.y
    ld_indexable(texture2d)(float,float,float,float) r11.z, r17.wyzz, t12.yzxw
    mad r11.w, r11.z, cb1[57].x, cb1[57].y
    mad r11.z, r11.z, cb1[57].z, -cb1[57].w
    div r11.z, l(1.000000, 1.000000, 1.000000, 1.000000), r11.z
    add r11.z, r11.z, r11.w
    mad r11.z, -r14.z, l(1.000000), r11.z
    mov r18.x, |r11.z|
    lt r11.z, r18.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r18.xyz, r11.zzzz, r18.xyzx, r10.zxyz
    mov r20.y, l(0)
    mov r20.z, cb1[123].w
    add r20.yz, r10.xxyx, r20.yyzy
    mov r21.xz, r17.xxzx
    mov r21.yw, r19.zzzw
    ld_indexable(texture2d)(float,float,float,float) r10.z, r21.xyzz, t12.yzxw
    mad r11.z, r10.z, cb1[57].x, cb1[57].y
    mad r10.z, r10.z, cb1[57].z, -cb1[57].w
    div r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r10.z
    add r10.z, r10.z, r11.z
    mad r10.z, -r14.z, l(1.000000), r10.z
    mov r20.x, |r10.z|
    lt r10.z, r20.x, r18.x
    movc r18.xyz, r10.zzzz, r20.xyzx, r18.xyzx
    mov r20.y, cb1[123].z
    mov r20.z, l(0)
    add r20.yz, r10.xxyx, r20.yyzy
    mov r19.yzw, r17.yyzz
    ld_indexable(texture2d)(float,float,float,float) r10.z, r19.xyzw, t12.yzxw
    mad r11.z, r10.z, cb1[57].x, cb1[57].y
    mad r10.z, r10.z, cb1[57].z, -cb1[57].w
    div r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r10.z
    add r10.z, r10.z, r11.z
    mad r10.z, -r14.z, l(1.000000), r10.z
    mov r20.x, |r10.z|
    lt r10.z, r20.x, r18.x
    movc r17.xyz, r10.zzzz, r20.xyzx, r18.xyzx
    mov r14.x, l(0)
    mov r14.y, -cb1[123].w
    add r11.zw, r10.xxxy, r14.xxxy
    ld_indexable(texture2d)(float,float,float,float) r10.z, r21.xwzz, t12.yzxw
    mad r12.w, r10.z, cb1[57].x, cb1[57].y
    mad r10.z, r10.z, cb1[57].z, -cb1[57].w
    div r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r10.z
    add r10.z, r10.z, r12.w
    mad r10.z, -r14.z, l(1.000000), r10.z
    lt r10.z, |r10.z|, r17.x
    movc r10.xy, r10.zzzz, r11.zwzz, r17.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r11.zw, l(0), t11.zwxy
utof r11.zw, r11.zzzw
mul r11.zw, r10.xxxy, r11.zzzw
round_z r11.zw, r11.zzzw
ftoi r17.xy, r11.zwzz
mov r17.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r10.z, r17.xyzw, t11.yzxw
mul r11.z, cb2[12].y, l(3.999000)
ftou r11.xyz, r11.xyzx
and r11.z, r11.z, l(2)
movc r11.z, r11.z, cb1[164].y, l(1.000000)
add r10.z, r10.z, l(-1.000000)
mad r10.z, r11.z, r10.z, l(1.000000)
mul r14.xyz, r10.zzzz, r16.xyzx
mul r10.w, r10.z, r10.w
mul r0.yzw, r0.yyzw, r14.xxyz
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r14.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
if_z r0.x
  mov r11.zw, cb4[3].xxxy
  mov r12.w, cb4[3].z
  mov r13.w, cb4[1].z
  mov r14.xy, cb4[1].xyxx
  mov r14.z, cb4[2].x
else
  mov r11.zw, cb4[43].xxxy
  mov r12.w, cb4[43].z
  mov r13.w, cb4[41].z
  mov r14.xy, cb4[41].xyxx
  mov r14.z, cb4[42].x
endif
mad r11.z, v5.w, r11.z, r11.w
log r11.z, r11.z
mul r11.z, r12.w, r11.z
max r11.z, r11.z, l(0.000000)
ftou r11.z, r11.z
iadd r11.w, r13.w, l(-1)
umin r11.z, r11.w, r11.z
ushr r11.xy, r11.xyxx, r14.zzzz
imad r11.y, r11.z, r14.y, r11.y
imad r11.x, r11.y, r14.x, r11.x
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r16.xy, r10.xyxx
  mov r16.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r16.xyzw, r16.xyzw, t10.xyzw
else
  mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r16.xyzw, r16.xyzw, r16.xyzw
if_z r0.x
  mov r10.x, cb4[0].z
  mov r10.y, cb4[6].x
  mov r11.yz, cb4[6].zzwz
  mov r14.xyz, cb4[5].xyzx
  mov r17.xyz, cb4[4].xyzx
else
  mov r10.x, cb4[40].z
  mov r10.y, cb4[46].x
  mov r11.yz, cb4[46].zzwz
  mov r14.xyz, cb4[45].xyzx
  mov r17.xyz, cb4[44].xyzx
endif
if_nz r10.x
  and r18.xyzw, r10.yyyy, l(255, 1, 2, 4)
  movc r18.xyzw, r18.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r10.x, r10.y, l(8)
  movc r19.w, r10.x, l(1.000000), l(0)
  ushr r20.xy, r10.yyyy, l(4, 8, 0, 0)
  ubfe r10.x, l(1), l(4), r10.y
  movc r21.x, r10.x, l(1.000000), l(0)
  and r20.xzw, r20.xxxx, l(2, 0, 4, 8)
  movc r21.yzw, r20.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r10.x, r21.xyzw, r16.xyzw
  lt r10.y, r11.z, l(0.000000)
  swapc r10.x, r20.x, r10.y, l(1.000000), r10.x
  if_nz r18.x
    mov r19.xyz, r18.yzwy
    dp4 r10.y, r19.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r12.y, l(1.000000)
    dp4 r11.w, r12.xyyy, r19.xyzw
    add r11.w, r11.w, l(-1.000000)
    mad r10.y, r10.y, r11.w, l(1.000000)
    mad_sat r11.y, r14.w, r11.y, r11.z
    mul r11.y, r11.y, r11.y
    add r10.y, -r10.x, r10.y
    mad r10.x, r11.y, r10.y, r10.x
    min r10.y, r20.x, r10.x
    mul r18.xy, r20.xxxx, r10.xyxx
  else
    mov r18.xy, l(1.000000,1.000000,0,0)
  endif
  add r10.x, r18.y, r18.x
  lt r10.x, l(0.000000), r10.x
  if_nz r10.x
    dp3 r10.x, r17.xyzx, r17.xyzx
    rsq r10.x, r10.x
    mul r11.yzw, r10.xxxx, r17.xxyz
    dp3 r10.x, r8.yzwy, r11.yzwy
    mov_sat r10.y, r10.x
    max r12.y, r9.z, l(0.020000)
    dp3 r12.w, r8.yzwy, r6.xyzx
    dp3 r13.w, r6.xyzx, r11.yzwy
    mad r14.w, r13.w, l(2.000000), l(2.000000)
    rsq r14.w, r14.w
    add r10.x, r10.x, r12.w
    mul_sat r10.x, r14.w, r10.x
    mad_sat r13.w, r14.w, r13.w, r14.w
    add r12.w, |r12.w|, l(0.000010)
    min r12.w, r12.w, l(1.000000)
    mul r17.xyz, r9.xywx, r10.yyyy
    mul r14.w, r12.y, r12.y
    mul r15.w, r14.w, r14.w
    mad r17.w, r10.x, r15.w, -r10.x
    mad r10.x, r17.w, r10.x, l(1.000000)
    mul r10.x, r10.x, r10.x
    mul r10.x, r10.x, l(3.14159274)
    div r10.x, r15.w, r10.x
    mad r12.y, -r12.y, r12.y, l(1.000000)
    mad r15.w, r12.w, r12.y, r14.w
    mad r12.y, r10.y, r12.y, r14.w
    mul r12.y, r12.y, r12.w
    mad r12.y, r10.y, r15.w, r12.y
    rcp r12.y, r12.y
    mul r10.x, r10.x, r12.y
    add r12.y, -r13.w, l(1.000000)
    mul r12.w, r12.y, r12.y
    mul r12.w, r12.w, r12.w
    mul r13.w, r12.y, r12.w
    mul_sat r14.w, r15.y, l(50.000000)
    mad r12.y, -r12.w, r12.y, l(1.000000)
    mul r19.xyz, r15.xyzx, r12.yyyy
    mad r19.xyz, r14.wwww, r13.wwww, r19.xyzx
    mul r10.x, r10.x, l(0.500000)
    mul r19.xyz, r19.xyzx, r10.xxxx
    mul r19.xyz, r10.yyyy, r19.xyzx
    mad r20.xzw, -r4.xxyz, r4.wwww, r11.yyzw
    dp3 r10.x, r20.xzwx, r20.xzwx
    rsq r10.x, r10.x
    mul r20.xzw, r10.xxxx, r20.xxzw
    dp3_sat r10.x, r11.yzwy, -r6.xyzx
    log r10.x, r10.x
    mul r10.x, r10.x, l(12.000000)
    exp r10.x, r10.x
    mad r10.y, r6.w, l(-2.900000), l(3.000000)
    mul r10.x, r10.y, r10.x
    dp3 r10.y, r8.yzwy, r20.xzwx
    mad r10.y, r10.y, r6.w, l(1.000000)
    add_sat r10.y, -r6.w, r10.y
    mul r10.y, r7.w, r10.y
    mul r11.y, r10.y, l(0.159154937)
    mad r10.y, -r10.y, l(0.159154937), l(1.000000)
    mad r10.x, r10.x, r10.y, r11.y
    mul r11.yzw, r13.xxyz, r10.xxxx
    mad r17.xyz, r17.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r19.xyzx
    mul r18.xzw, r14.xxyz, r18.xxxx
    mul r14.xyz, r14.xyzx, r18.yyyy
    mul r11.yzw, r11.yyzw, r14.xxyz
    mad r11.yzw, r17.xxyz, r18.xxzw, r11.yyzw
  else
    mov r11.yzw, l(0,0,0,0)
  endif
  and r10.x, r20.y, cb2[16].w
  movc r11.yzw, r10.xxxx, r11.yyzw, l(0,0,0,0)
else
  mov r11.yzw, l(0,0,0,0)
endif
if_z r0.x
  ishl r10.x, r11.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.x, r10.xxxx, t3.xyzw
  umin r10.x, r10.x, cb4[0].x
  bfi r10.y, l(31), l(1), r11.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.y, r10.yyyy, t3.yxzw
else
  ishl r12.y, r11.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r12.y, r12.yyyy, t6.yxzw
  umin r10.x, r12.y, cb4[40].x
  bfi r11.x, l(31), l(1), r11.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.y, r11.xxxx, t6.yxzw
endif
movc r11.x, r0.x, cb4[40].x, cb4[0].x
umin r10.x, r10.x, r11.x
dp3 r11.x, -r6.xyzx, r8.yzwy
add r11.x, r11.x, r11.x
mad r14.xyz, r8.yzwy, -r11.xxxx, -r6.xyzx
max r11.x, r9.z, l(0.020000)
mul r12.y, r11.x, r11.x
mad r11.x, -r11.x, r11.x, l(1.000000)
dp3 r12.w, r8.yzwy, r6.xyzx
add r13.w, r12.w, r12.w
mad r14.w, r13.w, r12.w, l(-1.000000)
add r15.w, |r12.w|, l(0.000010)
min r15.w, r15.w, l(1.000000)
mul r17.xyz, r9.xywx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r17.w, r12.y, r12.y
mul r18.xyzw, r15.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r18.x, r18.x
mad r19.x, r6.w, l(-2.900000), l(3.000000)
mov r12.z, l(1.000000)
mov r20.y, l(1.000000)
mov r19.yzw, r11.yyzw
mov r20.z, l(0)
loop
  uge r20.w, r20.z, r10.x
  breakc_nz r20.w
  iadd r20.w, r10.y, r20.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r21.x, r20.wwww, t4.xyzw
    imul null, r21.y, r21.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.yyyy, t2.xyzw
    imad r21.xyzw, r21.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.xxxx, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.yyyy, t2.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r21.zzzz, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t2.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r20.w, r20.wwww, t7.yzwx
    imul null, r26.x, r20.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r26.xxxx, t5.xyzw
    imad r26.xyzw, r20.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r26.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r26.yyyy, t5.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r26.zzzz, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r26.wwww, t5.wxyz
  endif
  eq r20.w, r23.w, l(0.000000)
  lt r26.x, l(-2.000000), r25.x
  add r22.xyz, -r5.xyzx, r22.xyzx
  dp3 r26.y, r22.xyzx, r22.xyzx
  rsq r26.z, r26.y
  mul r27.xyz, r22.xyzx, r26.zzzz
  mul r26.z, r22.w, r22.w
  mul r26.y, r26.z, r26.y
  mad r26.y, -r26.y, r26.y, l(1.000000)
  max r26.y, r26.y, l(0.000000)
  mul r26.y, r26.y, r26.y
  mul r28.xyz, r22.wwww, r22.xyzx
  dp3 r22.w, r28.xyzx, r28.xyzx
  min r22.w, r22.w, l(1.000000)
  add r22.w, -r22.w, l(1.000000)
  log r22.w, r22.w
  mul r22.w, r22.w, r23.w
  exp r22.w, r22.w
  movc r22.w, r20.w, r26.y, r22.w
  dp3 r23.w, r27.xyzx, r24.yzwy
  add r23.w, -r25.x, r23.w
  mul_sat r23.w, r25.y, r23.w
  mul r23.w, r23.w, r23.w
  mul r23.w, r22.w, r23.w
  movc r22.w, r26.x, r23.w, r22.w
  lt r23.w, l(0.000000), r22.w
  if_nz r23.w
    and r23.w, r24.x, l(255)
    movc r23.w, r23.w, l(1), l(0)
    if_nz r23.w
      and r26.xyzw, r24.xxxx, l(1, 2, 4, 8)
      movc r26.xyzw, r26.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r23.w, r24.x, l(4)
      ubfe r24.y, l(1), l(4), r24.x
      movc r27.x, r24.y, l(1.000000), l(0)
      and r24.yzw, r23.wwww, l(0, 2, 4, 8)
      movc r27.yzw, r24.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r23.w, r27.xyzw, r16.xyzw
      dp4 r24.y, r26.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r24.z, r12.xzzz, r26.xyzw
      add r24.z, r24.z, l(-1.000000)
      mad r24.y, r24.y, r24.z, l(1.000000)
      mul r24.yz, r23.wwww, r24.yyyy
    else
      mov r24.yz, l(0,1.000000,1.000000,0)
    endif
    add r23.w, r24.z, r24.y
    lt r23.w, l(0.000000), r23.w
    if_nz r23.w
      f16tof32 r23.w, r25.w
      mul r24.w, r23.w, l(0.500000)
      mad r25.xyw, -r24.wwww, r21.yzyw, r22.xyxz
      mad r21.yzw, r24.wwww, r21.yyzw, r22.xxyz
      lt r22.x, l(0.000000), r23.w
      if_nz r22.x
        dp3 r22.y, r25.xywx, r25.xywx
        dp3 r22.z, r21.yzwy, r21.yzwy
        rsq r22.y, r22.y
        rsq r22.z, r22.z
        mul r24.w, r22.z, r22.y
        dp3 r26.x, r25.xywx, r21.yzwy
        mul r26.x, r24.w, r26.x
        mad r26.y, r26.x, l(0.500000), r24.w
        add r26.y, r26.y, l(0.500000)
        div r27.y, r24.w, r26.y
        dp3 r24.w, r8.yzwy, r25.xywx
        dp3 r26.y, r8.yzwy, r21.yzwy
        mul r22.z, r22.z, r26.y
        mad r22.y, r24.w, r22.y, r22.z
        mul r27.x, r22.y, l(0.500000)
      else
        dp3 r22.y, r25.xywx, r25.xywx
        add r22.z, r22.y, l(1.000000)
        rcp r27.y, r22.z
        rsq r22.y, r22.y
        mul r26.yzw, r22.yyyy, r25.xxyw
        dp3 r27.x, r8.yzwy, r26.yzwy
        mov r26.x, l(1.000000)
      endif
      lt r22.y, l(0.000000), r25.z
      mul r22.z, r25.z, r25.z
      mul_sat r22.z, r27.y, r22.z
      sqrt r22.z, r22.z
      lt r24.w, r27.x, r22.z
      max r26.y, -r22.z, r27.x
      add r26.y, r22.z, r26.y
      mul r26.y, r26.y, r26.y
      mul r22.z, r22.z, l(4.000000)
      div r22.z, r26.y, r22.z
      movc r22.z, r24.w, r22.z, r27.x
      movc_sat r22.y, r22.y, r22.z, r27.x
      movc r20.w, r20.w, r27.y, l(1.000000)
      add r21.yzw, -r25.xxyw, r21.yyzw
      dp3 r22.z, r14.xyzx, r21.yzwy
      mad r26.yzw, r22.zzzz, r14.xxyz, -r21.yyzw
      dp3 r24.w, r25.xywx, r26.yzwy
      mul r22.z, r22.z, r22.z
      mad r22.z, r23.w, r23.w, -r22.z
      div_sat r22.z, r24.w, r22.z
      mad r21.yzw, r22.zzzz, r21.yyzw, r25.xxyw
      movc r21.yzw, r22.xxxx, r21.yyzw, r25.xxyw
      dp3 r22.x, r21.yzwy, r21.yzwy
      rsq r22.x, r22.x
      mul r21.yzw, r21.yyzw, r22.xxxx
      mul r22.z, r22.x, r25.z
      mul_sat r22.z, r11.x, r22.z
      mul_sat r21.x, r21.x, r22.x
      dp3 r22.x, r8.yzwy, r21.yzwy
      dp3 r23.w, r6.xyzx, r21.yzwy
      mad r24.w, r23.w, l(2.000000), l(2.000000)
      rsq r24.w, r24.w
      add r25.x, r12.w, r22.x
      mul_sat r25.x, r24.w, r25.x
      mad_sat r24.w, r24.w, r23.w, r24.w
      lt r25.y, l(0.000000), r22.z
      if_nz r25.y
        mad r25.z, -r22.z, r22.z, l(1.000000)
        sqrt r25.z, r25.z
        dp2 r25.w, r12.wwww, r22.xxxx
        add r26.y, -r23.w, r25.w
        ge r26.z, r26.y, r25.z
        if_nz r26.z
          mov r25.x, l(1.000000)
          mov r24.w, |r12.w|
        else
          mad r26.z, -r26.y, r26.y, l(1.000000)
          rsq r26.z, r26.z
          mul r26.z, r22.z, r26.z
          mad r26.w, -r26.y, r22.x, r12.w
          mul r27.x, r26.w, r26.z
          mad r26.y, -r26.y, r23.w, r14.w
          mul r26.y, r26.y, r26.z
          mul r27.y, r22.x, r22.x
          mad r27.y, -r12.w, r12.w, -r27.y
          add r27.y, r27.y, l(1.000000)
          mad r27.y, -r23.w, r23.w, r27.y
          mad_sat r25.w, r25.w, r23.w, r27.y
          sqrt r25.w, r25.w
          mul r25.w, r25.w, r26.z
          mul r27.y, r12.w, r25.w
          add r27.z, r27.y, r27.y
          mad r27.w, r22.x, r25.z, r12.w
          mad r26.z, r26.z, r26.w, r27.w
          mad r26.w, r23.w, r25.z, r26.y
          add r26.w, r26.w, l(1.000000)
          mul r28.x, r25.w, r26.w
          mul r28.y, r26.w, r26.z
          mul r28.z, r26.z, r27.z
          mul r27.y, r27.y, r26.z
          mul r27.y, r27.y, l(0.500000)
          mad r27.y, r28.x, l(-0.500000), r27.y
          mul r27.y, r27.y, r28.y
          mad r28.w, -r28.x, l(2.000000), r28.z
          mul r28.z, r28.w, r28.z
          mad r28.x, r28.x, r28.x, r28.z
          mul r28.z, r26.w, r26.w
          mad r26.w, r23.w, r25.z, r26.w
          mad r26.w, r26.w, l(-0.500000), l(-0.500000)
          mul r26.w, r26.w, r28.y
          mad r26.w, r27.w, r28.z, r26.w
          mad r26.z, r26.z, r26.w, r28.x
          add r26.w, r27.y, r27.y
          mul r27.w, r27.y, r27.y
          mad r27.w, r26.z, r26.z, r27.w
          div r26.w, r26.w, r27.w
          mul r26.z, r26.z, r26.w
          mad r26.w, -r26.w, r27.y, l(1.000000)
          mul r25.w, r25.w, r26.z
          mad r25.w, r26.w, r27.x, r25.w
          mul r26.z, r27.z, r26.z
          mad r26.y, r26.w, r26.y, r26.z
          mad r22.x, r22.x, r25.z, r25.w
          mad r23.w, r23.w, r25.z, r26.y
          mad r25.z, r23.w, l(2.000000), l(2.000000)
          rsq r25.z, r25.z
          add r22.x, r12.w, r22.x
          mul_sat r25.x, r25.z, r22.x
          mad_sat r24.w, r25.z, r23.w, r25.z
        endif
      endif
      mul r22.x, r22.y, r20.w
      lt r23.w, l(0.000000), r21.x
      mul r21.x, r21.x, r21.x
      mad r25.z, r24.w, l(3.600000), l(0.400000)
      div r21.x, r21.x, r25.z
      mad r21.x, r12.y, r12.y, r21.x
      min r21.x, r21.x, l(1.000000)
      movc r20.x, r23.w, r21.x, r17.w
      mul r21.x, r22.z, l(0.250000)
      ishr r23.w, r20.x, l(1)
      iadd r23.w, r23.w, l(0x1fbd1df5)
      mad r22.z, r23.w, l(3.000000), r22.z
      mul r21.x, r21.x, r22.z
      add r22.z, r24.w, l(0.001000)
      div r21.x, r21.x, r22.z
      add r27.x, r20.x, r21.x
      div r27.y, r20.x, r27.x
      movc r25.yz, r25.yyyy, r27.xxyx, r20.xxyx
      lt r21.x, r26.x, l(1.000000)
      add r23.w, -r26.x, l(1.000100)
      add r25.w, r26.x, l(1.000000)
      div r23.w, r23.w, r25.w
      sqrt r23.w, r23.w
      mul r25.w, r23.w, l(0.250000)
      ishr r26.x, r25.y, l(1)
      iadd r26.x, r26.x, l(0x1fbd1df5)
      mad r23.w, r26.x, l(3.000000), r23.w
      mul r23.w, r23.w, r25.w
      div r22.z, r23.w, r22.z
      add r22.z, r22.z, r25.y
      div r22.z, r25.y, r22.z
      sqrt r22.z, r22.z
      mul r22.z, r22.z, r25.z
      movc r21.x, r21.x, r22.z, r25.z
      mad r22.z, r25.x, r20.x, -r25.x
      mad r22.z, r22.z, r25.x, l(1.000000)
      mul r22.z, r22.z, r22.z
      mul r22.z, r22.z, l(3.14159274)
      div r22.z, r20.x, r22.z
      mul r21.x, r21.x, r22.z
      sqrt r20.x, r20.x
      add r22.z, -r20.x, l(1.000000)
      mad r23.w, r15.w, r22.z, r20.x
      mad r20.x, r22.y, r22.z, r20.x
      mul r20.x, r15.w, r20.x
      mad r20.x, r22.y, r23.w, r20.x
      rcp r20.x, r20.x
      mul r20.x, r20.x, r21.x
      add r21.x, -r24.w, l(1.000000)
      mul r22.y, r21.x, r21.x
      mul r22.y, r22.y, r22.y
      mul r22.z, r21.x, r22.y
      mad r21.x, -r22.y, r21.x, l(1.000000)
      mul r25.xyz, r15.xyzx, r21.xxxx
      mad r25.xyz, r18.xxxx, r22.zzzz, r25.xyzx
      mul r20.x, r20.x, l(0.500000)
      mul r25.xyz, r25.xyzx, r20.xxxx
      mul r25.xyz, r22.xxxx, r25.xyzx
      mad r26.xyz, -r4.xyzx, r4.wwww, r21.yzwy
      dp3 r20.x, r26.xyzx, r26.xyzx
      rsq r20.x, r20.x
      mul r26.xyz, r20.xxxx, r26.xyzx
      dp3_sat r20.x, r21.yzwy, -r6.xyzx
      log r20.x, r20.x
      mul r20.x, r20.x, l(12.000000)
      exp r20.x, r20.x
      mul r20.x, r19.x, r20.x
      dp3 r21.x, r8.yzwy, r26.xyzx
      mad r21.x, r21.x, r6.w, -r6.w
      add_sat r21.x, r21.x, l(1.000000)
      mul r21.x, r7.w, r21.x
      mul r21.y, r21.x, l(0.159154937)
      mad r21.x, -r21.x, l(0.159154937), l(1.000000)
      mad r20.x, r20.x, r21.x, r21.y
      mul r20.x, r20.x, r20.w
      mul r21.xyz, r13.xyzx, r20.xxxx
      mad r22.xyz, r22.xxxx, r17.xyzx, r25.xyzx
      mul r23.xyz, r22.wwww, r23.xyzx
      mul r25.xyz, r24.yyyy, r23.xyzx
      mul r23.xyz, r24.zzzz, r23.xyzx
      mul r21.xyz, r21.xyzx, r23.xyzx
      mad r21.xyz, r22.xyzx, r25.xyzx, r21.xyzx
    else
      mov r21.xyz, l(0,0,0,0)
    endif
  else
    mov r21.xyz, l(0,0,0,0)
  endif
  ushr r20.x, r24.x, l(8)
  and r20.x, r20.x, cb2[16].w
  add r21.xyz, r19.yzwy, r21.xyzx
  movc r19.yzw, r20.xxxx, r21.xxyz, r19.yyzw
  iadd r20.z, r20.z, l(1)
endloop
mad r4.xyz, r13.wwww, r8.yzwy, -r6.xyzx
mov_sat r12.w, r12.w
log r0.x, r9.z
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r6.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r6.x
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t8.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r9.z, cb1[165].x, cb1[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r10.w, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r6.xyz, r18.yzwy, r10.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r9.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r6.x, r6.x
mul r4.w, r12.w, l(-9.280000)
exp r4.w, r4.w
min r0.x, r0.x, r4.w
mad r0.x, r0.x, r6.x, r6.y
mad r6.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.x, r18.x, r6.y
mad r6.xyz, r15.xyzx, r6.xxxx, r0.xxxx
mul r4.xyz, r4.xyzx, r6.xyzx
mul r4.xyz, r10.zzzz, r4.xyzx
mad r6.xyz, r15.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r15.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r6.xyzx
mad r6.xyz, r15.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r6.xyzx
add r6.xyz, r6.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r6.xyzx, r19.yzwy
lt r0.x, l(0.000000), cb4[91].w
if_nz r0.x
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.x, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.xxxx
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.x, r0.x, cb1[176].x, cb1[176].y
  log r0.x, r0.x
  mul r0.x, r0.x, cb1[176].z
  mul r1.z, r0.x, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t9.xyzw, s0, l(0.000000)
  mul r0.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r0.x, v4.w
endif
mad r2.xyz, r15.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r9.xywx
add r2.xyz, -r4.xyzx, r2.xyzx
mad r2.xyz, cb1[134].zzzz, r2.xyzx, r4.xyzx
max r3.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb1[130].x
if_nz r1.w
  add r4.xyz, r5.xyzx, -cb2[5].xyzx
  add r6.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r4.xyz, r6.xyzx, |r4.xyzx|
  or r1.w, r4.y, r4.x
  or r1.w, r4.z, r1.w
  dp3 r2.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.w, r2.w, l(0.002000)
  frc r2.w, r2.w
  lt r2.w, l(0.500000), r2.w
  movc r4.xyz, r2.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
endif
mad r0.yzw, r0.yyzw, r7.xxyz, r2.xxyz
add r0.yzw, r3.xxyz, r0.yyzw
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
