//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 18:36:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// SV_POSITION              0   xyzw        1      POS   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear noperspective v0.xy
dcl_output o0.xyzw
dcl_temps 7
add_sat r0.xyzw, v0.yxyx, cb0[9].yxwz
mad r0.xyzw, r0.zxwy, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mov r1.z, r0.y
mul r2.xy, r0.wyww, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r2.zw, l(0,0,1.000000,-1.000000)
mov r1.xy, r2.xzxx
mov r3.y, l(-1.000000)
mov r3.xz, -r0.yywy
ieq r4.xyzw, cb0[2].xxxx, l(1, 2, 3, 4)
movc r5.xyz, r4.wwww, r2.xyzx, r3.zxyz
movc r5.xyz, r4.zzzz, r2.xwyx, r5.xyzx
movc r1.xyz, r4.yyyy, r1.xyzx, r5.xyzx
movc r1.xyz, r4.xxxx, r2.wyxw, r1.xyzx
mov r3.xy, r2.zyzz
movc r1.xyz, cb0[2].xxxx, r1.xyzx, r3.xyzx
utof r0.w, cb0[5].y
sample_l_indexable(texturecube)(float,float,float,float) r1.xyzw, r1.xyzx, t0.xyzw, s0, r0.w
mov r2.z, r0.x
mul r3.xy, r0.zxzz, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r0.xz, -r0.xxzx
mov r0.y, l(-1.000000)
mov r3.zw, l(0,0,1.000000,-1.000000)
movc r5.xyz, r4.wwww, r3.xyzx, r0.zxyz
movc r5.xyz, r4.zzzz, r3.xwyx, r5.xyzx
mov r2.xy, r3.xzxx
movc r2.xyz, r4.yyyy, r2.xyzx, r5.xyzx
movc r2.xyz, r4.xxxx, r3.wyxw, r2.xyzx
mov r0.xy, r3.zyzz
movc r0.xyz, cb0[2].xxxx, r2.xyzx, r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r2.xyzw, r0.xyzx, t0.xyzw, s0, r0.w
add r1.xyzw, r1.xyzw, r2.xyzw
add_sat r2.xyzw, v0.yxyx, cb0[10].yxwz
mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mov r0.z, r2.x
mov r3.y, l(-1.000000)
mov r3.xz, -r2.xxyx
mul r5.xy, r2.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r5.zw, l(0,0,1.000000,-1.000000)
movc r6.xyz, r4.wwww, r5.xyzx, r3.zxyz
movc r6.xyz, r4.zzzz, r5.xwyx, r6.xyzx
mov r0.xy, r5.xzxx
movc r0.xyz, r4.yyyy, r0.xyzx, r6.xyzx
movc r0.xyz, r4.xxxx, r5.wyxw, r0.xyzx
mov r3.xy, r5.zyzz
movc r0.xyz, cb0[2].xxxx, r0.xyzx, r3.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r0.xyzx, t0.xyzw, s0, r0.w
add r1.xyzw, r1.xyzw, r3.xyzw
mov r0.xz, -r2.zzwz
mul r3.xy, r2.wzww, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r0.y, l(-1.000000)
mov r3.zw, l(0,0,1.000000,-1.000000)
movc r5.xyz, r4.wwww, r3.xyzx, r0.zxyz
movc r5.xyz, r4.zzzz, r3.xwyx, r5.xyzx
mov r2.xy, r3.xzxx
movc r2.xyz, r4.yyyy, r2.xyzx, r5.xyzx
movc r2.xyz, r4.xxxx, r3.wyxw, r2.xyzx
mov r0.xy, r3.zyzz
movc r0.xyz, cb0[2].xxxx, r2.xyzx, r0.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, r0.w
add r0.xyzw, r0.xyzw, r1.xyzw
mul o0.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
ret
// Approximately 0 instruction slots used
