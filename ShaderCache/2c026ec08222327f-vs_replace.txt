// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 20:16:03 2019
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[5];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[166];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[15];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_InstanceID0,
  out float4 o0 : SV_POSITION0,
  out float o1 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[14].x != 0) {
    r0.x = cb1[165].w;
  } else {
    r0.x = (int)v1.x & 1;
  }
  if (r0.x == 0) {
    r1.x = cb1[0].x;
    r1.y = cb1[1].x;
    r1.z = cb1[2].x;
    r1.w = cb1[3].x;
    r2.x = cb1[0].y;
    r2.y = cb1[1].y;
    r2.z = cb1[2].y;
    r2.w = cb1[3].y;
    r3.x = cb1[0].z;
    r3.y = cb1[1].z;
    r3.z = cb1[2].z;
    r3.w = cb1[3].z;
    r4.x = cb1[0].w;
    r4.y = cb1[1].w;
    r4.z = cb1[2].w;
    r4.w = cb1[3].w;
    r0.yzw = cb1[62].xyz;
    r5.x = cb1[163].y;
  } else {
    r1.x = cb3[0].x;
    r1.y = cb3[1].x;
    r1.z = cb3[2].x;
    r1.w = cb3[3].x;
    r2.x = cb3[0].y;
    r2.y = cb3[1].y;
    r2.z = cb3[2].y;
    r2.w = cb3[3].y;
    r3.x = cb3[0].z;
    r3.y = cb3[1].z;
    r3.z = cb3[2].z;
    r3.w = cb3[3].z;
    r4.x = cb3[0].w;
    r4.y = cb3[1].w;
    r4.z = cb3[2].w;
    r4.w = cb3[3].w;
    r0.yzw = cb3[62].xyz;
    r5.x = cb3[163].y;
  }
  r6.xy = cb0[4].ww * v0.yx;
  r6.zw = -v0.xy * cb0[4].ww + float2(1,1);
  r7.xyzw = r6.xyzw + r6.xyzw;
  r5.yz = cmp(float2(0.5,0.5) < v0.wz);
  r8.xyzw = -r6.xyzw * float4(2,2,2,2) + float4(1,1,1,1);
  r9.xyzw = cb0[9].xyzw * r8.xyzw;
  r9.xyzw = r7.xyzw * cb0[5].wwww + r9.xyzw;
  r10.xyzw = cb0[8].xyzw * r8.xyzw;
  r10.xyzw = r7.xyzw * cb0[5].zzzz + r10.xyzw;
  r9.xyzw = r5.zzzz ? r9.xyzw : r10.xyzw;
  r10.xyzw = cb0[7].xyzw * r8.xyzw;
  r10.xyzw = r7.xyzw * cb0[5].yyyy + r10.xyzw;
  r8.xyzw = cb0[6].xyzw * r8.xyzw;
  r7.xyzw = r7.xyzw * cb0[5].xxxx + r8.xyzw;
  r7.xyzw = r5.zzzz ? r10.xyzw : r7.xyzw;
  r7.xyzw = r5.yyyy ? r9.xyzw : r7.xyzw;
  r5.y = r6.y + r6.x;
  r5.y = cmp(1 < r5.y);
  r5.z = cmp(r6.y < r6.x);
  r5.zw = r5.zz ? r7.wy : r7.zx;
  r5.y = r5.y ? r5.z : r5.w;
  r5.z = floor(r5.y);
  r5.y = r5.y + -r5.z;
  r5.w = -cb0[4].x + r5.z;
  r5.w = exp2(-r5.w);
  r6.xy = v0.xy * r5.ww;
  r6.xy = floor(r6.xy);
  r5.w = exp2(-r5.z);
  r6.z = cb4[3].x * r5.w;
  r7.x = cb4[3].x * r5.w + -1;
  r5.w = 0.5 * r6.z;
  r5.w = max(2, r5.w);
  r7.y = -1 + r5.w;
  r6.zw = cb4[3].yy * r7.xy;
  r7.xy = r6.xy / r6.zz;
  r6.xy = float2(0.5,0.5) * r6.xy;
  r6.xy = floor(r6.xy);
  r6.xy = r6.xy / r6.ww;
  r6.zw = r7.xy * cb4[0].xy + cb4[0].zw;
  r6.zw = cb4[0].xy * float2(0.5,0.5) + r6.zw;
  r6.zw = v0.zw * cb4[4].xy + r6.zw;
  r7.zw = -cb0[3].zw + r5.zz;
  r6.zw = t0.SampleLevel(s0_s, r6.zw, r7.z).xy;
  r5.w = dot(r6.zw, float2(65280,255));
  r5.zw = float2(1,-32768) + r5.zw;
  r8.z = 0.0078125 * r5.w;
  r6.zw = r6.xy * cb4[0].xy + cb4[0].zw;
  r6.zw = cb4[0].xy * float2(0.5,0.5) + r6.zw;
  r6.zw = v0.zw * cb4[4].xy + r6.zw;
  r5.zw = -cb0[3].zw + r5.zz;
  r6.zw = t0.SampleLevel(s0_s, r6.zw, r5.z).xy;
  r5.z = dot(r6.zw, float2(65280,255));
  r5.z = -32768 + r5.z;
  r9.z = 0.0078125 * r5.z;
  r6.zw = r7.xy * cb4[1].xy + cb4[1].zw;
  r6.zw = v0.zw * cb4[4].zz + r6.zw;
  r10.xyzw = t1.SampleLevel(s1_s, r6.zw, r7.w).xyzw;
  r6.zw = r6.xy * cb4[1].xy + cb4[1].zw;
  r6.zw = v0.zw * cb4[4].zz + r6.zw;
  r11.xyzw = t1.SampleLevel(s1_s, r6.zw, r5.w).xyzw;
  r5.z = dot(r10.xy, float2(65280,255));
  r5.z = -32768 + r5.z;
  r10.x = 0.00390625 * r5.z;
  r5.z = dot(r10.zw, float2(65280,255));
  r5.z = -32768 + r5.z;
  r10.y = 0.00390625 * r5.z;
  r5.z = dot(r11.xy, float2(65280,255));
  r5.z = -32768 + r5.z;
  r11.x = 0.00390625 * r5.z;
  r5.z = dot(r11.zw, float2(65280,255));
  r5.z = -32768 + r5.z;
  r11.y = 0.00390625 * r5.z;
  r8.xy = r10.xy + r7.xy;
  r9.xy = r11.xy + r6.xy;
  r6.xyz = r9.xyz + -r8.xyz;
  r5.yzw = r5.yyy * r6.xyz + r8.xyz;
  r6.xy = cb4[4].ww * v0.zw;
  r6.zw = float2(0,1);
  r5.yzw = r6.xyz + r5.yzw;
  r6.xyz = cb2[1].xyz * r5.zzz;
  r6.xyz = cb2[0].xyz * r5.yyy + r6.xyz;
  r5.yzw = cb2[2].xyz * r5.www + r6.xyz;
  r0.yzw = cb2[3].xyz + r0.yzw;
  r6.xyz = r5.yzw + r0.yzw;
  r1.x = dot(r6.xyzw, r1.xyzw);
  r1.y = dot(r6.xyzw, r2.xyzw);
  r1.z = dot(r6.xyzw, r3.xyzw);
  r1.w = dot(r6.xyzw, r4.xyzw);
  r0.y = asint(cb0[0].x) | asint(cb0[14].x);
  if (r0.y != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o1.x = dot(r1.xw, r2.xy);
    r0.y = 0.5 * r5.x;
    r0.x = icb[r0.x+0].x * r1.w;
    r0.z = -r5.x * 0.5 + 1;
    r0.x = r0.x * r0.z;
    r1.x = r1.x * r0.y + r0.x;
  } else {
    o1.x = 0;
  }
  o0.xyzw = r1.xyzw;
  return;
}