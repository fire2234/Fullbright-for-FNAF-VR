//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 19:02:14 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x
// SV_InstanceID            0   x           1   INSTID    uint   x
// ATTRIBUTE                0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 4   xyz         1     NONE   float   xyz
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// PARTICLE_POSITION        0   xyzw        3     NONE   float   xyzw
// PARTICLE_VELOCITY        0   xyzw        4     NONE   float   xyzw
// TANGENTX                 0   xyzw        5     NONE   float   xyzw
// TANGENTZ                 0   xyzw        6     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           7     NONE    uint   x
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// SV_POSITION              0   xyzw        9      POS   float   xyzw
// SV_ClipDistance          1   x          10  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[92], immediateIndexed
dcl_constantbuffer cb2[178], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[164], immediateIndexed
dcl_constantbuffer cb5[4], immediateIndexed
dcl_constantbuffer cb6[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_sgv v0.x, vertex_id
dcl_input_sgv v1.x, instance_id
dcl_input v2.xy
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.x
dcl_output o8.xyzw
dcl_output_siv o9.xyzw, position
dcl_output_siv o10.x, clip_distance
dcl_temps 20
movc r0.x, cb0[0].x, l(1), l(0)
and r0.y, r0.x, cb0[3].y
if_z r0.y
  mov r1.x, cb2[0].x
  mov r1.y, cb2[1].x
  mov r1.z, cb2[2].x
  mov r1.w, cb2[3].x
  mov r2.x, cb2[0].y
  mov r2.y, cb2[1].y
  mov r2.z, cb2[2].y
  mov r2.w, cb2[3].y
  mov r3.x, cb2[0].z
  mov r3.y, cb2[1].z
  mov r3.z, cb2[2].z
  mov r3.w, cb2[3].z
  mov r4.x, cb2[0].w
  mov r4.y, cb2[1].w
  mov r4.z, cb2[2].w
  mov r4.w, cb2[3].w
  mov r5.xyz, cb2[62].xyzx
  mov r0.z, cb2[163].y
  mov r6.xyz, cb2[53].xyzx
  mov r7.xyz, cb2[54].xyzx
  mov r8.xyz, cb2[55].xyzx
  mov r9.xyz, cb2[56].xyzx
  mov r10.xyz, cb2[60].xyzx
else
  mov r1.x, cb4[0].x
  mov r1.y, cb4[1].x
  mov r1.z, cb4[2].x
  mov r1.w, cb4[3].x
  mov r2.x, cb4[0].y
  mov r2.y, cb4[1].y
  mov r2.z, cb4[2].y
  mov r2.w, cb4[3].y
  mov r3.x, cb4[0].z
  mov r3.y, cb4[1].z
  mov r3.z, cb4[2].z
  mov r3.w, cb4[3].z
  mov r4.x, cb4[0].w
  mov r4.y, cb4[1].w
  mov r4.z, cb4[2].w
  mov r4.w, cb4[3].w
  mov r5.xyz, cb4[62].xyzx
  mov r0.z, cb4[163].y
  mov r6.xyz, cb4[53].xyzx
  mov r7.xyz, cb4[54].xyzx
  mov r8.xyz, cb4[55].xyzx
  mov r9.xyz, cb4[56].xyzx
  mov r10.xyz, cb4[60].xyzx
endif
ishl r0.w, v1.x, l(4)
ushr r5.w, v0.x, l(2)
iadd r0.w, r0.w, r5.w
iadd r0.w, r0.w, cb0[3].x
ld_indexable(buffer)(float,float,float,float) r11.xy, r0.wwww, t1.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r11.xyxx, t2.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r11.xyxx, t3.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r11.xyxx, t4.xyzw, s3, l(0.000000)
ge r0.w, l(1.000000), r12.w
and r0.w, r0.w, l(0x3f800000)
mul r14.xyz, r13.yyyy, cb3[1].xyzx
mad r13.xyw, r13.xxxx, cb3[0].xyxz, r14.xyxz
mad r13.xyz, r13.zzzz, cb3[2].xyzx, r13.xywx
add r14.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000100, 0.000000)
dp3 r5.w, r14.xyzx, r14.xyzx
rsq r5.w, r5.w
mul r14.xyz, r5.wwww, r14.xyzx
dp3 r5.w, r13.xyzx, r13.xyzx
sqrt r14.w, r5.w
mad r13.xy, cb6[0].zwzz, r12.wwww, cb6[0].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.xyxx, t5.xyzw, s4, l(0.000000)
mad r13.xyzw, r13.xyzw, cb6[1].xyzw, cb6[2].xyzw
mul o2.xyzw, r13.xyzw, cb5[3].xyzw
mad r13.xy, cb6[3].zwzz, r12.wwww, cb6[3].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r13.xyxx, t5.xyzw, s4, l(0.000000)
mad r13.xyz, r13.xyzx, cb6[4].xyzx, cb6[5].xyzx
lt r15.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
movc r15.zw, r15.xxxy, l(0,0,0,0), l(0,0,-0.500000,-0.500000)
add r11.xy, r11.xyxx, r15.zwzz
add r11.xy, r11.xyxx, r11.xyxx
mul r13.xy, r13.xyxx, cb5[0].xyxx
mul r15.zw, r14.wwww, cb6[6].xxxy
max r15.zw, r15.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
min r15.zw, r15.zzzw, cb6[6].zzzw
mul r11.xy, r11.xyxx, r13.xyxx
mul r11.xy, r15.zwzz, r11.xyxx
mul r11.xy, r0.wwww, r11.xyxx
add r13.xy, -v2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r13.xy, r15.xyxx, r13.xyxx, v2.xyxx
frc r15.x, r13.z
add r0.w, r13.z, -r15.x
div r5.w, r0.w, cb6[7].x
ge r6.w, r5.w, -r5.w
frc r5.w, |r5.w|
movc r5.w, r6.w, r5.w, -r5.w
mul r16.x, r5.w, cb6[7].x
mul r0.w, r0.w, cb6[7].z
round_ni r16.y, r0.w
add r13.xy, r13.xyxx, r16.xyxx
mul o0.xy, r13.xyxx, cb6[7].zwzz
mul r0.w, r11.w, cb6[10].x
mad r0.w, r0.w, r12.w, r11.z
mul r13.xyz, r12.yyyy, cb3[1].xyzx
mad r13.xyz, cb3[0].xyzx, r12.xxxx, r13.xyzx
mad r12.xyz, cb3[2].xyzx, r12.zzzz, r13.xyzx
add r5.xyz, r5.xyzx, cb3[3].xyzx
add r5.xyz, r5.xyzx, r12.xyzx
add r9.xyz, -r7.xyzx, r9.xyzx
mad r7.xyz, cb6[9].wwww, r9.xyzx, r7.xyzx
add r8.xyz, -r6.xyzx, r8.xyzx
mad r6.xyz, cb6[9].wwww, r8.xyzx, r6.xyzx
add r8.xyz, -r7.xyzx, cb5[1].xyzx
mad r7.xyz, cb5[1].wwww, r8.xyzx, r7.xyzx
add r8.xyz, r6.xyzx, cb5[2].xyzx
mad r6.xyz, cb5[2].wwww, r8.xyzx, -r6.xyzx
add r8.xyz, -r5.zxyz, r10.zxyz
dp3 r5.w, r8.xyzx, r8.xyzx
max r6.w, r5.w, l(0.010000)
sqrt r6.w, r6.w
div r8.xyz, r8.xyzx, r6.wwww
lt r6.w, l(0.000000), cb6[9].x
if_nz r6.w
  mad_sat r5.w, r5.w, cb6[9].y, -cb6[9].z
  mul r9.xyz, r8.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mad r9.xyz, r8.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r9.xyzx
  dp2 r6.w, r9.xyxx, r9.xyxx
  max r6.w, r6.w, l(0.010000)
  sqrt r6.w, r6.w
  div r9.xyz, r9.xyzx, r6.wwww
  mul r12.xyz, r8.xyzx, r9.yzxy
  mad r12.xyz, r8.zxyz, r9.zxyz, -r12.xyzx
  add r9.xyz, -r7.xyzx, r9.xyzx
  mad r9.xyz, r5.wwww, r9.xyzx, r7.xyzx
  dp3 r6.w, r9.xyzx, r9.xyzx
  rsq r6.w, r6.w
  mul r9.xyz, r6.wwww, r9.xyzx
  add r12.xyz, -r6.xyzx, r12.xyzx
  mad r12.xyz, r5.wwww, r12.xyzx, r6.xyzx
  dp3 r5.w, r12.xyzx, r12.xyzx
  rsq r5.w, r5.w
  mul r12.xyz, r5.wwww, r12.xyzx
else
  mul r13.xyz, r14.yzxy, r8.xyzx
  mad r13.xyz, r8.zxyz, r14.zxyz, -r13.xyzx
  dp3 r5.w, r13.xyzx, r13.xyzx
  max r5.w, r5.w, l(0.010000)
  sqrt r5.w, r5.w
  div r13.xyz, r13.xyzx, r5.wwww
  mul r16.xyz, r8.zxyz, cb5[1].zxyz
  mad r16.xyz, cb5[1].yzxy, r8.xyzx, -r16.xyzx
  dp3 r5.w, r16.xyzx, r16.xyzx
  max r5.w, r5.w, l(0.010000)
  sqrt r5.w, r5.w
  div r16.xyz, r16.xyzx, r5.wwww
  lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb6[8].yzwy
  mul r18.xyz, r8.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mad r18.xyz, r8.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r18.xyzx
  dp2 r5.w, r18.xyxx, r18.xyxx
  max r5.w, r5.w, l(0.010000)
  sqrt r5.w, r5.w
  div r18.xyz, r18.xyzx, r5.wwww
  mul r19.xyz, r8.xyzx, r18.yzxy
  mad r8.xyz, r8.zxyz, r18.zxyz, -r19.xyzx
  movc r7.xyz, r17.zzzz, r18.xyzx, r7.xyzx
  movc r6.xyz, r17.zzzz, r8.xyzx, r6.xyzx
  movc r7.xyz, r17.yyyy, cb5[1].xyzx, r7.xyzx
  movc r6.xyz, r17.yyyy, -r16.xyzx, r6.xyzx
  movc r9.xyz, r17.xxxx, r13.xyzx, r7.xyzx
  movc r12.xyz, r17.xxxx, -r14.xyzx, r6.xyzx
endif
mad r0.w, r0.w, l(6.28318548), cb6[10].y
sincos r6.x, r7.x, r0.w
mul r6.yzw, r9.xxyz, r7.xxxx
mad r6.yzw, r6.xxxx, r12.xxyz, r6.yyzw
mul r7.yzw, r9.zzxy, r6.xxxx
mad r7.xyz, r7.xxxx, r12.zxyz, -r7.yzwy
add r8.xy, v2.xyxx, cb6[11].xyxx
mul r8.xy, r8.xyxx, r11.xyxx
mul r8.yzw, r7.yyzx, r8.yyyy
mad r8.xyz, r8.xxxx, r6.yzwy, r8.yzwy
add r9.xyz, -cb2[131].xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx
dp3 r0.w, r8.xyzx, r8.xyzx
rsq r0.w, r0.w
mul r12.xyz, r0.wwww, r8.xyzx
dp3 r0.w, r9.xyzx, r12.xyzx
mul r0.w, r0.w, l(100000.000000)
max r0.w, r0.w, l(-1.000000)
min r15.z, r0.w, l(1.000000)
mul r9.xyz, r15.zzzz, -cb2[131].xyzx
mad r8.xyz, r9.xyzx, cb6[10].zzzz, r8.xyzx
add r8.xyz, r5.xyzx, r8.xyzx
min r0.w, r11.y, r11.x
mul o3.w, r0.w, l(0.500000)
mov r8.w, l(1.000000)
dp4 r1.x, r8.xyzw, r1.xyzw
dp4 r1.y, r8.xyzw, r2.xyzw
dp4 r1.z, r8.xyzw, r3.xyzw
dp4 r1.w, r8.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.y + 0].x
  mov r2.y, l(1.000000)
  dp2 o10.x, r1.xwxx, r2.xyxx
  mul r0.w, r0.z, l(0.500000)
  mul r2.x, r1.w, icb[r0.y + 0].x
  mad r0.z, -r0.z, l(0.500000), l(1.000000)
  mul r0.z, r0.z, r2.x
  mad r1.x, r1.x, r0.w, r0.z
else
  mov o10.x, l(0)
endif
mul r2.xyz, r6.wyzw, r7.zxyz
mad r2.xyz, r6.zwyz, r7.xyzx, -r2.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mul r3.xyz, r2.yzxy, r7.xyzx
mad r3.xyz, r7.zxyz, r2.zxyz, -r3.xyzx
dp3 r0.z, r3.xyzx, r6.yzwy
lt r0.w, l(0.000000), r0.z
lt r0.z, r0.z, l(0.000000)
iadd r0.z, -r0.w, r0.z
itof o6.w, r0.z
imad o7.x, r0.x, l(0x80000000), r0.y
add r0.xyz, -r10.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r2.w, r0.w
dp3 r3.x, r0.xyzx, cb2[52].xyzx
div r2.w, r2.w, r3.x
mul r2.w, r2.w, cb2[177].z
max r2.w, r2.w, l(0.000000)
rsq r3.x, r0.w
mul r0.w, r0.w, r3.x
mul r3.yzw, r0.xxyz, r3.xxxx
max r2.w, r2.w, cb1[85].w
lt r4.x, l(0.000000), r2.w
mul r4.y, r3.x, r2.w
mad r4.z, r4.y, r0.z, cb2[59].z
mad r4.y, -r4.y, r0.z, r0.z
mad r2.w, -r2.w, r3.x, l(1.000000)
mul r2.w, r0.w, r2.w
add r3.x, r4.z, -cb1[87].y
mul r3.x, r3.x, cb1[85].y
max r3.x, r3.x, l(-127.000000)
exp r3.x, -r3.x
mul r3.x, r3.x, cb1[87].x
movc r3.x, r4.x, r3.x, cb1[85].x
movc r2.w, r4.x, r2.w, r0.w
movc r4.x, r4.x, r4.y, r0.z
mul r4.x, r4.x, cb1[85].y
max r4.x, r4.x, l(-127.000000)
exp r4.y, -r4.x
add r4.y, -r4.y, l(1.000000)
div r4.y, r4.y, r4.x
mad r4.z, -r4.x, l(0.240226507), l(0.693147182)
lt r4.x, l(0.010000), |r4.x|
movc r4.x, r4.x, r4.y, r4.z
mul r3.x, r3.x, r4.x
mul r4.x, r2.w, r3.x
lt r4.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[87].zzwz
if_nz r4.y
  mad_sat r4.y, r0.w, cb1[91].x, cb1[91].y
  mul r7.xy, cb1[90].yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r7.x, r0.xyxx, r7.xyxx
  dp2 r7.y, r0.xyxx, cb1[90].xyxx
  mov r7.z, r0.z
  sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r7.xyzx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r7.xyz, r7.xyzx, t0.xyzw, s0, cb1[91].z
  add r0.xyz, r0.xyzx, -r7.xyzx
  mad r0.xyz, r4.yyyy, r0.xyzx, r7.xyzx
  mul r0.xyz, r0.xyzx, cb1[86].xyzx
else
  mov r0.xyz, cb1[86].xyzx
endif
ge r4.y, cb1[88].w, l(0.000000)
eq r4.w, cb1[87].z, l(0.000000)
and r4.y, r4.w, r4.y
dp3_sat r3.y, r3.yzwy, cb1[88].xyzx
log r3.y, r3.y
mul r3.y, r3.y, cb1[89].w
exp r3.y, r3.y
mul r3.yzw, r3.yyyy, cb1[89].xxyz
add r2.w, r2.w, -cb1[88].w
max r2.w, r2.w, l(0.000000)
mul r2.w, r2.w, r3.x
exp r2.w, -r2.w
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
mul r3.xyz, r2.wwww, r3.yzwy
and r3.xyz, r3.xyzx, r4.yyyy
exp r2.w, -r4.x
min r2.w, r2.w, l(1.000000)
max r3.w, r2.w, cb1[86].w
lt r0.w, cb1[87].w, r0.w
and r0.w, r0.w, r4.z
movc r3.xyzw, r0.wwww, l(0,0,0,1.000000), r3.xyzw
add r0.w, -r3.w, l(1.000000)
mad o8.xyz, r0.xyzx, r0.wwww, r3.xyzx
mov o0.zw, l(0,0,0,0)
mov o3.xyz, r5.xyzx
mov o4.xyzw, r14.xyzw
mov o5.xyz, r6.yzwy
mov o5.w, l(0)
mov o6.xyz, r2.xyzx
mov o8.w, r3.w
mov o9.xyzw, r1.xyzw
mov o1.y, r12.w
mov o1.xz, r15.xxzx
ret
// Approximately 0 instruction slots used
