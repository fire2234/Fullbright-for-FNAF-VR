// ---- Created with 3Dmigoto v1.3.16 on Mon Sep 16 19:06:58 2019
Texture2D<float4> t17 : register(t17);

Texture2D<float4> t16 : register(t16);

Texture2D<float4> t15 : register(t15);

Texture3D<float4> t14 : register(t14);

TextureCubeArray<float4> t13 : register(t13);

Buffer<uint4> t12 : register(t12);

Buffer<uint4> t11 : register(t11);

Buffer<float4> t10 : register(t10);

Buffer<uint4> t9 : register(t9);

Buffer<uint4> t8 : register(t8);

Buffer<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture3D<float4> t5 : register(t5);

Texture3D<float4> t4 : register(t4);

Texture3D<float4> t3 : register(t3);

Texture3D<float4> t2 : register(t2);

Texture3D<float4> t1 : register(t1);

Texture3D<uint4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[2];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[6];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[182];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[28];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : PARTICLE_SUBUVS0,
  float3 v5 : PARTICLE_LIGHTING_OFFSET0,
  nointerpolation uint v6 : PACKED_EYE_INDEX0,
  float4 v7 : TEXCOORD7,
  float4 v8 : SV_Position0,
  uint v9 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v6.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.y = cb1[128].w;
    r0.zw = cb1[129].xy;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r9.xyz = cb1[128].xyz;
    r10.xyzw = cb1[58].xyzw;
    r11.xy = cb1[121].xy;
    r11.zw = cb1[122].zw;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.y = cb3[128].w;
    r0.zw = cb3[129].xy;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r9.xyz = cb3[128].xyz;
    r10.xyzw = cb3[58].xyzw;
    r11.xy = cb3[121].xy;
    r11.zw = cb3[122].zw;
  }
  r12.xyz = v1.zxy * v0.yzx;
  r12.xyz = v1.yzx * v0.zxy + -r12.xyz;
  r12.xyz = v1.www * r12.xyz;
  r11.xy = v8.xy + -r11.xy;
  r11.zw = r11.xy * r11.zw + float2(-0.5,-0.5);
  r13.xy = v8.ww * r11.zw;
  r13.z = v8.w;
  r13.xyw = float3(2,-2,1) * r13.xyz;
  r14.xyz = v8.xyz;
  r14.w = 1;
  r4.x = dot(r14.xyzw, r4.xyzw);
  r4.y = dot(r14.xyzw, r5.xyzw);
  r4.z = dot(r14.xyzw, r6.xyzw);
  r4.w = dot(r14.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r6.xyz = r0.yyy * float3(0,0,1) + r9.xyz;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = r6.yyy * r12.xyz;
  r6.xyw = r6.xxx * v0.xyz + r7.xyz;
  r6.xyz = r6.zzz * v1.xyz + r6.xyw;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xy = float2(8,8) * v3.xy;
  r7.xyz = t16.SampleBias(s4_s, r7.xy, cb1[133].x).xyz;
  r9.xyzw = t17.Sample(s5_s, v4.xy).xyzw;
  r12.xyzw = t17.Sample(s5_s, v4.zw).xyzw;
  r12.xyzw = r12.xyzw + -r9.xyzw;
  r9.xyzw = v0.wwww * r12.xyzw + r9.xyzw;
  r7.xyz = r9.xyz + r7.xyz;
  r7.xyz = v2.xyz * r7.xyz;
  r8.yzw = r7.xyz * float3(0.100000001,0.100000001,0.100000001) + cb6[1].xyz;
  r0.y = saturate(v2.w * r9.w);
  r9.xy = r13.xy / r13.ww;
  r9.xy = r9.xy * r10.xy + r10.wz;
  r4.w = t15.SampleLevel(s3_s, r9.xy, 0).x;
  r6.w = r4.w * cb1[57].x + cb1[57].y;
  r4.w = r4.w * cb1[57].z + -cb1[57].w;
  r4.w = 1 / r4.w;
  r4.w = r6.w + r4.w;
  r4.w = -r13.z * 1 + r4.w;
  r4.w = saturate(0.00666666683 * r4.w);
  r9.w = r4.w * r0.y;
  r7.xyz = saturate(r7.xyz);
  r0.y = r0.w * 0.5 + r0.z;
  r10.xyz = r5.xyz * cb1[178].xyz + cb1[179].xyz;
  r10.xyz = max(float3(0,0,0), r10.xyz);
  r10.xyz = min(float3(0.99000001,0.99000001,0.99000001), r10.xyz);
  r10.xyz = cb1[180].xyz * r10.xyz;
  r12.xyz = (int3)r10.xyz;
  r12.w = 0;
  r12.xyzw = t0.Load(r12.xyzw).xyzw;
  r12.xyzw = (uint4)r12.xyzw;
  r0.z = 1 + cb1[180].w;
  r10.xyz = r10.xyz / r12.www;
  r10.xyz = frac(r10.xyz);
  r10.xyz = cb1[180].www * r10.xyz;
  r10.xyz = r12.xyz * r0.zzz + r10.xyz;
  r10.xyz = float3(0.5,0.5,0.5) + r10.xyz;
  r10.xyz = cb1[181].xyz * r10.xyz;
  r0.z = cmp(0 < cb2[12].z);
  if (r0.z != 0) {
    r0.z = t5.SampleLevel(s0_s, r10.xyz, 0).x;
  } else {
    r4.w = cmp(0 < cb2[10].w);
    r0.z = r4.w ? cb5[5].x : 1;
  }
  r12.xyz = r7.xyz * cb1[126].www + cb1[126].xyz;
  r13.xyz = cb1[127].www * float3(0.0399999991,0.0399999991,0.0399999991) + cb1[127].xyz;
  r14.xyz = t1.SampleLevel(s0_s, r10.xyz, 0).xyz;
  r15.xyz = t2.SampleLevel(s0_s, r10.xyz, 0).xyz;
  r15.xyz = r15.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r16.xyz = t3.SampleLevel(s0_s, r10.xyz, 0).xyz;
  r16.xyz = r16.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r10.xyz = t4.SampleLevel(s0_s, r10.xyz, 0).xyz;
  r10.xyz = r10.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r15.xyz = r15.xyz * r14.xxx;
  r15.yzw = float3(1.73205125,1.73205125,1.73205125) * r15.xyz;
  r16.xyz = r16.xyz * r14.yyy;
  r16.yzw = float3(1.73205125,1.73205125,1.73205125) * r16.xyz;
  r10.xyz = r10.xyz * r14.zzz;
  r10.yzw = float3(1.73205125,1.73205125,1.73205125) * r10.xyz;
  r17.yzw = float3(-1.02332771,1.02332771,-1.02332771) * r6.yzx;
  r15.x = r14.x;
  r17.x = 0.886227548;
  r15.x = dot(r15.xyzw, r17.xyzw);
  r16.x = r14.y;
  r15.y = dot(r16.xyzw, r17.xyzw);
  r10.x = r14.z;
  r15.z = dot(r10.xyzw, r17.xyzw);
  r10.xyz = max(float3(0,0,0), r15.xyz);
  r10.xyz = cb1[146].xyz * r10.xyz;
  r10.xyz = float3(0.318309873,0.318309873,0.318309873) * r10.xyz;
  r4.w = dot(r10.xyz, float3(0.300000012,0.589999974,0.109999999));
  r10.xyz = r10.xyz * r12.xyz;
  r14.xyz = r7.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r14.xyz = r7.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r14.xyz;
  r7.xyz = r7.xyz * float3(2.75519991,2.75519991,2.75519991) + r14.xyz;
  r7.xyz = float3(1.33200002,1.33200002,1.33200002) + r7.xyz;
  r7.xyz = max(float3(1,1,1), r7.xyz);
  r11.xy = (uint2)r11.xy;
  if (r0.x == 0) {
    r6.w = cb4[3].x;
    r7.w = cb4[3].y;
    r10.w = cb4[3].z;
    r11.z = cb4[1].z;
    r14.xy = cb4[1].xy;
    r11.w = cb4[2].x;
  } else {
    r6.w = cb4[43].x;
    r7.w = cb4[43].y;
    r10.w = cb4[43].z;
    r11.z = cb4[41].z;
    r14.xy = cb4[41].xy;
    r11.w = cb4[42].x;
  }
  r6.w = v8.w * r6.w + r7.w;
  r6.w = log2(r6.w);
  r6.w = r6.w * r10.w;
  r6.w = max(0, r6.w);
  r6.w = (uint)r6.w;
  r7.w = (int)r11.z + -1;
  r6.w = min((uint)r7.w, (uint)r6.w);
  r11.xy = (uint2)r11.xy >> (uint2)r11.ww;
  r6.w = mad((int)r6.w, (int)r14.y, (int)r11.y);
  r6.w = mad((int)r6.w, (int)r14.x, (int)r11.x);
  if (r0.x == 0) {
    r7.w = cb4[0].z;
    r10.w = cb4[6].x;
    r11.xy = cb4[6].zw;
    r14.xyz = cb4[5].xyz;
    r15.xyz = cb4[4].xyz;
  } else {
    r7.w = cb4[40].z;
    r10.w = cb4[46].x;
    r11.xy = cb4[46].zw;
    r14.xyz = cb4[45].xyz;
    r15.xyz = cb4[44].xyz;
  }
  if (r7.w != 0) {
    r16.xyzw = (int4)r10.wwww & int4(255,2,4,8);
    r16.xyzw = r16.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb4[7].x != 0) {
      r7.w = cb4[7].x;
      r11.z = 0;
      while (true) {
        r11.w = cmp((uint)r11.z >= asuint(cb4[7].x));
        if (r11.w != 0) break;
        r11.w = dot(cb4[8].xyzw, icb[r11.z+0].xyzw);
        r11.w = cmp(r13.w < r11.w);
        if (r11.w != 0) {
          r7.w = r11.z;
          break;
        }
        r11.z = (int)r11.z + 1;
      }
      r11.z = cmp((uint)r7.w < asuint(cb4[7].x));
      if (r11.z != 0) {
        r11.z = (uint)r7.w << 2;
        r17.xyzw = cb4[r11.z+10].xyzw * r5.yyyy;
        r17.xyzw = r5.xxxx * cb4[r11.z+9].xyzw + r17.xyzw;
        r17.xyzw = r5.zzzz * cb4[r11.z+11].xyzw + r17.xyzw;
        r17.xyzw = cb4[r11.z+12].xyzw + r17.xyzw;
        r18.xyzw = r17.xyxy / r17.wwww;
        r11.zw = cmp(r18.zw >= cb4[r7.w+25].xy);
        r17.xy = cmp(cb4[r7.w+25].zw >= r18.zw);
        r11.zw = r11.zw ? r17.xy : 0;
        r7.w = r11.w ? r11.z : 0;
        if (r7.w != 0) {
          r18.xyzw = r18.xyzw * cb4[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r11.zw = frac(r18.zw);
          r18.xyzw = floor(r18.xyzw);
          r19.xyzw = float4(0.5,1.5,0.5,0.5) + r18.zwzw;
          r19.xyzw = cb4[29].zwzw * r19.xyzw;
          r20.x = t6.SampleLevel(s1_s, r19.xy, 0).x;
          r18.xyzw = float4(1.5,1.5,1.5,0.5) + r18.xyzw;
          r18.xyzw = cb4[29].zwzw * r18.xyzw;
          r20.y = t6.SampleLevel(s1_s, r18.xy, 0).x;
          r20.z = t6.SampleLevel(s1_s, r18.zw, 0).x;
          r20.w = t6.SampleLevel(s1_s, r19.zw, 0).x;
          r17.xyzw = r20.xyzw + -r17.zzzz;
          r17.xyzw = saturate(r17.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r17.yz = r17.zy + -r17.wx;
          r17.xy = r11.zz * r17.yz + r17.wx;
          r7.w = r17.y + -r17.x;
          r7.w = r11.w * r7.w + r17.x;
        } else {
          r7.w = 1;
        }
      } else {
        r7.w = 1;
      }
    } else {
      r7.w = 1;
    }
    if (r16.x != 0) {
      r16.x = 1;
      r11.z = dot(float4(1,1,1,1), r16.xyzw);
      r11.w = -1 + r11.z;
      r11.z = r11.z * r11.w + 1;
      r11.x = saturate(r13.w * r11.x + r11.y);
      r11.x = r11.x * r11.x;
      r11.y = r11.z + -r7.w;
      r11.x = r11.x * r11.y + r7.w;
      r11.y = min(1, r11.x);
    } else {
      r11.xy = float2(1,1);
    }
    r7.w = r11.x + r11.y;
    r7.w = cmp(0 < r7.w);
    if (r7.w != 0) {
      r7.w = dot(r15.xyz, r15.xyz);
      r7.w = rsqrt(r7.w);
      r11.yzw = r15.xyz * r7.www;
      r7.w = saturate(dot(r6.xyz, r11.yzw));
      r11.yzw = r12.xyz * r7.www;
      r11.yzw = float3(0.318309873,0.318309873,0.318309873) * r11.yzw;
      r14.xyz = r14.xyz * r11.xxx;
      r11.xyz = r14.xyz * r11.yzw;
    } else {
      r11.xyz = float3(0,0,0);
    }
    r7.w = (uint)r10.w >> 8;
    r7.w = (int)r7.w & asint(cb2[16].w);
    r11.xyz = r7.www ? r11.xyz : float3(0,0,0);
    r0.z = 1;
  } else {
    r11.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r7.w = (uint)r6.w << 1;
    r7.w = t8.Load(r7.w).x;
    r7.w = min(asuint(cb4[0].x), (uint)r7.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r10.w = (((uint)r6.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r10.w = t8.Load(r10.w).x;
  } else {
    r11.w = (uint)r6.w << 1;
    r11.w = t11.Load(r11.w).x;
    r7.w = min(asuint(cb4[40].x), (uint)r11.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r6.w = (((uint)r6.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r10.w = t11.Load(r6.w).x;
  }
  r6.w = r0.x ? cb4[40].x : cb4[0].x;
  r6.w = min((uint)r7.w, (uint)r6.w);
  r14.xyz = float3(0.318309873,0.318309873,0.318309873) * r12.xyz;
  r0.w = 1;
  r15.xyz = r11.xyz;
  r7.w = 0;
  while (true) {
    r11.w = cmp((uint)r7.w >= (uint)r6.w);
    if (r11.w != 0) break;
    r11.w = (int)r7.w + (int)r10.w;
    if (r0.x == 0) {
      r12.w = t9.Load(r11.w).x;
      r13.w = (int)r12.w * 5;
      r16.xyzw = t7.Load(r13.w).xyzw;
      r17.xyzw = mad((int4)r12.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t7.Load(r17.x).xyzw;
      r19.xyzw = t7.Load(r17.y).wxyz;
      r20.xyzw = t7.Load(r17.z).xyzw;
      r17.xyz = t7.Load(r17.w).xyz;
    } else {
      r11.w = t12.Load(r11.w).x;
      r12.w = (int)r11.w * 5;
      r16.xyzw = t10.Load(r12.w).xyzw;
      r21.xyzw = mad((int4)r11.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t10.Load(r21.x).xyzw;
      r19.xyzw = t10.Load(r21.y).wxyz;
      r20.xyzw = t10.Load(r21.z).xyzw;
      r17.xyz = t10.Load(r21.w).xyz;
    }
    r11.w = cmp(r18.w == 0.000000);
    r12.w = cmp(-2 < r20.x);
    r16.xyz = r16.xyz + -r5.xyz;
    r13.w = dot(r16.xyz, r16.xyz);
    r14.w = rsqrt(r13.w);
    r21.xyz = r16.xyz * r14.www;
    r14.w = r16.w * r16.w;
    r13.w = r14.w * r13.w;
    r13.w = -r13.w * r13.w + 1;
    r13.w = max(0, r13.w);
    r13.w = r13.w * r13.w;
    r22.xyz = r16.xyz * r16.www;
    r14.w = dot(r22.xyz, r22.xyz);
    r14.w = min(1, r14.w);
    r14.w = 1 + -r14.w;
    r14.w = log2(r14.w);
    r14.w = r18.w * r14.w;
    r14.w = exp2(r14.w);
    r13.w = r11.w ? r13.w : r14.w;
    r14.w = dot(r21.xyz, r19.yzw);
    r14.w = r14.w + -r20.x;
    r14.w = saturate(r14.w * r20.y);
    r14.w = r14.w * r14.w;
    r14.w = r14.w * r13.w;
    r12.w = r12.w ? r14.w : r13.w;
    r13.w = cmp(0 < r12.w);
    if (r13.w != 0) {
      r13.w = (int)r19.x & 255;
      r13.w = r13.w ? 1 : 0;
      if (r13.w != 0) {
        r21.xyzw = (int4)r19.xxxx & int4(1,2,4,8);
        r21.xyzw = r21.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r13.w = (uint)r19.x >> 4;
        if (1 == 0) r14.w = 0; else if (1+4 < 32) {         r14.w = (uint)r19.x << (32-(1 + 4)); r14.w = (uint)r14.w >> (32-1);        } else r14.w = (uint)r19.x >> 4;
        r22.x = r14.w ? 1 : 0;
        r19.yzw = (int3)r13.www & int3(2,4,8);
        r22.yzw = r19.yzw ? float3(1,1,1) : float3(0,0,0);
        r13.w = dot(r22.xyzw, float4(1,1,1,1));
        r14.w = dot(r21.xyzw, float4(1,1,1,1));
        r15.w = dot(r0.zwww, r21.xyzw);
        r15.w = -1 + r15.w;
        r14.w = r14.w * r15.w + 1;
        r19.yz = r14.ww * r13.ww;
      } else {
        r19.yz = float2(1,1);
      }
      r13.w = r19.y + r19.z;
      r13.w = cmp(0 < r13.w);
      if (r13.w != 0) {
        r13.w = f16tof32(r20.w);
        r14.w = 0.5 * r13.w;
        r20.xyw = -r14.www * r17.xyz + r16.xyz;
        r16.xyz = r14.www * r17.xyz + r16.xyz;
        r13.w = cmp(0 < r13.w);
        if (r13.w != 0) {
          r13.w = dot(r20.xyw, r20.xyw);
          r14.w = dot(r16.xyz, r16.xyz);
          r13.w = rsqrt(r13.w);
          r14.w = rsqrt(r14.w);
          r15.w = r14.w * r13.w;
          r16.w = dot(r20.xyw, r16.xyz);
          r16.w = r16.w * r15.w;
          r16.w = r16.w * 0.5 + r15.w;
          r16.w = 0.5 + r16.w;
          r17.y = r15.w / r16.w;
          r15.w = dot(r6.xyz, r20.xyw);
          r16.x = dot(r6.xyz, r16.xyz);
          r14.w = r16.x * r14.w;
          r13.w = r15.w * r13.w + r14.w;
          r17.x = 0.5 * r13.w;
        } else {
          r13.w = dot(r20.xyw, r20.xyw);
          r14.w = 1 + r13.w;
          r17.y = rcp(r14.w);
          r13.w = rsqrt(r13.w);
          r16.xyz = r20.xyw * r13.www;
          r17.x = dot(r6.xyz, r16.xyz);
        }
        r13.w = cmp(0 < r20.z);
        r14.w = r20.z * r20.z;
        r14.w = saturate(r14.w * r17.y);
        r14.w = sqrt(r14.w);
        r15.w = cmp(r17.x < r14.w);
        r16.x = max(r17.x, -r14.w);
        r16.x = r16.x + r14.w;
        r16.x = r16.x * r16.x;
        r14.w = 4 * r14.w;
        r14.w = r16.x / r14.w;
        r14.w = r15.w ? r14.w : r17.x;
        r13.w = saturate(r13.w ? r14.w : r17.x);
        r11.w = r11.w ? r17.y : 1;
        r11.w = r11.w * r13.w;
        r16.xyz = r11.www * r14.xyz;
        r17.xyz = r18.xyz * r12.www;
        r17.xyz = r17.xyz * r19.yyy;
        r16.xyz = r17.xyz * r16.xyz;
      } else {
        r16.xyz = float3(0,0,0);
      }
    } else {
      r16.xyz = float3(0,0,0);
    }
    r11.w = (uint)r19.x >> 8;
    r11.w = (int)r11.w & asint(cb2[16].w);
    r16.xyz = r16.xyz + r15.xyz;
    r15.xyz = r11.www ? r16.xyz : r15.xyz;
    r7.w = (int)r7.w + 1;
  }
  r0.x = dot(r4.xyz, r6.xyz);
  r0.z = r0.x + r0.x;
  r6.xyz = r0.zzz * r6.xyz + -r4.xyz;
  r0.x = saturate(r0.x);
  r0.z = log2(r0.y);
  r0.z = -r0.z * 1.20000005 + 1;
  r0.w = -1 + cb1[163].z;
  r0.z = r0.w + -r0.z;
  r6.w = asint(cb0[24].x);
  r4.xyz = t13.SampleLevel(s2_s, r6.xyzw, r0.z).xyz;
  r4.xyz = cb0[27].xxx * r4.xyz;
  r4.xyz = cb1[146].xyz * r4.xyz;
  r0.z = dot(cb1[146].xyz, float3(0.300000012,0.589999974,0.109999999));
  r0.z = cb0[25].w * r0.z;
  r0.w = saturate(r0.y * cb1[165].x + cb1[165].y);
  r6.x = r0.w * -2 + 3;
  r0.w = r0.w * r0.w;
  r0.w = r6.x * r0.w;
  r0.z = max(9.99999975e-005, r0.z);
  r0.z = r4.w / r0.z;
  r0.z = min(cb1[165].z, r0.z);
  r0.z = -1 + r0.z;
  r0.z = r0.w * r0.z + 1;
  r4.xyz = r4.xyz * r0.zzz;
  r6.xyzw = float4(50,0.449999988,0.449999988,0.449999988) * r13.yxyz;
  r6.yzw = r6.yzw * r4.www + -r4.xyz;
  r4.xyz = r8.xxx * r6.yzw + r4.xyz;
  r11.xyzw = r0.yyyy * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.y = r11.x * r11.x;
  r0.x = -9.27999973 * r0.x;
  r0.x = exp2(r0.x);
  r0.x = min(r0.y, r0.x);
  r0.x = r0.x * r11.x + r11.y;
  r0.xy = r0.xx * float2(-1.03999996,1.03999996) + r11.zw;
  r6.x = saturate(r6.x);
  r0.y = r6.x * r0.y;
  r0.xyz = r13.xyz * r0.xxx + r0.yyy;
  r0.xyz = r4.xyz * r0.xyz;
  r4.xyz = r13.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r4.xyz = r13.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r4.xyz;
  r4.xyz = r13.xyz * float3(2.75519991,2.75519991,2.75519991) + r4.xyz;
  r4.xyz = float3(1.33200002,1.33200002,1.33200002) + r4.xyz;
  r4.xyz = max(float3(1,1,1), r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r15.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t14.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v7.w * r1.w;
    r1.xyz = v7.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v7.xyz;
    r2.x = v7.w;
  }
  r2.yzw = r13.xyz * float3(0.449999988,0.449999988,0.449999988) + r12.xyz;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r9.xyz = max(float3(0,0,0), r8.yzw);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r2.yzw = -cb2[5].xyz + r5.xyz;
    r3.xyz = float3(1,1,1) + cb2[11].xyz;
    r2.yzw = cmp(r3.xyz < abs(r2.yzw));
    r0.w = (int)r2.z | (int)r2.y;
    r0.w = (int)r2.w | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r9.xyzw = r0.wwww ? r3.yzwx : r9.xyzw;
    o0.w = r9.w;
  } else {
    o0.w = r9.w;
  }
  r0.xyz = r10.xyz * r7.xyz + r0.xyz;
  r0.xyz = r0.xyz + r9.xyz;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  return;
}