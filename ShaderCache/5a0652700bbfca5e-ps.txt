//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:48:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[125], immediateIndexed
dcl_constantbuffer cb2[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 3
round_pi r0.xy, cb1[122].xyxx
max r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
min r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, cb2[8].yyyy
mul r0.xy, r0.xyxx, cb1[122].zwzz
utof r1.xy, cb0[26].xyxx
add r1.xy, -r1.xyxx, v0.xyxx
mov r0.z, l(0)
mad r1.zw, r1.xxxy, cb0[25].zzzw, -r0.xxxz
mad r1.zw, r1.zzzw, cb1[122].xxxy, cb1[121].xxxy
mul r1.zw, r1.zzzw, cb1[123].zzzw
max r1.zw, r1.zzzw, cb1[124].xxxy
min r1.zw, r1.zzzw, cb1[124].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t0.yzwx, s0, l(0.000000)
mad r1.z, r0.w, cb1[57].z, -cb1[57].w
mad r0.w, r0.w, cb1[57].x, cb1[57].y
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
add r0.w, r0.w, r1.z
mul r1.zw, r1.xxxy, cb0[25].zzzw
mad r2.xyzw, r1.xyxy, cb0[25].zwzw, r0.xzzy
mad r0.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), r0.zyzz, r1.zwzz
mad r0.xy, r0.xyxx, cb1[122].xyxx, cb1[121].xyxx
mul r0.xy, r0.xyxx, cb1[123].zwzz
max r0.xy, r0.xyxx, cb1[124].xyxx
min r0.xy, r0.xyxx, cb1[124].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r2.xyzw, r2.xyzw, cb1[122].xyxy, cb1[121].xyxy
mul r2.xyzw, r2.xyzw, cb1[123].zwzw
max r2.xyzw, r2.xyzw, cb1[124].xyxy
min r2.xyzw, r2.xyzw, cb1[124].zwzw
mad r0.yz, r1.zzwz, cb1[122].xxyx, cb1[121].xxyx
mad r1.xy, r1.zwzz, cb0[28].xyxx, cb0[28].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t1.xyzw, s1
mul r0.yz, r0.yyzy, cb1[123].zzwz
sample_l_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t0.yxzw, s0, l(0.000000)
mad r0.z, r0.y, cb1[57].z, -cb1[57].w
mad r0.y, r0.y, cb1[57].x, cb1[57].y
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.y, r0.z, r0.y
add r0.z, -r0.w, r0.y
mad r0.w, r0.x, cb1[57].z, -cb1[57].w
mad r0.x, r0.x, cb1[57].x, cb1[57].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.x, r0.w, r0.x
add r0.x, -r0.x, r0.y
add r0.x, r0.x, r0.z
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r2.xyxx, t0.yzxw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t0.yzwx, s0, l(0.000000)
mad r1.w, r0.z, cb1[57].z, -cb1[57].w
mad r0.z, r0.z, cb1[57].x, cb1[57].y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r0.z, r0.z, r1.w
add r0.z, -r0.z, r0.y
mad r1.w, r0.w, cb1[57].z, -cb1[57].w
mad r0.w, r0.w, cb1[57].x, cb1[57].y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r0.w, r0.w, r1.w
add r0.y, -r0.w, r0.y
add r0.y, r0.y, r0.z
add r0.x, r0.x, r0.y
div r0.x, r0.x, cb2[8].z
add_sat r0.x, r0.x, l(-1.000000)
add r0.yzw, -r1.xxyz, cb2[5].xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
add r0.xyz, r0.xyzx, cb2[6].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used
