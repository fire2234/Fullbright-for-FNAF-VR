//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Sep 16 19:08:46 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float      w
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[14], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_texturecubearray (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.w
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 21
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[59].xxyz
  mov r9.xyz, cb1[62].xyzx
  mov r10.xyz, cb1[128].xyzx
  mov r11.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[59].xxyz
  mov r9.xyz, cb3[62].xyzx
  mov r10.xyz, cb3[128].xyzx
  mov r11.xy, cb3[121].xyxx
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
mov r13.xyz, v5.xyzx
mov r13.w, l(1.000000)
dp4 r4.x, r13.xyzw, r4.xyzw
dp4 r4.y, r13.xyzw, r5.xyzw
dp4 r4.z, r13.xyzw, r6.xyzw
dp4 r4.w, r13.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r9.xyzx, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r10.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
div r7.xy, v2.xyxx, cb6[1].xyxx
mul r0.y, cb1[132].z, cb6[8].w
frc r0.y, r0.y
mul r7.zw, r0.yyyy, cb6[2].xxxy
round_ni r7.zw, r7.zzzw
div r7.zw, r7.zzzw, cb6[1].xxxy
add r7.xy, r7.zwzz, r7.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t11.xyzw, s3, cb1[133].x
mad r9.xy, v2.xyxx, cb6[3].xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r10.x, r9.xyxx, l(-4.320510172E-008, -1.000000, 0.000000, 0.000000)
dp2 r10.y, r9.xyxx, l(1.000000, -4.320510172E-008, 0.000000, 0.000000)
add r9.xyzw, r10.xyxy, l(0.500000, 0.500000, 0.495200, 0.500000)
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r9.xyxx, t12.yxzw, s4, cb1[133].x
mul r0.y, r0.y, r7.x
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r9.zwzz, t12.yzwx, s4, cb1[133].x
mul r4.w, r4.w, r7.y
mul r7.xyw, r4.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r7.xyw, r0.yyyy, l(1.000000, 0.000000, 0.000000, 0.000000), r7.xyxw
add r9.xy, r10.xyxx, l(0.490400, 0.500000, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r9.xyxx, t12.yxzw, s4, cb1[133].x
mul r0.y, r0.y, r7.z
mad r7.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r7.xywx
mul r9.xy, v2.xyxx, cb6[10].wwww
mad r9.xy, cb1[132].zzzz, cb6[10].yzyy, r9.xyxx
add r8.yzw, -r8.yyzw, cb2[5].xxyz
dp3 r0.y, r8.yzwy, r8.yzwy
sqrt r0.y, r0.y
mad r10.y, -r0.y, l(0.000976562500), l(1.000000)
mov r10.xw, l(1.000000,0,0,1.000000)
mul r8.yz, r9.xxyx, r10.xxyx
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r8.yzyy, t12.xzwy, s4, cb1[133].x
add r6.w, r4.w, cb6[11].x
add r7.w, -cb6[6].x, cb6[11].y
mad_sat r6.w, r6.w, r7.w, cb6[6].x
mul r4.w, r4.w, cb6[11].z
mad r7.xyz, r7.xyzx, r6.wwww, r4.wwww
mad_sat r0.y, r0.y, l(0.00312499981), l(-0.300000)
mov r8.z, l(0)
mul r8.yw, cb1[132].zzzz, l(0.000000, 18.849556, 0.000000, 0.160000)
add r8.zw, r8.zzzw, v2.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r8.zwzz, t12.xywz, s4, cb1[133].x
mul r4.w, r4.w, cb6[11].w
mad r7.xyz, r0.yyyy, r4.wwww, r7.xyzx
mad r0.y, cb1[132].z, l(0.500000), l(0.530000)
mul r0.y, r0.y, l(6.28318548)
sincos r0.y, null, r0.y
mad r4.w, cb1[132].z, l(2.000000), l(0.230000)
mul r4.w, r4.w, l(6.28318548)
sincos r4.w, null, r4.w
add r0.y, r0.y, r4.w
sincos r4.w, null, r8.y
add r0.y, r0.y, r4.w
add r4.w, -cb6[12].y, l(1.000000)
mad r0.y, r0.y, r4.w, cb6[12].y
mul r7.xyz, r0.yyyy, r7.xyzx
mad r8.yzw, r7.xxyz, cb6[12].zzzz, cb6[12].wwww
add r8.yzw, r8.yyzw, cb6[7].xxyz
mov_sat r7.xyz, r7.xyzx
mov_sat r0.y, cb6[13].x
mad r0.y, r0.y, r0.w, r0.z
lt r0.z, l(0.000000), cb2[12].z
if_nz r0.z
  mad r9.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
  max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r9.xyz, r9.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r9.xyz, r9.xyzx, cb1[180].xyzx
  ftoi r12.xyz, r9.xyzx
  mov r12.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
  utof r12.xyzw, r12.xyzw
  add r0.z, cb1[180].w, l(1.000000)
  div r9.xyz, r9.xyzx, r12.wwww
  frc r9.xyz, r9.xyzx
  mul r9.xyz, r9.xyzx, cb1[180].wwww
  mad r9.xyz, r12.xyzx, r0.zzzz, r9.xyzx
  add r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r9.xyz, r9.xyzx, cb1[181].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r10.z, r9.xyzx, t1.yzxw, s0, l(0.000000)
else
  lt r0.z, l(0.000000), cb2[10].w
  movc r10.z, r0.z, cb5[5].x, l(1.000000)
endif
mad r7.xyz, r7.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r9.xyz, cb1[127].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb1[127].xyzx
add r0.zw, -r11.xxxy, v5.xxxy
ftou r0.zw, r0.zzzw
if_z r0.x
  mov r4.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.xy, cb4[1].xyxx
  mov r11.x, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.xy, cb4[41].xyxx
  mov r11.x, cb4[42].x
endif
mad r4.w, v5.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r9.w, l(-1)
umin r4.w, r4.w, r6.w
ushr r0.zw, r0.zzzw, r11.xxxx
imad r0.w, r4.w, r10.y, r0.w
imad r0.z, r0.w, r10.x, r0.z
if_z r0.x
  mov r0.w, cb4[0].z
  mov r4.w, cb4[6].x
  mov r6.w, cb4[6].z
  mov r7.w, cb4[6].w
  mov r11.xyz, cb4[5].xyzx
else
  mov r0.w, cb4[40].z
  mov r4.w, cb4[46].x
  mov r6.w, cb4[46].z
  mov r7.w, cb4[46].w
  mov r11.xyz, cb4[45].xyzx
endif
if_nz r0.w
  and r12.xyzw, r4.wwww, l(255, 2, 4, 8)
  movc r12.xyzw, r12.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r0.w, cb4[7].x
    mov r9.w, l(0)
    loop
      uge r10.x, r9.w, cb4[7].x
      breakc_nz r10.x
      dp4 r10.x, cb4[8].xyzw, icb[r9.w + 0].xyzw
      lt r10.x, v5.w, r10.x
      if_nz r10.x
        mov r0.w, r9.w
        break
      endif
      iadd r9.w, r9.w, l(1)
    endloop
    ult r9.w, r0.w, cb4[7].x
    if_nz r9.w
      ishl r9.w, r0.w, l(2)
      mul r13.xyzw, r5.yyyy, cb4[r9.w + 10].xyzw
      mad r13.xyzw, r5.xxxx, cb4[r9.w + 9].xyzw, r13.xyzw
      mad r13.xyzw, r5.zzzz, cb4[r9.w + 11].xyzw, r13.xyzw
      add r13.xyzw, r13.xyzw, cb4[r9.w + 12].xyzw
      div r14.xyzw, r13.xyxy, r13.wwww
      ge r10.xy, r14.zwzz, cb4[r0.w + 25].xyxx
      ge r13.xy, cb4[r0.w + 25].zwzz, r14.zwzz
      and r10.xy, r10.xyxx, r13.xyxx
      and r0.w, r10.y, r10.x
      if_nz r0.w
        mad r14.xyzw, r14.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r10.xy, r14.zwzz
        round_ni r14.xyzw, r14.xyzw
        add r15.xyzw, r14.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r15.xyzw, r15.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.x, r15.xyxx, t2.xyzw, s1, l(0.000000)
        add r14.xyzw, r14.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r14.xyzw, r14.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.y, r14.xyxx, t2.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.z, r14.zwzz, t2.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.w, r15.zwzz, t2.yzwx, s1, l(0.000000)
        add r13.xyzw, -r13.zzzz, r16.xyzw
        mad_sat r13.xyzw, r13.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r13.yz, -r13.wwxw, r13.zzyz
        mad r13.xy, r10.xxxx, r13.yzyy, r13.wxww
        add r0.w, -r13.x, r13.y
        mad r0.w, r10.y, r0.w, r13.x
      else
        mov r0.w, l(1.000000)
      endif
    else
      mov r0.w, l(1.000000)
    endif
  else
    mov r0.w, l(1.000000)
  endif
  if_nz r12.x
    mov r12.x, l(1.000000)
    dp4 r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzw
    add r10.x, r9.w, l(-1.000000)
    mad r9.w, r9.w, r10.x, l(1.000000)
    mad_sat r6.w, v5.w, r6.w, r7.w
    mul r6.w, r6.w, r6.w
    add r7.w, -r0.w, r9.w
    mad r10.x, r6.w, r7.w, r0.w
    min r10.y, r10.x, l(1.000000)
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.w, r10.y, r10.x
  lt r0.w, l(0.000000), r0.w
  if_nz r0.w
    mul r12.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r11.xyz, r10.xxxx, r11.xyzx
    mul r11.xyz, r11.xyzx, r12.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  ushr r0.w, r4.w, l(8)
  and r0.w, r0.w, cb2[16].w
  movc r11.xyz, r0.wwww, r11.xyzx, l(0,0,0,0)
  mov r10.z, l(1.000000)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.w, r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.w, r0.wwww, t4.yzwx
  umin r0.w, r0.w, cb4[0].x
  bfi r4.w, l(31), l(1), r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t4.yzwx
else
  ishl r6.w, r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t7.yzwx
  umin r0.w, r6.w, cb4[40].x
  bfi r0.z, l(31), l(1), r0.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r0.zzzz, t7.yzwx
endif
movc r0.z, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r0.w
mul r12.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r13.xyz, r11.xyzx
mov r0.w, l(0)
loop
  uge r6.w, r0.w, r0.z
  breakc_nz r6.w
  iadd r6.w, r0.w, r4.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r6.wwww, t5.yzwx
    imul null, r9.w, r7.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r9.wwww, t3.xyzw
    imad r15.xyzw, r7.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r15.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r15.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r15.zzzz, t3.xywz
    ld_indexable(buffer)(float,float,float,float) r18.xyz, r15.wwww, t3.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t8.yzwx
    imul null, r7.w, r6.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r7.wwww, t6.xyzw
    imad r19.xyzw, r6.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r19.xxxx, t6.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r19.yyyy, t6.wxyz
    ld_indexable(buffer)(float,float,float,float) r15.xyz, r19.zzzz, t6.xywz
    ld_indexable(buffer)(float,float,float,float) r18.xyz, r19.wwww, t6.xyzw
  endif
  eq r6.w, r16.w, l(0.000000)
  lt r7.w, l(-2.000000), r15.x
  add r14.xyz, -r5.xyzx, r14.xyzx
  dp3 r9.w, r14.xyzx, r14.xyzx
  rsq r10.x, r9.w
  mul r19.xyz, r10.xxxx, r14.xyzx
  mul r10.x, r14.w, r14.w
  mul r9.w, r9.w, r10.x
  mad r9.w, -r9.w, r9.w, l(1.000000)
  max r9.w, r9.w, l(0.000000)
  mul r9.w, r9.w, r9.w
  mul r20.xyz, r14.wwww, r14.xyzx
  dp3 r10.x, r20.xyzx, r20.xyzx
  min r10.x, r10.x, l(1.000000)
  add r10.x, -r10.x, l(1.000000)
  log r10.x, r10.x
  mul r10.x, r10.x, r16.w
  exp r10.x, r10.x
  movc r9.w, r6.w, r9.w, r10.x
  dp3 r10.x, r19.xyzx, r17.yzwy
  add r10.x, -r15.x, r10.x
  mul_sat r10.x, r15.y, r10.x
  mul r10.x, r10.x, r10.x
  mul r10.x, r9.w, r10.x
  movc r7.w, r7.w, r10.x, r9.w
  lt r9.w, l(0.000000), r7.w
  if_nz r9.w
    and r9.w, r17.x, l(255)
    movc r9.w, r9.w, l(1), l(0)
    if_nz r9.w
      and r19.xyzw, r17.xxxx, l(1, 2, 4, 8)
      movc r19.xyzw, r19.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r9.w, r17.x, l(4)
      ubfe r10.x, l(1), l(4), r17.x
      movc r20.x, r10.x, l(1.000000), l(0)
      and r15.xyw, r9.wwww, l(2, 4, 0, 8)
      movc r20.yzw, r15.xxyw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r9.w, r20.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r10.x, r19.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r10.y, r10.zwww, r19.xyzw
      add r10.y, r10.y, l(-1.000000)
      mad r10.x, r10.x, r10.y, l(1.000000)
      mul r10.xy, r9.wwww, r10.xxxx
    else
      mov r10.xy, l(1.000000,1.000000,0,0)
    endif
    add r9.w, r10.y, r10.x
    lt r9.w, l(0.000000), r9.w
    if_nz r9.w
      f16tof32 r9.w, r15.z
      mul r10.y, r9.w, l(0.500000)
      mad r15.xyz, -r10.yyyy, r18.xyzx, r14.xyzx
      mad r14.xyz, r10.yyyy, r18.xyzx, r14.xyzx
      lt r9.w, l(0.000000), r9.w
      if_nz r9.w
        dp3 r9.w, r15.xyzx, r15.xyzx
        dp3 r10.y, r14.xyzx, r14.xyzx
        rsq r9.w, r9.w
        rsq r10.y, r10.y
        mul r9.w, r9.w, r10.y
        dp3 r10.y, r15.xyzx, r14.xyzx
        mul r10.y, r9.w, r10.y
        mad r10.y, r10.y, l(0.500000), r9.w
        add r10.y, r10.y, l(0.500000)
        div r9.w, r9.w, r10.y
      else
        dp3 r10.y, r15.xyzx, r15.xyzx
        add r10.y, r10.y, l(1.000000)
        rcp r9.w, r10.y
      endif
      movc r6.w, r6.w, r9.w, l(1.000000)
      mul r14.xyz, r6.wwww, r12.xyzx
      mul r15.xyz, r7.wwww, r16.xyzx
      mul r15.xyz, r10.xxxx, r15.xyzx
      mul r14.xyz, r14.xyzx, r15.xyzx
    else
      mov r14.xyz, l(0,0,0,0)
    endif
  else
    mov r14.xyz, l(0,0,0,0)
  endif
  ushr r6.w, r17.x, l(8)
  and r6.w, r6.w, cb2[16].w
  add r14.xyz, r13.xyzx, r14.xyzx
  movc r13.xyz, r6.wwww, r14.xyzx, r13.xyzx
  iadd r0.w, r0.w, l(1)
endloop
dp3 r0.x, r4.xyzx, r6.xyzx
add r0.z, r0.x, r0.x
mad r4.xyz, r0.zzzz, r6.xyzx, -r4.xyzx
mov_sat r0.x, r0.x
log r0.z, r0.y
mad r0.z, -r0.z, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.z, -r0.z, r0.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t9.xyzw, s2, r0.z
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
mad_sat r0.z, r0.y, cb1[165].x, cb1[165].y
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
min r0.w, cb1[165].z, l(0.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.z, r0.z, r0.w, l(1.000000)
mul r4.xyz, r0.zzzz, r4.xyzx
mad r4.xyz, r8.xxxx, -r4.xyzx, r4.xyzx
mad r6.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r6.x, r6.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.z, r9.y, l(50.000000)
mov_sat r0.z, r0.z
mul r0.y, r0.z, r0.y
mad r0.xyz, r9.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r13.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzx, t10.xyzw, s0, l(0.000000)
  mul r0.w, r0.w, v4.w
else
  mov r0.w, v4.w
endif
mad r1.xyz, r9.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r7.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, cb1[134].zzzz, r1.xyzx, r0.xyzx
max r1.xyz, r8.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb1[130].x
if_nz r1.w
  add r2.xyz, r5.xyzx, -cb2[5].xyzx
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r1.w, r2.y, r2.x
  or r1.w, r2.z, r1.w
  dp3 r2.x, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.x, r2.x, l(0.002000)
  frc r2.x, r2.x
  lt r2.x, l(0.500000), r2.x
  movc r2.xyz, r2.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
endif
add r0.xyz, r0.xyzx, r1.xyzx
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
