// ---- Created with 3Dmigoto v1.3.16 on Thu Oct 31 08:06:54 2019
Buffer<float4> t0 : register(t0);

cbuffer cb4 : register(b4)
{
  float4 cb4[1];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[166];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_VertexID0,
  uint v2 : SV_InstanceID0,
  out float4 o0 : TEXCOORD0,
  out uint o1 : PACKED_EYE_INDEX0,
  out float4 o2 : SV_POSITION0,
  out float o3 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, vertex_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v2.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[7].z != 0) {
    r0.x = cb1[165].w;
  } else {
    r0.x = (int)v2.x & 1;
  }
  if (r0.x == 0) {
    r1.x = cb1[0].x;
    r1.y = cb1[1].x;
    r1.z = cb1[2].x;
    r1.w = cb1[3].x;
    r2.x = cb1[0].y;
    r2.y = cb1[1].y;
    r2.z = cb1[2].y;
    r2.w = cb1[3].y;
    r3.x = cb1[0].z;
    r3.y = cb1[1].z;
    r3.z = cb1[2].z;
    r3.w = cb1[3].z;
    r4.x = cb1[0].w;
    r4.y = cb1[1].w;
    r4.z = cb1[2].w;
    r4.w = cb1[3].w;
    r0.yzw = cb1[62].xyz;
    r5.x = cb1[163].y;
  } else {
    r1.x = cb3[0].x;
    r1.y = cb3[1].x;
    r1.z = cb3[2].x;
    r1.w = cb3[3].x;
    r2.x = cb3[0].y;
    r2.y = cb3[1].y;
    r2.z = cb3[2].y;
    r2.w = cb3[3].y;
    r3.x = cb3[0].z;
    r3.y = cb3[1].z;
    r3.z = cb3[2].z;
    r3.w = cb3[3].z;
    r4.x = cb3[0].w;
    r4.y = cb3[1].w;
    r4.z = cb3[2].w;
    r4.w = cb3[3].w;
    r0.yzw = cb3[62].xyz;
    r5.x = cb3[163].y;
  }
  r5.yzw = cb2[1].xyz * v0.yyy;
  r5.yzw = cb2[0].xyz * v0.xxx + r5.yzw;
  r5.yzw = cb2[2].xyz * v0.zzz + r5.yzw;
  r6.xyz = cb2[3].xyz + r0.yzw;
  r5.yzw = r6.xyz + r5.yzw;
  r6.x = (int)v1.x + asint(cb0[7].y);
  r6.y = (int)r6.x * asint(cb4[0].y);
  r6.yz = t0.Load(r6.y).xy;
  r6.w = asint(cb4[0].y) + -1;
  r6.w = min(1, (uint)r6.w);
  r6.x = mad(asint(cb4[0].y), (int)r6.x, (int)r6.w);
  r6.xw = t0.Load(r6.x).xy;
  r7.xyzw = r5.zyzw + -r0.zyzw;
  r7.xyzw = float4(0.0009765625,0.00499999989,0.00499999989,0.00499999989) * r7.xyzw;
  r7.xyzw = cb1[132].zzzz * float4(-0.100000001,-0.100000001,-0.100000001,-0.100000001) + r7.xyzw;
  r7.xyzw = float4(0.5,0.5,0.5,0.5) + r7.xyzw;
  r7.xyzw = frac(r7.xyzw);
  r7.xyzw = r7.xyzw * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r8.xyzw = -abs(r7.xyzw) * float4(2,2,2,2) + float4(3,3,3,3);
  r7.xyzw = abs(r7.xyzw) * abs(r7.xyzw);
  r0.yzw = r7.yzw * r8.yzw;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.y = sqrt(r0.y);
  r0.y = r7.x * r8.x + r0.y;
  r0.y = 6.28318548 * r0.y;
  sincos(r0.y, r7.x, r8.x);
  r0.yzw = float3(0,-10,0) * r7.xxx;
  r0.yzw = r8.xxx * float3(0,0,10) + r0.yzw;
  r0.yzw = float3(0,0,-10) + r0.yzw;
  r0.yzw = float3(0.0900000036,0.0900000036,0.0900000036) * r0.yzw;
  r6.xw = float2(-0.5,-0.5) + r6.xw;
  r6.x = dot(r6.xw, r6.xw);
  r6.x = sqrt(r6.x);
  r6.x = -r6.x * 2 + 1;
  r6.w = 2.33299994 * r6.x;
  r6.w = r6.w * r6.w;
  r6.w = 1.44269514 * r6.w;
  r6.w = exp2(r6.w);
  r6.w = 1 / r6.w;
  r7.x = cmp(9.99999975e-006 < abs(r6.x));
  r6.x = cmp(r6.x >= 0);
  r6.w = 1 + -r6.w;
  r6.w = 1 + -r6.w;
  r6.x = r6.x ? r6.w : 1;
  r6.x = r7.x ? r6.x : 1;
  r7.xyz = r0.yzw * r6.xxx + r5.yzw;
  r7.w = 1;
  r1.x = dot(r7.xyzw, r1.xyzw);
  r1.y = dot(r7.xyzw, r2.xyzw);
  r1.z = dot(r7.xyzw, r3.xyzw);
  r1.w = dot(r7.xyzw, r4.xyzw);
  r0.y = asint(cb0[0].x) | asint(cb0[7].z);
  if (r0.y != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o3.x = dot(r1.xw, r2.xy);
    r0.y = 0.5 * r5.x;
    r0.z = icb[r0.x+0].x * r1.w;
    r0.w = -r5.x * 0.5 + 1;
    r0.z = r0.z * r0.w;
    r1.x = r1.x * r0.y + r0.z;
  } else {
    o3.x = 0;
  }
  r0.y = cb0[0].x ? -0 : 0;
  o1.x = (int)r0.x | (int)r0.y;
  o0.xy = r6.yz;
  o0.zw = float2(0,0);
  o2.xyzw = r1.xyzw;
  return;
}