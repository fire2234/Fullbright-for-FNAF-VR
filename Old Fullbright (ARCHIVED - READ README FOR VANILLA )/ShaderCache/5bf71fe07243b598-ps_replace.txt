// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:50:43 2019
Texture2D<float4> t9 : register(t9);

Texture3D<float4> t8 : register(t8);

Texture3D<float4> t7 : register(t7);

Texture3D<float4> t6 : register(t6);

Texture3D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s9_s : register(s9);

SamplerState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[17];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[45];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[124];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[5];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float2 v0 : TEXCOORD0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t1.Sample(s1_s, v0.xy).xyzw;
  r1.xyzw = t2.Sample(s2_s, v0.xy).xyzw;
  r2.xyzw = t3.Sample(s3_s, v0.xy).xyzw;
  r2.xyzw = r2.xyzw * cb3[3].xyzw + cb3[4].xyzw;
  r3.xy = t9.SampleLevel(s9_s, v0.xy, 0).xy;
  r4.xw = float2(0,0);
  r4.yz = float2(2,2) * cb1[122].wz;
  r3.z = cmp(cb3[15].z != 0.000000);
  r5.xyz = cb3[8].xyz;
  r6.xyz = r1.xyz;
  r7.xyz = r0.xyz;
  r3.w = r0.w;
  r5.w = 0;
  while (true) {
    r6.w = cmp((int)r5.w >= asint(cb0[3].w));
    if (r6.w != 0) break;
    r3.w = cb0[3].z * r1.w + r3.w;
    r8.xy = cb3[0].zw * r3.ww + cb3[0].xy;
    r8.xyzw = t4.Sample(s4_s, r8.xy).xyzw;
    r8.xyzw = r8.xyzw * cb3[1].xyzw + cb3[2].xyzw;
    r8.xyzw = r8.xyzw * r2.xyzw;
    r10.xyz = float3(0,0,0);
    r6.w = 0;
    r7.w = 0;
    r9.xyzw = float4(0,0,0,0);
    while (true) {
      r10.w = cmp((int)r9.w >= asint(cb2[0].x));
      if (r10.w != 0) break;
      r10.w = cb2[r9.w+33].x * r8.y;
      r11.x = (uint)r9.w << 2;
      r11.yzw = cb2[r11.x+2].xyz * r7.yyy;
      r11.yzw = r7.xxx * cb2[r11.x+1].xyz + r11.yzw;
      r11.yzw = r7.zzz * cb2[r11.x+3].xyz + r11.yzw;
      r11.yzw = cb2[r11.x+4].xyz + r11.yzw;
      r12.xyz = cb2[r9.w+41].xyz * r11.yzw;
      r12.xyz = floor(r12.xyz);
      r11.yzw = -r12.xyz + r11.yzw;
      r12.xyz = saturate(cb2[r9.w+37].xyz * r11.yzw);
      r13.xyz = float3(1,1,1) + -r11.yzw;
      r13.xyz = saturate(cb2[r9.w+37].xyz * r13.xyz);
      r12.xyz = r13.xyz * r12.xyz;
      r12.y = min(r12.y, r12.z);
      r12.x = min(r12.x, r12.y);
      r11.yzw = saturate(r11.yzw);
      r12.y = cmp((int)r9.w == 0);
      if (r9.w == 0) {
        r13.xyz = t5.Sample(s5_s, r11.yzw).xyz;
      }
      if (r12.y == 0) {
        r12.y = cmp((int)r9.w == 1);
        if (r12.y != 0) {
          r13.xyz = t6.Sample(s6_s, r11.yzw).xyz;
        }
        if (r12.y == 0) {
          r12.y = cmp((int)r9.w == 2);
          if (r12.y != 0) {
            r13.xyz = t7.Sample(s7_s, r11.yzw).xyz;
          }
          if (r12.y == 0) {
            r13.xyz = t8.Sample(s8_s, r11.yzw).xyz;
          }
        }
      }
      r11.yzw = cb2[r11.x+18].xyz * r13.yyy;
      r11.yzw = r13.xxx * cb2[r11.x+17].xyz + r11.yzw;
      r11.xyz = r13.zzz * cb2[r11.x+19].xyz + r11.yzw;
      r12.yzw = r11.xyz * r12.xxx;
      r9.xyz = r12.yzw * r10.www + r9.xyz;
      r11.xyz = r11.xyz * r10.www;
      r11.xyz = r11.xyz * r12.xxx;
      r10.xyz = r11.xyz * cb2[r9.w+33].yyy + r10.xyz;
      r10.w = cb2[r9.w+33].y * r12.x;
      r6.w = r12.x * cb2[r9.w+33].y + r6.w;
      r7.w = max(r10.w, r7.w);
      r9.w = (int)r9.w + 1;
    }
    r8.y = 0.00100000005 + r6.w;
    r11.xyz = r10.xyz / r8.yyy;
    r12.xyz = r9.xyz + r5.xyz;
    r11.xyz = r11.xyz + -r6.xyz;
    r11.xyz = r7.www * r11.xyz + r6.xyz;
    r12.xyz = -r8.xxx * r11.xyz + r12.xyz;
    r13.xyz = cb0[1].xyz + -r7.xyz;
    r13.xyz = float3(0,0,9.99999975e-005) + r13.xyz;
    r8.x = dot(r13.xyz, r13.xyz);
    r8.y = max(cb0[1].w, r8.x);
    r8.y = cb0[2].w / r8.y;
    r8.x = rsqrt(r8.x);
    r13.xyz = r13.xyz * r8.xxx;
    r5.xyz = r8.yyy * r13.xyz + r12.xyz;
    r12.xyz = cb0[3].zzz * r5.xyz;
    r8.xy = cb3[5].zw * r3.ww + cb3[5].xy;
    r8.xy = t4.SampleLevel(s4_s, r8.xy, 0).xy;
    r8.xy = r8.xy * cb3[6].xy + cb3[7].xy;
    r8.xy = r8.xy * abs(r3.xy);
    r8.xy = cb0[3].xy * r8.xy;
    r8.x = min(r8.x, r8.y);
    r8.x = r8.x * cb3[14].w + cb3[15].x;
    r12.xyz = r12.xyz * float3(0.5,0.5,0.5) + r11.xyz;
    r13.xyz = cb0[3].zzz * r12.xyz;
    r14.xyz = cb0[3].zzz * r12.xyz + r7.xyz;
    r6.xyz = r5.xyz * cb0[3].zzz + r11.xyz;
    r8.y = dot(r13.xyz, r13.xyz);
    r8.y = rsqrt(r8.y);
    r11.xyz = r13.xyz * r8.yyy;
    r11.xyz = r11.xyz * r8.xxx + r7.xyz;
    r11.xyz = cb1[62].xyz + r11.xyz;
    r15.xyz = cb1[1].xyw * r11.yyy;
    r11.xyw = r11.xxx * cb1[0].xyw + r15.xyz;
    r11.xyz = r11.zzz * cb1[2].xyw + r11.xyw;
    r11.xyz = cb1[3].xyw + r11.xyz;
    r11.xy = r11.xy / r11.zz;
    r15.xy = cmp(float2(1,1) >= abs(r11.xy));
    r8.y = r15.y ? r15.x : 0;
    if (r8.y != 0) {
      r15.yz = r11.yx * cb1[58].yx + cb1[58].zw;
      r8.y = t0.SampleLevel(s0_s, r15.zy, 0).x;
      r9.w = r8.y * cb1[57].x + cb1[57].y;
      r8.y = r8.y * cb1[57].z + -cb1[57].w;
      r8.y = 1 / r8.y;
      r8.y = r9.w + r8.y;
      r9.w = r11.z + -r8.y;
      r9.w = cmp(abs(r9.w) < cb0[4].x);
      if (r9.w != 0) {
        r15.xw = cb1[123].zw + r15.zy;
        r9.w = t0.SampleLevel(s0_s, r15.xy, 0).x;
        r10.w = r9.w * cb1[57].x + cb1[57].y;
        r9.w = r9.w * cb1[57].z + -cb1[57].w;
        r9.w = 1 / r9.w;
        r9.w = r10.w + r9.w;
        r10.w = t0.SampleLevel(s0_s, r15.zw, 0).x;
        r11.z = r10.w * cb1[57].x + cb1[57].y;
        r10.w = r10.w * cb1[57].z + -cb1[57].w;
        r10.w = 1 / r10.w;
        r10.w = r11.z + r10.w;
        r11.z = -r9.w + r8.y;
        r11.w = -r10.w + r8.y;
        r11.z = max(abs(r11.z), abs(r11.w));
        r11.z = cmp(cb0[4].x >= r11.z);
        if (r11.z != 0) {
          r11.zw = r11.xy * r8.yy;
          r15.xyz = cb1[45].xyz * r11.www;
          r15.xyz = r11.zzz * cb1[44].xyz + r15.xyz;
          r15.xyz = r8.yyy * cb1[46].xyz + r15.xyz;
          r15.xyz = cb1[47].xyz + r15.xyz;
          r11.zw = r11.xy + r4.zw;
          r11.zw = r11.zw * r9.ww;
          r16.xyz = cb1[45].zxy * r11.www;
          r16.xyz = r11.zzz * cb1[44].zxy + r16.xyz;
          r16.xyz = r9.www * cb1[46].zxy + r16.xyz;
          r16.xyz = cb1[47].zxy + r16.xyz;
          r11.xy = r11.xy + -r4.xy;
          r11.xy = r11.xy * r10.ww;
          r11.yzw = cb1[45].yzx * r11.yyy;
          r11.xyz = r11.xxx * cb1[44].yzx + r11.yzw;
          r11.xyz = r10.www * cb1[46].yzx + r11.xyz;
          r11.xyz = cb1[47].yzx + r11.xyz;
          r16.xyz = r16.xyz + -r15.zxy;
          r11.xyz = r11.xyz + -r15.yzx;
          r17.xyz = r16.xyz * r11.xyz;
          r11.xyz = r16.zxy * r11.yzx + -r17.xyz;
          r8.y = dot(r11.xyz, r11.xyz);
          r8.y = rsqrt(r8.y);
          r11.xyz = r11.xyz * r8.yyy;
          r8.y = dot(r15.xyz, r11.xyz);
          r9.w = dot(r11.xyz, r13.xyz);
          r10.w = dot(r11.xyz, r7.xyz);
          r11.w = r10.w + r8.x;
          r11.w = r11.w + -r8.y;
          r12.w = dot(r11.xyz, r14.xyz);
          r12.w = r12.w + -r8.x;
          r12.w = r12.w + -r8.y;
          r13.x = cmp(r11.w >= 0);
          r13.y = cmp(0 >= r12.w);
          r13.x = r13.y ? r13.x : 0;
          r9.w = cmp(r9.w < 0);
          r9.w = r9.w ? r13.x : 0;
          if (r9.w != 0) {
            r9.w = dot(r12.xyz, r11.xyz);
            r13.xyz = r9.www * r11.xyz;
            r12.xyz = -r9.www * r11.xyz + r12.xyz;
            r13.xyz = r13.xyz * r8.zzz;
            r12.xyz = cb3[16].xxx * r12.xyz + -r13.xyz;
            r13.xy = float2(131,937) * r3.ww;
            r13.xy = frac(r13.xy);
            r8.z = 6.28299999 * r13.x;
            r9.w = dot(r12.xyz, r12.xyz);
            r9.w = sqrt(r9.w);
            r13.x = 1 / r9.w;
            r13.xzw = r13.xxx * r12.xyz;
            r14.w = dot(r13.xzw, r11.xyz);
            r13.y = log2(r13.y);
            r13.y = cb3[15].w * r13.y;
            r13.y = exp2(r13.y);
            r13.y = cb3[15].z * r13.y;
            r14.w = -r14.w * r14.w + 1;
            r14.w = sqrt(r14.w);
            r14.w = 1 + -r14.w;
            r13.y = -r13.y * r14.w + 1;
            r14.w = -r13.y * r13.y + 1;
            r14.w = sqrt(r14.w);
            r15.x = cmp(abs(r13.w) < 0.999000013);
            r15.xyz = r15.xxx ? float3(1,0,0) : float3(0,1,0);
            r16.xyz = r15.xyz * r13.zwx;
            r15.xyz = r15.zxy * r13.wxz + -r16.xyz;
            r15.w = dot(r15.xyz, r15.xyz);
            r15.w = rsqrt(r15.w);
            r15.xyz = r15.xyz * r15.www;
            r16.xyz = r15.yzx * r13.wxz;
            r16.xyz = r13.zwx * r15.zxy + -r16.xyz;
            sincos(r8.z, r17.x, r18.x);
            r8.z = r18.x * r14.w;
            r14.w = r17.x * r14.w;
            r16.xyz = r16.xyz * r14.www;
            r15.xyz = r15.xyz * r8.zzz + r16.xyz;
            r13.xyz = r13.xzw * r13.yyy + r15.xyz;
            r13.xyz = r13.xyz * r9.www;
            r6.xyz = r3.zzz ? r13.xyz : r12.xyz;
            r8.x = r10.w + -r8.x;
            r8.x = r8.x + -r8.y;
            r8.xyz = r8.xxx * r11.xyz + r7.xyz;
            r11.xyz = cb0[3].zzz * r6.xyz;
            r14.xyz = r11.xyz * float3(0.100000001,0.100000001,0.100000001) + r8.xyz;
            r3.w = cb3[15].y + r3.w;
          } else {
            r8.x = cmp(r12.w < 0);
            r8.y = cmp(r11.w < 0);
            r8.x = r8.y ? r8.x : 0;
            r3.w = r8.x ? 1.10000002 : r3.w;
          }
        }
      }
    }
    r8.xyz = cb3[10].xyz * r8.www + cb3[9].xyz;
    r11.xyz = cb3[12].yzx * r8.www + cb3[11].yzx;
    r12.xyz = cb3[14].xyz * r8.www + cb3[13].xyz;
    r12.xyz = r11.zxy * r3.www + r12.xyz;
    sincos(r12.xyz, r12.xyz, r13.xyz);
    r12.xyz = r12.yzx * r11.xyz;
    r11.xyz = r11.yzx * r13.zxy + -r12.xyz;
    r8.xyz = r11.xyz * r8.xyz;
    r7.xyz = r8.xyz * cb0[3].zzz + r14.xyz;
    r5.w = (int)r5.w + 1;
  }
  o1.xyz = r6.xyz;
  o0.w = r3.w;
  o0.xyz = cb0[2].xyz + r7.xyz;
  o1.w = r1.w;
  return;
}