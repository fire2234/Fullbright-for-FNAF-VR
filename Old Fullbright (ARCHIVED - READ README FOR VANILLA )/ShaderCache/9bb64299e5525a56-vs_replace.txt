// ---- Created with 3Dmigoto v1.3.16 on Thu Oct 24 15:26:21 2019
cbuffer cb4 : register(b4)
{
  float4 cb4[4];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[164];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[166];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_VertexID0,
  uint v2 : SV_InstanceID0,
  out float4 o0 : SV_POSITION0,
  out float o1 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v2.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (cb0[7].z != 0) {
    r0.x = cb1[165].w;
  } else {
    r0.x = (int)v2.x & 1;
  }
  if (r0.x == 0) {
    r1.x = cb1[0].x;
    r1.y = cb1[1].x;
    r1.z = cb1[2].x;
    r1.w = cb1[3].x;
    r2.x = cb1[0].y;
    r2.y = cb1[1].y;
    r2.z = cb1[2].y;
    r2.w = cb1[3].y;
    r3.x = cb1[0].z;
    r3.y = cb1[1].z;
    r3.z = cb1[2].z;
    r3.w = cb1[3].z;
    r4.x = cb1[0].w;
    r4.y = cb1[1].w;
    r4.z = cb1[2].w;
    r4.w = cb1[3].w;
    r0.yzw = cb1[62].xyz;
    r5.x = cb1[163].y;
  } else {
    r1.x = cb3[0].x;
    r1.y = cb3[1].x;
    r1.z = cb3[2].x;
    r1.w = cb3[3].x;
    r2.x = cb3[0].y;
    r2.y = cb3[1].y;
    r2.z = cb3[2].y;
    r2.w = cb3[3].y;
    r3.x = cb3[0].z;
    r3.y = cb3[1].z;
    r3.z = cb3[2].z;
    r3.w = cb3[3].z;
    r4.x = cb3[0].w;
    r4.y = cb3[1].w;
    r4.z = cb3[2].w;
    r4.w = cb3[3].w;
    r0.yzw = cb3[62].xyz;
    r5.x = cb3[163].y;
  }
  r5.yzw = cb2[1].xyz * v0.yyy;
  r5.yzw = cb2[0].xyz * v0.xxx + r5.yzw;
  r5.yzw = cb2[2].xyz * v0.zzz + r5.yzw;
  r6.xyz = cb2[3].xyz + r0.yzw;
  r5.yzw = r6.xyz + r5.yzw;
  r6.xyzw = r5.zyzw + -r0.zyzw;
  r6.xyzw = float4(0.0009765625,0.00499999989,0.00499999989,0.00499999989) * r6.xyzw;
  r6.xyzw = cb1[132].zzzz * float4(-0.5,-0.5,-0.5,-0.5) + r6.xyzw;
  r6.xyzw = float4(0.5,0.5,0.5,0.5) + r6.xyzw;
  r6.xyzw = frac(r6.xyzw);
  r6.xyzw = r6.xyzw * float4(2,2,2,2) + float4(-1,-1,-1,-1);
  r7.xyzw = -abs(r6.xyzw) * float4(2,2,2,2) + float4(3,3,3,3);
  r6.xyzw = abs(r6.xyzw) * abs(r6.xyzw);
  r0.yzw = r6.yzw * r7.yzw;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.y = sqrt(r0.y);
  r0.y = r6.x * r7.x + r0.y;
  r0.y = 6.28318548 * r0.y;
  sincos(r0.y, r6.x, r7.x);
  r0.yz = float2(-10,0) * r6.xx;
  r0.yz = r7.xx * float2(0,10) + r0.yz;
  r0.yz = float2(0,-10) + r0.yz;
  r6.yz = cb4[3].xx * r0.yz;
  r6.x = cb4[3].x;
  r0.yzw = r6.xyz * float3(0,0.300000012,0.300000012) + r5.yzw;
  r6.xyz = float3(0.313542008,0.313542008,0.313542008) + r0.yzw;
  r6.w = 1;
  r1.x = dot(r6.xyzw, r1.xyzw);
  r1.y = dot(r6.xyzw, r2.xyzw);
  r1.z = dot(r6.xyzw, r3.xyzw);
  r1.w = dot(r6.xyzw, r4.xyzw);
  r0.y = asint(cb0[0].x) | asint(cb0[7].z);
  if (r0.y != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o1.x = dot(r1.xw, r2.xy);
    r0.y = 0.5 * r5.x;
    r0.x = icb[r0.x+0].x * r1.w;
    r0.z = -r5.x * 0.5 + 1;
    r0.x = r0.x * r0.z;
    r1.x = r1.x * r0.y + r0.x;
  } else {
    o1.x = 0;
  }
  o0.xyzw = r1.xyzw;
  return;
}