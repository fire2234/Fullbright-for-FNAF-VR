//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 19:02:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_texturecubearray (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 24
and r0.x, v2.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v4.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
ge r0.y, cb6[12].z, l(0.500000)
movc r7.y, r0.y, cb6[12].x, cb6[12].y
movc r7.z, r0.y, cb6[12].w, cb6[13].x
movc r7.w, r0.y, cb6[13].y, cb6[13].z
dp3 r0.y, r6.xyzx, r4.xyzx
max r4.w, r0.y, l(0.000000)
add r6.w, -r4.w, l(1.000000)
log r6.w, |r6.w|
mul r6.w, r6.w, cb6[13].w
exp r6.w, r6.w
mad r6.w, r6.w, l(0.960000), l(0.040000)
mad r7.xyz, r6.wwww, r7.yzwy, cb6[8].xyzx
mov_sat r8.yzw, cb6[10].xxyz
mov_sat r9.xyw, cb6[14].xyxz
mad r0.z, r9.y, r0.w, r0.z
lt r0.w, l(0.000000), cb2[12].z
if_nz r0.w
  mad r11.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
  max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r11.xyz, r11.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r11.xyz, r11.xyzx, cb1[180].xyzx
  ftoi r12.xyz, r11.xyzx
  mov r12.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
  utof r12.xyzw, r12.xyzw
  add r0.w, cb1[180].w, l(1.000000)
  div r11.xyz, r11.xyzx, r12.wwww
  frc r11.xyz, r11.xyzx
  mul r11.xyz, r11.xyzx, cb1[180].wwww
  mad r11.xyz, r12.xyzx, r0.wwww, r11.xyzx
  add r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r11.xyz, r11.xyzx, cb1[181].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r11.x, r11.xyzx, t1.xyzw, s0, l(0.000000)
else
  lt r0.w, l(0.000000), cb2[10].w
  movc r11.x, r0.w, cb5[5].x, l(1.000000)
endif
mul r0.w, r9.x, cb1[127].w
mad r8.yzw, r8.yyzw, cb1[126].wwww, cb1[126].xxyz
mad r12.xyz, r0.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), cb1[127].xyzx
add r10.xy, -r10.xyxx, v4.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r0.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r10.z, cb4[1].z
  mov r13.xy, cb4[1].xyxx
  mov r10.w, cb4[2].x
else
  mov r0.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r10.z, cb4[41].z
  mov r13.xy, cb4[41].xyxx
  mov r10.w, cb4[42].x
endif
mad r0.w, v4.w, r0.w, r6.w
log r0.w, r0.w
mul r0.w, r7.w, r0.w
max r0.w, r0.w, l(0.000000)
ftou r0.w, r0.w
iadd r6.w, r10.z, l(-1)
umin r0.w, r0.w, r6.w
ushr r10.xy, r10.xyxx, r10.wwww
imad r0.w, r0.w, r13.y, r10.y
imad r0.w, r0.w, r13.x, r10.x
if_z r0.x
  mov r6.w, cb4[0].z
  mov r7.w, cb4[6].x
  mov r10.xy, cb4[6].zwzz
  mov r13.xyz, cb4[5].xyzx
  mov r14.xyz, cb4[4].xyzx
else
  mov r6.w, cb4[40].z
  mov r7.w, cb4[46].x
  mov r10.xy, cb4[46].zwzz
  mov r13.xyz, cb4[45].xyzx
  mov r14.xyz, cb4[44].xyzx
endif
if_nz r6.w
  and r15.xyzw, r7.wwww, l(255, 2, 4, 8)
  movc r15.xyzw, r15.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r6.w, cb4[7].x
    mov r10.z, l(0)
    loop
      uge r10.w, r10.z, cb4[7].x
      breakc_nz r10.w
      dp4 r10.w, cb4[8].xyzw, icb[r10.z + 0].xyzw
      lt r10.w, v4.w, r10.w
      if_nz r10.w
        mov r6.w, r10.z
        break
      endif
      iadd r10.z, r10.z, l(1)
    endloop
    ult r10.z, r6.w, cb4[7].x
    if_nz r10.z
      ishl r10.z, r6.w, l(2)
      mul r16.xyzw, r5.yyyy, cb4[r10.z + 10].xyzw
      mad r16.xyzw, r5.xxxx, cb4[r10.z + 9].xyzw, r16.xyzw
      mad r16.xyzw, r5.zzzz, cb4[r10.z + 11].xyzw, r16.xyzw
      add r16.xyzw, r16.xyzw, cb4[r10.z + 12].xyzw
      div r17.xyzw, r16.xyxy, r16.wwww
      ge r10.zw, r17.zzzw, cb4[r6.w + 25].xxxy
      ge r16.xy, cb4[r6.w + 25].zwzz, r17.zwzz
      and r10.zw, r10.zzzw, r16.xxxy
      and r6.w, r10.w, r10.z
      if_nz r6.w
        mad r17.xyzw, r17.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r10.zw, r17.zzzw
        round_ni r17.xyzw, r17.xyzw
        add r18.xyzw, r17.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.x, r18.xyxx, t2.xyzw, s1, l(0.000000)
        add r17.xyzw, r17.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.y, r17.xyxx, t2.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.z, r17.zwzz, t2.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.w, r18.zwzz, t2.yzwx, s1, l(0.000000)
        add r16.xyzw, -r16.zzzz, r19.xyzw
        mad_sat r16.xyzw, r16.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r16.yz, -r16.wwxw, r16.zzyz
        mad r16.xy, r10.zzzz, r16.yzyy, r16.wxww
        add r6.w, -r16.x, r16.y
        mad r6.w, r10.w, r6.w, r16.x
      else
        mov r6.w, l(1.000000)
      endif
    else
      mov r6.w, l(1.000000)
    endif
  else
    mov r6.w, l(1.000000)
  endif
  if_nz r15.x
    mov r15.x, l(1.000000)
    dp4 r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r15.xyzw
    add r10.w, r10.z, l(-1.000000)
    mad r10.z, r10.z, r10.w, l(1.000000)
    mad_sat r10.x, v4.w, r10.x, r10.y
    mul r10.x, r10.x, r10.x
    add r10.y, -r6.w, r10.z
    mad r10.x, r10.x, r10.y, r6.w
    min r10.y, r10.x, l(1.000000)
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r10.y, r10.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    dp3 r6.w, r14.xyzx, r14.xyzx
    rsq r6.w, r6.w
    mul r10.yzw, r6.wwww, r14.xxyz
    dp3 r6.w, r6.xyzx, r10.yzwy
    mov_sat r12.w, r6.w
    max r13.w, r0.z, l(0.020000)
    dp3 r10.y, r4.xyzx, r10.yzwy
    mad r10.z, r10.y, l(2.000000), l(2.000000)
    rsq r10.z, r10.z
    add r6.w, r0.y, r6.w
    mul_sat r6.w, r10.z, r6.w
    mad_sat r10.y, r10.z, r10.y, r10.z
    add r10.z, |r0.y|, l(0.000010)
    min r10.z, r10.z, l(1.000000)
    mul r14.xyz, r8.yzwy, r12.wwww
    mul r10.w, r13.w, r13.w
    mul r14.w, r10.w, r10.w
    mad r15.x, r6.w, r14.w, -r6.w
    mad r6.w, r15.x, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(3.14159274)
    div r6.w, r14.w, r6.w
    mad r13.w, -r13.w, r13.w, l(1.000000)
    mad r14.w, r10.z, r13.w, r10.w
    mad r10.w, r12.w, r13.w, r10.w
    mul r10.z, r10.w, r10.z
    mad r10.z, r12.w, r14.w, r10.z
    rcp r10.z, r10.z
    mul r6.w, r6.w, r10.z
    add r10.y, -r10.y, l(1.000000)
    mul r10.z, r10.y, r10.y
    mul r10.z, r10.z, r10.z
    mul r10.w, r10.y, r10.z
    mul_sat r13.w, r12.y, l(50.000000)
    mad r10.y, -r10.z, r10.y, l(1.000000)
    mul r15.xyz, r12.xyzx, r10.yyyy
    mad r10.yzw, r13.wwww, r10.wwww, r15.xxyz
    mul r6.w, r6.w, l(0.500000)
    mul r10.yzw, r10.yyzw, r6.wwww
    mul r10.yzw, r10.yyzw, r12.wwww
    mad r10.yzw, r14.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), r10.yyzw
    mul r13.xyz, r10.xxxx, r13.xyzx
    mul r10.xyz, r10.yzwy, r13.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r6.w, r7.w, l(8)
  and r6.w, r6.w, cb2[16].w
  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)
  mov r11.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t4.yzwx
  umin r6.w, r6.w, cb4[0].x
  bfi r7.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t4.yzwx
else
  ishl r10.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t7.yzwx
  umin r6.w, r10.w, cb4[40].x
  bfi r0.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r0.wwww, t7.yzwx
endif
movc r0.w, r0.x, cb4[40].x, cb4[0].x
umin r0.w, r0.w, r6.w
dp3 r6.w, -r4.xyzx, r6.xyzx
add r6.w, r6.w, r6.w
mad r13.xyz, r6.xyzx, -r6.wwww, -r4.xyzx
max r6.w, r0.z, l(0.020000)
mul r10.w, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
add r12.w, r0.y, r0.y
mad r13.w, r12.w, r0.y, l(-1.000000)
add r14.x, |r0.y|, l(0.000010)
min r14.x, r14.x, l(1.000000)
mul r14.yzw, r8.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r15.x, r10.w, r10.w
mul r15.y, r12.y, l(50.000000)
mov_sat r15.y, r15.y
mov r11.yw, l(0,1.000000,0,1.000000)
mov r16.xyz, r10.xyzx
mov r15.z, l(0)
loop
  uge r15.w, r15.z, r0.w
  breakc_nz r15.w
  iadd r15.w, r7.w, r15.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r15.wwww, t5.yzwx
    imul null, r17.x, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r17.xxxx, t3.xyzw
    imad r18.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r18.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r18.wwww, t3.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t8.yzwx
    imul null, r16.w, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.wwww, t6.xyzw
    imad r22.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r22.xxxx, t6.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r22.yyyy, t6.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r22.zzzz, t6.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r22.wwww, t6.wxyz
  endif
  eq r15.w, r19.w, l(0.000000)
  lt r16.w, l(-2.000000), r21.x
  add r17.xyz, -r5.xyzx, r17.xyzx
  dp3 r22.x, r17.xyzx, r17.xyzx
  rsq r22.y, r22.x
  mul r22.yzw, r17.xxyz, r22.yyyy
  mul r23.x, r17.w, r17.w
  mul r22.x, r22.x, r23.x
  mad r22.x, -r22.x, r22.x, l(1.000000)
  max r22.x, r22.x, l(0.000000)
  mul r22.x, r22.x, r22.x
  mul r23.xyz, r17.wwww, r17.xyzx
  dp3 r17.w, r23.xyzx, r23.xyzx
  min r17.w, r17.w, l(1.000000)
  add r17.w, -r17.w, l(1.000000)
  log r17.w, r17.w
  mul r17.w, r17.w, r19.w
  exp r17.w, r17.w
  movc r17.w, r15.w, r22.x, r17.w
  dp3 r19.w, r22.yzwy, r20.yzwy
  add r19.w, -r21.x, r19.w
  mul_sat r19.w, r21.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r17.w, r19.w
  movc r16.w, r16.w, r19.w, r17.w
  lt r17.w, l(0.000000), r16.w
  if_nz r17.w
    and r17.w, r20.x, l(255)
    movc r17.w, r17.w, l(1), l(0)
    if_nz r17.w
      and r22.xyzw, r20.xxxx, l(1, 2, 4, 8)
      movc r22.xyzw, r22.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r17.w, r20.x, l(4)
      ubfe r19.w, l(1), l(4), r20.x
      movc r23.x, r19.w, l(1.000000), l(0)
      and r20.yzw, r17.wwww, l(0, 2, 4, 8)
      movc r23.yzw, r20.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r17.w, r23.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r20.y, r11.xyyy, r22.xyzw
      add r20.y, r20.y, l(-1.000000)
      mad r19.w, r19.w, r20.y, l(1.000000)
      mul r20.yz, r17.wwww, r19.wwww
    else
      mov r20.yz, l(0,1.000000,1.000000,0)
    endif
    add r17.w, r20.z, r20.y
    lt r17.w, l(0.000000), r17.w
    if_nz r17.w
      f16tof32 r17.w, r21.w
      mul r19.w, r17.w, l(0.500000)
      mad r21.xyw, -r19.wwww, r18.yzyw, r17.xyxz
      mad r17.xyz, r19.wwww, r18.yzwy, r17.xyzx
      lt r18.y, l(0.000000), r17.w
      if_nz r18.y
        dp3 r18.z, r21.xywx, r21.xywx
        dp3 r18.w, r17.xyzx, r17.xyzx
        rsq r18.z, r18.z
        rsq r18.w, r18.w
        mul r19.w, r18.w, r18.z
        dp3 r20.z, r21.xywx, r17.xyzx
        mul r20.z, r19.w, r20.z
        mad r20.w, r20.z, l(0.500000), r19.w
        add r20.w, r20.w, l(0.500000)
        div r22.y, r19.w, r20.w
        dp3 r19.w, r6.xyzx, r21.xywx
        dp3 r20.w, r6.xyzx, r17.xyzx
        mul r18.w, r18.w, r20.w
        mad r18.z, r19.w, r18.z, r18.w
        mul r22.x, r18.z, l(0.500000)
      else
        dp3 r18.z, r21.xywx, r21.xywx
        add r18.w, r18.z, l(1.000000)
        rcp r22.y, r18.w
        rsq r18.z, r18.z
        mul r23.xyz, r18.zzzz, r21.xywx
        dp3 r22.x, r6.xyzx, r23.xyzx
        mov r20.z, l(1.000000)
      endif
      lt r18.z, l(0.000000), r21.z
      mul r18.w, r21.z, r21.z
      mul_sat r18.w, r22.y, r18.w
      sqrt r18.w, r18.w
      lt r19.w, r22.x, r18.w
      max r20.w, -r18.w, r22.x
      add r20.w, r18.w, r20.w
      mul r20.w, r20.w, r20.w
      mul r18.w, r18.w, l(4.000000)
      div r18.w, r20.w, r18.w
      movc r18.w, r19.w, r18.w, r22.x
      movc_sat r18.z, r18.z, r18.w, r22.x
      movc r15.w, r15.w, r22.y, l(1.000000)
      add r17.xyz, -r21.xywx, r17.xyzx
      dp3 r18.w, r13.xyzx, r17.xyzx
      mad r22.xyz, r18.wwww, r13.xyzx, -r17.xyzx
      dp3 r19.w, r21.xywx, r22.xyzx
      mul r18.w, r18.w, r18.w
      mad r17.w, r17.w, r17.w, -r18.w
      div_sat r17.w, r19.w, r17.w
      mad r17.xyz, r17.wwww, r17.xyzx, r21.xywx
      movc r17.xyz, r18.yyyy, r17.xyzx, r21.xywx
      dp3 r17.w, r17.xyzx, r17.xyzx
      rsq r17.w, r17.w
      mul r17.xyz, r17.wwww, r17.xyzx
      mul r18.y, r17.w, r21.z
      mul_sat r18.y, r6.w, r18.y
      mul_sat r17.w, r17.w, r18.x
      dp3 r18.x, r6.xyzx, r17.xyzx
      dp3 r17.x, r4.xyzx, r17.xyzx
      mad r17.y, r17.x, l(2.000000), l(2.000000)
      rsq r17.y, r17.y
      add r17.z, r0.y, r18.x
      mul_sat r17.z, r17.y, r17.z
      mad_sat r17.y, r17.y, r17.x, r17.y
      lt r18.w, l(0.000000), r18.y
      if_nz r18.w
        mad r19.w, -r18.y, r18.y, l(1.000000)
        sqrt r19.w, r19.w
        dp2 r20.w, r0.yyyy, r18.xxxx
        add r21.x, -r17.x, r20.w
        ge r21.y, r21.x, r19.w
        if_nz r21.y
          mov r17.z, l(1.000000)
          mov r17.y, |r0.y|
        else
          mad r21.y, -r21.x, r21.x, l(1.000000)
          rsq r21.y, r21.y
          mul r21.y, r18.y, r21.y
          mad r21.z, -r21.x, r18.x, r0.y
          mad r21.x, -r21.x, r17.x, r13.w
          mul r21.xw, r21.xxxz, r21.yyyy
          mul r22.x, r18.x, r18.x
          mad r22.x, -r0.y, r0.y, -r22.x
          add r22.x, r22.x, l(1.000000)
          mad r22.x, -r17.x, r17.x, r22.x
          mad_sat r20.w, r20.w, r17.x, r22.x
          sqrt r20.w, r20.w
          mul r20.w, r20.w, r21.y
          mul r22.x, r0.y, r20.w
          add r22.y, r22.x, r22.x
          mad r22.z, r18.x, r19.w, r0.y
          mad r21.y, r21.y, r21.z, r22.z
          mad r21.z, r17.x, r19.w, r21.x
          add r21.z, r21.z, l(1.000000)
          mul r22.w, r20.w, r21.z
          mul r23.x, r21.z, r21.y
          mul r23.y, r21.y, r22.y
          mul r22.x, r22.x, r21.y
          mul r22.x, r22.x, l(0.500000)
          mad r22.x, r22.w, l(-0.500000), r22.x
          mul r22.x, r22.x, r23.x
          mad r23.z, -r22.w, l(2.000000), r23.y
          mul r23.y, r23.z, r23.y
          mad r22.w, r22.w, r22.w, r23.y
          mul r23.y, r21.z, r21.z
          mad r21.z, r17.x, r19.w, r21.z
          mad r21.z, r21.z, l(-0.500000), l(-0.500000)
          mul r21.z, r21.z, r23.x
          mad r21.z, r22.z, r23.y, r21.z
          mad r21.y, r21.y, r21.z, r22.w
          add r21.z, r22.x, r22.x
          mul r22.z, r22.x, r22.x
          mad r22.z, r21.y, r21.y, r22.z
          div r21.z, r21.z, r22.z
          mul r21.y, r21.y, r21.z
          mad r21.z, -r21.z, r22.x, l(1.000000)
          mul r20.w, r20.w, r21.y
          mad r20.w, r21.z, r21.w, r20.w
          mul r21.y, r22.y, r21.y
          mad r21.x, r21.z, r21.x, r21.y
          mad r18.x, r18.x, r19.w, r20.w
          mad r17.x, r17.x, r19.w, r21.x
          mad r19.w, r17.x, l(2.000000), l(2.000000)
          rsq r19.w, r19.w
          add r18.x, r0.y, r18.x
          mul_sat r17.z, r19.w, r18.x
          mad_sat r17.y, r19.w, r17.x, r19.w
        endif
      endif
      mul r15.w, r18.z, r15.w
      lt r17.x, l(0.000000), r17.w
      mul r17.w, r17.w, r17.w
      mad r18.x, r17.y, l(3.600000), l(0.400000)
      div r17.w, r17.w, r18.x
      mad r17.w, r10.w, r10.w, r17.w
      min r17.w, r17.w, l(1.000000)
      movc r11.z, r17.x, r17.w, r15.x
      mul r17.x, r18.y, l(0.250000)
      ishr r17.w, r11.z, l(1)
      iadd r17.w, r17.w, l(0x1fbd1df5)
      mad r17.w, r17.w, l(3.000000), r18.y
      mul r17.x, r17.w, r17.x
      add r17.w, r17.y, l(0.001000)
      div r17.x, r17.x, r17.w
      add r18.x, r11.z, r17.x
      div r18.y, r11.z, r18.x
      movc r18.xy, r18.wwww, r18.xyxx, r11.zwzz
      lt r17.x, r20.z, l(1.000000)
      add r18.w, -r20.z, l(1.000100)
      add r19.w, r20.z, l(1.000000)
      div r18.w, r18.w, r19.w
      sqrt r18.w, r18.w
      mul r19.w, r18.w, l(0.250000)
      ishr r20.z, r18.x, l(1)
      iadd r20.z, r20.z, l(0x1fbd1df5)
      mad r18.w, r20.z, l(3.000000), r18.w
      mul r18.w, r18.w, r19.w
      div r17.w, r18.w, r17.w
      add r17.w, r17.w, r18.x
      div r17.w, r18.x, r17.w
      sqrt r17.w, r17.w
      mul r17.w, r17.w, r18.y
      movc r17.x, r17.x, r17.w, r18.y
      mad r17.w, r17.z, r11.z, -r17.z
      mad r17.z, r17.w, r17.z, l(1.000000)
      mul r17.z, r17.z, r17.z
      mul r17.z, r17.z, l(3.14159274)
      div r17.z, r11.z, r17.z
      mul r17.x, r17.x, r17.z
      sqrt r11.z, r11.z
      add r17.z, -r11.z, l(1.000000)
      mad r17.w, r14.x, r17.z, r11.z
      mad r11.z, r18.z, r17.z, r11.z
      mul r11.z, r11.z, r14.x
      mad r11.z, r18.z, r17.w, r11.z
      rcp r11.z, r11.z
      mul r11.z, r11.z, r17.x
      add r17.x, -r17.y, l(1.000000)
      mul r17.y, r17.x, r17.x
      mul r17.y, r17.y, r17.y
      mul r17.z, r17.x, r17.y
      mad r17.x, -r17.y, r17.x, l(1.000000)
      mul r17.xyw, r12.xyxz, r17.xxxx
      mad r17.xyz, r15.yyyy, r17.zzzz, r17.xywx
      mul r11.z, r11.z, l(0.500000)
      mul r17.xyz, r17.xyzx, r11.zzzz
      mul r17.xyz, r15.wwww, r17.xyzx
      mad r17.xyz, r15.wwww, r14.yzwy, r17.xyzx
      mul r18.xyz, r16.wwww, r19.xyzx
      mul r18.xyz, r20.yyyy, r18.xyzx
      mul r17.xyz, r17.xyzx, r18.xyzx
    else
      mov r17.xyz, l(0,0,0,0)
    endif
  else
    mov r17.xyz, l(0,0,0,0)
  endif
  ushr r11.z, r20.x, l(8)
  and r11.z, r11.z, cb2[16].w
  add r17.xyz, r16.xyzx, r17.xyzx
  movc r16.xyz, r11.zzzz, r17.xyzx, r16.xyzx
  iadd r15.z, r15.z, l(1)
endloop
mad r6.xyz, r12.wwww, r6.xyzx, -r4.xyzx
min r0.x, r4.w, l(1.000000)
log r0.y, r0.z
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.y, -r0.y, r0.w
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t9.xyzw, s2, r0.y
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
mad_sat r0.y, r0.z, cb1[165].x, cb1[165].y
mad r0.w, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.w
min r0.w, cb1[165].z, l(0.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.y, r0.y, r0.w, l(1.000000)
mul r4.xyz, r0.yyyy, r4.xyzx
mad r4.xyz, r8.xxxx, -r4.xyzx, r4.xyzx
mad r6.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r6.x, r6.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.y, r15.y, r0.y
mad r0.xyz, r12.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r16.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t10.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r2.x, v3.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r9.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r9.xyzw, r0.wwww, r3.yzwx, r9.xyzw
  mov o0.w, r9.w
else
  mov o0.w, r9.w
endif
add r0.xyz, r0.xyzx, r9.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
