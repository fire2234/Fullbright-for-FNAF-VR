//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 30 06:49:57 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 8
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t2.xyzw, s2, l(0.000000)
eq r0.w, r0.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(1.000000,0,0,0)
  ret
endif
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v0.xyxx, t1.xyzw, s1, l(0.000000)
add r1.xyz, r1.xyzx, cb1[62].xyzx
add r2.xyz, -r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyzw, r2.yyyy, cb1[1].xyzw
mad r3.xyzw, r2.xxxx, cb1[0].xyzw, r1.xyzw
mad r4.xyzw, r2.zzzz, cb1[2].xyzw, r3.xyzw
add r4.xyzw, r4.xyzw, cb1[3].xyzw
div r4.xyz, r4.xyzx, r4.wwww
min r2.yw, r4.xxxy, l(0.000000, 1.000000, 0.000000, 1.000000)
max r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyzw, r0.xxxx, cb1[0].xyzw, r1.xyzw
mad r5.xyzw, r2.zzzz, cb1[2].xyzw, r1.xyzw
add r5.xyzw, r5.xyzw, cb1[3].xyzw
div r5.xyz, r5.xyzx, r5.wwww
min r2.yw, r2.yyyw, r5.xxxy
max r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyzw, r0.yyyy, cb1[1].xyzw
mad r6.xyzw, r2.xxxx, cb1[0].xyzw, r5.xyzw
mad r7.xyzw, r2.zzzz, cb1[2].xyzw, r6.xyzw
add r7.xyzw, r7.xyzw, cb1[3].xyzw
div r7.xyz, r7.xyzx, r7.wwww
min r0.yw, r2.yyyw, r7.xxxy
max r2.xyw, r4.xyxz, r7.xyxz
mad r4.xyzw, r0.xxxx, cb1[0].xyzw, r5.xyzw
mad r5.xyzw, r2.zzzz, cb1[2].xyzw, r4.xyzw
add r5.xyzw, r5.xyzw, cb1[3].xyzw
div r5.xyz, r5.xyzx, r5.wwww
min r0.xy, r0.ywyy, r5.xyxx
max r2.xyz, r2.xywx, r5.xyzx
mad r3.xyzw, r0.zzzz, cb1[2].xyzw, r3.xyzw
add r3.xyzw, r3.xyzw, cb1[3].xyzw
div r3.xyz, r3.xyzx, r3.wwww
min r0.xy, r0.xyxx, r3.xyxx
max r2.xyz, r2.xyzx, r3.xyzx
mad r1.xyzw, r0.zzzz, cb1[2].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[3].xyzw
div r1.xyz, r1.xyzx, r1.wwww
min r0.xy, r0.xyxx, r1.xyxx
max r1.xyz, r1.xyzx, r2.xyzx
mad r2.xyzw, r0.zzzz, cb1[2].xyzw, r6.xyzw
add r2.xyzw, r2.xyzw, cb1[3].xyzw
div r2.xyz, r2.xyzx, r2.wwww
min r0.xy, r0.xyxx, r2.xyxx
max r1.xyz, r1.xyzx, r2.xyzx
mad r2.xyzw, r0.zzzz, cb1[2].xyzw, r4.xyzw
add r2.xyzw, r2.xyzw, cb1[3].xyzw
div r2.xyz, r2.xyzx, r2.wwww
min r0.xw, r0.xxxy, r2.xxxy
max r1.xyz, r1.xyzx, r2.xyzx
mov r0.yz, r1.yyxy
mad_sat r0.xyzw, r0.xyzw, l(0.500000, -0.500000, 0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mul r2.xyzw, r0.xyzw, cb0[4].xyxy
mad r1.xy, r0.zwzz, cb0[4].xyxx, -r2.xyxx
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
max r1.x, r1.y, r1.x
log r1.x, r1.x
round_pi r1.x, r1.x
max r1.x, r1.x, cb0[3].z
add r1.y, r1.x, l(-1.000000)
max r1.y, r1.y, l(0.000000)
exp r1.w, -r1.y
mul r2.xyzw, r1.wwww, r2.xyzw
round_pi r2.zw, r2.zzzw
round_ni r2.xy, r2.xyxx
add r2.xy, -r2.xyxx, r2.zwzz
ge r2.xy, l(4.000000, 4.000000, 0.000000, 0.000000), r2.xyxx
and r1.w, r2.y, r2.x
movc r1.x, r1.w, r1.y, r1.x
add r0.zw, -r0.xxxy, r0.zzzw
mul r0.zw, r0.zzzw, cb0[3].xxxy
mul r0.xy, r0.xyxx, cb0[3].xyxx
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r0.xyxx, t0.xyzw, s0, r1.x
mad r3.xyzw, r0.zwzw, l(0.000000, 0.333333343, 0.333333343, 0.333333343), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r3.xyxx, t0.yxzw, s0, r1.x
mad r4.xyzw, r0.zwzw, l(0.000000, 0.666666687, 0.000000, 1.000000), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r4.xyxx, t0.yzxw, s0, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r2.w, r4.zwzz, t0.yzwx, s0, r1.x
min r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r4.xyzw, r0.zwzw, l(0.333333343, 0.000000, 0.333333343, 0.666666687), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r4.xyxx, t0.xyzw, s0, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r5.y, r3.zwzz, t0.yxzw, s0, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r5.z, r4.zwzz, t0.yzxw, s0, r1.x
mad r3.xyzw, r0.zwzw, l(0.333333343, 1.000000, 0.666666687, 0.000000), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r5.w, r3.xyxx, t0.yzwx, s0, r1.x
min r2.xyzw, r2.xyzw, r5.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.zwzz, t0.xyzw, s0, r1.x
mad r4.xyzw, r0.zwzw, l(0.666666687, 0.333333343, 0.666666687, 0.666666687), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r4.xyxx, t0.yxzw, s0, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r4.zwzz, t0.yzxw, s0, r1.x
mad r4.xyzw, r0.zwzw, l(0.666666687, 1.000000, 1.000000, 0.000000), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.yzwx, s0, r1.x
min r2.xyzw, r2.xyzw, r3.xyzw
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t0.xyzw, s0, r1.x
mad r4.xyzw, r0.zwzw, l(1.000000, 0.333333343, 1.000000, 0.666666687), r0.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r4.xyxx, t0.yxzw, s0, r1.x
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r4.zwzz, t0.yzxw, s0, r1.x
mad r0.xy, r0.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r0.xyxx, t0.yzwx, s0, r1.x
min r0.xyzw, r2.xyzw, r3.xyzw
min r0.xy, r0.ywyy, r0.xzxx
min r0.x, r0.y, r0.x
ge r0.x, r1.z, r0.x
and o0.xyzw, r0.xxxx, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
ret
// Approximately 0 instruction slots used
