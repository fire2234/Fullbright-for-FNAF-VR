//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:46:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// PARTICLE_SUBUVS          0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 4   xyz         1     NONE   float   x
// TEXCOORD                 5   xyzw        2     NONE   float   xyzw
// PARTICLE_LIGHTING_OFFSET     0   xyz         3     NONE   float
// TANGENTX                 0   xyzw        4     NONE   float   xyz
// TANGENTZ                 0   xyzw        5     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           6     NONE    uint   x
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[182], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_constantbuffer cb2[132], immediateIndexed
dcl_constantbuffer cb3[92], dynamicIndexed
dcl_constantbuffer cb4[6], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.x
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps constant v6.x
dcl_input_ps linear v7.xyzw
dcl_input_ps_siv linear noperspective v8.xyzw, position
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 18
and r0.x, v6.x, l(1)
if_z r0.x
  mov r1.x, cb0[4].x
  mov r1.y, cb0[5].x
  mov r1.z, cb0[6].x
  mov r1.w, cb0[7].x
  mov r2.x, cb0[4].y
  mov r2.y, cb0[5].y
  mov r2.z, cb0[6].y
  mov r2.w, cb0[7].y
  mov r3.x, cb0[4].w
  mov r3.y, cb0[5].w
  mov r3.z, cb0[6].w
  mov r3.w, cb0[7].w
  mov r4.x, cb0[40].x
  mov r4.y, cb0[41].x
  mov r4.z, cb0[42].x
  mov r4.w, cb0[43].x
  mov r5.x, cb0[40].y
  mov r5.y, cb0[41].y
  mov r5.z, cb0[42].y
  mov r5.w, cb0[43].y
  mov r6.x, cb0[40].z
  mov r6.y, cb0[41].z
  mov r6.z, cb0[42].z
  mov r6.w, cb0[43].z
  mov r7.x, cb0[40].w
  mov r7.y, cb0[41].w
  mov r7.z, cb0[42].w
  mov r7.w, cb0[43].w
  mov r0.yzw, cb0[62].xxyz
  mov r8.xyzw, cb0[128].xyzw
  mov r9.x, cb0[131].w
  mov r9.yz, cb0[121].xxyx
else
  mov r1.x, cb2[4].x
  mov r1.y, cb2[5].x
  mov r1.z, cb2[6].x
  mov r1.w, cb2[7].x
  mov r2.x, cb2[4].y
  mov r2.y, cb2[5].y
  mov r2.z, cb2[6].y
  mov r2.w, cb2[7].y
  mov r3.x, cb2[4].w
  mov r3.y, cb2[5].w
  mov r3.z, cb2[6].w
  mov r3.w, cb2[7].w
  mov r4.x, cb2[40].x
  mov r4.y, cb2[41].x
  mov r4.z, cb2[42].x
  mov r4.w, cb2[43].x
  mov r5.x, cb2[40].y
  mov r5.y, cb2[41].y
  mov r5.z, cb2[42].y
  mov r5.w, cb2[43].y
  mov r6.x, cb2[40].z
  mov r6.y, cb2[41].z
  mov r6.z, cb2[42].z
  mov r6.w, cb2[43].z
  mov r7.x, cb2[40].w
  mov r7.y, cb2[41].w
  mov r7.z, cb2[42].w
  mov r7.w, cb2[43].w
  mov r0.yzw, cb2[62].xxyz
  mov r8.xyzw, cb2[128].xyzw
  mov r9.x, cb2[131].w
  mov r9.yz, cb2[121].xxyx
endif
mul r10.xyz, v4.yzxy, v5.zxyz
mad r10.xyz, v5.yzxy, v4.zxyz, -r10.xyzx
mul r10.xyz, r10.xyzx, v5.wwww
mov r11.xyz, v8.xyzx
mov r11.w, l(1.000000)
dp4 r4.x, r11.xyzw, r4.xyzw
dp4 r4.y, r11.xyzw, r5.xyzw
dp4 r4.z, r11.xyzw, r6.xyzw
dp4 r4.w, r11.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r4.xyz, -r0.yzwy, r4.xyzx
mul r0.y, r9.x, cb1[4].w
movc r0.z, v9.x, l(1.000000), l(-1.000000)
mul r0.y, r0.z, r0.y
mad r5.xyz, r8.wwww, l(0.000000, 0.000000, 1.000000, 0.000000), r8.xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
mul r6.xyz, r10.xyzx, r5.yyyy
mad r5.xyw, r5.xxxx, v4.xyxz, r6.xyxz
mad r5.xyz, r5.zzzz, v5.xyzx, r5.xywx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
mul r0.yzw, r0.yyyy, r5.xxyz
sample_indexable(texture2d)(float,float,float,float) r5.x, v0.xyxx, t11.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r5.y, v0.zwzz, t11.yxzw, s3
add r5.y, -r5.x, r5.y
mad r5.x, v1.x, r5.y, r5.x
mul_sat r5.w, r5.x, v2.w
mov_sat r6.xyz, v2.xyzx
lt r6.w, l(0.000000), cb1[12].z
if_nz r6.w
  mad r7.xyz, r4.xyzx, cb0[178].xyzx, cb0[179].xyzx
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r7.xyz, r7.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
  mul r7.xyz, r7.xyzx, cb0[180].xyzx
  ftoi r8.xyz, r7.xyzx
  mov r8.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r8.xyzw, r8.xyzw, t0.xyzw
  utof r8.xyzw, r8.xyzw
  add r6.w, cb0[180].w, l(1.000000)
  div r7.xyz, r7.xyzx, r8.wwww
  frc r7.xyz, r7.xyzx
  mul r7.xyz, r7.xyzx, cb0[180].wwww
  mad r7.xyz, r8.xyzx, r6.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r7.xyz, r7.xyzx, cb0[181].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r7.x, r7.xyzx, t1.xyzw, s0, l(0.000000)
else
  lt r6.w, l(0.000000), cb1[10].w
  movc r7.x, r6.w, cb4[5].x, l(1.000000)
endif
mad r6.xyz, r6.xyzx, cb0[126].wwww, cb0[126].xyzx
mad r8.xyz, cb0[127].wwww, l(0.080000, 0.080000, 0.080000, 0.000000), cb0[127].xyzx
mad r6.xyz, r8.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r6.xyzx
add r8.xy, -r9.yzyy, v8.xyxx
ftou r8.xy, r8.xyxx
if_z r0.x
  mov r6.w, cb3[3].x
  mov r8.zw, cb3[3].yyyz
  mov r9.xyz, cb3[1].zxyz
  mov r9.w, cb3[2].x
else
  mov r6.w, cb3[43].x
  mov r8.zw, cb3[43].yyyz
  mov r9.xyz, cb3[41].zxyz
  mov r9.w, cb3[42].x
endif
mad r6.w, v8.w, r6.w, r8.z
log r6.w, r6.w
mul r6.w, r8.w, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r8.z, r9.x, l(-1)
umin r6.w, r6.w, r8.z
ushr r8.xy, r8.xyxx, r9.wwww
imad r6.w, r6.w, r9.z, r8.y
imad r6.w, r6.w, r9.y, r8.x
if_z r0.x
  mov r8.x, cb3[0].z
  mov r8.yzw, cb3[6].xxzw
  mov r9.xyz, cb3[5].xyzx
  mov r10.xyz, cb3[4].xyzx
else
  mov r8.x, cb3[40].z
  mov r8.yzw, cb3[46].xxzw
  mov r9.xyz, cb3[45].xyzx
  mov r10.xyz, cb3[44].xyzx
endif
if_nz r8.x
  and r11.xyzw, r8.yyyy, l(255, 2, 4, 8)
  movc r11.xyzw, r11.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb3[30].y
    mul r12.xyzw, r4.yyyy, cb3[33].xyzw
    mad r12.xyzw, r4.xxxx, cb3[32].xyzw, r12.xyzw
    mad r12.xyzw, r4.zzzz, cb3[34].xyzw, r12.xyzw
    add r12.xyzw, r12.xyzw, cb3[35].xyzw
    div r12.xy, r12.xyxx, r12.wwww
    ge r13.xy, r12.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    ge r13.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r12.xxxy
    and r13.xy, r13.zwzz, r13.xyxx
    and r8.x, r13.y, r13.x
    if_nz r8.x
      sample_l_indexable(texture2d)(float,float,float,float) r8.x, r12.xyxx, t3.xyzw, s2, l(0.000000)
      lt r9.w, r12.z, r8.x
      lt r8.x, l(0.990000), r8.x
      or r8.x, r8.x, r9.w
      and r7.x, r8.x, l(0x3f800000)
    else
      mov r7.x, l(1.000000)
    endif
  else
    mov r7.x, l(1.000000)
  endif
  if_nz cb3[7].x
    mov r8.x, cb3[7].x
    mov r9.w, l(0)
    loop
      uge r10.w, r9.w, cb3[7].x
      breakc_nz r10.w
      dp4 r10.w, cb3[8].xyzw, icb[r9.w + 0].xyzw
      lt r10.w, v8.w, r10.w
      if_nz r10.w
        mov r8.x, r9.w
        break
      endif
      iadd r9.w, r9.w, l(1)
    endloop
    ult r9.w, r8.x, cb3[7].x
    if_nz r9.w
      ishl r9.w, r8.x, l(2)
      mul r12.xyzw, r4.yyyy, cb3[r9.w + 10].xyzw
      mad r12.xyzw, r4.xxxx, cb3[r9.w + 9].xyzw, r12.xyzw
      mad r12.xyzw, r4.zzzz, cb3[r9.w + 11].xyzw, r12.xyzw
      add r12.xyzw, r12.xyzw, cb3[r9.w + 12].xyzw
      div r13.xyzw, r12.xyxy, r12.wwww
      ge r12.xy, r13.zwzz, cb3[r8.x + 25].xyxx
      ge r14.xy, cb3[r8.x + 25].zwzz, r13.zwzz
      and r12.xy, r12.xyxx, r14.xyxx
      and r8.x, r12.y, r12.x
      if_nz r8.x
        mad r13.xyzw, r13.xyzw, cb3[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r12.xy, r13.zwzz
        round_ni r13.xyzw, r13.xyzw
        add r14.xyzw, r13.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r14.xyzw, r14.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.x, r14.xyxx, t2.xyzw, s1, l(0.000000)
        add r13.xyzw, r13.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r13.xyzw, r13.xyzw, cb3[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r15.y, r13.xyxx, t2.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r15.z, r13.zwzz, t2.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r15.w, r14.zwzz, t2.yzwx, s1, l(0.000000)
        add r13.xyzw, -r12.zzzz, r15.xyzw
        mad_sat r13.xyzw, r13.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r12.zw, -r13.wwwx, r13.zzzy
        mad r12.xz, r12.xxxx, r12.zzwz, r13.wwxw
        add r8.x, -r12.x, r12.z
        mad r8.x, r12.y, r8.x, r12.x
      else
        mov r8.x, l(1.000000)
      endif
    else
      mov r8.x, l(1.000000)
    endif
  else
    mov r8.x, l(1.000000)
  endif
  if_nz r11.x
    mov r11.x, l(1.000000)
    dp4 r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r11.xyzw
    mov r7.yzw, r11.yyzw
    dp4 r7.z, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r7.z, r7.z, l(-1.000000)
    mad r7.z, r9.w, r7.z, l(1.000000)
    mad_sat r7.w, v8.w, r8.z, r8.w
    mul r7.w, r7.w, r7.w
    add r7.z, -r8.x, r7.z
    mad r11.x, r7.w, r7.z, r8.x
    min r11.y, r11.x, l(1.000000)
  else
    mov r11.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.z, r11.y, r11.x
  lt r7.z, l(0.000000), r7.z
  if_nz r7.z
    dp3 r7.z, r10.xyzx, r10.xyzx
    rsq r7.z, r7.z
    mul r8.xzw, r7.zzzz, r10.xxyz
    dp3_sat r7.z, r0.yzwy, r8.xzwx
    mul r8.xzw, r6.xxyz, r7.zzzz
    mul r8.xzw, r8.xxzw, l(0.318309873, 0.000000, 0.318309873, 0.318309873)
    mul r9.xyz, r9.xyzx, r11.xxxx
    mul r8.xzw, r8.xxzw, r9.xxyz
  else
    mov r8.xzw, l(0,0,0,0)
  endif
  ushr r7.z, r8.y, l(8)
  and r7.z, r7.z, cb1[16].w
  movc r8.xyz, r7.zzzz, r8.xzwx, l(0,0,0,0)
else
  mov r8.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.z, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.z, r7.zzzz, t5.yzxw
  umin r7.z, r7.z, cb3[0].x
  bfi r7.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t5.yzwx
else
  ishl r8.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r8.wwww, t8.yzwx
  umin r7.z, r8.w, cb3[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r6.wwww, t8.yzwx
endif
movc r6.w, r0.x, cb3[40].x, cb3[0].x
umin r6.w, r6.w, r7.z
mul r9.xyz, r6.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r7.y, l(1.000000)
mov r10.xyz, r8.xyzx
mov r7.z, l(0)
loop
  uge r8.w, r7.z, r6.w
  breakc_nz r8.w
  iadd r8.w, r7.z, r7.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r8.wwww, t6.yzwx
    imul null, r10.w, r9.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r11.xyzw, r10.wwww, t4.xyzw
    imad r12.xyzw, r9.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r12.yyyy, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r12.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r12.xyz, r12.wwww, t4.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r8.wwww, t9.yzwx
    imul null, r9.w, r8.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r11.xyzw, r9.wwww, t7.xyzw
    imad r16.xyzw, r8.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r16.xxxx, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r14.xyzw, r16.yyyy, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r16.zzzz, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r12.xyz, r16.wwww, t7.xyzw
  endif
  eq r8.w, r13.w, l(0.000000)
  lt r9.w, l(-2.000000), r15.x
  add r11.xyz, -r4.xyzx, r11.xyzx
  dp3 r10.w, r11.xyzx, r11.xyzx
  rsq r12.w, r10.w
  mul r16.xyz, r11.xyzx, r12.wwww
  mul r12.w, r11.w, r11.w
  mul r10.w, r10.w, r12.w
  mad r10.w, -r10.w, r10.w, l(1.000000)
  max r10.w, r10.w, l(0.000000)
  mul r10.w, r10.w, r10.w
  mul r17.xyz, r11.wwww, r11.xyzx
  dp3 r11.w, r17.xyzx, r17.xyzx
  min r11.w, r11.w, l(1.000000)
  add r11.w, -r11.w, l(1.000000)
  log r11.w, r11.w
  mul r11.w, r11.w, r13.w
  exp r11.w, r11.w
  movc r10.w, r8.w, r10.w, r11.w
  dp3 r11.w, r16.xyzx, r14.xyzx
  add r11.w, -r15.x, r11.w
  mul_sat r11.w, r15.y, r11.w
  mul r11.w, r11.w, r11.w
  mul r11.w, r10.w, r11.w
  movc r9.w, r9.w, r11.w, r10.w
  lt r10.w, l(0.000000), r9.w
  if_nz r10.w
    and r10.w, r14.w, l(255)
    movc r10.w, r10.w, l(1), l(0)
    if_nz r10.w
      and r16.xyzw, r14.wwww, l(1, 2, 4, 8)
      movc r16.xyzw, r16.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r10.w, r14.w, l(4)
      ubfe r11.w, l(1), l(4), r14.w
      movc r17.x, r11.w, l(1.000000), l(0)
      and r14.xyz, r10.wwww, l(2, 4, 8, 0)
      movc r17.yzw, r14.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r10.w, r17.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r11.w, r16.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r12.w, r7.xyyy, r16.xyzw
      add r12.w, r12.w, l(-1.000000)
      mad r11.w, r11.w, r12.w, l(1.000000)
      mul r14.xy, r10.wwww, r11.wwww
    else
      mov r14.xy, l(1.000000,1.000000,0,0)
    endif
    add r10.w, r14.y, r14.x
    lt r10.w, l(0.000000), r10.w
    if_nz r10.w
      f16tof32 r10.w, r15.w
      mul r11.w, r10.w, l(0.500000)
      mad r15.xyw, -r11.wwww, r12.xyxz, r11.xyxz
      mad r11.xyz, r11.wwww, r12.xyzx, r11.xyzx
      lt r10.w, l(0.000000), r10.w
      if_nz r10.w
        dp3 r10.w, r15.xywx, r15.xywx
        dp3 r11.w, r11.xyzx, r11.xyzx
        rsq r10.w, r10.w
        rsq r11.w, r11.w
        mul r12.x, r10.w, r11.w
        dp3 r12.y, r15.xywx, r11.xyzx
        mul r12.y, r12.x, r12.y
        mad r12.y, r12.y, l(0.500000), r12.x
        add r12.y, r12.y, l(0.500000)
        div r12.y, r12.x, r12.y
        dp3 r12.z, r0.yzwy, r15.xywx
        dp3 r11.x, r0.yzwy, r11.xyzx
        mul r11.x, r11.w, r11.x
        mad r10.w, r12.z, r10.w, r11.x
        mul r12.x, r10.w, l(0.500000)
      else
        dp3 r10.w, r15.xywx, r15.xywx
        add r11.x, r10.w, l(1.000000)
        rcp r12.y, r11.x
        rsq r10.w, r10.w
        mul r11.xyz, r10.wwww, r15.xywx
        dp3 r12.x, r0.yzwy, r11.xyzx
      endif
      lt r10.w, l(0.000000), r15.z
      mul r11.x, r15.z, r15.z
      mul_sat r11.x, r12.y, r11.x
      sqrt r11.x, r11.x
      lt r11.y, r12.x, r11.x
      max r11.z, -r11.x, r12.x
      add r11.z, r11.z, r11.x
      mul r11.z, r11.z, r11.z
      mul r11.x, r11.x, l(4.000000)
      div r11.x, r11.z, r11.x
      movc r11.x, r11.y, r11.x, r12.x
      movc_sat r10.w, r10.w, r11.x, r12.x
      movc r8.w, r8.w, r12.y, l(1.000000)
      mul r8.w, r10.w, r8.w
      mul r11.xyz, r9.xyzx, r8.wwww
      mul r12.xyz, r9.wwww, r13.xyzx
      mul r12.xyz, r14.xxxx, r12.xyzx
      mul r11.xyz, r11.xyzx, r12.xyzx
    else
      mov r11.xyz, l(0,0,0,0)
    endif
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  ushr r8.w, r14.w, l(8)
  and r8.w, r8.w, cb1[16].w
  add r11.xyz, r10.xyzx, r11.xyzx
  movc r10.xyz, r8.wwww, r11.xyzx, r10.xyzx
  iadd r7.z, r7.z, l(1)
endloop
lt r0.x, l(0.000000), cb3[91].w
if_nz r0.x
  mov r4.w, l(1.000000)
  dp4 r0.x, r4.xyzw, r1.xyzw
  dp4 r0.y, r4.xyzw, r2.xyzw
  dp4 r0.z, r4.xyzw, r3.xyzw
  div r0.xy, r0.xyxx, r0.zzzz
  mad r1.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.x, r0.z, cb0[176].x, cb0[176].y
  log r0.x, r0.x
  mul r0.x, r0.x, cb0[176].z
  mul r1.z, r0.x, cb0[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r0.xyzw, r1.xyzx, t10.xyzw, s0, l(0.000000)
  mul r1.x, r0.w, v7.w
  mad r0.xyz, v7.xyzx, r0.wwww, r0.xyzx
else
  mov r0.xyz, v7.xyzx
  mov r1.x, v7.w
endif
add r1.yzw, r6.xxyz, -r10.xxyz
mad r1.yzw, cb0[134].zzzz, r1.yyzw, r10.xxyz
max r5.xyz, cb5[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[130].x
if_nz r0.w
  add r2.xyz, r4.xyzx, -cb1[5].xyzx
  add r3.xyz, cb1[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r0.w, r2.y, r2.x
  or r0.w, r2.z, r0.w
  dp3 r2.x, r4.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.x, r2.x, l(0.002000)
  frc r2.x, r2.x
  lt r2.x, l(0.500000), r2.x
  movc r2.yzw, r2.xxxx, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r2.x, l(1.000000)
  movc r5.xyzw, r0.wwww, r2.yzwx, r5.xyzw
  mov o0.w, r5.w
else
  mov o0.w, r5.w
endif
add r1.yzw, r1.yyzw, r5.xxyz
mad o0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
ret
// Approximately 0 instruction slots used
