//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:47:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float   xyz
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE               14   xyzw        4     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        5     NONE   float   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy
// ATTRIBUTE               13   xyzw        8     NONE   float
// SV_InstanceID            0   x           9   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// TEXCOORD                 9   xyz         5     NONE   float   xyz
// VS_To_DS_Position        0   xyzw        6     NONE   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[178], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[63], immediateIndexed
dcl_constantbuffer cb4[92], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_input_sgv v9.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.x
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output_siv o7.x, clip_distance
dcl_temps 10
and r0.x, v9.x, l(1)
if_z r0.x
  mov r0.yzw, cb1[60].xxyz
  mov r1.xyz, cb1[62].xyzx
else
  mov r0.yzw, cb3[60].xxyz
  mov r1.xyz, cb3[62].xyzx
endif
imul null, r2.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t1.xyzw
imad r4.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r4.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r2.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r4.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r4.wwww, t1.xyzw
mul r7.xyzw, r7.xyzw, v5.yyyy
mul r8.xyzw, r8.xyzw, v5.yyyy
mul r4.xyzw, r4.xyzw, v5.yyyy
mad r3.xyzw, v5.xxxx, r3.xyzw, r7.xyzw
mad r5.xyzw, v5.xxxx, r5.xyzw, r8.xyzw
mad r4.xyzw, v5.xxxx, r6.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r2.zzzz, t1.xyzw
imad r7.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.yyyy, t1.xyzw
mad r3.xyzw, v5.zzzz, r6.xyzw, r3.xyzw
mad r5.xyzw, v5.zzzz, r8.xyzw, r5.xyzw
mad r4.xyzw, v5.zzzz, r9.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.wwww, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r7.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t1.xyzw
mad r2.xyzw, v5.wwww, r2.xyzw, r3.xyzw
mad r3.xyzw, v5.wwww, r6.xyzw, r5.xyzw
mad r4.xyzw, v5.wwww, r7.xyzw, r4.xyzw
imul null, r5.xyzw, v4.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r5.xxxx, t1.xyzw
imad r7.xyzw, v4.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.yyyy, t1.xyzw
mad r2.xyzw, v6.xxxx, r6.xyzw, r2.xyzw
mad r3.xyzw, v6.xxxx, r8.xyzw, r3.xyzw
mad r4.xyzw, v6.xxxx, r9.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r5.yyyy, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t1.xyzw
mad r2.xyzw, v6.yyyy, r6.xyzw, r2.xyzw
mad r3.xyzw, v6.yyyy, r8.xyzw, r3.xyzw
mad r4.xyzw, v6.yyyy, r7.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r5.zzzz, t1.xyzw
imad r7.xyzw, v4.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r7.xxxx, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r7.yyyy, t1.xyzw
mad r2.xyzw, v6.zzzz, r6.xyzw, r2.xyzw
mad r3.xyzw, v6.zzzz, r8.xyzw, r3.xyzw
mad r4.xyzw, v6.zzzz, r9.xyzw, r4.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r5.wwww, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r7.zzzz, t1.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r7.wwww, t1.xyzw
mad r2.xyzw, v6.wwww, r5.xyzw, r2.xyzw
mad r3.xyzw, v6.wwww, r6.xyzw, r3.xyzw
mad r4.xyzw, v6.wwww, r7.xyzw, r4.xyzw
dp3 r1.w, r2.xyzx, v1.xyzx
dp3 r5.x, r3.xyzx, v1.xyzx
dp3 r5.y, r4.xyzx, v1.xyzx
dp3 r5.z, r2.xyzx, v2.xyzx
dp3 r5.w, r3.xyzx, v2.xyzx
dp3 r6.x, r4.xyzx, v2.xyzx
mov r7.xyz, v0.xyzx
mov r7.w, l(1.000000)
dp4 r2.x, r2.xyzw, r7.xyzw
dp4 r2.y, r3.xyzw, r7.xyzw
dp4 r2.z, r4.xyzw, r7.xyzw
mul r3.xyz, r2.yyyy, cb2[1].xyzx
mad r2.xyw, cb2[0].xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, cb2[2].xyzx, r2.zzzz, r2.xywx
add r1.xyz, r1.xyzx, cb2[3].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, cb2[0].xyzx, cb2[4].xxxx
mul r3.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r4.xyz, cb2[2].xyzx, cb2[4].zzzz
mul r6.yzw, r3.xxyz, r5.xxxx
mad r6.yzw, r1.wwww, r2.xxyz, r6.yyzw
mad o0.xyz, r5.yyyy, r4.xyzx, r6.yzwy
mul r3.xyz, r3.xyzx, r5.wwww
mad r2.xyz, r5.zzzz, r2.xyzx, r3.xyzx
mad o1.xyz, r6.xxxx, r4.xyzx, r2.xyzx
mul o1.w, v2.w, cb2[4].w
movc r1.w, cb0[0].x, l(1), l(0)
imad o3.x, r1.w, l(0x80000000), r0.x
add r0.xyz, -r0.yzwy, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r1.w, r0.w
dp3 r2.x, r0.xyzx, cb1[52].xyzx
div r1.w, r1.w, r2.x
mul r1.w, r1.w, cb1[177].z
max r1.w, r1.w, l(0.000000)
rsq r2.x, r0.w
mul r0.w, r0.w, r2.x
mul r2.yzw, r0.xxyz, r2.xxxx
max r1.w, r1.w, cb4[85].w
lt r3.x, l(0.000000), r1.w
mul r3.y, r2.x, r1.w
mad r3.z, r3.y, r0.z, cb1[59].z
mad r3.y, -r3.y, r0.z, r0.z
mad r1.w, -r1.w, r2.x, l(1.000000)
mul r1.w, r0.w, r1.w
add r2.x, r3.z, -cb4[87].y
mul r2.x, r2.x, cb4[85].y
max r2.x, r2.x, l(-127.000000)
exp r2.x, -r2.x
mul r2.x, r2.x, cb4[87].x
movc r2.x, r3.x, r2.x, cb4[85].x
movc r1.w, r3.x, r1.w, r0.w
movc r3.x, r3.x, r3.y, r0.z
mul r3.x, r3.x, cb4[85].y
max r3.x, r3.x, l(-127.000000)
exp r3.y, -r3.x
add r3.y, -r3.y, l(1.000000)
div r3.y, r3.y, r3.x
mad r3.z, -r3.x, l(0.240226507), l(0.693147182)
lt r3.x, l(0.010000), |r3.x|
movc r3.x, r3.x, r3.y, r3.z
mul r2.x, r2.x, r3.x
mul r3.x, r1.w, r2.x
lt r3.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[87].zzwz
if_nz r3.y
  mad_sat r3.y, r0.w, cb4[91].x, cb4[91].y
  mul r4.xy, cb4[90].yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r4.x, r0.xyxx, r4.xyxx
  dp2 r4.y, r0.xyxx, cb4[90].xyxx
  mov r4.z, r0.z
  sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r4.xyzx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r4.xyz, r4.xyzx, t0.xyzw, s0, cb4[91].z
  add r0.xyz, r0.xyzx, -r4.xyzx
  mad r0.xyz, r3.yyyy, r0.xyzx, r4.xyzx
  mul r0.xyz, r0.xyzx, cb4[86].xyzx
else
  mov r0.xyz, cb4[86].xyzx
endif
ge r3.y, cb4[88].w, l(0.000000)
eq r3.w, cb4[87].z, l(0.000000)
and r3.y, r3.w, r3.y
dp3_sat r2.y, r2.yzwy, cb4[88].xyzx
log r2.y, r2.y
mul r2.y, r2.y, cb4[89].w
exp r2.y, r2.y
mul r2.yzw, r2.yyyy, cb4[89].xxyz
add r1.w, r1.w, -cb4[88].w
max r1.w, r1.w, l(0.000000)
mul r1.w, r1.w, r2.x
exp r1.w, -r1.w
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
mul r2.xyz, r1.wwww, r2.yzwy
and r2.xyz, r2.xyzx, r3.yyyy
exp r1.w, -r3.x
min r1.w, r1.w, l(1.000000)
max r2.w, r1.w, cb4[86].w
lt r0.w, cb4[87].w, r0.w
and r0.w, r0.w, r3.z
movc r2.xyzw, r0.wwww, l(0,0,0,1.000000), r2.xyzw
add r0.w, -r2.w, l(1.000000)
mad o4.xyz, r0.xyzx, r0.wwww, r2.xyzx
mov o0.w, l(0)
mov o4.w, r2.w
mov o6.xyz, r1.xyzx
mov o6.w, l(1.000000)
mov o5.xyz, r1.xyzx
mov o2.xy, v7.xyxx
mov o7.x, l(0)
ret
// Approximately 0 instruction slots used
