//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 24 00:27:29 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xy
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_temps 25
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.zxyz, v1.xyzx
mad r11.xyz, v1.zxyz, v0.xyzx, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v6.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.w, v2.xyxx, t10.yzwx, s4, cb1[133].x
mad r0.y, r7.w, l(0.195000008), l(0.005000)
add r4.w, -r0.y, l(1.000000)
add r4.w, r4.w, r4.w
sample_b_indexable(texture2d)(float,float,float,float) r8.y, v2.xyxx, t11.yxzw, s5, cb1[133].x
add r8.z, -r8.y, l(1.000000)
mad r4.w, -r4.w, r8.z, l(1.000000)
dp2 r8.y, r0.yyyy, r8.yyyy
ge r0.y, r0.y, l(0.500000)
movc_sat r0.y, r0.y, r4.w, r8.y
mad r0.y, r0.y, r0.w, r0.z
mov_sat r7.w, r7.w
mad r8.yzw, cb1[126].wwww, l(0.000000, 0.0347067565, 0.0479999930, 0.0328799933), cb1[126].xxyz
mad r9.xyz, cb1[127].wwww, l(0.146827012, 0.199999988, 0.139519989, 0.000000), cb1[127].xyzx
mul r0.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r10.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r0.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.zwzz, t9.xyzw, s3
mad r0.z, r12.w, l(0.00392156886), r11.w
add r0.z, r0.z, l(-0.00196078443)
mad r0.z, r0.z, cb5[18].w, cb5[20].w
mul r11.xyz, r11.xyzx, r11.xyzx
mad r11.xyz, r11.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.z, r0.z
add r0.z, r0.z, l(-0.0185813606)
mad r12.xyzw, r12.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r0.w, r12.xyzw, r6.xyzw
max r0.w, r0.w, l(0.000000)
mul r0.z, r0.w, r0.z
mul r11.xyz, r11.xyzx, r0.zzzz
mul r11.xyz, r11.xyzx, cb1[146].xyzx
dp3 r0.z, r11.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r10.xy, -r10.xyxx, v6.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r0.w, cb4[3].x
  mov r4.w, cb4[3].y
  mov r6.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.zw, cb4[1].xxxy
  mov r11.w, cb4[2].x
else
  mov r0.w, cb4[43].x
  mov r4.w, cb4[43].y
  mov r6.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.zw, cb4[41].xxxy
  mov r11.w, cb4[42].x
endif
mad r0.w, v6.w, r0.w, r4.w
log r0.w, r0.w
mul r0.w, r6.w, r0.w
max r0.w, r0.w, l(0.000000)
ftou r0.w, r0.w
iadd r4.w, r9.w, l(-1)
umin r0.w, r0.w, r4.w
ushr r10.xy, r10.xyxx, r11.wwww
imad r0.w, r0.w, r10.w, r10.y
imad r0.w, r0.w, r10.z, r10.x
if_z r0.x
  mov r4.w, cb4[0].z
  mov r6.w, cb4[6].x
  mov r9.w, cb4[6].z
  mov r10.x, cb4[6].w
  mov r10.yzw, cb4[5].xxyz
  mov r12.xyz, cb4[4].xyzx
else
  mov r4.w, cb4[40].z
  mov r6.w, cb4[46].x
  mov r9.w, cb4[46].z
  mov r10.x, cb4[46].w
  mov r10.yzw, cb4[45].xxyz
  mov r12.xyz, cb4[44].xyzx
endif
if_nz r4.w
  and r4.w, r6.w, l(255)
  movc r4.w, r4.w, l(1), l(0)
  if_nz cb4[7].x
    mov r11.w, cb4[7].x
    mov r12.w, l(0)
    loop
      uge r13.x, r12.w, cb4[7].x
      breakc_nz r13.x
      dp4 r13.x, cb4[8].xyzw, icb[r12.w + 0].xyzw
      lt r13.x, v6.w, r13.x
      if_nz r13.x
        mov r11.w, r12.w
        break
      endif
      iadd r12.w, r12.w, l(1)
    endloop
    ult r12.w, r11.w, cb4[7].x
    if_nz r12.w
      ishl r12.w, r11.w, l(2)
      mul r13.xyzw, r5.yyyy, cb4[r12.w + 10].xyzw
      mad r13.xyzw, r5.xxxx, cb4[r12.w + 9].xyzw, r13.xyzw
      mad r13.xyzw, r5.zzzz, cb4[r12.w + 11].xyzw, r13.xyzw
      add r13.xyzw, r13.xyzw, cb4[r12.w + 12].xyzw
      div r14.xyzw, r13.xyxy, r13.wwww
      ge r13.xy, r14.zwzz, cb4[r11.w + 25].xyxx
      ge r15.xy, cb4[r11.w + 25].zwzz, r14.zwzz
      and r13.xy, r13.xyxx, r15.xyxx
      and r11.w, r13.y, r13.x
      if_nz r11.w
        mad r14.xyzw, r14.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r13.xy, r14.zwzz
        round_ni r14.xyzw, r14.xyzw
        add r15.xyzw, r14.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r15.xyzw, r15.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.x, r15.xyxx, t0.xyzw, s1, l(0.000000)
        add r14.xyzw, r14.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r14.xyzw, r14.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.y, r14.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.z, r14.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.w, r15.zwzz, t0.yzwx, s1, l(0.000000)
        add r14.xyzw, -r13.zzzz, r16.xyzw
        mad_sat r14.xyzw, r14.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r13.zw, -r14.wwwx, r14.zzzy
        mad r13.xz, r13.xxxx, r13.zzwz, r14.wwxw
        add r11.w, -r13.x, r13.z
        mad r11.w, r13.y, r11.w, r13.x
      else
        mov r11.w, l(1.000000)
      endif
    else
      mov r11.w, l(1.000000)
    endif
  else
    mov r11.w, l(1.000000)
  endif
  if_nz r4.w
    mad_sat r4.w, v6.w, r9.w, r10.x
    mul r4.w, r4.w, r4.w
    add r9.w, -r11.w, l(1.000000)
    mad r13.x, r4.w, r9.w, r11.w
    min r13.y, r13.x, l(1.000000)
  else
    mov r13.xy, l(1.000000,1.000000,0,0)
  endif
  add r4.w, r13.y, r13.x
  lt r4.w, l(0.000000), r4.w
  if_nz r4.w
    dp3 r4.w, r12.xyzx, r12.xyzx
    rsq r4.w, r4.w
    mul r12.xyz, r4.wwww, r12.xyzx
    dp3 r4.w, r6.zxyz, r12.xyzx
    mov_sat r9.w, r4.w
    max r10.x, r0.y, l(0.020000)
    dp3 r11.w, r6.zxyz, r4.xyzx
    dp3 r12.x, r4.xyzx, r12.xyzx
    mad r12.y, r12.x, l(2.000000), l(2.000000)
    rsq r12.y, r12.y
    add r4.w, r4.w, r11.w
    mul_sat r4.w, r12.y, r4.w
    mad_sat r12.x, r12.y, r12.x, r12.y
    add r11.w, |r11.w|, l(0.000010)
    min r11.w, r11.w, l(1.000000)
    mul r12.yzw, r8.yyzw, r9.wwww
    mul r13.y, r10.x, r10.x
    mul r13.z, r13.y, r13.y
    mad r13.w, r4.w, r13.z, -r4.w
    mad r4.w, r13.w, r4.w, l(1.000000)
    mul r4.w, r4.w, r4.w
    mul r4.w, r4.w, l(3.14159274)
    div r4.w, r13.z, r4.w
    mad r10.x, -r10.x, r10.x, l(1.000000)
    mad r13.z, r11.w, r10.x, r13.y
    mad r10.x, r9.w, r10.x, r13.y
    mul r10.x, r10.x, r11.w
    mad r10.x, r9.w, r13.z, r10.x
    rcp r10.x, r10.x
    mul r4.w, r4.w, r10.x
    add r10.x, -r12.x, l(1.000000)
    mul r11.w, r10.x, r10.x
    mul r11.w, r11.w, r11.w
    mul r12.x, r10.x, r11.w
    mul_sat r13.y, r9.y, l(50.000000)
    mad r10.x, -r11.w, r10.x, l(1.000000)
    mul r14.xyz, r9.xyzx, r10.xxxx
    mad r13.yzw, r13.yyyy, r12.xxxx, r14.xxyz
    mul r4.w, r4.w, l(0.500000)
    mul r13.yzw, r13.yyzw, r4.wwww
    mul r13.yzw, r9.wwww, r13.yyzw
    mad r12.xyz, r12.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r13.yzwy
    mul r10.xyz, r10.yzwy, r13.xxxx
    mul r10.xyz, r10.xyzx, r12.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r4.w, r6.w, l(8)
  and r4.w, r4.w, cb2[16].w
  movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)
  mov r4.w, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
  mov r4.w, l(0)
endif
if_z r0.x
  ishl r6.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t2.yzwx
  umin r6.w, r6.w, cb4[0].x
  bfi r9.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t2.yzwx
else
  ishl r10.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t5.yzwx
  umin r6.w, r10.w, cb4[40].x
  bfi r0.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r0.wwww, t5.yzwx
endif
movc r0.w, r0.x, cb4[40].x, cb4[0].x
umin r0.w, r0.w, r6.w
dp3 r6.w, -r4.yzxy, r6.xyzx
add r6.w, r6.w, r6.w
mad r12.xyz, r6.zxyz, -r6.wwww, -r4.xyzx
max r6.w, r0.y, l(0.020000)
mul r10.w, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
dp3 r11.w, r6.zxyz, r4.xyzx
add r12.w, r11.w, r11.w
mad r13.x, r12.w, r11.w, l(-1.000000)
add r13.y, |r11.w|, l(0.000010)
min r13.y, r13.y, l(1.000000)
mul r14.xyz, r8.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r13.z, r10.w, r10.w
mul r15.xyzw, r9.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r15.x, r15.x
mov r16.y, l(1.000000)
mov r17.xyz, r10.xyzx
mov r13.w, l(0)
loop
  uge r14.w, r13.w, r0.w
  breakc_nz r14.w
  iadd r14.w, r9.w, r13.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.z, r14.wwww, t3.yzxw
    imul null, r16.w, r16.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.wwww, t1.xyzw
    imad r19.xyzw, r16.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r19.zzzz, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r19.wwww, t1.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r14.w, r14.wwww, t6.yzwx
    imul null, r16.z, r14.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.zzzz, t4.xyzw
    imad r23.xyzw, r14.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r23.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r23.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r23.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r23.wwww, t4.wxyz
  endif
  eq r14.w, r20.w, l(0.000000)
  lt r16.z, l(-2.000000), r22.x
  add r18.xyz, -r5.xyzx, r18.xyzx
  dp3 r16.w, r18.xyzx, r18.xyzx
  rsq r17.w, r16.w
  mul r23.xyz, r17.wwww, r18.xyzx
  mul r17.w, r18.w, r18.w
  mul r16.w, r16.w, r17.w
  mad r16.w, -r16.w, r16.w, l(1.000000)
  max r16.w, r16.w, l(0.000000)
  mul r16.w, r16.w, r16.w
  mul r24.xyz, r18.wwww, r18.xyzx
  dp3 r17.w, r24.xyzx, r24.xyzx
  min r17.w, r17.w, l(1.000000)
  add r17.w, -r17.w, l(1.000000)
  log r17.w, r17.w
  mul r17.w, r17.w, r20.w
  exp r17.w, r17.w
  movc r16.w, r14.w, r16.w, r17.w
  dp3 r17.w, r23.xyzx, r21.yzwy
  add r17.w, -r22.x, r17.w
  mul_sat r17.w, r22.y, r17.w
  mul r17.w, r17.w, r17.w
  mul r17.w, r16.w, r17.w
  movc r16.z, r16.z, r17.w, r16.w
  lt r16.w, l(0.000000), r16.z
  if_nz r16.w
    and r16.w, r21.x, l(255)
    movc r16.w, r16.w, l(1), l(0)
    if_nz r16.w
      and r23.xyzw, r21.xxxx, l(1, 2, 4, 8)
      movc r23.xyzw, r23.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r16.w, r21.x, l(4)
      ubfe r17.w, l(1), l(4), r21.x
      movc r24.x, r17.w, l(1.000000), l(0)
      and r21.yzw, r16.wwww, l(0, 2, 4, 8)
      movc r24.yzw, r21.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r16.w, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r17.w, r23.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      mad r18.w, r4.w, r23.x, l(-1.000000)
      mad r17.w, r17.w, r18.w, l(1.000000)
      mul r21.yz, r16.wwww, r17.wwww
    else
      mov r21.yz, l(0,1.000000,1.000000,0)
    endif
    add r16.w, r21.z, r21.y
    lt r16.w, l(0.000000), r16.w
    if_nz r16.w
      f16tof32 r16.w, r22.w
      mul r17.w, r16.w, l(0.500000)
      mad r22.xyw, -r17.wwww, r19.yzyw, r18.xyxz
      mad r18.xyz, r17.wwww, r19.yzwy, r18.xyzx
      lt r17.w, l(0.000000), r16.w
      if_nz r17.w
        dp3 r18.w, r22.xywx, r22.xywx
        dp3 r19.y, r18.xyzx, r18.xyzx
        rsq r18.w, r18.w
        rsq r19.y, r19.y
        mul r19.z, r18.w, r19.y
        dp3 r19.w, r22.xywx, r18.xyzx
        mul r19.w, r19.z, r19.w
        mad r20.w, r19.w, l(0.500000), r19.z
        add r20.w, r20.w, l(0.500000)
        div r23.y, r19.z, r20.w
        dp3 r19.z, r6.zxyz, r22.xywx
        dp3 r20.w, r6.zxyz, r18.xyzx
        mul r19.y, r19.y, r20.w
        mad r18.w, r19.z, r18.w, r19.y
        mul r23.x, r18.w, l(0.500000)
      else
        dp3 r18.w, r22.xywx, r22.xywx
        add r19.y, r18.w, l(1.000000)
        rcp r23.y, r19.y
        rsq r18.w, r18.w
        mul r24.xyz, r18.wwww, r22.xywx
        dp3 r23.x, r6.zxyz, r24.xyzx
        mov r19.w, l(1.000000)
      endif
      lt r18.w, l(0.000000), r22.z
      mul r19.y, r22.z, r22.z
      mul_sat r19.y, r23.y, r19.y
      sqrt r19.y, r19.y
      lt r19.z, r23.x, r19.y
      max r20.w, -r19.y, r23.x
      add r20.w, r19.y, r20.w
      mul r20.w, r20.w, r20.w
      mul r19.y, r19.y, l(4.000000)
      div r19.y, r20.w, r19.y
      movc r19.y, r19.z, r19.y, r23.x
      movc_sat r18.w, r18.w, r19.y, r23.x
      movc r14.w, r14.w, r23.y, l(1.000000)
      add r18.xyz, -r22.xywx, r18.xyzx
      dp3 r19.y, r12.xyzx, r18.xyzx
      mad r23.xyz, r19.yyyy, r12.xyzx, -r18.xyzx
      dp3 r19.z, r22.xywx, r23.xyzx
      mul r19.y, r19.y, r19.y
      mad r16.w, r16.w, r16.w, -r19.y
      div_sat r16.w, r19.z, r16.w
      mad r18.xyz, r16.wwww, r18.xyzx, r22.xywx
      movc r18.xyz, r17.wwww, r18.xyzx, r22.xywx
      dp3 r16.w, r18.xyzx, r18.xyzx
      rsq r16.w, r16.w
      mul r18.xyz, r16.wwww, r18.xyzx
      mul r17.w, r16.w, r22.z
      mul_sat r17.w, r6.w, r17.w
      mul_sat r16.w, r16.w, r19.x
      dp3 r19.x, r6.zxyz, r18.xyzx
      dp3 r18.x, r4.xyzx, r18.xyzx
      mad r18.y, r18.x, l(2.000000), l(2.000000)
      rsq r18.y, r18.y
      add r18.z, r11.w, r19.x
      mul_sat r18.z, r18.y, r18.z
      mad_sat r18.y, r18.y, r18.x, r18.y
      lt r19.y, l(0.000000), r17.w
      if_nz r19.y
        mad r19.z, -r17.w, r17.w, l(1.000000)
        sqrt r19.z, r19.z
        dp2 r20.w, r11.wwww, r19.xxxx
        add r21.z, -r18.x, r20.w
        ge r21.w, r21.z, r19.z
        if_nz r21.w
          mov r18.z, l(1.000000)
          mov r18.y, |r11.w|
        else
          mad r21.w, -r21.z, r21.z, l(1.000000)
          rsq r21.w, r21.w
          mul r21.w, r17.w, r21.w
          mad r22.x, -r21.z, r19.x, r11.w
          mul r22.y, r21.w, r22.x
          mad r21.z, -r21.z, r18.x, r13.x
          mul r21.z, r21.z, r21.w
          mul r22.z, r19.x, r19.x
          mad r22.z, -r11.w, r11.w, -r22.z
          add r22.z, r22.z, l(1.000000)
          mad r22.z, -r18.x, r18.x, r22.z
          mad_sat r20.w, r20.w, r18.x, r22.z
          sqrt r20.w, r20.w
          mul r20.w, r20.w, r21.w
          mul r22.z, r11.w, r20.w
          add r22.w, r22.z, r22.z
          mad r23.x, r19.x, r19.z, r11.w
          mad r21.w, r21.w, r22.x, r23.x
          mad r22.x, r18.x, r19.z, r21.z
          add r22.x, r22.x, l(1.000000)
          mul r23.y, r20.w, r22.x
          mul r23.z, r21.w, r22.x
          mul r23.w, r21.w, r22.w
          mul r22.z, r22.z, r21.w
          mul r22.z, r22.z, l(0.500000)
          mad r22.z, r23.y, l(-0.500000), r22.z
          mad r24.x, -r23.y, l(2.000000), r23.w
          mul r23.w, r23.w, r24.x
          mad r23.y, r23.y, r23.y, r23.w
          mul r23.w, r22.x, r22.x
          mad r22.x, r18.x, r19.z, r22.x
          mad r22.x, r22.x, l(-0.500000), l(-0.500000)
          mul r22.xz, r22.xxzx, r23.zzzz
          mad r22.x, r23.x, r23.w, r22.x
          mad r21.w, r21.w, r22.x, r23.y
          add r22.x, r22.z, r22.z
          mul r23.x, r22.z, r22.z
          mad r23.x, r21.w, r21.w, r23.x
          div r22.x, r22.x, r23.x
          mul r21.w, r21.w, r22.x
          mad r22.x, -r22.x, r22.z, l(1.000000)
          mul r20.w, r20.w, r21.w
          mad r20.w, r22.x, r22.y, r20.w
          mul r21.w, r22.w, r21.w
          mad r21.z, r22.x, r21.z, r21.w
          mad r19.x, r19.x, r19.z, r20.w
          mad r18.x, r18.x, r19.z, r21.z
          mad r19.z, r18.x, l(2.000000), l(2.000000)
          rsq r19.z, r19.z
          add r19.x, r11.w, r19.x
          mul_sat r18.z, r19.z, r19.x
          mad_sat r18.y, r19.z, r18.x, r19.z
        endif
      endif
      mul r14.w, r18.w, r14.w
      lt r18.x, l(0.000000), r16.w
      mul r16.w, r16.w, r16.w
      mad r19.x, r18.y, l(3.600000), l(0.400000)
      div r16.w, r16.w, r19.x
      mad r16.w, r10.w, r10.w, r16.w
      min r16.w, r16.w, l(1.000000)
      movc r16.x, r18.x, r16.w, r13.z
      mul r16.w, r17.w, l(0.250000)
      ishr r18.x, r16.x, l(1)
      iadd r18.x, r18.x, l(0x1fbd1df5)
      mad r17.w, r18.x, l(3.000000), r17.w
      mul r16.w, r16.w, r17.w
      add r17.w, r18.y, l(0.001000)
      div r16.w, r16.w, r17.w
      add r22.x, r16.w, r16.x
      div r22.y, r16.x, r22.x
      movc r19.xy, r19.yyyy, r22.xyxx, r16.xyxx
      lt r16.w, r19.w, l(1.000000)
      add r18.x, -r19.w, l(1.000100)
      add r19.z, r19.w, l(1.000000)
      div r18.x, r18.x, r19.z
      sqrt r18.x, r18.x
      mul r19.z, r18.x, l(0.250000)
      ishr r19.w, r19.x, l(1)
      iadd r19.w, r19.w, l(0x1fbd1df5)
      mad r18.x, r19.w, l(3.000000), r18.x
      mul r18.x, r18.x, r19.z
      div r17.w, r18.x, r17.w
      add r17.w, r17.w, r19.x
      div r17.w, r19.x, r17.w
      sqrt r17.w, r17.w
      mul r17.w, r17.w, r19.y
      movc r16.w, r16.w, r17.w, r19.y
      mad r17.w, r18.z, r16.x, -r18.z
      mad r17.w, r17.w, r18.z, l(1.000000)
      mul r17.w, r17.w, r17.w
      mul r17.w, r17.w, l(3.14159274)
      div r17.w, r16.x, r17.w
      mul r16.w, r16.w, r17.w
      sqrt r16.x, r16.x
      add r17.w, -r16.x, l(1.000000)
      mad r18.x, r13.y, r17.w, r16.x
      mad r16.x, r18.w, r17.w, r16.x
      mul r16.x, r13.y, r16.x
      mad r16.x, r18.w, r18.x, r16.x
      rcp r16.x, r16.x
      mul r16.x, r16.x, r16.w
      add r16.w, -r18.y, l(1.000000)
      mul r17.w, r16.w, r16.w
      mul r17.w, r17.w, r17.w
      mul r18.x, r16.w, r17.w
      mad r16.w, -r17.w, r16.w, l(1.000000)
      mul r18.yzw, r9.xxyz, r16.wwww
      mad r18.xyz, r15.xxxx, r18.xxxx, r18.yzwy
      mul r16.x, r16.x, l(0.500000)
      mul r18.xyz, r18.xyzx, r16.xxxx
      mul r18.xyz, r14.wwww, r18.xyzx
      mad r18.xyz, r14.wwww, r14.xyzx, r18.xyzx
      mul r16.xzw, r16.zzzz, r20.xxyz
      mul r16.xzw, r21.yyyy, r16.xxzw
      mul r16.xzw, r16.xxzw, r18.xxyz
    else
      mov r16.xzw, l(0,0,0,0)
    endif
  else
    mov r16.xzw, l(0,0,0,0)
  endif
  ushr r14.w, r21.x, l(8)
  and r14.w, r14.w, cb2[16].w
  add r16.xzw, r16.xxzw, r17.xxyz
  movc r17.xyz, r14.wwww, r16.xzwx, r17.xyzx
  iadd r13.w, r13.w, l(1)
endloop
mad r4.xyz, r12.wwww, r6.zxyz, -r4.xyzx
mov_sat r11.w, r11.w
log r0.x, r0.y
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r0.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t7.xyzw, s2, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r0.w, r0.y, cb1[165].x, cb1[165].y
mad r4.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.z, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r0.xzw, r15.yyzw, r0.zzzz, -r4.xxyz
mad r0.xzw, r8.xxxx, r0.xxzw, r4.xxyz
mad r4.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r4.x, r4.x
mul r6.x, r11.w, l(-9.280000)
exp r6.x, r6.x
min r0.y, r0.y, r6.x
mad r0.y, r0.y, r4.x, r4.y
mad r4.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r4.zwzz
mul r0.y, r15.x, r4.y
mad r4.xyz, r9.xyzx, r4.xxxx, r0.yyyy
mul r0.xyz, r0.xzwx, r4.xyzx
mad r4.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r17.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r9.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r7.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r7.xyzw, r0.wwww, r3.yzwx, r7.xyzw
  mov o0.w, r7.w
else
  mov o0.w, r7.w
endif
mad r0.xyz, r11.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r7.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
