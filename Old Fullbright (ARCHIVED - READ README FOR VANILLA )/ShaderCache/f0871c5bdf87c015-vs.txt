//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:46:48 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// SV_VertexID              0   x           1   VERTID    uint   x
// SV_InstanceID            0   x           2   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// VS_To_DS_Position        0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 7   xyz         5     NONE   float   xyz
// SV_ClipDistance          1   x           6  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[166], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[63], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_input v0.xyz
dcl_input_sgv v1.x, vertex_id
dcl_input_sgv v2.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output_siv o6.x, clip_distance
dcl_temps 7
if_nz cb0[7].z
  mov r0.x, cb1[165].w
else
  and r0.x, v2.x, l(1)
endif
if_z r0.x
  mov r0.yzw, cb1[62].xxyz
else
  mov r0.yzw, cb3[62].xxyz
endif
iadd r1.x, v1.x, cb0[7].y
ishl r1.y, r1.x, l(1)
ld_indexable(buffer)(float,float,float,float) r1.yzw, r1.yyyy, t1.wxyz
bfi r2.x, l(31), l(1), r1.x, l(1)
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.xxxx, t1.xyzw
mul r3.xyz, r1.yzwy, r2.yzxy
mad r1.yzw, r2.xxyz, r1.zzwy, -r3.xxyz
mul r1.yzw, r2.wwww, r1.yyzw
mul r3.xyz, r2.yzxy, r1.yzwy
mad r1.yzw, r1.wwyz, r2.zzxy, -r3.xxyz
mul r1.yzw, r2.wwww, r1.yyzw
mul r3.xyz, cb2[0].xyzx, cb2[4].xxxx
mul r4.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r5.xyz, cb2[2].xyzx, cb2[4].zzzz
mul r6.xyz, r1.zzzz, r4.xyzx
mad r6.xyz, r1.yyyy, r3.xyzx, r6.xyzx
mad o0.xyz, r1.wwww, r5.xyzx, r6.xyzx
mul r1.yzw, r2.yyyy, r4.xxyz
mad r1.yzw, r2.xxxx, r3.xxyz, r1.yyzw
mad o1.xyz, r2.zzzz, r5.xyzx, r1.yzwy
mul o1.w, r2.w, cb2[4].w
mul r1.yzw, v0.yyyy, cb2[1].xxyz
mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
add r0.yzw, r0.yyzw, cb2[3].xxyz
add r0.yzw, r0.yyzw, r1.yyzw
imul null, r1.x, r1.x, cb4[0].y
ld_indexable(buffer)(float,float,float,float) r1.xy, r1.xxxx, t0.xyzw
movc r1.z, cb0[0].x, l(-0.000000), l(0)
or o3.x, r0.x, r1.z
mov o0.w, l(0)
mov o2.xy, r1.xyxx
mov o2.zw, l(0,0,0,0)
mov o4.xyz, r0.yzwy
mov o4.w, l(1.000000)
mov o5.xyz, r0.yzwy
mov o6.x, l(0)
ret
// Approximately 0 instruction slots used
