//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:46:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[45], dynamicIndexed
dcl_constantbuffer cb2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 13
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v0.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v0.xyxx, t2.xywz, s2
mad r2.xyz, r2.xyzx, cb2[3].xywx, cb2[4].xywx
mov r3.xyz, cb2[8].xyzx
mov r4.xyz, r1.xyzx
mov r5.xyz, r0.xyzx
mov r2.w, r0.w
mov r3.w, l(0)
loop
  ige r4.w, r3.w, cb0[3].w
  breakc_nz r4.w
  mad r2.w, cb0[3].z, r1.w, r2.w
  mad r6.xy, cb2[0].zwzz, r2.wwww, cb2[0].xyxx
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xywz, s3
  mad r6.xyz, r6.xyzx, cb2[1].xywx, cb2[2].xywx
  mul r6.xyz, r2.xyzx, r6.xyzx
  mov r7.xyz, l(0,0,0,0)
  mov r8.xyz, l(0,0,0,0)
  mov r4.w, l(0)
  mov r5.w, l(0)
  mov r6.w, l(0)
  loop
    ige r7.w, r6.w, cb1[0].x
    breakc_nz r7.w
    mul r7.w, r6.y, cb1[r6.w + 33].x
    ishl r8.w, r6.w, l(2)
    mul r9.xyz, r5.yyyy, cb1[r8.w + 2].xyzx
    mad r9.xyz, r5.xxxx, cb1[r8.w + 1].xyzx, r9.xyzx
    mad r9.xyz, r5.zzzz, cb1[r8.w + 3].xyzx, r9.xyzx
    add r9.xyz, r9.xyzx, cb1[r8.w + 4].xyzx
    mul r10.xyz, r9.xyzx, cb1[r6.w + 41].xyzx
    round_ni r10.xyz, r10.xyzx
    add r9.xyz, r9.xyzx, -r10.xyzx
    mul_sat r10.xyz, r9.xyzx, cb1[r6.w + 37].xyzx
    add r11.xyz, -r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul_sat r11.xyz, r11.xyzx, cb1[r6.w + 37].xyzx
    mul r10.xyz, r10.xyzx, r11.xyzx
    min r9.w, r10.z, r10.y
    min r9.w, r9.w, r10.x
    mov_sat r9.xyz, r9.xyzx
    ieq r10.x, r6.w, l(0)
    if_z r6.w
      sample_indexable(texture3d)(float,float,float,float) r10.yzw, r9.xyzx, t4.wxyz, s4
    endif
    if_z r10.x
      ieq r10.x, r6.w, l(1)
      if_nz r10.x
        sample_indexable(texture3d)(float,float,float,float) r10.yzw, r9.xyzx, t5.wxyz, s5
      endif
      if_z r10.x
        ieq r10.x, r6.w, l(2)
        if_nz r10.x
          sample_indexable(texture3d)(float,float,float,float) r10.yzw, r9.xyzx, t6.wxyz, s6
        endif
        if_z r10.x
          sample_indexable(texture3d)(float,float,float,float) r10.yzw, r9.xyzx, t7.wxyz, s7
        endif
      endif
    endif
    mul r9.xyz, r10.zzzz, cb1[r8.w + 18].xyzx
    mad r9.xyz, r10.yyyy, cb1[r8.w + 17].xyzx, r9.xyzx
    mad r9.xyz, r10.wwww, cb1[r8.w + 19].xyzx, r9.xyzx
    mul r10.xyz, r9.wwww, r9.xyzx
    mad r7.xyz, r10.xyzx, r7.wwww, r7.xyzx
    mul r9.xyz, r7.wwww, r9.xyzx
    mul r9.xyz, r9.wwww, r9.xyzx
    mad r8.xyz, r9.xyzx, cb1[r6.w + 33].yyyy, r8.xyzx
    mul r7.w, r9.w, cb1[r6.w + 33].y
    mad r4.w, r9.w, cb1[r6.w + 33].y, r4.w
    max r5.w, r5.w, r7.w
    iadd r6.w, r6.w, l(1)
  endloop
  add r6.y, r4.w, l(0.001000)
  div r9.xyz, r8.xyzx, r6.yyyy
  add r10.xyz, r3.xyzx, r7.xyzx
  add r9.xyz, -r4.xyzx, r9.xyzx
  mad r9.xyz, r5.wwww, r9.xyzx, r4.xyzx
  mad r6.xyw, -r6.xxxx, r9.xyxz, r10.xyxz
  add r10.xyz, -r5.xyzx, cb0[1].xyzx
  add r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000100, 0.000000)
  dp3 r7.w, r10.xyzx, r10.xyzx
  max r8.w, r7.w, cb0[1].w
  div r8.w, cb0[2].w, r8.w
  rsq r7.w, r7.w
  mul r10.xyz, r7.wwww, r10.xyzx
  mad r3.xyz, r8.wwww, r10.xyzx, r6.xywx
  mul r6.xyw, r3.xyxz, cb0[3].zzzz
  mad r6.xyw, r6.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), r9.xyxz
  mad r6.xyw, cb0[3].zzzz, r6.xyxw, r5.xyxz
  mad r4.xyz, r3.xyzx, cb0[3].zzzz, r9.xyzx
  mad r9.xyz, cb2[10].xyzx, r6.zzzz, cb2[9].xyzx
  mad r10.xyz, cb2[12].yzxy, r6.zzzz, cb2[11].yzxy
  mad r11.xyz, cb2[14].xyzx, r6.zzzz, cb2[13].xyzx
  mad r11.xyz, r10.zxyz, r2.wwww, r11.xyzx
  sincos r11.xyz, r12.xyz, r11.xyzx
  mul r11.xyz, r10.xyzx, r11.yzxy
  mad r10.xyz, r10.yzxy, r12.zxyz, -r11.xyzx
  mul r9.xyz, r9.xyzx, r10.xyzx
  mad r5.xyz, r9.xyzx, cb0[3].zzzz, r6.xywx
  iadd r3.w, r3.w, l(1)
endloop
mov o1.xyz, r4.xyzx
mov o0.w, r2.w
add o0.xyz, r5.xyzx, cb0[2].xyzx
mov o1.w, r1.w
ret
// Approximately 0 instruction slots used
