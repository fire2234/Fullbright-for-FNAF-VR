//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 30 06:49:58 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xy
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_constantbuffer cb2[153], immediateIndexed
dcl_constantbuffer cb3[96], immediateIndexed
dcl_constantbuffer cb4[22], immediateIndexed
dcl_constantbuffer cb5[2728], dynamicIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xy
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_temps 26
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb0[4].x
  mov r1.y, cb0[5].x
  mov r1.z, cb0[6].x
  mov r1.w, cb0[7].x
  mov r2.x, cb0[4].y
  mov r2.y, cb0[5].y
  mov r2.z, cb0[6].y
  mov r2.w, cb0[7].y
  mov r3.x, cb0[4].w
  mov r3.y, cb0[5].w
  mov r3.z, cb0[6].w
  mov r3.w, cb0[7].w
  mov r4.x, cb0[40].x
  mov r4.y, cb0[41].x
  mov r4.z, cb0[42].x
  mov r4.w, cb0[43].x
  mov r5.x, cb0[40].y
  mov r5.y, cb0[41].y
  mov r5.z, cb0[42].y
  mov r5.w, cb0[43].y
  mov r6.x, cb0[40].z
  mov r6.y, cb0[41].z
  mov r6.z, cb0[42].z
  mov r6.w, cb0[43].z
  mov r7.x, cb0[40].w
  mov r7.y, cb0[41].w
  mov r7.z, cb0[42].w
  mov r7.w, cb0[43].w
  mov r0.y, cb0[128].w
  mov r0.zw, cb0[129].xxxy
  mov r8.x, cb0[152].w
  mov r8.yzw, cb0[62].xxyz
  mov r9.xyz, cb0[128].xyzx
  mov r10.xyzw, cb0[58].xyzw
  mov r11.xy, cb0[121].xyxx
  mov r11.zw, cb0[122].zzzw
else
  mov r1.x, cb2[4].x
  mov r1.y, cb2[5].x
  mov r1.z, cb2[6].x
  mov r1.w, cb2[7].x
  mov r2.x, cb2[4].y
  mov r2.y, cb2[5].y
  mov r2.z, cb2[6].y
  mov r2.w, cb2[7].y
  mov r3.x, cb2[4].w
  mov r3.y, cb2[5].w
  mov r3.z, cb2[6].w
  mov r3.w, cb2[7].w
  mov r4.x, cb2[40].x
  mov r4.y, cb2[41].x
  mov r4.z, cb2[42].x
  mov r4.w, cb2[43].x
  mov r5.x, cb2[40].y
  mov r5.y, cb2[41].y
  mov r5.z, cb2[42].y
  mov r5.w, cb2[43].y
  mov r6.x, cb2[40].z
  mov r6.y, cb2[41].z
  mov r6.z, cb2[42].z
  mov r6.w, cb2[43].z
  mov r7.x, cb2[40].w
  mov r7.y, cb2[41].w
  mov r7.z, cb2[42].w
  mov r7.w, cb2[43].w
  mov r0.y, cb2[128].w
  mov r0.zw, cb2[129].xxxy
  mov r8.x, cb2[152].w
  mov r8.yzw, cb2[62].xxyz
  mov r9.xyz, cb2[128].xyzx
  mov r10.xyzw, cb2[58].xyzw
  mov r11.xy, cb2[121].xyxx
  mov r11.zw, cb2[122].zzzw
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v6.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v6.wwww
mov r13.z, v6.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v6.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t15.xyzw, s4, cb0[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t16.xyzw, s5, cb0[133].x
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, v2.xyxx, t17.wxzy, s6, cb0[133].x
mov_sat r7.xyz, r7.xyzx
mov_sat r8.yzw, r8.yyzw
mad r9.z, r8.w, r0.w, r0.z
lt r0.y, l(0.000000), cb1[12].x
lt r0.z, l(0.000000), cb0[163].w
and r0.y, r0.z, r0.y
div r0.zw, r13.xxxy, r13.wwww
mad r10.xy, r0.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r14.xyz, r14.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r14.xyz, r6.xyzx, r14.wwww, r14.xyzx
mad r16.z, r9.z, r15.w, r15.z
mad r16.x, r8.y, r15.w, r15.x
mad r16.y, r15.w, l(0.500000), r15.y
mad r12.xyz, r7.xyzx, r12.wwww, r12.xyzx
movc r6.xyz, r0.yyyy, r14.xyzx, r6.xyzx
movc r7.xyz, r0.yyyy, r12.xyzx, r7.xyzx
mov r9.x, r8.y
mov r9.y, l(0.500000)
movc r0.yzw, r0.yyyy, r16.xxyz, r9.xxyz
mul r4.w, r0.z, l(0.080000)
mad r9.xyz, -r0.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xyzx
mad r9.xyz, r0.yyyy, r9.xyzx, r4.wwww
mad r12.xyz, -r7.xyzx, r0.yyyy, r7.xyzx
mad r12.xyz, r12.xyzx, cb0[126].wwww, cb0[126].xyzx
mad r9.xyz, r9.xyzx, cb0[127].wwww, cb0[127].xyzx
mul r0.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r8.yw, v3.xxxy, l(0.000000, 1.000000, 0.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r0.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r8.ywyy, t14.xyzw, s3
mad r0.y, r15.w, l(0.00392156886), r14.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb4[18].w, cb4[20].w
mul r14.xyz, r14.xyzx, r14.xyzx
mad r14.xyz, r14.xyzx, cb4[18].xyzx, cb4[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r15.xyzw, r15.xyzw, cb4[19].xyzw, cb4[21].xyzw
mov r6.w, l(1.000000)
dp4 r0.z, r15.xyzw, r6.xyzw
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
mul r14.xyz, r14.xyzx, r0.yyyy
mul r14.xyz, r14.xyzx, cb0[146].xyzx
dp3 r0.y, r14.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.z, l(1), cb0[125].x
if_nz r0.z
  mul r8.yw, r10.xxxy, cb0[123].xxxy
  round_z r8.yw, r8.yyyw
  ftoi r15.xy, r8.ywyy
  mov r15.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r15.xyzz, t10.yzxw
  mad r4.w, r0.z, cb0[57].x, cb0[57].y
  mad r0.z, r0.z, cb0[57].z, -cb0[57].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r4.w
  mad r0.z, -r13.z, l(1.000000), r0.z
  div r0.z, |r0.z|, r13.w
  lt r0.z, l(0.010000), r0.z
  if_nz r0.z
    mov r16.y, -cb0[123].z
    mov r16.z, l(0)
    add r16.yz, r10.xxyx, r16.yyzy
    iadd r17.xyzw, r15.xxyy, l(1, -1, 1, -1)
    mov r15.w, r17.y
    ld_indexable(texture2d)(float,float,float,float) r0.z, r15.wyzz, t10.yzxw
    mad r4.w, r0.z, cb0[57].x, cb0[57].y
    mad r0.z, r0.z, cb0[57].z, -cb0[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r16.x, |r0.z|
    lt r0.z, r16.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r16.xyz, r0.zzzz, r16.xyzx, r10.zxyz
    mov r18.y, l(0)
    mov r18.z, cb0[123].w
    add r18.yz, r10.xxyx, r18.yyzy
    mov r19.xz, r15.xxzx
    mov r19.yw, r17.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.z, r19.xyzz, t10.yzxw
    mad r4.w, r0.z, cb0[57].x, cb0[57].y
    mad r0.z, r0.z, cb0[57].z, -cb0[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r18.x, |r0.z|
    lt r0.z, r18.x, r16.x
    movc r16.xyz, r0.zzzz, r18.xyzx, r16.xyzx
    mov r18.y, cb0[123].z
    mov r18.z, l(0)
    add r18.yz, r10.xxyx, r18.yyzy
    mov r17.yzw, r15.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.z, r17.xyzw, t10.yzxw
    mad r4.w, r0.z, cb0[57].x, cb0[57].y
    mad r0.z, r0.z, cb0[57].z, -cb0[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r18.x, |r0.z|
    lt r0.z, r18.x, r16.x
    movc r15.xyz, r0.zzzz, r18.xyzx, r16.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb0[123].w
    add r8.yw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r0.z, r19.xwzz, t10.yzxw
    mad r4.w, r0.z, cb0[57].x, cb0[57].y
    mad r0.z, r0.z, cb0[57].z, -cb0[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    lt r0.z, |r0.z|, r15.x
    movc r10.xy, r0.zzzz, r8.ywyy, r15.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r8.yw, l(0), t9.zxwy
utof r8.yw, r8.yyyw
mul r8.yw, r8.yyyw, r10.xxxy
round_z r8.yw, r8.yyyw
ftoi r15.xy, r8.ywyy
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r15.xyzw, t9.yzxw
mul r4.w, cb1[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb0[164].y, l(1.000000)
add r0.z, r0.z, l(-1.000000)
mad r0.z, r4.w, r0.z, l(1.000000)
mul r13.xyz, r0.zzzz, r14.xyzx
mul r0.y, r0.z, r0.y
mul r13.xyz, r12.xyzx, r13.xyzx
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r14.xyz, r8.zzzz, r14.xyzx, r15.xyzx
mad r7.xyz, r14.xyzx, r8.zzzz, r7.xyzx
mul r7.xyz, r8.zzzz, r7.xyzx
max r7.xyz, r7.xyzx, r8.zzzz
ftou r8.yw, r11.xxxy
if_z r0.x
  mov r4.w, cb3[3].x
  mov r6.w, cb3[3].y
  mov r7.w, cb3[3].z
  mov r9.w, cb3[1].z
  mov r10.zw, cb3[1].xxxy
  mov r11.x, cb3[2].x
else
  mov r4.w, cb3[43].x
  mov r6.w, cb3[43].y
  mov r7.w, cb3[43].z
  mov r9.w, cb3[41].z
  mov r10.zw, cb3[41].xxxy
  mov r11.x, cb3[42].x
endif
mad r4.w, v6.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r9.w, l(-1)
umin r4.w, r4.w, r6.w
ushr r8.yw, r8.yyyw, r11.xxxx
imad r4.w, r4.w, r10.w, r8.w
imad r4.w, r4.w, r10.z, r8.y
if_nz cb3[95].x
  mul r8.yw, r10.xxxy, cb0[123].xxxy
  round_z r8.yw, r8.yyyw
  ftoi r10.xy, r8.ywyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r6.w, cb3[0].z
  mov r7.w, cb3[6].x
  mov r8.yw, cb3[6].zzzw
  mov r11.xyz, cb3[5].xyzx
  mov r14.xyz, cb3[4].xyzx
else
  mov r6.w, cb3[40].z
  mov r7.w, cb3[46].x
  mov r8.yw, cb3[46].zzzw
  mov r11.xyz, cb3[45].xyzx
  mov r14.xyz, cb3[44].xyzx
endif
if_nz r6.w
  and r15.xyzw, r7.wwww, l(255, 1, 2, 4)
  movc r15.xyzw, r15.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r6.w, r7.w, l(8)
  movc r16.w, r6.w, l(1.000000), l(0)
  ushr r17.xy, r7.wwww, l(4, 8, 0, 0)
  ubfe r6.w, l(1), l(4), r7.w
  movc r18.x, r6.w, l(1.000000), l(0)
  and r17.xzw, r17.xxxx, l(2, 0, 4, 8)
  movc r18.yzw, r17.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r6.w, r18.xyzw, r10.xyzw
  lt r7.w, r8.w, l(0.000000)
  swapc r17.x, r18.x, r7.w, l(1.000000), r6.w
  if_nz r15.x
    mov r16.xyz, r15.yzwy
    dp4 r6.w, r16.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r6.w, -r6.w, l(1.000000)
    mad_sat r7.w, r13.w, r8.y, r8.w
    mul r7.w, r7.w, r7.w
    add r6.w, -r17.x, r6.w
    mad r6.w, r7.w, r6.w, r17.x
    min r7.w, r18.x, r6.w
    mul r15.x, r18.x, r6.w
    mul r15.y, r18.x, r7.w
  else
    mov r15.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r15.y, r15.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    dp3 r6.w, r14.xyzx, r14.xyzx
    rsq r6.w, r6.w
    mul r14.xyz, r6.wwww, r14.xyzx
    dp3 r6.w, r6.zxyz, r14.xyzx
    mov_sat r7.w, r6.w
    max r8.y, r0.w, l(0.020000)
    dp3 r8.w, r6.zxyz, r4.xyzx
    dp3 r9.w, r4.xyzx, r14.xyzx
    mad r11.w, r9.w, l(2.000000), l(2.000000)
    rsq r11.w, r11.w
    add r6.w, r6.w, r8.w
    mul_sat r6.w, r11.w, r6.w
    mad_sat r9.w, r11.w, r9.w, r11.w
    add r8.w, |r8.w|, l(0.000010)
    min r8.w, r8.w, l(1.000000)
    mul r14.xyz, r7.wwww, r12.xyzx
    mul r11.w, r8.y, r8.y
    mul r12.w, r11.w, r11.w
    mad r13.w, r6.w, r12.w, -r6.w
    mad r6.w, r13.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(3.14159274)
    div r6.w, r12.w, r6.w
    mad r8.y, -r8.y, r8.y, l(1.000000)
    mad r12.w, r8.w, r8.y, r11.w
    mad r8.y, r7.w, r8.y, r11.w
    mul r8.y, r8.y, r8.w
    mad r8.y, r7.w, r12.w, r8.y
    rcp r8.y, r8.y
    mul r6.w, r6.w, r8.y
    add r8.y, -r9.w, l(1.000000)
    mul r8.w, r8.y, r8.y
    mul r8.w, r8.w, r8.w
    mul r9.w, r8.y, r8.w
    mul_sat r11.w, r9.y, l(50.000000)
    mad r8.y, -r8.w, r8.y, l(1.000000)
    mul r15.yzw, r9.xxyz, r8.yyyy
    mad r15.yzw, r11.wwww, r9.wwww, r15.yyzw
    mul r6.w, r6.w, l(0.500000)
    mul r15.yzw, r15.yyzw, r6.wwww
    mul r15.yzw, r7.wwww, r15.yyzw
    mad r14.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r15.yzwy
    mul r11.xyz, r11.xyzx, r15.xxxx
    mul r11.xyz, r11.xyzx, r14.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r6.w, r17.y, cb1[16].w
  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t1.yzwx
  umin r6.w, r6.w, cb3[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
else
  ishl r8.y, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.y, r8.yyyy, t4.yxzw
  umin r6.w, r8.y, cb3[40].x
  bfi r8.y, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r8.yyyy, t4.yzwx
endif
movc r8.y, r0.x, cb3[40].x, cb3[0].x
umin r6.w, r6.w, r8.y
dp3 r8.y, -r4.yzxy, r6.xyzx
add r8.y, r8.y, r8.y
mad r14.xyz, r6.zxyz, -r8.yyyy, -r4.xyzx
max r8.y, r0.w, l(0.020000)
mul r8.w, r8.y, r8.y
mad r8.y, -r8.y, r8.y, l(1.000000)
dp3 r9.w, r6.zxyz, r4.xyzx
add r11.w, r9.w, r9.w
mad r12.w, r11.w, r9.w, l(-1.000000)
add r13.w, |r9.w|, l(0.000010)
min r13.w, r13.w, l(1.000000)
mul r15.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r14.w, r8.w, r8.w
mul r16.xyzw, r9.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r16.x, r16.x
mov r17.y, l(1.000000)
mov r18.xyz, r11.xyzx
mov r15.w, l(0)
loop
  uge r17.z, r15.w, r6.w
  breakc_nz r17.z
  iadd r17.z, r7.w, r15.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r17.w, r17.zzzz, t2.yzwx
    imul null, r18.w, r17.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.wwww, t0.xyzw
    imad r20.xyzw, r17.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r20.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r20.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r20.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r17.z, r17.zzzz, t5.yzxw
    imul null, r17.w, r17.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r17.wwww, t3.xyzw
    imad r24.xyzw, r17.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r24.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r24.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r24.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r24.wwww, t3.wxyz
  endif
  eq r17.z, r21.w, l(0.000000)
  lt r17.w, l(-2.000000), r23.x
  add r19.xyz, -r5.xyzx, r19.xyzx
  dp3 r18.w, r19.xyzx, r19.xyzx
  rsq r24.x, r18.w
  mul r24.xyz, r19.xyzx, r24.xxxx
  mul r24.w, r19.w, r19.w
  mul r18.w, r18.w, r24.w
  mad r18.w, -r18.w, r18.w, l(1.000000)
  max r18.w, r18.w, l(0.000000)
  mul r18.w, r18.w, r18.w
  mul r25.xyz, r19.wwww, r19.xyzx
  dp3 r19.w, r25.xyzx, r25.xyzx
  min r19.w, r19.w, l(1.000000)
  add r19.w, -r19.w, l(1.000000)
  log r19.w, r19.w
  mul r19.w, r19.w, r21.w
  exp r19.w, r19.w
  movc r18.w, r17.z, r18.w, r19.w
  dp3 r19.w, r24.xyzx, r22.yzwy
  add r19.w, -r23.x, r19.w
  mul_sat r19.w, r23.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r18.w, r19.w
  movc r17.w, r17.w, r19.w, r18.w
  lt r18.w, l(0.000000), r17.w
  if_nz r18.w
    and r18.w, r22.x, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r24.xyzw, r22.xxxx, l(1, 2, 4, 8)
      movc r24.xyzw, r24.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r22.x, l(4)
      ubfe r19.w, l(1), l(4), r22.x
      movc r25.x, r19.w, l(1.000000), l(0)
      and r22.yzw, r18.wwww, l(0, 2, 4, 8)
      movc r25.yzw, r22.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r25.xyzw, r10.xyzw
      dp4 r19.w, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r19.w, -r19.w, l(1.000000)
      mul r22.yz, r18.wwww, r19.wwww
    else
      mov r22.yz, l(0,1.000000,1.000000,0)
    endif
    add r18.w, r22.z, r22.y
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r23.w
      mul r19.w, r18.w, l(0.500000)
      mad r23.xyw, -r19.wwww, r20.yzyw, r19.xyxz
      mad r19.xyz, r19.wwww, r20.yzwy, r19.xyzx
      lt r19.w, l(0.000000), r18.w
      if_nz r19.w
        dp3 r20.y, r23.xywx, r23.xywx
        dp3 r20.z, r19.xyzx, r19.xyzx
        rsq r20.y, r20.y
        rsq r20.z, r20.z
        mul r20.w, r20.z, r20.y
        dp3 r21.w, r23.xywx, r19.xyzx
        mul r21.w, r20.w, r21.w
        mad r22.z, r21.w, l(0.500000), r20.w
        add r22.z, r22.z, l(0.500000)
        div r24.y, r20.w, r22.z
        dp3 r20.w, r6.zxyz, r23.xywx
        dp3 r22.z, r6.zxyz, r19.xyzx
        mul r20.z, r20.z, r22.z
        mad r20.y, r20.w, r20.y, r20.z
        mul r24.x, r20.y, l(0.500000)
      else
        dp3 r20.y, r23.xywx, r23.xywx
        add r20.z, r20.y, l(1.000000)
        rcp r24.y, r20.z
        rsq r20.y, r20.y
        mul r20.yzw, r20.yyyy, r23.xxyw
        dp3 r24.x, r6.zxyz, r20.yzwy
        mov r21.w, l(1.000000)
      endif
      lt r20.y, l(0.000000), r23.z
      mul r20.z, r23.z, r23.z
      mul_sat r20.z, r24.y, r20.z
      sqrt r20.z, r20.z
      lt r20.w, r24.x, r20.z
      max r22.z, -r20.z, r24.x
      add r22.z, r20.z, r22.z
      mul r22.z, r22.z, r22.z
      mul r20.z, r20.z, l(4.000000)
      div r20.z, r22.z, r20.z
      movc r20.z, r20.w, r20.z, r24.x
      movc_sat r20.y, r20.y, r20.z, r24.x
      movc r17.z, r17.z, r24.y, l(1.000000)
      add r19.xyz, -r23.xywx, r19.xyzx
      dp3 r20.z, r14.xyzx, r19.xyzx
      mad r24.xyz, r20.zzzz, r14.xyzx, -r19.xyzx
      dp3 r20.w, r23.xywx, r24.xyzx
      mul r20.z, r20.z, r20.z
      mad r18.w, r18.w, r18.w, -r20.z
      div_sat r18.w, r20.w, r18.w
      mad r19.xyz, r18.wwww, r19.xyzx, r23.xywx
      movc r19.xyz, r19.wwww, r19.xyzx, r23.xywx
      dp3 r18.w, r19.xyzx, r19.xyzx
      rsq r18.w, r18.w
      mul r19.xyz, r18.wwww, r19.xyzx
      mul r19.w, r18.w, r23.z
      mul_sat r19.w, r8.y, r19.w
      mul_sat r18.w, r18.w, r20.x
      dp3 r20.x, r6.zxyz, r19.xyzx
      dp3 r19.x, r4.xyzx, r19.xyzx
      mad r19.y, r19.x, l(2.000000), l(2.000000)
      rsq r19.y, r19.y
      add r19.z, r9.w, r20.x
      mul_sat r19.z, r19.y, r19.z
      mad_sat r19.y, r19.y, r19.x, r19.y
      lt r20.z, l(0.000000), r19.w
      if_nz r20.z
        mad r20.w, -r19.w, r19.w, l(1.000000)
        sqrt r20.w, r20.w
        dp2 r22.z, r9.wwww, r20.xxxx
        add r22.w, -r19.x, r22.z
        ge r23.x, r22.w, r20.w
        if_nz r23.x
          mov r19.z, l(1.000000)
          mov r19.y, |r9.w|
        else
          mad r23.x, -r22.w, r22.w, l(1.000000)
          rsq r23.x, r23.x
          mul r23.x, r19.w, r23.x
          mad r23.y, -r22.w, r20.x, r9.w
          mul r23.z, r23.y, r23.x
          mad r22.w, -r22.w, r19.x, r12.w
          mul r23.w, r20.x, r20.x
          mad r23.w, -r9.w, r9.w, -r23.w
          add r23.w, r23.w, l(1.000000)
          mad r23.w, -r19.x, r19.x, r23.w
          mad_sat r22.z, r22.z, r19.x, r23.w
          sqrt r22.z, r22.z
          mul r22.zw, r22.zzzw, r23.xxxx
          mul r23.w, r9.w, r22.z
          add r24.x, r23.w, r23.w
          mad r24.y, r20.x, r20.w, r9.w
          mad r23.x, r23.x, r23.y, r24.y
          mad r23.y, r19.x, r20.w, r22.w
          add r23.y, r23.y, l(1.000000)
          mul r24.z, r22.z, r23.y
          mul r24.w, r23.y, r23.x
          mul r25.x, r23.x, r24.x
          mul r23.w, r23.w, r23.x
          mul r23.w, r23.w, l(0.500000)
          mad r23.w, r24.z, l(-0.500000), r23.w
          mad r25.y, -r24.z, l(2.000000), r25.x
          mul r25.x, r25.y, r25.x
          mad r24.z, r24.z, r24.z, r25.x
          mul r25.x, r23.y, r23.y
          mad r23.y, r19.x, r20.w, r23.y
          mad r23.y, r23.y, l(-0.500000), l(-0.500000)
          mul r23.yw, r23.yyyw, r24.wwww
          mad r23.y, r24.y, r25.x, r23.y
          mad r23.x, r23.x, r23.y, r24.z
          add r23.y, r23.w, r23.w
          mul r24.y, r23.w, r23.w
          mad r24.y, r23.x, r23.x, r24.y
          div r23.y, r23.y, r24.y
          mul r23.x, r23.x, r23.y
          mad r23.y, -r23.y, r23.w, l(1.000000)
          mul r22.z, r22.z, r23.x
          mad r22.z, r23.y, r23.z, r22.z
          mul r23.x, r24.x, r23.x
          mad r22.w, r23.y, r22.w, r23.x
          mad r20.x, r20.x, r20.w, r22.z
          mad r19.x, r19.x, r20.w, r22.w
          mad r20.w, r19.x, l(2.000000), l(2.000000)
          rsq r20.w, r20.w
          add r20.x, r9.w, r20.x
          mul_sat r19.z, r20.w, r20.x
          mad_sat r19.y, r20.w, r19.x, r20.w
        endif
      endif
      mul r17.z, r20.y, r17.z
      lt r19.x, l(0.000000), r18.w
      mul r18.w, r18.w, r18.w
      mad r20.x, r19.y, l(3.600000), l(0.400000)
      div r18.w, r18.w, r20.x
      mad r18.w, r8.w, r8.w, r18.w
      min r18.w, r18.w, l(1.000000)
      movc r17.x, r19.x, r18.w, r14.w
      mul r18.w, r19.w, l(0.250000)
      ishr r19.x, r17.x, l(1)
      iadd r19.x, r19.x, l(0x1fbd1df5)
      mad r19.x, r19.x, l(3.000000), r19.w
      mul r18.w, r18.w, r19.x
      add r19.x, r19.y, l(0.001000)
      div r18.w, r18.w, r19.x
      add r23.x, r17.x, r18.w
      div r23.y, r17.x, r23.x
      movc r20.xz, r20.zzzz, r23.xxyx, r17.xxyx
      lt r18.w, r21.w, l(1.000000)
      add r19.w, -r21.w, l(1.000100)
      add r20.w, r21.w, l(1.000000)
      div r19.w, r19.w, r20.w
      sqrt r19.w, r19.w
      mul r20.w, r19.w, l(0.250000)
      ishr r21.w, r20.x, l(1)
      iadd r21.w, r21.w, l(0x1fbd1df5)
      mad r19.w, r21.w, l(3.000000), r19.w
      mul r19.w, r19.w, r20.w
      div r19.x, r19.w, r19.x
      add r19.x, r19.x, r20.x
      div r19.x, r20.x, r19.x
      sqrt r19.x, r19.x
      mul r19.x, r19.x, r20.z
      movc r18.w, r18.w, r19.x, r20.z
      mad r19.x, r19.z, r17.x, -r19.z
      mad r19.x, r19.x, r19.z, l(1.000000)
      mul r19.x, r19.x, r19.x
      mul r19.x, r19.x, l(3.14159274)
      div r19.x, r17.x, r19.x
      mul r18.w, r18.w, r19.x
      sqrt r17.x, r17.x
      add r19.x, -r17.x, l(1.000000)
      mad r19.z, r13.w, r19.x, r17.x
      mad r17.x, r20.y, r19.x, r17.x
      mul r17.x, r13.w, r17.x
      mad r17.x, r20.y, r19.z, r17.x
      rcp r17.x, r17.x
      mul r17.x, r17.x, r18.w
      add r18.w, -r19.y, l(1.000000)
      mul r19.x, r18.w, r18.w
      mul r19.x, r19.x, r19.x
      mul r19.y, r18.w, r19.x
      mad r18.w, -r19.x, r18.w, l(1.000000)
      mul r19.xzw, r9.xxyz, r18.wwww
      mad r19.xyz, r16.xxxx, r19.yyyy, r19.xzwx
      mul r17.x, r17.x, l(0.500000)
      mul r19.xyz, r19.xyzx, r17.xxxx
      mul r19.xyz, r17.zzzz, r19.xyzx
      mad r19.xyz, r17.zzzz, r15.xyzx, r19.xyzx
      mul r17.xzw, r17.wwww, r21.xxyz
      mul r17.xzw, r22.yyyy, r17.xxzw
      mul r17.xzw, r17.xxzw, r19.xxyz
    else
      mov r17.xzw, l(0,0,0,0)
    endif
  else
    mov r17.xzw, l(0,0,0,0)
  endif
  ushr r18.w, r22.x, l(8)
  and r18.w, r18.w, cb1[16].w
  add r17.xzw, r17.xxzw, r18.xxyz
  movc r18.xyz, r18.wwww, r17.xzwx, r18.xyzx
  iadd r15.w, r15.w, l(1)
endloop
mad r6.yzw, r11.wwww, r6.zzxy, -r4.xxyz
mov_sat r9.w, r9.w
if_z r0.x
  iadd r4.x, r4.w, cb3[0].w
  ishl r4.y, r4.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.y, r4.yyyy, t1.yxzw
  umin r4.y, r4.y, cb3[0].y
  bfi r4.x, l(31), l(1), r4.x, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.x, r4.xxxx, t1.xyzw
else
  iadd r4.z, r4.w, cb3[40].w
  ishl r4.w, r4.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t4.yzwx
  umin r4.y, r4.w, cb3[40].y
  bfi r4.z, l(31), l(1), r4.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.x, r4.zzzz, t4.xyzw
endif
log r4.z, r0.w
mad r4.z, -r4.z, l(1.200000), l(1.000000)
add r4.w, cb0[163].z, l(-1.000000)
add r4.z, -r4.z, r4.w
mov r6.x, l(0)
mov r10.xyz, l(0,0,0,0)
mov r4.w, l(1.000000)
mov r7.w, l(0)
mov r8.yw, l(0,1.000000,0,0)
loop
  uge r10.w, r8.w, r4.y
  breakc_nz r10.w
  lt r10.w, r4.w, l(0.001000)
  if_nz r10.w
    break
  endif
  if_z r0.x
    iadd r10.w, r4.x, r8.w
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t2.yzwx
  else
    iadd r11.x, r4.x, r8.w
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r11.xxxx, t5.yzwx
  endif
  add r11.xyz, r5.xyzx, -cb5[r10.w + 0].xyzx
  dp3 r11.w, r11.xyzx, r11.xyzx
  sqrt r12.w, r11.w
  lt r13.w, r12.w, cb5[r10.w + 0].w
  if_nz r13.w
    lt r13.w, l(0.000000), cb5[r10.w + 341].z
    if_nz r13.w
      ishl r13.w, r10.w, l(2)
      mul r14.xyz, r5.yyyy, cb5[r13.w + 1024].xyzx
      mad r14.xyz, r5.xxxx, cb5[r13.w + 1023].xyzx, r14.xyzx
      mad r14.xyz, r5.zzzz, cb5[r13.w + 1025].xyzx, r14.xyzx
      add r14.xyz, r14.xyzx, cb5[r13.w + 1026].xyzx
      mul r15.xyz, r6.zzzz, cb5[r13.w + 1024].xyzx
      mad r15.xyz, r6.yyyy, cb5[r13.w + 1023].xyzx, r15.xyzx
      mad r15.xyz, r6.wwww, cb5[r13.w + 1025].xyzx, r15.xyzx
      rcp r15.xyz, r15.xyzx
      mad r17.xyz, -r14.xyzx, r15.xyzx, -r15.xyzx
      mad r15.xyz, -r14.xyzx, r15.xyzx, r15.xyzx
      max r15.xyz, r15.xyzx, r17.xyzx
      min r13.w, r15.z, r15.y
      min r13.w, r13.w, r15.x
      mad r15.xyz, r13.wwww, r6.yzwy, r5.xyzx
      add r17.xyz, cb5[r10.w + 0].xyzx, cb5[r10.w + 682].xyzx
      add r15.xyz, r15.xyzx, -r17.xyzx
      mul r13.w, l(0.700000), cb5[r10.w + 2387].w
      mad r17.xyz, -cb5[r10.w + 2387].wwww, l(0.500000, 0.500000, 0.500000, 0.000000), cb5[r10.w + 2387].xyzx
      mul r19.xyz, r14.xyzx, cb5[r10.w + 2387].xyzx
      lt r20.xyz, r19.xyzx, -r17.xyzx
      mad r21.xyz, r14.xyzx, cb5[r10.w + 2387].xyzx, r17.xyzx
      mov r21.xyz, |r21.xyzx|
      and r20.xyz, r20.xyzx, r21.xyzx
      lt r19.xyz, r17.xyzx, r19.xyzx
      mad r14.xyz, r14.xyzx, cb5[r10.w + 2387].xyzx, -r17.xyzx
      mov r14.xyz, |r14.xyzx|
      and r14.xyz, r14.xyzx, r19.xyzx
      dp3 r14.w, r20.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      dp3 r14.x, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r14.x, r14.x, r14.w
      div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
      mul_sat r13.w, r13.w, r14.x
      mad r14.x, r13.w, l(-2.000000), l(3.000000)
      mul r13.w, r13.w, r13.w
      mad r14.x, -r14.x, r13.w, l(1.000000)
    else
      div_sat r12.w, r12.w, cb5[r10.w + 0].w
      dp3 r13.w, r6.yzwy, r11.xyzx
      mad r11.w, -cb5[r10.w + 0].w, cb5[r10.w + 0].w, r11.w
      mad r11.w, r13.w, r13.w, -r11.w
      ge r17.x, r11.w, l(0.000000)
      sqrt r11.w, r11.w
      add r11.w, -r13.w, r11.w
      mad r11.xyz, r11.wwww, r6.yzwy, r11.xyzx
      add r11.yzw, r11.xxyz, -cb5[r10.w + 682].xxyz
      mad r12.w, r12.w, l(2.500000), l(-1.500000)
      max r12.w, r12.w, l(0.000000)
      mul r13.w, r12.w, r12.w
      mad r12.w, -r12.w, l(2.000000), l(3.000000)
      mad r11.x, -r13.w, r12.w, l(1.000000)
      movc r14.xyzw, r17.xxxx, r11.xyzw, r6.xyzw
      mov r15.xyz, r14.yzwy
    endif
    mov r15.w, cb5[r10.w + 341].y
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyzw, r15.xyzw, t6.xyzw, s1, r4.z
    mul r11.xyz, r11.xyzx, cb5[r10.w + 341].xxxx
    mul r11.xyz, r14.xxxx, r11.xyzx
    mad r10.xyz, r11.xyzx, r4.wwww, r10.xyzx
    mad r11.x, -r11.w, r14.x, l(1.000000)
    mul r4.w, r4.w, r11.x
    mul r10.w, r14.x, cb5[r10.w + 682].w
    mad r7.w, r10.w, r8.y, r7.w
    add r10.w, -r14.x, l(1.000000)
    mul r8.y, r8.y, r10.w
  endif
  iadd r8.w, r8.w, l(1)
endloop
mul r4.xyz, r10.xyzx, cb0[146].xyzx
dp3 r0.x, cb0[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, r7.w
mad_sat r4.w, r0.w, cb0[165].x, cb0[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb0[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r6.xyz, r16.yzwy, r0.yyyy, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r6.x, r6.x
mul r0.y, r9.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.y, r16.x, r0.y
mad r0.xyw, r9.xyxz, r0.xxxx, r0.yyyy
mul r0.xyw, r0.xyxw, r4.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mad r4.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r8.xyw, r9.xyxz, l(2.755200, 2.755200, 0.000000, 2.755200), l(0.690300, 0.690300, 0.000000, 0.690300)
mad r4.xyz, r8.zzzz, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r8.zzzz, r8.xywx
mul r4.xyz, r8.zzzz, r4.xyzx
max r4.xyz, r4.xyzx, r8.zzzz
mad r0.xyz, r0.xyzx, r4.xyzx, r18.xyzx
lt r0.w, l(0.000000), cb3[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb0[176].x, cb0[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb0[176].z
  mul r1.z, r0.w, cb0[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r9.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r12.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb0[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb1[5].xyzx
  add r4.xyz, cb1[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
