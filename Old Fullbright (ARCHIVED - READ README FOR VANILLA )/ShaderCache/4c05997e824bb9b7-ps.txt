//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 24 00:27:05 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.yz, cb1[129].xxyx
  mov r0.w, cb1[131].w
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
  mov r9.xyzw, cb1[128].xyzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.yz, cb3[129].xxyx
  mov r0.w, cb3[131].w
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
  mov r9.xyzw, cb3[128].xyzw
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v6.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v6.wwww
mov r13.z, v6.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v6.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r0.w, r0.w, cb2[4].w
movc r4.w, v7.x, l(1.000000), l(-1.000000)
mul r0.w, r0.w, r4.w
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t16.xyzw, s5, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r9.wwww, r9.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t17.xyzw, s6, cb1[133].x
sample_b_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t18.yzwx, s7, cb1[133].x
mul_sat r8.yzw, r7.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
mov_sat r7.xyz, r7.xyzx
mov_sat r0.w, r0.w
mad r9.z, r0.w, r0.z, r0.y
mad r0.yzw, r8.yyzw, cb1[126].wwww, cb1[126].xxyz
lt r4.w, l(0.000000), cb2[12].x
lt r6.w, l(0.000000), cb1[163].w
and r4.w, r4.w, r6.w
div r8.yz, r13.xxyx, r13.wwww
mad r10.xy, r8.yzyy, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r8.yzw, r14.yyzx, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.00392163, -1.00392163, -1.00392163)
mad r8.yzw, r6.xxyz, r14.wwww, r8.yyzw
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.500000), r15.y
mul r14.xyz, r0.yzwy, r12.wwww
mad r12.xyz, r7.xyzx, r12.wwww, r12.xyzx
movc r6.xyz, r4.wwww, r8.yzwy, r6.xyzx
movc r7.xyz, r4.wwww, r12.xyzx, r7.xyzx
movc r0.yzw, r4.wwww, r14.xxyz, r0.yyzw
mov r9.xy, l(0,0.500000,0,0)
movc r8.yzw, r4.wwww, r15.xxyz, r9.xxyz
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, v3.zwzz, t15.xyzw, s4
mad r12.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r9.xyzw, r9.xyzw, cb5[7].xyzw, r12.xyzw
mul r9.xyzw, r9.xyzw, r9.xyzw
mul r9.xyzw, r9.xyzw, cb5[6].xyzw
mov_sat r12.xyz, r0.yzwy
mul r4.w, r8.z, l(0.080000)
mad r14.xyz, -r8.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xyzx
mad r14.xyz, r8.yyyy, r14.xyzx, r4.wwww
mad r15.xyz, -r7.xyzx, r8.yyyy, r7.xyzx
mad r15.xyz, r15.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r14.xyz, r14.xyzx, cb1[127].wwww, cb1[127].xyzx
mul r8.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r11.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r8.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r17.xyzw, r11.zwzz, t14.xyzw, s3
mad r4.w, r17.w, l(0.00392156886), r16.w
add r4.w, r4.w, l(-0.00196078443)
mad r4.w, r4.w, cb5[18].w, cb5[20].w
mul r16.xyz, r16.xyzx, r16.xyzx
mad r16.xyz, r16.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r4.w, r4.w
add r4.w, r4.w, l(-0.0185813606)
mad r17.xyzw, r17.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r7.w, r17.xyzw, r6.xyzw
max r7.w, r7.w, l(0.000000)
mul r18.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000)
dp4 r6.w, r17.xyzw, r18.xyzw
max r6.w, r6.w, l(0.000000)
mul r6.w, r4.w, r6.w
mul r17.xyz, r16.xyzx, r6.wwww
mul r4.w, r4.w, r7.w
mul r16.xyz, r16.xyzx, r4.wwww
mul r16.xyz, r16.xyzx, cb1[146].xyzx
mul r17.xyz, r17.xyzx, cb1[146].xyzx
dp3 r4.w, r16.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r6.w, l(1), cb1[125].x
if_nz r6.w
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r18.xy, r8.yzyy
  mov r18.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r6.w, r18.xyzz, t10.yzwx
  mad r7.w, r6.w, cb1[57].x, cb1[57].y
  mad r6.w, r6.w, cb1[57].z, -cb1[57].w
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  add r6.w, r6.w, r7.w
  mad r6.w, -r13.z, l(1.000000), r6.w
  div r6.w, |r6.w|, r13.w
  lt r6.w, l(0.010000), r6.w
  if_nz r6.w
    mov r8.y, -cb1[123].z
    mov r8.z, l(0)
    add r19.yz, r8.yyzy, r10.xxyx
    iadd r20.xyzw, r18.xxyy, l(1, -1, 1, -1)
    mov r18.w, r20.y
    ld_indexable(texture2d)(float,float,float,float) r6.w, r18.wyzz, t10.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r19.x, |r6.w|
    lt r6.w, r19.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r19.xyz, r6.wwww, r19.xyzx, r10.zxyz
    mov r8.y, l(0)
    mov r8.z, cb1[123].w
    add r21.yz, r8.yyzy, r10.xxyx
    mov r22.xz, r18.xxzx
    mov r22.yw, r20.zzzw
    ld_indexable(texture2d)(float,float,float,float) r6.w, r22.xyzz, t10.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r21.x, |r6.w|
    lt r6.w, r21.x, r19.x
    movc r19.xyz, r6.wwww, r21.xyzx, r19.xyzx
    mov r8.y, cb1[123].z
    mov r8.z, l(0)
    add r21.yz, r8.yyzy, r10.xxyx
    mov r20.yzw, r18.yyzz
    ld_indexable(texture2d)(float,float,float,float) r6.w, r20.xyzw, t10.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    mov r21.x, |r6.w|
    lt r6.w, r21.x, r19.x
    movc r18.xyz, r6.wwww, r21.xyzx, r19.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r8.yz, r10.xxyx, r13.xxyx
    ld_indexable(texture2d)(float,float,float,float) r6.w, r22.xwzz, t10.yzwx
    mad r7.w, r6.w, cb1[57].x, cb1[57].y
    mad r6.w, r6.w, cb1[57].z, -cb1[57].w
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    add r6.w, r6.w, r7.w
    mad r6.w, -r13.z, l(1.000000), r6.w
    lt r6.w, |r6.w|, r18.x
    movc r10.xy, r6.wwww, r8.yzyy, r18.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r8.yz, l(0), t9.zxyw
utof r8.yz, r8.yyzy
mul r8.yz, r8.yyzy, r10.xxyx
round_z r8.yz, r8.yyzy
ftoi r18.xy, r8.yzyy
mov r18.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.w, r18.xyzw, t9.yzwx
mul r7.w, cb2[12].y, l(3.999000)
ftou r7.w, r7.w
and r7.w, r7.w, l(2)
movc r7.w, r7.w, cb1[164].y, l(1.000000)
add r6.w, r6.w, l(-1.000000)
mad r6.w, r7.w, r6.w, l(1.000000)
mul r13.xyz, r6.wwww, r16.xyzx
mul r16.xyz, r6.wwww, r17.xyzx
mul r4.w, r4.w, r6.w
mul r0.yzw, r0.yyzw, r16.xxyz
mad r0.yzw, r13.xxyz, r15.xxyz, r0.yyzw
mad r13.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r13.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r13.xyzx
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r13.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
ftou r8.yz, r11.xxyx
if_z r0.x
  mov r7.w, cb4[3].x
  mov r10.zw, cb4[3].yyyz
  mov r11.xyz, cb4[1].zxyz
  mov r11.w, cb4[2].x
else
  mov r7.w, cb4[43].x
  mov r10.zw, cb4[43].yyyz
  mov r11.xyz, cb4[41].zxyz
  mov r11.w, cb4[42].x
endif
mad r7.w, v6.w, r7.w, r10.z
log r7.w, r7.w
mul r7.w, r10.w, r7.w
max r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 0.000000)
ftou r7.w, r7.w
iadd r10.z, r11.x, l(-1)
umin r7.w, r7.w, r10.z
ushr r8.yz, r8.yyzy, r11.wwww
imad r7.w, r7.w, r11.z, r8.z
imad r7.w, r7.w, r11.y, r8.y
if_nz cb4[95].x
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r10.xy, r8.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r8.y, cb4[0].z
  mov r8.z, cb4[6].x
  mov r11.xy, cb4[6].zwzz
  mov r13.xyz, cb4[5].xyzx
  mov r16.xyz, cb4[4].xyzx
else
  mov r8.y, cb4[40].z
  mov r8.z, cb4[46].x
  mov r11.xy, cb4[46].zwzz
  mov r13.xyz, cb4[45].xyzx
  mov r16.xyz, cb4[44].xyzx
endif
if_nz r8.y
  and r17.xyzw, r8.zzzz, l(255, 1, 2, 4)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r8.y, r8.z, l(8)
  movc r18.w, r8.y, l(1.000000), l(0)
  ushr r11.zw, r8.zzzz, l(0, 0, 4, 8)
  ubfe r8.y, l(1), l(4), r8.z
  movc r19.x, r8.y, l(1.000000), l(0)
  and r20.xyz, r11.zzzz, l(2, 4, 8, 0)
  movc r19.yzw, r20.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r8.y, r19.xyzw, r10.xyzw
  lt r8.z, r11.y, l(0.000000)
  swapc r19.x, r20.x, r8.z, l(1.000000), r8.y
  if_nz r17.x
    mov r18.xyz, r17.yzwy
    dp4 r8.y, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r8.z, r9.xyzw, r18.xyzw
    add r8.z, r8.z, l(-1.000000)
    mad r8.y, r8.y, r8.z, l(1.000000)
    mad_sat r8.z, r13.w, r11.x, r11.y
    mul r8.z, r8.z, r8.z
    add r8.y, -r19.x, r8.y
    mad r8.y, r8.z, r8.y, r19.x
    min r8.z, r20.x, r8.y
    mul r11.xy, r20.xxxx, r8.yzyy
  else
    mov r11.xy, l(1.000000,1.000000,0,0)
  endif
  add r8.y, r11.y, r11.x
  lt r8.y, l(0.000000), r8.y
  if_nz r8.y
    dp3 r8.y, r16.xyzx, r16.xyzx
    rsq r8.y, r8.y
    mul r16.xyz, r8.yyyy, r16.xyzx
    dp3 r8.y, r6.zxyz, r16.xyzx
    mov_sat r8.z, r8.y
    max r11.z, r8.w, l(0.020000)
    dp3 r12.w, r6.zxyz, r4.xyzx
    dp3 r13.w, r4.xyzx, r16.xyzx
    mad r14.w, r13.w, l(2.000000), l(2.000000)
    rsq r14.w, r14.w
    add r15.w, r8.y, r12.w
    mul_sat r15.w, r14.w, r15.w
    mad_sat r14.w, r14.w, r13.w, r14.w
    add r12.w, |r12.w|, l(0.000010)
    min r12.w, r12.w, l(1.000000)
    mul r16.xyz, r8.zzzz, r15.xyzx
    mul r16.w, r11.z, r11.z
    mul r17.x, r16.w, r16.w
    mad r17.y, r15.w, r17.x, -r15.w
    mad r15.w, r17.y, r15.w, l(1.000000)
    mul r15.w, r15.w, r15.w
    mul r15.w, r15.w, l(3.14159274)
    div r15.w, r17.x, r15.w
    mad r11.z, -r11.z, r11.z, l(1.000000)
    mad r17.x, r12.w, r11.z, r16.w
    mad r11.z, r8.z, r11.z, r16.w
    mul r11.z, r11.z, r12.w
    mad r11.z, r8.z, r17.x, r11.z
    rcp r11.z, r11.z
    mul r11.z, r11.z, r15.w
    add r12.w, -r14.w, l(1.000000)
    mul r14.w, r12.w, r12.w
    mul r14.w, r14.w, r14.w
    mul r15.w, r12.w, r14.w
    mul_sat r16.w, r14.y, l(50.000000)
    mad r12.w, -r14.w, r12.w, l(1.000000)
    mul r17.xyz, r14.xyzx, r12.wwww
    mad r17.xyz, r16.wwww, r15.wwww, r17.xyzx
    mul r11.z, r11.z, l(0.500000)
    mul r17.xyz, r17.xyzx, r11.zzzz
    mul r17.xyz, r8.zzzz, r17.xyzx
    add r8.y, -r8.y, l(0.500000)
    mul_sat r8.y, r8.y, l(0.444444448)
    mov_sat r13.w, -r13.w
    mul r8.z, r13.w, r13.w
    mad r8.z, r8.z, l(-0.640000), l(1.000000)
    mul r8.z, r8.z, r8.z
    mul r8.z, r8.z, l(3.14159274)
    div r8.z, l(0.360000), r8.z
    mul r8.y, r8.z, r8.y
    mul r18.xyz, r12.xyzx, r8.yyyy
    mad r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r17.xyzx
    mul r17.xyz, r11.xxxx, r13.xyzx
    mul r11.xyz, r11.yyyy, r13.xyzx
    mul r11.xyz, r11.xyzx, r18.xyzx
    mad r11.xyz, r16.xyzx, r17.xyzx, r11.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r8.y, r11.w, cb2[16].w
  movc r11.xyz, r8.yyyy, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r8.y, r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.y, r8.yyyy, t1.yxzw
  umin r8.y, r8.y, cb4[0].x
  bfi r8.z, l(31), l(1), r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.z, r8.zzzz, t1.yzxw
else
  ishl r11.w, r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t4.yzwx
  umin r8.y, r11.w, cb4[40].x
  bfi r7.w, l(31), l(1), r7.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.z, r7.wwww, t4.yzxw
endif
movc r7.w, r0.x, cb4[40].x, cb4[0].x
umin r7.w, r7.w, r8.y
dp3 r8.y, -r4.yzxy, r6.xyzx
add r8.y, r8.y, r8.y
mad r13.xyz, r6.zxyz, -r8.yyyy, -r4.xyzx
max r8.y, r8.w, l(0.020000)
mul r11.w, r8.y, r8.y
mad r8.y, -r8.y, r8.y, l(1.000000)
dp3 r12.w, r6.zxyz, r4.xyzx
add r13.w, r12.w, r12.w
mad r14.w, r13.w, r12.w, l(-1.000000)
add r15.w, |r12.w|, l(0.000010)
min r15.w, r15.w, l(1.000000)
mul r16.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r16.w, r11.w, r11.w
mul r17.xyzw, r14.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r19.xyz, r11.xyzx
mov r18.z, l(0)
loop
  uge r18.w, r18.z, r7.w
  breakc_nz r18.w
  iadd r18.w, r8.z, r18.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r19.w, r18.wwww, t2.yzwx
    imul null, r20.x, r19.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.xxxx, t0.xyzw
    imad r21.xyzw, r19.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.wwww, t5.yzwx
    imul null, r19.w, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.wwww, t3.xyzw
    imad r25.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t3.wxyz
  endif
  eq r18.w, r22.w, l(0.000000)
  lt r19.w, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r25.x, r20.xyzx, r20.xyzx
  rsq r25.y, r25.x
  mul r25.yzw, r20.xxyz, r25.yyyy
  mul r26.x, r20.w, r20.w
  mul r25.x, r25.x, r26.x
  mad r25.x, -r25.x, r25.x, l(1.000000)
  max r25.x, r25.x, l(0.000000)
  mul r25.x, r25.x, r25.x
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r22.w
  exp r20.w, r20.w
  movc r20.w, r18.w, r25.x, r20.w
  dp3 r22.w, r25.yzwy, r23.yzwy
  add r22.w, -r24.x, r22.w
  mul_sat r22.w, r24.y, r22.w
  mul r22.w, r22.w, r22.w
  mul r22.w, r20.w, r22.w
  movc r19.w, r19.w, r22.w, r20.w
  lt r20.w, l(0.000000), r19.w
  if_nz r20.w
    and r20.w, r23.x, l(255)
    movc r20.w, r20.w, l(1), l(0)
    if_nz r20.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r20.w, r23.x, l(4)
      ubfe r22.w, l(1), l(4), r23.x
      movc r26.x, r22.w, l(1.000000), l(0)
      and r23.yzw, r20.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r20.w, r26.xyzw, r10.xyzw
      dp4 r22.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r23.y, r9.xyzw, r25.xyzw
      add r23.y, r23.y, l(-1.000000)
      mad r22.w, r22.w, r23.y, l(1.000000)
      mul r23.yz, r20.wwww, r22.wwww
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r20.w, r23.z, r23.y
    lt r20.w, l(0.000000), r20.w
    if_nz r20.w
      f16tof32 r20.w, r24.w
      mul r22.w, r20.w, l(0.500000)
      mad r24.xyw, -r22.wwww, r21.yzyw, r20.xyxz
      mad r20.xyz, r22.wwww, r21.yzwy, r20.xyzx
      lt r21.y, l(0.000000), r20.w
      if_nz r21.y
        dp3 r21.z, r24.xywx, r24.xywx
        dp3 r21.w, r20.xyzx, r20.xyzx
        rsq r21.z, r21.z
        rsq r21.w, r21.w
        mul r22.w, r21.w, r21.z
        dp3 r23.w, r24.xywx, r20.xyzx
        mul r23.w, r22.w, r23.w
        mad r25.x, r23.w, l(0.500000), r22.w
        add r25.x, r25.x, l(0.500000)
        div r25.y, r22.w, r25.x
        dp3 r22.w, r6.zxyz, r24.xywx
        dp3 r25.z, r6.zxyz, r20.xyzx
        mul r21.w, r21.w, r25.z
        mad r21.z, r22.w, r21.z, r21.w
        mul r25.x, r21.z, l(0.500000)
      else
        dp3 r21.z, r24.xywx, r24.xywx
        add r21.w, r21.z, l(1.000000)
        rcp r25.y, r21.w
        rsq r21.z, r21.z
        mul r26.xyz, r21.zzzz, r24.xywx
        dp3 r25.x, r6.zxyz, r26.xyzx
        mov r23.w, l(1.000000)
      endif
      lt r21.z, l(0.000000), r24.z
      mul r21.w, r24.z, r24.z
      mul_sat r21.w, r25.y, r21.w
      sqrt r21.w, r21.w
      lt r22.w, r25.x, r21.w
      max r25.z, -r21.w, r25.x
      add r25.z, r21.w, r25.z
      mul r25.z, r25.z, r25.z
      mul r21.w, r21.w, l(4.000000)
      div r21.w, r25.z, r21.w
      movc r21.w, r22.w, r21.w, r25.x
      movc_sat r21.z, r21.z, r21.w, r25.x
      movc r18.w, r18.w, r25.y, l(1.000000)
      add r20.xyz, -r24.xywx, r20.xyzx
      dp3 r21.w, r13.xyzx, r20.xyzx
      mad r25.xyz, r21.wwww, r13.xyzx, -r20.xyzx
      dp3 r22.w, r24.xywx, r25.xyzx
      mul r21.w, r21.w, r21.w
      mad r20.w, r20.w, r20.w, -r21.w
      div_sat r20.w, r22.w, r20.w
      mad r20.xyz, r20.wwww, r20.xyzx, r24.xywx
      movc r20.xyz, r21.yyyy, r20.xyzx, r24.xywx
      dp3 r20.w, r20.xyzx, r20.xyzx
      rsq r20.w, r20.w
      mul r20.xyz, r20.wwww, r20.xyzx
      mul r21.y, r20.w, r24.z
      mul_sat r21.y, r8.y, r21.y
      mul_sat r20.w, r20.w, r21.x
      dp3 r21.x, r6.zxyz, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r12.w, r21.x
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.w, l(0.000000), r21.y
      if_nz r21.w
        mad r22.w, -r21.y, r21.y, l(1.000000)
        sqrt r22.w, r22.w
        dp2 r24.x, r12.wwww, r21.xxxx
        add r24.y, -r20.x, r24.x
        ge r24.z, r24.y, r22.w
        if_nz r24.z
          mov r20.z, l(1.000000)
          mov r20.y, |r12.w|
        else
          mad r24.z, -r24.y, r24.y, l(1.000000)
          rsq r24.z, r24.z
          mul r24.z, r21.y, r24.z
          mad r24.w, -r24.y, r21.x, r12.w
          mul r25.x, r24.w, r24.z
          mad r24.y, -r24.y, r20.x, r14.w
          mul r25.y, r21.x, r21.x
          mad r25.y, -r12.w, r12.w, -r25.y
          add r25.y, r25.y, l(1.000000)
          mad r25.y, -r20.x, r20.x, r25.y
          mad_sat r24.x, r24.x, r20.x, r25.y
          sqrt r24.x, r24.x
          mul r24.xy, r24.xyxx, r24.zzzz
          mul r25.y, r12.w, r24.x
          add r25.z, r25.y, r25.y
          mad r25.w, r21.x, r22.w, r12.w
          mad r24.z, r24.z, r24.w, r25.w
          mad r24.w, r20.x, r22.w, r24.y
          add r24.w, r24.w, l(1.000000)
          mul r26.xy, r24.wwww, r24.xzxx
          mul r26.z, r24.z, r25.z
          mul r25.y, r25.y, r24.z
          mul r25.y, r25.y, l(0.500000)
          mad r25.y, r26.x, l(-0.500000), r25.y
          mul r25.y, r25.y, r26.y
          mad r26.w, -r26.x, l(2.000000), r26.z
          mul r26.z, r26.w, r26.z
          mad r26.x, r26.x, r26.x, r26.z
          mul r26.z, r24.w, r24.w
          mad r24.w, r20.x, r22.w, r24.w
          mad r24.w, r24.w, l(-0.500000), l(-0.500000)
          mul r24.w, r24.w, r26.y
          mad r24.w, r25.w, r26.z, r24.w
          mad r24.z, r24.z, r24.w, r26.x
          add r24.w, r25.y, r25.y
          mul r25.w, r25.y, r25.y
          mad r25.w, r24.z, r24.z, r25.w
          div r24.w, r24.w, r25.w
          mul r24.z, r24.z, r24.w
          mad r24.w, -r24.w, r25.y, l(1.000000)
          mul r24.x, r24.x, r24.z
          mad r24.x, r24.w, r25.x, r24.x
          mul r24.z, r25.z, r24.z
          mad r24.y, r24.w, r24.y, r24.z
          mad r24.x, r21.x, r22.w, r24.x
          mad r22.w, r20.x, r22.w, r24.y
          mad r24.y, r22.w, l(2.000000), l(2.000000)
          rsq r24.y, r24.y
          add r24.x, r12.w, r24.x
          mul_sat r20.z, r24.y, r24.x
          mad_sat r20.y, r24.y, r22.w, r24.y
        endif
      endif
      mul r22.w, r21.z, r18.w
      lt r24.x, l(0.000000), r20.w
      mul r20.w, r20.w, r20.w
      mad r24.y, r20.y, l(3.600000), l(0.400000)
      div r20.w, r20.w, r24.y
      mad r20.w, r11.w, r11.w, r20.w
      min r20.w, r20.w, l(1.000000)
      movc r18.x, r24.x, r20.w, r16.w
      mul r20.w, r21.y, l(0.250000)
      ishr r24.x, r18.x, l(1)
      iadd r24.x, r24.x, l(0x1fbd1df5)
      mad r21.y, r24.x, l(3.000000), r21.y
      mul r20.w, r20.w, r21.y
      add r21.y, r20.y, l(0.001000)
      div r20.w, r20.w, r21.y
      add r24.x, r18.x, r20.w
      div r24.y, r18.x, r24.x
      movc r24.xy, r21.wwww, r24.xyxx, r18.xyxx
      lt r20.w, r23.w, l(1.000000)
      add r21.w, -r23.w, l(1.000100)
      add r23.w, r23.w, l(1.000000)
      div r21.w, r21.w, r23.w
      sqrt r21.w, r21.w
      mul r23.w, r21.w, l(0.250000)
      ishr r24.z, r24.x, l(1)
      iadd r24.z, r24.z, l(0x1fbd1df5)
      mad r21.w, r24.z, l(3.000000), r21.w
      mul r21.w, r21.w, r23.w
      div r21.y, r21.w, r21.y
      add r21.y, r21.y, r24.x
      div r21.y, r24.x, r21.y
      sqrt r21.y, r21.y
      mul r21.y, r21.y, r24.y
      movc r20.w, r20.w, r21.y, r24.y
      mad r21.y, r20.z, r18.x, -r20.z
      mad r20.z, r21.y, r20.z, l(1.000000)
      mul r20.z, r20.z, r20.z
      mul r20.z, r20.z, l(3.14159274)
      div r20.z, r18.x, r20.z
      mul r20.z, r20.w, r20.z
      sqrt r18.x, r18.x
      add r20.w, -r18.x, l(1.000000)
      mad r21.y, r15.w, r20.w, r18.x
      mad r18.x, r21.z, r20.w, r18.x
      mul r18.x, r15.w, r18.x
      mad r18.x, r21.z, r21.y, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r20.z
      add r20.y, -r20.y, l(1.000000)
      mul r20.z, r20.y, r20.y
      mul r20.z, r20.z, r20.z
      mul r20.w, r20.y, r20.z
      mad r20.y, -r20.z, r20.y, l(1.000000)
      mul r21.yzw, r14.xxyz, r20.yyyy
      mad r20.yzw, r17.xxxx, r20.wwww, r21.yyzw
      mul r18.x, r18.x, l(0.500000)
      mul r20.yzw, r20.yyzw, r18.xxxx
      mul r20.yzw, r20.yyzw, r22.wwww
      add r18.x, -r21.x, l(0.500000)
      mul_sat r18.x, r18.x, l(0.444444448)
      mov_sat r20.x, -r20.x
      mul r20.x, r20.x, r20.x
      mad r20.x, r20.x, l(-0.640000), l(1.000000)
      mul r20.x, r20.x, r20.x
      mul r20.x, r20.x, l(3.14159274)
      div r20.x, l(0.360000), r20.x
      mul r18.x, r18.x, r18.w
      mul r18.x, r20.x, r18.x
      mul r21.xyz, r12.xyzx, r18.xxxx
      mad r20.xyz, r22.wwww, r16.xyzx, r20.yzwy
      mul r22.xyz, r19.wwww, r22.xyzx
      mul r24.xyz, r23.yyyy, r22.xyzx
      mul r22.xyz, r23.zzzz, r22.xyzx
      mul r21.xyz, r21.xyzx, r22.xyzx
      mad r20.xyz, r20.xyzx, r24.xyzx, r21.xyzx
    else
      mov r20.xyz, l(0,0,0,0)
    endif
  else
    mov r20.xyz, l(0,0,0,0)
  endif
  ushr r18.x, r23.x, l(8)
  and r18.x, r18.x, cb2[16].w
  add r20.xyz, r19.xyzx, r20.xyzx
  movc r19.xyz, r18.xxxx, r20.xyzx, r19.xyzx
  iadd r18.z, r18.z, l(1)
endloop
mad r9.xyz, r13.wwww, r6.zxyz, -r4.xyzx
mov_sat r12.w, r12.w
log r0.x, r8.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r4.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r4.x
itof r9.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r9.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r6.x, r8.w, cb1[165].x, cb1[165].y
mad r6.y, r6.x, l(-2.000000), l(3.000000)
mul r6.x, r6.x, r6.x
mul r6.x, r6.x, r6.y
max r0.x, r0.x, l(0.000100)
div r0.x, r4.w, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r6.x, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r6.xyz, r17.yzwy, r4.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r8.xyzw, r8.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r8.x, r8.x
mul r4.w, r12.w, l(-9.280000)
exp r4.w, r4.w
min r0.x, r0.x, r4.w
mad r0.x, r0.x, r8.x, r8.y
mad r6.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r8.zwzz
mul r0.x, r17.x, r6.y
mad r6.xyz, r14.xyzx, r6.xxxx, r0.xxxx
mul r4.xyz, r4.xyzx, r6.xyzx
mul r4.xyz, r6.wwww, r4.xyzx
mad r6.xyz, r14.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r14.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r6.xyzx
mad r6.xyz, r14.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r6.xyzx
add r6.xyz, r6.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r4.xyzx, r6.xyzx, r19.xyzx
lt r0.x, l(0.000000), cb4[91].w
if_nz r0.x
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.x, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.xxxx
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.x, r0.x, cb1[176].x, cb1[176].y
  log r0.x, r0.x
  mul r0.x, r0.x, cb1[176].z
  mul r1.z, r0.x, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r0.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r0.x, v5.w
endif
mad r2.xyz, r14.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r15.xyzx
add r2.xyz, -r4.xyzx, r2.xyzx
mad r2.xyz, cb1[134].zzzz, r2.xyzx, r4.xyzx
max r3.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb1[130].x
if_nz r1.w
  add r4.xyz, r5.xyzx, -cb2[5].xyzx
  add r6.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r4.xyz, r6.xyzx, |r4.xyzx|
  or r1.w, r4.y, r4.x
  or r1.w, r4.z, r1.w
  dp3 r2.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.w, r2.w, l(0.002000)
  frc r2.w, r2.w
  lt r2.w, l(0.500000), r2.w
  movc r4.xyz, r2.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
endif
mad r0.yzw, r0.yyzw, r7.xxyz, r2.xxyz
add r0.yzw, r3.xxyz, r0.yyzw
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
