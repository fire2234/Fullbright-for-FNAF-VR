// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:46:22 2019
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[5];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[124];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy * cb1[123].zw + -cb1[58].wz;
  r0.xy = r0.xy / cb1[58].xy;
  r0.zw = cb1[123].zw * v0.xy;
  r0.z = t0.SampleLevel(s0_s, r0.zw, 0).x;
  r0.w = r0.z * cb1[57].z + -cb1[57].w;
  r0.z = r0.z * cb1[57].x + cb1[57].y;
  r0.w = 1 / r0.w;
  r0.z = r0.z + r0.w;
  r0.xy = r0.xy * r0.zz;
  r1.xyzw = cb0[29].xyzw * r0.yyyy;
  r1.xyzw = r0.xxxx * cb0[28].xyzw + r1.xyzw;
  r1.xyzw = r0.zzzz * cb0[30].xyzw + r1.xyzw;
  r1.xyzw = cb0[31].xyzw + r1.xyzw;
  r1.xy = r1.xy / r1.ww;
  r0.w = min(0.999989986, r1.z);
  r1.xy = r1.xy * cb0[1].xy + float2(-0.5,-0.5);
  r1.zw = frac(r1.xy);
  r1.xy = floor(r1.xy);
  r1.xy = float2(0.5,0.5) + r1.xy;
  r1.xy = cb0[1].zw * r1.xy;
  r2.xyzw = t1.Gather(s1_s, r1.xy, int2(0, -2)).xyzw;
  r2.xyzw = r2.xyzw + -r0.wwww;
  r2.xyzw = saturate(r2.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r3.xy = float2(1,1) + -r1.zw;
  r4.xyzw = t1.Gather(s1_s, r1.xy, int2(-2, -2)).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r3.zw = r4.wx * r3.xx + r4.zy;
  r2.xw = r3.zw + r2.wx;
  r2.xy = r2.xw + r2.zy;
  r4.xyzw = t1.Gather(s1_s, r1.xy, int2(2, -2)).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r2.xy = r4.wx + r2.xy;
  r2.xy = r4.zy * r1.zz + r2.xy;
  r2.x = r2.x * r3.y + r2.y;
  r4.xyzw = t1.Gather(s1_s, r1.xy).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r5.xyzw = t1.Gather(s1_s, r1.xy, int2(-2, 0)).xyzw;
  r5.xyzw = r5.xyzw + -r0.wwww;
  r5.xyzw = saturate(r5.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r2.yz = r5.wx * r3.xx + r5.zy;
  r2.yz = r2.yz + r4.wx;
  r2.yz = r2.yz + r4.zy;
  r4.xyzw = t1.Gather(s1_s, r1.xy, int2(2, 0)).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r2.yz = r4.wx + r2.yz;
  r2.yz = r4.zy * r1.zz + r2.yz;
  r2.y = r2.y + r2.z;
  r2.x = r2.x + r2.y;
  r4.xyzw = t1.Gather(s1_s, r1.xy, int2(-2, 2)).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r2.yz = r4.wx * r3.xx + r4.zy;
  r3.xyzw = t1.Gather(s1_s, r1.xy, int2(0, 2)).xyzw;
  r4.xyzw = t1.Gather(s1_s, r1.xy, int2(2, 2)).xyzw;
  r4.xyzw = r4.xyzw + -r0.wwww;
  r3.xyzw = r3.xyzw + -r0.wwww;
  r3.xyzw = saturate(r3.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r4.xyzw = saturate(r4.xyzw * cb0[0].wwww + float4(1,1,1,1));
  r1.xy = r3.wx + r2.yz;
  r1.xy = r1.xy + r3.zy;
  r1.xy = r1.xy + r4.wx;
  r1.xy = r4.zy * r1.zz + r1.xy;
  r0.w = r1.y * r1.w + r1.x;
  r0.w = r2.x + r0.w;
  r0.w = r0.w * 0.0399999991 + -0.5;
  r0.w = saturate(r0.w * cb0[26].z + 0.5);
  r0.w = r0.w * r0.w + -1;
  r0.w = cb0[26].y * r0.w;
  r1.xyz = cb1[45].xyz * r0.yyy;
  r1.xyz = r0.xxx * cb1[44].xyz + r1.xyz;
  r0.xyz = r0.zzz * cb1[46].xyz + r1.xyz;
  r0.xyz = cb1[47].xyz + r0.xyz;
  r0.xyz = cb2[0].xyz + -r0.xyz;
  r1.xyz = cb2[0].www * r0.xyz;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = min(1, r1.x);
  r1.x = 1 + -r1.x;
  r1.x = log2(r1.x);
  r1.x = cb2[1].w * r1.x;
  r1.x = exp2(r1.x);
  r1.y = dot(r0.xyz, r0.xyz);
  r1.z = cb2[0].w * cb2[0].w;
  r1.z = r1.y * r1.z;
  r1.y = rsqrt(r1.y);
  r0.xyz = r1.yyy * r0.xyz;
  r0.x = dot(r0.xyz, cb2[2].xyz);
  r0.x = -cb2[4].x + r0.x;
  r0.x = saturate(cb2[4].y * r0.x);
  r0.x = r0.x * r0.x;
  r0.y = -r1.z * r1.z + 1;
  r0.y = max(0, r0.y);
  r0.y = r0.y * r0.y;
  r0.z = cmp(cb2[1].w == 0.000000);
  r1.x = r0.z ? r0.y : r1.x;
  r0.y = cmp(-2 < cb2[4].x);
  r1.y = r0.y ? r0.x : 1;
  r0.x = cmp(0 < cb2[0].w);
  r0.xy = r0.xx ? r1.xy : float2(1,1);
  r0.x = r0.x * r0.y;
  r0.x = cmp(0 < r0.x);
  r0.x = r0.x ? 1.000000 : 0;
  r0.x = r0.x * r0.w + 1;
  o0.xyzw = sqrt(r0.xxxx);
  return;
}