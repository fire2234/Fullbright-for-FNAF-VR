// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 22:40:52 2019
Texture2D<float4> t12 : register(t12);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t10 : register(t10);

Texture2D<float4> t9 : register(t9);

Texture3D<float4> t8 : register(t8);

TextureCubeArray<float4> t7 : register(t7);

Buffer<uint4> t6 : register(t6);

Buffer<uint4> t5 : register(t5);

Buffer<float4> t4 : register(t4);

Buffer<uint4> t3 : register(t3);

Buffer<uint4> t2 : register(t2);

Buffer<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[4];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[22];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[177];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD4,
  nointerpolation uint v4 : PACKED_EYE_INDEX0,
  float4 v5 : TEXCOORD7,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v4.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.yz = cb1[129].xy;
    r0.w = cb1[131].w;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r10.xyzw = cb1[58].xyzw;
    r11.xy = cb1[121].xy;
    r11.zw = cb1[122].zw;
    r9.xyzw = cb1[128].xyzw;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.yz = cb3[129].xy;
    r0.w = cb3[131].w;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r10.xyzw = cb3[58].xyzw;
    r11.xy = cb3[121].xy;
    r11.zw = cb3[122].zw;
    r9.xyzw = cb3[128].xyzw;
  }
  r12.xyz = v1.xyz * v0.zxy;
  r12.xyz = v1.zxy * v0.xyz + -r12.xyz;
  r12.xyz = v1.www * r12.xyz;
  r11.xy = v6.xy + -r11.xy;
  r11.zw = r11.xy * r11.zw + float2(-0.5,-0.5);
  r13.xy = v6.ww * r11.zw;
  r13.z = v6.w;
  r13.xyw = float3(2,-2,1) * r13.xyz;
  r14.xyz = v6.xyz;
  r14.w = 1;
  r4.x = dot(r14.xyzw, r4.xyzw);
  r4.y = dot(r14.xyzw, r5.xyzw);
  r4.z = dot(r14.xyzw, r6.xyzw);
  r4.w = dot(r14.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r0.w = cb2[4].w * r0.w;
  r4.w = v7.x ? 1 : -1;
  r0.w = r4.w * r0.w;
  r6.xyz = r9.www * float3(0,0,1) + r9.xyz;
  r4.w = dot(r6.xyz, r6.xyz);
  r4.w = rsqrt(r4.w);
  r6.xyz = r6.xyz * r4.www;
  r7.xyz = r6.yyy * r12.xyz;
  r6.xyw = r6.xxx * v0.yzx + r7.xyz;
  r6.xyz = r6.zzz * v1.yzx + r6.xyw;
  r4.w = dot(r6.xyz, r6.xyz);
  r4.w = rsqrt(r4.w);
  r6.xyz = r6.xyz * r4.www;
  r6.xyz = r6.xyz * r0.www;
  r7.xyzw = t12.SampleBias(s6_s, v2.xy, cb1[133].x).xyzw;
  r8.yz = r13.xy / r13.ww;
  r8.yz = r8.yz * r10.xy + r10.wz;
  r0.w = t9.SampleLevel(s3_s, r8.yz, 0).x;
  r4.w = r0.w * cb1[57].x + cb1[57].y;
  r0.w = r0.w * cb1[57].z + -cb1[57].w;
  r0.w = 1 / r0.w;
  r0.w = r4.w + r0.w;
  r0.w = -r13.z * 1 + r0.w;
  r0.w = saturate(r0.w / cb6[3].y);
  r9.w = saturate(r7.w * r0.w);
  r7.xyz = saturate(r7.xyz);
  r0.y = r0.z * 0.5 + r0.y;
  r10.xyzw = t11.Sample(s5_s, v3.zw).xyzw;
  r12.xyzw = cb5[7].xyzw * float4(-0.5,-0.5,-0.5,-0.5) + float4(0.5,0.5,0.5,0.5);
  r10.xyzw = saturate(r10.xyzw * cb5[7].xyzw + r12.xyzw);
  r10.xyzw = r10.xyzw * r10.xyzw;
  r10.xyzw = cb5[6].xyzw * r10.xyzw;
  r8.yzw = r7.xyz * cb1[126].www + cb1[126].xyz;
  r12.xyz = cb1[127].www * float3(0.0399999991,0.0399999991,0.0399999991) + cb1[127].xyz;
  r0.zw = float2(1,0.5) * v3.xy;
  r11.zw = v3.xy * float2(1,0.5) + float2(0,0.5);
  r14.xyzw = t10.Sample(s4_s, r0.zw).xyzw;
  r15.xyzw = t10.Sample(s4_s, r11.zw).xyzw;
  r0.z = r15.w * 0.00392156886 + r14.w;
  r0.z = -0.00196078443 + r0.z;
  r0.z = r0.z * cb5[18].w + cb5[20].w;
  r13.xyz = r14.xyz * r14.xyz;
  r13.xyz = r13.xyz * cb5[18].xyz + cb5[20].xyz;
  r0.z = exp2(r0.z);
  r0.z = -0.0185813606 + r0.z;
  r14.xyzw = r15.xyzw * cb5[19].xyzw + cb5[21].xyzw;
  r6.w = 1;
  r0.w = dot(r14.xyzw, r6.xyzw);
  r0.w = max(0, r0.w);
  r0.z = r0.z * r0.w;
  r13.xyz = r0.zzz * r13.xyz;
  r13.xyz = cb1[146].xyz * r13.xyz;
  r0.z = dot(r13.xyz, float3(0.300000012,0.589999974,0.109999999));
  r13.xyz = r13.xyz * r8.yzw;
  r14.xyz = r7.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r14.xyz = r7.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r14.xyz;
  r7.xyz = r7.xyz * float3(2.75519991,2.75519991,2.75519991) + r14.xyz;
  r7.xyz = float3(1.33200002,1.33200002,1.33200002) + r7.xyz;
  r7.xyz = max(float3(1,1,1), r7.xyz);
  r11.xy = (uint2)r11.xy;
  if (r0.x == 0) {
    r0.w = cb4[3].x;
    r4.w = cb4[3].y;
    r6.w = cb4[3].z;
    r7.w = cb4[1].z;
    r11.zw = cb4[1].xy;
    r12.w = cb4[2].x;
  } else {
    r0.w = cb4[43].x;
    r4.w = cb4[43].y;
    r6.w = cb4[43].z;
    r7.w = cb4[41].z;
    r11.zw = cb4[41].xy;
    r12.w = cb4[42].x;
  }
  r0.w = v6.w * r0.w + r4.w;
  r0.w = log2(r0.w);
  r0.w = r0.w * r6.w;
  r0.w = max(0, r0.w);
  r0.w = (uint)r0.w;
  r4.w = (int)r7.w + -1;
  r0.w = min((uint)r4.w, (uint)r0.w);
  r11.xy = (uint2)r11.xy >> (uint2)r12.ww;
  r0.w = mad((int)r0.w, (int)r11.w, (int)r11.y);
  r0.w = mad((int)r0.w, (int)r11.z, (int)r11.x);
  if (r0.x == 0) {
    r4.w = cb4[0].z;
    r6.w = cb4[6].x;
    r7.w = cb4[6].z;
    r11.x = cb4[6].w;
    r11.yzw = cb4[5].xyz;
  } else {
    r4.w = cb4[40].z;
    r6.w = cb4[46].x;
    r7.w = cb4[46].z;
    r11.x = cb4[46].w;
    r11.yzw = cb4[45].xyz;
  }
  if (r4.w != 0) {
    r14.xyzw = (int4)r6.wwww & int4(255,2,4,8);
    r14.xyzw = r14.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb4[7].x != 0) {
      r4.w = cb4[7].x;
      r12.w = 0;
      while (true) {
        r15.x = cmp((uint)r12.w >= asuint(cb4[7].x));
        if (r15.x != 0) break;
        r15.x = dot(cb4[8].xyzw, icb[r12.w+0].xyzw);
        r15.x = cmp(r13.w < r15.x);
        if (r15.x != 0) {
          r4.w = r12.w;
          break;
        }
        r12.w = (int)r12.w + 1;
      }
      r12.w = cmp((uint)r4.w < asuint(cb4[7].x));
      if (r12.w != 0) {
        r12.w = (uint)r4.w << 2;
        r15.xyzw = cb4[r12.w+10].xyzw * r5.yyyy;
        r15.xyzw = r5.xxxx * cb4[r12.w+9].xyzw + r15.xyzw;
        r15.xyzw = r5.zzzz * cb4[r12.w+11].xyzw + r15.xyzw;
        r15.xyzw = cb4[r12.w+12].xyzw + r15.xyzw;
        r16.xyzw = r15.xyxy / r15.wwww;
        r15.xy = cmp(r16.zw >= cb4[r4.w+25].xy);
        r17.xy = cmp(cb4[r4.w+25].zw >= r16.zw);
        r15.xy = r15.xy ? r17.xy : 0;
        r4.w = r15.y ? r15.x : 0;
        if (r4.w != 0) {
          r16.xyzw = r16.xyzw * cb4[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r15.xy = frac(r16.zw);
          r16.xyzw = floor(r16.xyzw);
          r17.xyzw = float4(0.5,1.5,0.5,0.5) + r16.zwzw;
          r17.xyzw = cb4[29].zwzw * r17.xyzw;
          r18.x = t0.SampleLevel(s1_s, r17.xy, 0).x;
          r16.xyzw = float4(1.5,1.5,1.5,0.5) + r16.xyzw;
          r16.xyzw = cb4[29].zwzw * r16.xyzw;
          r18.y = t0.SampleLevel(s1_s, r16.xy, 0).x;
          r18.z = t0.SampleLevel(s1_s, r16.zw, 0).x;
          r18.w = t0.SampleLevel(s1_s, r17.zw, 0).x;
          r16.xyzw = r18.xyzw + -r15.zzzz;
          r16.xyzw = saturate(r16.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r15.zw = r16.zy + -r16.wx;
          r15.xz = r15.xx * r15.zw + r16.wx;
          r4.w = r15.z + -r15.x;
          r4.w = r15.y * r4.w + r15.x;
        } else {
          r4.w = 1;
        }
      } else {
        r4.w = 1;
      }
    } else {
      r4.w = 1;
    }
    if (r14.x != 0) {
      r14.x = 1;
      r12.w = dot(float4(1,1,1,1), r14.xyzw);
      r10.x = 1;
      r14.x = dot(r10.xyzw, r14.xyzw);
      r14.x = -1 + r14.x;
      r12.w = r12.w * r14.x + 1;
      r7.w = saturate(r13.w * r7.w + r11.x);
      r7.w = r7.w * r7.w;
      r11.x = r12.w + -r4.w;
      r14.x = r7.w * r11.x + r4.w;
      r14.y = min(1, r14.x);
    } else {
      r14.xy = float2(1,1);
    }
    r4.w = r14.x + r14.y;
    r4.w = cmp(0 < r4.w);
    if (r4.w != 0) {
      r14.yzw = float3(0.318309873,0.318309873,0.318309873) * r8.yzw;
      r11.xyz = r14.xxx * r11.yzw;
      r11.xyz = r14.yzw * r11.xyz;
    } else {
      r11.xyz = float3(0,0,0);
    }
    r4.w = (uint)r6.w >> 8;
    r4.w = (int)r4.w & asint(cb2[16].w);
    r11.xyz = r4.www ? r11.xyz : float3(0,0,0);
    r10.x = 1;
  } else {
    r11.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r4.w = (uint)r0.w << 1;
    r4.w = t2.Load(r4.w).x;
    r4.w = min(asuint(cb4[0].x), (uint)r4.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r6.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r6.w = t2.Load(r6.w).x;
  } else {
    r7.w = (uint)r0.w << 1;
    r7.w = t5.Load(r7.w).x;
    r4.w = min(asuint(cb4[40].x), (uint)r7.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r0.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r6.w = t5.Load(r0.w).x;
  }
  r0.w = r0.x ? cb4[40].x : cb4[0].x;
  r0.w = min((uint)r4.w, (uint)r0.w);
  r14.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.yzw;
  r15.xyz = r11.xyz;
  r4.w = 0;
  while (true) {
    r7.w = cmp((uint)r4.w >= (uint)r0.w);
    if (r7.w != 0) break;
    r7.w = (int)r4.w + (int)r6.w;
    if (r0.x == 0) {
      r11.w = t3.Load(r7.w).x;
      r12.w = (int)r11.w * 5;
      r16.xyzw = t1.Load(r12.w).xyzw;
      r17.xyzw = mad((int4)r11.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t1.Load(r17.x).xyzw;
      r19.xyzw = t1.Load(r17.y).wxyz;
      r17.xyz = t1.Load(r17.z).xyw;
      r20.xyz = t1.Load(r17.w).xyz;
    } else {
      r7.w = t6.Load(r7.w).x;
      r11.w = (int)r7.w * 5;
      r16.xyzw = t4.Load(r11.w).xyzw;
      r21.xyzw = mad((int4)r7.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t4.Load(r21.x).xyzw;
      r19.xyzw = t4.Load(r21.y).wxyz;
      r17.xyz = t4.Load(r21.z).xyw;
      r20.xyz = t4.Load(r21.w).xyz;
    }
    r7.w = cmp(r18.w == 0.000000);
    r11.w = cmp(-2 < r17.x);
    r16.xyz = r16.xyz + -r5.xyz;
    r12.w = dot(r16.xyz, r16.xyz);
    r13.w = rsqrt(r12.w);
    r21.xyz = r16.xyz * r13.www;
    r13.w = r16.w * r16.w;
    r12.w = r13.w * r12.w;
    r12.w = -r12.w * r12.w + 1;
    r12.w = max(0, r12.w);
    r12.w = r12.w * r12.w;
    r22.xyz = r16.xyz * r16.www;
    r13.w = dot(r22.xyz, r22.xyz);
    r13.w = min(1, r13.w);
    r13.w = 1 + -r13.w;
    r13.w = log2(r13.w);
    r13.w = r18.w * r13.w;
    r13.w = exp2(r13.w);
    r12.w = r7.w ? r12.w : r13.w;
    r13.w = dot(r21.xyz, r19.yzw);
    r13.w = r13.w + -r17.x;
    r13.w = saturate(r13.w * r17.y);
    r13.w = r13.w * r13.w;
    r13.w = r13.w * r12.w;
    r11.w = r11.w ? r13.w : r12.w;
    r12.w = cmp(0 < r11.w);
    if (r12.w != 0) {
      r12.w = (int)r19.x & 255;
      r12.w = r12.w ? 1 : 0;
      if (r12.w != 0) {
        r21.xyzw = (int4)r19.xxxx & int4(1,2,4,8);
        r21.xyzw = r21.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r12.w = (uint)r19.x >> 4;
        if (1 == 0) r13.w = 0; else if (1+4 < 32) {         r13.w = (uint)r19.x << (32-(1 + 4)); r13.w = (uint)r13.w >> (32-1);        } else r13.w = (uint)r19.x >> 4;
        r22.x = r13.w ? 1 : 0;
        r17.xyw = (int3)r12.www & int3(2,4,8);
        r22.yzw = r17.xyw ? float3(1,1,1) : float3(0,0,0);
        r12.w = dot(r22.xyzw, float4(1,1,1,1));
        r13.w = dot(r21.xyzw, float4(1,1,1,1));
        r14.w = dot(r10.xyzw, r21.xyzw);
        r14.w = -1 + r14.w;
        r13.w = r13.w * r14.w + 1;
        r17.xy = r13.ww * r12.ww;
      } else {
        r17.xy = float2(1,1);
      }
      r12.w = r17.x + r17.y;
      r12.w = cmp(0 < r12.w);
      if (r12.w != 0) {
        r12.w = f16tof32(r17.z);
        r13.w = 0.5 * r12.w;
        r17.yzw = -r13.www * r20.xyz + r16.xyz;
        r16.xyz = r13.www * r20.xyz + r16.xyz;
        r12.w = cmp(0 < r12.w);
        if (r12.w != 0) {
          r12.w = dot(r17.yzw, r17.yzw);
          r13.w = dot(r16.xyz, r16.xyz);
          r12.w = rsqrt(r12.w);
          r13.w = rsqrt(r13.w);
          r12.w = r13.w * r12.w;
          r13.w = dot(r17.yzw, r16.xyz);
          r13.w = r13.w * r12.w;
          r13.w = r13.w * 0.5 + r12.w;
          r13.w = 0.5 + r13.w;
          r12.w = r12.w / r13.w;
        } else {
          r13.w = dot(r17.yzw, r17.yzw);
          r13.w = 1 + r13.w;
          r12.w = rcp(r13.w);
        }
        r7.w = r7.w ? r12.w : 1;
        r16.xyz = r14.xyz * r7.www;
        r17.yzw = r18.xyz * r11.www;
        r17.xyz = r17.yzw * r17.xxx;
        r16.xyz = r17.xyz * r16.xyz;
      } else {
        r16.xyz = float3(0,0,0);
      }
    } else {
      r16.xyz = float3(0,0,0);
    }
    r7.w = (uint)r19.x >> 8;
    r7.w = (int)r7.w & asint(cb2[16].w);
    r16.xyz = r16.xyz + r15.xyz;
    r15.xyz = r7.www ? r16.xyz : r15.xyz;
    r4.w = (int)r4.w + 1;
  }
  r0.x = dot(r4.yzx, r6.xyz);
  r0.w = r0.x + r0.x;
  r4.xyz = r0.www * r6.zxy + -r4.xyz;
  r0.x = saturate(r0.x);
  r0.w = log2(r0.y);
  r0.w = -r0.w * 1.20000005 + 1;
  r6.x = -1 + cb1[163].z;
  r0.w = r6.x + -r0.w;
  r4.w = asint(cb0[28].x);
  r4.xyz = t7.SampleLevel(s2_s, r4.xyzw, r0.w).xyz;
  r4.xyz = cb0[31].xxx * r4.xyz;
  r4.xyz = cb1[146].xyz * r4.xyz;
  r0.w = dot(cb1[146].xyz, float3(0.300000012,0.589999974,0.109999999));
  r0.w = cb0[29].w * r0.w;
  r4.w = saturate(r0.y * cb1[165].x + cb1[165].y);
  r6.x = r4.w * -2 + 3;
  r4.w = r4.w * r4.w;
  r4.w = r6.x * r4.w;
  r0.w = max(9.99999975e-005, r0.w);
  r0.w = r0.z / r0.w;
  r0.w = min(cb1[165].z, r0.w);
  r0.w = -1 + r0.w;
  r0.w = r4.w * r0.w + 1;
  r4.xyz = r4.xyz * r0.www;
  r6.xyzw = float4(50,0.449999988,0.449999988,0.449999988) * r12.yxyz;
  r6.yzw = r6.yzw * r0.zzz + -r4.xyz;
  r4.xyz = r8.xxx * r6.yzw + r4.xyz;
  r10.xyzw = r0.yyyy * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.y = r10.x * r10.x;
  r0.x = -9.27999973 * r0.x;
  r0.x = exp2(r0.x);
  r0.x = min(r0.y, r0.x);
  r0.x = r0.x * r10.x + r10.y;
  r0.xy = r0.xx * float2(-1.03999996,1.03999996) + r10.zw;
  r6.x = saturate(r6.x);
  r0.y = r6.x * r0.y;
  r0.xyz = r12.xyz * r0.xxx + r0.yyy;
  r0.xyz = r4.xyz * r0.xyz;
  r4.xyz = r12.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r4.xyz = r12.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r4.xyz;
  r4.xyz = r12.xyz * float3(2.75519991,2.75519991,2.75519991) + r4.xyz;
  r4.xyz = float3(1.33200002,1.33200002,1.33200002) + r4.xyz;
  r4.xyz = max(float3(1,1,1), r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r15.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t8.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v5.w * r1.w;
    r1.xyz = v5.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v5.xyz;
    r2.x = v5.w;
  }
  r2.yzw = r12.xyz * float3(0.449999988,0.449999988,0.449999988) + r8.yzw;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r9.xyz = max(float3(0,0,0), cb6[2].xyz);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r2.yzw = -cb2[5].xyz + r5.xyz;
    r3.xyz = float3(1,1,1) + cb2[11].xyz;
    r2.yzw = cmp(r3.xyz < abs(r2.yzw));
    r0.w = (int)r2.z | (int)r2.y;
    r0.w = (int)r2.w | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r9.xyzw = r0.wwww ? r3.yzwx : r9.xyzw;
    o0.w = r9.w;
  } else {
    o0.w = r9.w;
  }
  r0.xyz = r13.xyz * r7.xyz + r0.xyz;
  r0.xyz = r0.xyz + r9.xyz;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  return;
}