// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:53:54 2019
Texture3D<float4> t10 : register(t10);

TextureCubeArray<float4> t9 : register(t9);

Buffer<uint4> t8 : register(t8);

Buffer<uint4> t7 : register(t7);

Buffer<float4> t6 : register(t6);

Buffer<uint4> t5 : register(t5);

Buffer<uint4> t4 : register(t4);

Buffer<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t1 : register(t1);

Texture3D<uint4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[7];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[6];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[182];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  nointerpolation uint v2 : PACKED_EYE_INDEX0,
  float4 v3 : TEXCOORD7,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v2.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.y = cb1[128].w;
    r0.zw = cb1[129].xy;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r9.xyz = cb1[128].xyz;
    r10.xy = cb1[121].xy;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.y = cb3[128].w;
    r0.zw = cb3[129].xy;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r9.xyz = cb3[128].xyz;
    r10.xy = cb3[121].xy;
  }
  r11.xyz = v1.zxy * v0.yzx;
  r11.xyz = v1.yzx * v0.zxy + -r11.xyz;
  r11.xyz = v1.www * r11.xyz;
  r12.xyz = v4.xyz;
  r12.w = 1;
  r4.x = dot(r12.xyzw, r4.xyzw);
  r4.y = dot(r12.xyzw, r5.xyzw);
  r4.z = dot(r12.xyzw, r6.xyzw);
  r4.w = dot(r12.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r6.xyz = r0.yyy * float3(0,0,1) + r9.xyz;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = r6.yyy * r11.xyz;
  r6.xyw = r6.xxx * v0.xyz + r7.xyz;
  r6.xyz = r6.zzz * v1.xyz + r6.xyw;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r0.y = dot(r6.xyz, r4.xyz);
  r4.w = max(0, r0.y);
  r6.w = 1 + -r4.w;
  r6.w = log2(abs(r6.w));
  r6.w = cb6[5].w * r6.w;
  r6.w = exp2(r6.w);
  r6.w = r6.w * 0.959999979 + 0.0399999991;
  r7.x = cb6[6].x + -cb6[6].y;
  r7.w = saturate(r6.w * r7.x + cb6[6].y);
  r8.yzw = saturate(cb6[4].xyz);
  r9.xyz = saturate(cb6[5].xyz);
  r0.z = r9.z * r0.w + r0.z;
  r0.w = cmp(0 < cb2[12].z);
  if (r0.w != 0) {
    r11.xyz = r5.xyz * cb1[178].xyz + cb1[179].xyz;
    r11.xyz = max(float3(0,0,0), r11.xyz);
    r11.xyz = min(float3(0.99000001,0.99000001,0.99000001), r11.xyz);
    r11.xyz = cb1[180].xyz * r11.xyz;
    r12.xyz = (int3)r11.xyz;
    r12.w = 0;
    r12.xyzw = t0.Load(r12.xyzw).xyzw;
    r12.xyzw = (uint4)r12.xyzw;
    r0.w = 1 + cb1[180].w;
    r11.xyz = r11.xyz / r12.www;
    r11.xyz = frac(r11.xyz);
    r11.xyz = cb1[180].www * r11.xyz;
    r11.xyz = r12.xyz * r0.www + r11.xyz;
    r11.xyz = float3(0.5,0.5,0.5) + r11.xyz;
    r11.xyz = cb1[181].xyz * r11.xyz;
    r11.x = t1.SampleLevel(s0_s, r11.xyz, 0).x;
  } else {
    r0.w = cmp(0 < cb2[10].w);
    r11.x = r0.w ? cb5[5].x : 1;
  }
  r0.w = 0.0799999982 * r9.y;
  r9.yzw = -r9.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r8.yzw;
  r9.yzw = r9.xxx * r9.yzw + r0.www;
  r8.yzw = -r8.yzw * r9.xxx + r8.yzw;
  r8.yzw = r8.yzw * cb1[126].www + cb1[126].xyz;
  r9.xyz = r9.yzw * cb1[127].www + cb1[127].xyz;
  r10.xy = v4.xy + -r10.xy;
  r10.xy = (uint2)r10.xy;
  if (r0.x == 0) {
    r0.w = cb4[3].x;
    r6.w = cb4[3].y;
    r9.w = cb4[3].z;
    r10.z = cb4[1].z;
    r12.xy = cb4[1].xy;
    r10.w = cb4[2].x;
  } else {
    r0.w = cb4[43].x;
    r6.w = cb4[43].y;
    r9.w = cb4[43].z;
    r10.z = cb4[41].z;
    r12.xy = cb4[41].xy;
    r10.w = cb4[42].x;
  }
  r0.w = v4.w * r0.w + r6.w;
  r0.w = log2(r0.w);
  r0.w = r0.w * r9.w;
  r0.w = max(0, r0.w);
  r0.w = (uint)r0.w;
  r6.w = (int)r10.z + -1;
  r0.w = min((uint)r6.w, (uint)r0.w);
  r10.xy = (uint2)r10.xy >> (uint2)r10.ww;
  r0.w = mad((int)r0.w, (int)r12.y, (int)r10.y);
  r0.w = mad((int)r0.w, (int)r12.x, (int)r10.x);
  if (r0.x == 0) {
    r6.w = cb4[0].z;
    r9.w = cb4[6].x;
    r10.xy = cb4[6].zw;
    r12.xyz = cb4[5].xyz;
    r13.xyz = cb4[4].xyz;
  } else {
    r6.w = cb4[40].z;
    r9.w = cb4[46].x;
    r10.xy = cb4[46].zw;
    r12.xyz = cb4[45].xyz;
    r13.xyz = cb4[44].xyz;
  }
  if (r6.w != 0) {
    r14.xyzw = (int4)r9.wwww & int4(255,2,4,8);
    r14.xyzw = r14.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb4[7].x != 0) {
      r6.w = cb4[7].x;
      r10.z = 0;
      while (true) {
        r10.w = cmp((uint)r10.z >= asuint(cb4[7].x));
        if (r10.w != 0) break;
        r10.w = dot(cb4[8].xyzw, icb[r10.z+0].xyzw);
        r10.w = cmp(v4.w < r10.w);
        if (r10.w != 0) {
          r6.w = r10.z;
          break;
        }
        r10.z = (int)r10.z + 1;
      }
      r10.z = cmp((uint)r6.w < asuint(cb4[7].x));
      if (r10.z != 0) {
        r10.z = (uint)r6.w << 2;
        r15.xyzw = cb4[r10.z+10].xyzw * r5.yyyy;
        r15.xyzw = r5.xxxx * cb4[r10.z+9].xyzw + r15.xyzw;
        r15.xyzw = r5.zzzz * cb4[r10.z+11].xyzw + r15.xyzw;
        r15.xyzw = cb4[r10.z+12].xyzw + r15.xyzw;
        r16.xyzw = r15.xyxy / r15.wwww;
        r10.zw = cmp(r16.zw >= cb4[r6.w+25].xy);
        r15.xy = cmp(cb4[r6.w+25].zw >= r16.zw);
        r10.zw = r10.zw ? r15.xy : 0;
        r6.w = r10.w ? r10.z : 0;
        if (r6.w != 0) {
          r16.xyzw = r16.xyzw * cb4[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r10.zw = frac(r16.zw);
          r16.xyzw = floor(r16.xyzw);
          r17.xyzw = float4(0.5,1.5,0.5,0.5) + r16.zwzw;
          r17.xyzw = cb4[29].zwzw * r17.xyzw;
          r18.x = t2.SampleLevel(s1_s, r17.xy, 0).x;
          r16.xyzw = float4(1.5,1.5,1.5,0.5) + r16.xyzw;
          r16.xyzw = cb4[29].zwzw * r16.xyzw;
          r18.y = t2.SampleLevel(s1_s, r16.xy, 0).x;
          r18.z = t2.SampleLevel(s1_s, r16.zw, 0).x;
          r18.w = t2.SampleLevel(s1_s, r17.zw, 0).x;
          r15.xyzw = r18.xyzw + -r15.zzzz;
          r15.xyzw = saturate(r15.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r15.yz = r15.zy + -r15.wx;
          r15.xy = r10.zz * r15.yz + r15.wx;
          r6.w = r15.y + -r15.x;
          r6.w = r10.w * r6.w + r15.x;
        } else {
          r6.w = 1;
        }
      } else {
        r6.w = 1;
      }
    } else {
      r6.w = 1;
    }
    if (r14.x != 0) {
      r14.x = 1;
      r10.z = dot(float4(1,1,1,1), r14.xyzw);
      r10.w = -1 + r10.z;
      r10.z = r10.z * r10.w + 1;
      r10.x = saturate(v4.w * r10.x + r10.y);
      r10.x = r10.x * r10.x;
      r10.y = r10.z + -r6.w;
      r10.x = r10.x * r10.y + r6.w;
      r10.y = min(1, r10.x);
    } else {
      r10.xy = float2(1,1);
    }
    r6.w = r10.x + r10.y;
    r6.w = cmp(0 < r6.w);
    if (r6.w != 0) {
      r6.w = dot(r13.xyz, r13.xyz);
      r6.w = rsqrt(r6.w);
      r10.yzw = r13.xyz * r6.www;
      r6.w = dot(r6.xyz, r10.yzw);
      r12.w = saturate(r6.w);
      r13.x = max(0.0199999996, r0.z);
      r10.y = dot(r4.xyz, r10.yzw);
      r10.z = r10.y * 2 + 2;
      r10.z = rsqrt(r10.z);
      r6.w = r6.w + r0.y;
      r6.w = saturate(r6.w * r10.z);
      r10.y = saturate(r10.z * r10.y + r10.z);
      r10.z = 9.99999975e-006 + abs(r0.y);
      r10.z = min(1, r10.z);
      r13.yzw = r12.www * r8.yzw;
      r10.w = r13.x * r13.x;
      r14.x = r10.w * r10.w;
      r14.y = r6.w * r14.x + -r6.w;
      r6.w = r14.y * r6.w + 1;
      r6.w = r6.w * r6.w;
      r6.w = 3.14159274 * r6.w;
      r6.w = r14.x / r6.w;
      r13.x = -r13.x * r13.x + 1;
      r14.x = r10.z * r13.x + r10.w;
      r10.w = r12.w * r13.x + r10.w;
      r10.z = r10.z * r10.w;
      r10.z = r12.w * r14.x + r10.z;
      r10.z = rcp(r10.z);
      r6.w = r10.z * r6.w;
      r10.y = 1 + -r10.y;
      r10.z = r10.y * r10.y;
      r10.z = r10.z * r10.z;
      r10.w = r10.z * r10.y;
      r13.x = saturate(50 * r9.y);
      r10.y = -r10.z * r10.y + 1;
      r14.xyz = r10.yyy * r9.xyz;
      r10.yzw = r13.xxx * r10.www + r14.xyz;
      r6.w = 0.5 * r6.w;
      r10.yzw = r6.www * r10.yzw;
      r10.yzw = r12.www * r10.yzw;
      r10.yzw = r13.yzw * float3(0.318309873,0.318309873,0.318309873) + r10.yzw;
      r12.xyz = r12.xyz * r10.xxx;
      r10.xyz = r12.xyz * r10.yzw;
    } else {
      r10.xyz = float3(0,0,0);
    }
    r6.w = (uint)r9.w >> 8;
    r6.w = (int)r6.w & asint(cb2[16].w);
    r10.xyz = r6.www ? r10.xyz : float3(0,0,0);
    r11.x = 1;
  } else {
    r10.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r6.w = (uint)r0.w << 1;
    r6.w = t4.Load(r6.w).x;
    r6.w = min(asuint(cb4[0].x), (uint)r6.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r9.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r9.w = t4.Load(r9.w).x;
  } else {
    r10.w = (uint)r0.w << 1;
    r10.w = t7.Load(r10.w).x;
    r6.w = min(asuint(cb4[40].x), (uint)r10.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r0.w = (((uint)r0.w << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r9.w = t7.Load(r0.w).x;
  }
  r0.w = r0.x ? cb4[40].x : cb4[0].x;
  r0.w = min((uint)r6.w, (uint)r0.w);
  r6.w = dot(-r4.xyz, r6.xyz);
  r6.w = r6.w + r6.w;
  r12.xyz = r6.xyz * -r6.www + -r4.xyz;
  r6.w = max(0.0199999996, r0.z);
  r10.w = r6.w * r6.w;
  r6.w = -r6.w * r6.w + 1;
  r12.w = r0.y + r0.y;
  r13.x = r12.w * r0.y + -1;
  r13.y = 9.99999975e-006 + abs(r0.y);
  r13.y = min(1, r13.y);
  r14.xyz = float3(0.318309873,0.318309873,0.318309873) * r8.yzw;
  r13.z = r10.w * r10.w;
  r13.w = 50 * r9.y;
  r13.w = saturate(r13.w);
  r11.yw = float2(1,1);
  r15.xyz = r10.xyz;
  r14.w = 0;
  while (true) {
    r15.w = cmp((uint)r14.w >= (uint)r0.w);
    if (r15.w != 0) break;
    r15.w = (int)r9.w + (int)r14.w;
    if (r0.x == 0) {
      r16.x = t5.Load(r15.w).x;
      r16.y = (int)r16.x * 5;
      r17.xyzw = t3.Load(r16.y).xyzw;
      r16.xyzw = mad((int4)r16.xxxx, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t3.Load(r16.x).xyzw;
      r19.xyzw = t3.Load(r16.y).wxyz;
      r20.xyzw = t3.Load(r16.z).xyzw;
      r16.xyzw = t3.Load(r16.w).wxyz;
    } else {
      r15.w = t8.Load(r15.w).x;
      r21.x = (int)r15.w * 5;
      r17.xyzw = t6.Load(r21.x).xyzw;
      r21.xyzw = mad((int4)r15.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t6.Load(r21.x).xyzw;
      r19.xyzw = t6.Load(r21.y).wxyz;
      r20.xyzw = t6.Load(r21.z).xyzw;
      r16.xyzw = t6.Load(r21.w).wxyz;
    }
    r15.w = cmp(r18.w == 0.000000);
    r21.x = cmp(-2 < r20.x);
    r17.xyz = r17.xyz + -r5.xyz;
    r21.y = dot(r17.xyz, r17.xyz);
    r21.z = rsqrt(r21.y);
    r22.xyz = r21.zzz * r17.xyz;
    r21.z = r17.w * r17.w;
    r21.y = r21.y * r21.z;
    r21.y = -r21.y * r21.y + 1;
    r21.y = max(0, r21.y);
    r21.y = r21.y * r21.y;
    r23.xyz = r17.xyz * r17.www;
    r17.w = dot(r23.xyz, r23.xyz);
    r17.w = min(1, r17.w);
    r17.w = 1 + -r17.w;
    r17.w = log2(r17.w);
    r17.w = r18.w * r17.w;
    r17.w = exp2(r17.w);
    r17.w = r15.w ? r21.y : r17.w;
    r18.w = dot(r22.xyz, r19.yzw);
    r18.w = r18.w + -r20.x;
    r18.w = saturate(r18.w * r20.y);
    r18.w = r18.w * r18.w;
    r18.w = r18.w * r17.w;
    r17.w = r21.x ? r18.w : r17.w;
    r18.w = cmp(0 < r17.w);
    if (r18.w != 0) {
      r18.w = (int)r19.x & 255;
      r18.w = r18.w ? 1 : 0;
      if (r18.w != 0) {
        r21.xyzw = (int4)r19.xxxx & int4(1,2,4,8);
        r21.xyzw = r21.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r18.w = (uint)r19.x >> 4;
        if (1 == 0) r19.y = 0; else if (1+4 < 32) {         r19.y = (uint)r19.x << (32-(1 + 4)); r19.y = (uint)r19.y >> (32-1);        } else r19.y = (uint)r19.x >> 4;
        r22.x = r19.y ? 1 : 0;
        r19.yzw = (int3)r18.www & int3(2,4,8);
        r22.yzw = r19.yzw ? float3(1,1,1) : float3(0,0,0);
        r18.w = dot(r22.xyzw, float4(1,1,1,1));
        r19.y = dot(r21.xyzw, float4(1,1,1,1));
        r19.z = dot(r11.xyyy, r21.xyzw);
        r19.z = -1 + r19.z;
        r19.y = r19.y * r19.z + 1;
        r19.yz = r19.yy * r18.ww;
      } else {
        r19.yz = float2(1,1);
      }
      r18.w = r19.y + r19.z;
      r18.w = cmp(0 < r18.w);
      if (r18.w != 0) {
        r18.w = f16tof32(r20.w);
        r19.z = 0.5 * r18.w;
        r20.xyw = -r19.zzz * r16.yzw + r17.xyz;
        r16.yzw = r19.zzz * r16.yzw + r17.xyz;
        r17.x = cmp(0 < r18.w);
        if (r17.x != 0) {
          r17.y = dot(r20.xyw, r20.xyw);
          r17.z = dot(r16.yzw, r16.yzw);
          r17.y = rsqrt(r17.y);
          r17.z = rsqrt(r17.z);
          r19.z = r17.y * r17.z;
          r19.w = dot(r20.xyw, r16.yzw);
          r19.w = r19.w * r19.z;
          r21.x = r19.w * 0.5 + r19.z;
          r21.x = 0.5 + r21.x;
          r21.y = r19.z / r21.x;
          r19.z = dot(r6.xyz, r20.xyw);
          r21.z = dot(r6.xyz, r16.yzw);
          r17.z = r21.z * r17.z;
          r17.y = r19.z * r17.y + r17.z;
          r21.x = 0.5 * r17.y;
        } else {
          r17.y = dot(r20.xyw, r20.xyw);
          r17.z = 1 + r17.y;
          r21.y = rcp(r17.z);
          r17.y = rsqrt(r17.y);
          r22.xyz = r20.xyw * r17.yyy;
          r21.x = dot(r6.xyz, r22.xyz);
          r19.w = 1;
        }
        r17.y = cmp(0 < r20.z);
        r17.z = r20.z * r20.z;
        r17.z = saturate(r17.z * r21.y);
        r17.z = sqrt(r17.z);
        r19.z = cmp(r21.x < r17.z);
        r21.z = max(r21.x, -r17.z);
        r21.z = r21.z + r17.z;
        r21.z = r21.z * r21.z;
        r17.z = 4 * r17.z;
        r17.z = r21.z / r17.z;
        r17.z = r19.z ? r17.z : r21.x;
        r17.y = saturate(r17.y ? r17.z : r21.x);
        r15.w = r15.w ? r21.y : 1;
        r16.yzw = r16.yzw + -r20.xyw;
        r17.z = dot(r12.xyz, r16.yzw);
        r21.xyz = r17.zzz * r12.xyz + -r16.yzw;
        r19.z = dot(r20.xyw, r21.xyz);
        r17.z = r17.z * r17.z;
        r17.z = r18.w * r18.w + -r17.z;
        r17.z = saturate(r19.z / r17.z);
        r16.yzw = r17.zzz * r16.yzw + r20.xyw;
        r16.yzw = r17.xxx ? r16.yzw : r20.xyw;
        r17.x = dot(r16.yzw, r16.yzw);
        r17.x = rsqrt(r17.x);
        r16.yzw = r17.xxx * r16.yzw;
        r17.z = r20.z * r17.x;
        r17.z = saturate(r17.z * r6.w);
        r16.x = saturate(r17.x * r16.x);
        r17.x = dot(r6.xyz, r16.yzw);
        r16.y = dot(r4.xyz, r16.yzw);
        r16.z = r16.y * 2 + 2;
        r16.z = rsqrt(r16.z);
        r16.w = r17.x + r0.y;
        r16.w = saturate(r16.w * r16.z);
        r16.z = saturate(r16.z * r16.y + r16.z);
        r18.w = cmp(0 < r17.z);
        if (r18.w != 0) {
          r19.z = -r17.z * r17.z + 1;
          r19.z = sqrt(r19.z);
          r20.x = dot(r0.yy, r17.xx);
          r20.y = r20.x + -r16.y;
          r20.z = cmp(r20.y >= r19.z);
          if (r20.z != 0) {
            r16.w = 1;
            r16.z = abs(r0.y);
          } else {
            r20.z = -r20.y * r20.y + 1;
            r20.z = rsqrt(r20.z);
            r20.z = r20.z * r17.z;
            r20.w = -r20.y * r17.x + r0.y;
            r21.x = r20.z * r20.w;
            r20.y = -r20.y * r16.y + r13.x;
            r21.y = r17.x * r17.x;
            r21.y = -r0.y * r0.y + -r21.y;
            r21.y = 1 + r21.y;
            r21.y = -r16.y * r16.y + r21.y;
            r20.x = saturate(r20.x * r16.y + r21.y);
            r20.x = sqrt(r20.x);
            r20.xy = r20.zz * r20.xy;
            r21.y = r20.x * r0.y;
            r21.z = r21.y + r21.y;
            r21.w = r17.x * r19.z + r0.y;
            r20.z = r20.z * r20.w + r21.w;
            r20.w = r16.y * r19.z + r20.y;
            r20.w = 1 + r20.w;
            r22.xy = r20.xz * r20.ww;
            r22.z = r21.z * r20.z;
            r21.y = r20.z * r21.y;
            r21.y = 0.5 * r21.y;
            r21.y = r22.x * -0.5 + r21.y;
            r21.y = r22.y * r21.y;
            r22.w = -r22.x * 2 + r22.z;
            r22.z = r22.z * r22.w;
            r22.x = r22.x * r22.x + r22.z;
            r22.z = r20.w * r20.w;
            r20.w = r16.y * r19.z + r20.w;
            r20.w = r20.w * -0.5 + -0.5;
            r20.w = r22.y * r20.w;
            r20.w = r21.w * r22.z + r20.w;
            r20.z = r20.z * r20.w + r22.x;
            r20.w = r21.y + r21.y;
            r21.w = r21.y * r21.y;
            r21.w = r20.z * r20.z + r21.w;
            r20.w = r20.w / r21.w;
            r20.z = r20.w * r20.z;
            r20.w = -r20.w * r21.y + 1;
            r20.x = r20.z * r20.x;
            r20.x = r20.w * r21.x + r20.x;
            r20.z = r20.z * r21.z;
            r20.y = r20.w * r20.y + r20.z;
            r17.x = r17.x * r19.z + r20.x;
            r16.y = r16.y * r19.z + r20.y;
            r19.z = r16.y * 2 + 2;
            r19.z = rsqrt(r19.z);
            r17.x = r17.x + r0.y;
            r16.w = saturate(r17.x * r19.z);
            r16.z = saturate(r19.z * r16.y + r19.z);
          }
        }
        r15.w = r15.w * r17.y;
        r16.y = cmp(0 < r16.x);
        r16.x = r16.x * r16.x;
        r17.x = r16.z * 3.5999999 + 0.400000006;
        r16.x = r16.x / r17.x;
        r16.x = r10.w * r10.w + r16.x;
        r16.x = min(1, r16.x);
        r11.z = r16.y ? r16.x : r13.z;
        r16.x = 0.25 * r17.z;
        r16.y = (uint)r11.z >> 1;
        r16.y = (int)r16.y + 0x1fbd1df5;
        r16.y = r16.y * 3 + r17.z;
        r16.x = r16.x * r16.y;
        r16.y = 0.00100000005 + r16.z;
        r16.x = r16.x / r16.y;
        r20.x = r16.x + r11.z;
        r20.y = r11.z / r20.x;
        r17.xz = r18.ww ? r20.xy : r11.zw;
        r16.x = cmp(r19.w < 1);
        r18.w = 1.00010002 + -r19.w;
        r19.z = 1 + r19.w;
        r18.w = r18.w / r19.z;
        r18.w = sqrt(r18.w);
        r19.z = 0.25 * r18.w;
        r19.w = (uint)r17.x >> 1;
        r19.w = (int)r19.w + 0x1fbd1df5;
        r18.w = r19.w * 3 + r18.w;
        r18.w = r19.z * r18.w;
        r16.y = r18.w / r16.y;
        r16.y = r17.x + r16.y;
        r16.y = r17.x / r16.y;
        r16.y = sqrt(r16.y);
        r16.y = r17.z * r16.y;
        r16.x = r16.x ? r16.y : r17.z;
        r16.y = r16.w * r11.z + -r16.w;
        r16.y = r16.y * r16.w + 1;
        r16.y = r16.y * r16.y;
        r16.y = 3.14159274 * r16.y;
        r16.y = r11.z / r16.y;
        r16.x = r16.y * r16.x;
        r11.z = sqrt(r11.z);
        r16.y = 1 + -r11.z;
        r16.w = r13.y * r16.y + r11.z;
        r11.z = r17.y * r16.y + r11.z;
        r11.z = r13.y * r11.z;
        r11.z = r17.y * r16.w + r11.z;
        r11.z = rcp(r11.z);
        r11.z = r16.x * r11.z;
        r16.x = 1 + -r16.z;
        r16.y = r16.x * r16.x;
        r16.y = r16.y * r16.y;
        r16.z = r16.y * r16.x;
        r16.x = -r16.y * r16.x + 1;
        r16.xyw = r16.xxx * r9.xyz;
        r16.xyz = r13.www * r16.zzz + r16.xyw;
        r11.z = 0.5 * r11.z;
        r16.xyz = r11.zzz * r16.xyz;
        r16.xyz = r16.xyz * r15.www;
        r16.xyz = r15.www * r14.xyz + r16.xyz;
        r17.xyz = r18.xyz * r17.www;
        r17.xyz = r17.xyz * r19.yyy;
        r16.xyz = r17.xyz * r16.xyz;
      } else {
        r16.xyz = float3(0,0,0);
      }
    } else {
      r16.xyz = float3(0,0,0);
    }
    r11.z = (uint)r19.x >> 8;
    r11.z = (int)r11.z & asint(cb2[16].w);
    r16.xyz = r16.xyz + r15.xyz;
    r15.xyz = r11.zzz ? r16.xyz : r15.xyz;
    r14.w = (int)r14.w + 1;
  }
  r6.xyz = r12.www * r6.xyz + -r4.xyz;
  r0.x = min(1, r4.w);
  r0.y = log2(r0.z);
  r0.y = -r0.y * 1.20000005 + 1;
  r0.w = -1 + cb1[163].z;
  r0.y = r0.w + -r0.y;
  r6.w = asint(cb0[28].x);
  r4.xyz = t9.SampleLevel(s2_s, r6.xyzw, r0.y).xyz;
  r4.xyz = cb0[31].xxx * r4.xyz;
  r4.xyz = cb1[146].xyz * r4.xyz;
  r0.y = saturate(r0.z * cb1[165].x + cb1[165].y);
  r0.w = r0.y * -2 + 3;
  r0.y = r0.y * r0.y;
  r0.y = r0.w * r0.y;
  r0.w = min(0, cb1[165].z);
  r0.w = -1 + r0.w;
  r0.y = r0.y * r0.w + 1;
  r4.xyz = r4.xyz * r0.yyy;
  r4.xyz = r8.xxx * -r4.xyz + r4.xyz;
  r6.xyzw = r0.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.y = r6.x * r6.x;
  r0.x = -9.27999973 * r0.x;
  r0.x = exp2(r0.x);
  r0.x = min(r0.y, r0.x);
  r0.x = r0.x * r6.x + r6.y;
  r0.xy = r0.xx * float2(-1.03999996,1.03999996) + r6.zw;
  r0.y = r0.y * r13.w;
  r0.xyz = r9.xyz * r0.xxx + r0.yyy;
  r0.xyz = r4.xyz * r0.xyz;
  r4.xyz = r9.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r4.xyz = r9.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r4.xyz;
  r4.xyz = r9.xyz * float3(2.75519991,2.75519991,2.75519991) + r4.xyz;
  r4.xyz = float3(1.33200002,1.33200002,1.33200002) + r4.xyz;
  r4.xyz = max(float3(1,1,1), r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r15.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t10.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v3.w * r1.w;
    r1.xyz = v3.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v3.xyz;
    r2.x = v3.w;
  }
  r2.yzw = r9.xyz * float3(0.449999988,0.449999988,0.449999988) + r8.yzw;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r7.xyz = max(float3(0,0,0), cb6[2].xyz);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r2.yzw = -cb2[5].xyz + r5.xyz;
    r3.xyz = float3(1,1,1) + cb2[11].xyz;
    r2.yzw = cmp(r3.xyz < abs(r2.yzw));
    r0.w = (int)r2.z | (int)r2.y;
    r0.w = (int)r2.w | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r7.xyzw = r0.wwww ? r3.yzwx : r7.xyzw;
    o0.w = r7.w;
  } else {
    o0.w = r7.w;
  }
  r0.xyz = r7.xyz + r0.xyz;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  return;
}