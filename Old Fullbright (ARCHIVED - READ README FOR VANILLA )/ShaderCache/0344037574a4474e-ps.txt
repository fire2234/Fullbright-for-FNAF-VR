//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:53:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 4   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.zxyz, v1.xyzx
mad r11.xyz, v1.zxyz, v0.xyzx, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v5.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
ge r0.y, cb6[12].z, l(0.500000)
movc r7.y, r0.y, cb6[12].x, cb6[12].y
movc r7.z, r0.y, cb6[12].w, cb6[13].x
movc r7.w, r0.y, cb6[13].y, cb6[13].z
dp3 r0.y, r6.zxyz, r4.xyzx
max r4.w, r0.y, l(0.000000)
add r7.x, -r4.w, l(1.000000)
log r7.x, |r7.x|
mul r7.x, r7.x, cb6[13].w
exp r7.x, r7.x
mad r7.x, r7.x, l(0.960000), l(0.040000)
mad r7.xyz, r7.xxxx, r7.yzwy, cb6[8].xyzx
mov_sat r8.yzw, cb6[10].xxyz
mov_sat r9.xyw, cb6[14].xyxz
mad r0.z, r9.y, r0.w, r0.z
mul r0.w, r9.x, cb1[127].w
mad r11.xyz, r8.yzwy, cb1[126].wwww, cb1[126].xyzx
mad r12.xyz, r0.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), cb1[127].xyzx
mul r10.zw, v2.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r13.xy, v2.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.xyxx, t9.xyzw, s3
mad r0.w, r13.w, l(0.00392156886), r14.w
add r0.w, r0.w, l(-0.00196078443)
mad r0.w, r0.w, cb5[18].w, cb5[20].w
mul r14.xyz, r14.xyzx, r14.xyzx
mad r14.xyz, r14.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.w, r0.w
add r0.w, r0.w, l(-0.0185813606)
mad r13.xyzw, r13.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r6.w, r13.xyzw, r6.xyzw
max r6.w, r6.w, l(0.000000)
mul r0.w, r0.w, r6.w
mul r13.xyz, r14.xyzx, r0.wwww
mul r13.xyz, r13.xyzx, cb1[146].xyzx
dp3 r0.w, r13.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r13.xyz, r11.xyzx, r13.xyzx
mad r14.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r8.yzw, r8.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r14.xxyz
add r8.yzw, r8.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r8.yzw, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
add r10.xy, -r10.xyxx, v5.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r10.z, cb4[3].z
  mov r10.w, cb4[1].z
  mov r14.xy, cb4[1].xyxx
  mov r11.w, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r10.z, cb4[43].z
  mov r10.w, cb4[41].z
  mov r14.xy, cb4[41].xyxx
  mov r11.w, cb4[42].x
endif
mad r6.w, v5.w, r6.w, r7.w
log r6.w, r6.w
mul r6.w, r10.z, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.w, r10.w, l(-1)
umin r6.w, r6.w, r7.w
ushr r10.xy, r10.xyxx, r11.wwww
imad r6.w, r6.w, r14.y, r10.y
imad r6.w, r6.w, r14.x, r10.x
if_z r0.x
  mov r7.w, cb4[0].z
  mov r10.xyz, cb4[6].xzwx
  mov r14.xyz, cb4[5].xyzx
  mov r15.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r10.xyz, cb4[46].xzwx
  mov r14.xyz, cb4[45].xyzx
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r7.w, r10.x, l(255)
  movc r7.w, r7.w, l(1), l(0)
  if_nz cb4[7].x
    mov r10.w, cb4[7].x
    mov r11.w, l(0)
    loop
      uge r12.w, r11.w, cb4[7].x
      breakc_nz r12.w
      dp4 r12.w, cb4[8].xyzw, icb[r11.w + 0].xyzw
      lt r12.w, v5.w, r12.w
      if_nz r12.w
        mov r10.w, r11.w
        break
      endif
      iadd r11.w, r11.w, l(1)
    endloop
    ult r11.w, r10.w, cb4[7].x
    if_nz r11.w
      ishl r11.w, r10.w, l(2)
      mul r16.xyzw, r5.yyyy, cb4[r11.w + 10].xyzw
      mad r16.xyzw, r5.xxxx, cb4[r11.w + 9].xyzw, r16.xyzw
      mad r16.xyzw, r5.zzzz, cb4[r11.w + 11].xyzw, r16.xyzw
      add r16.xyzw, r16.xyzw, cb4[r11.w + 12].xyzw
      div r17.xyzw, r16.xyxy, r16.wwww
      ge r16.xy, r17.zwzz, cb4[r10.w + 25].xyxx
      ge r18.xy, cb4[r10.w + 25].zwzz, r17.zwzz
      and r16.xy, r16.xyxx, r18.xyxx
      and r10.w, r16.y, r16.x
      if_nz r10.w
        mad r17.xyzw, r17.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r16.xy, r17.zwzz
        round_ni r17.xyzw, r17.xyzw
        add r18.xyzw, r17.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.x, r18.xyxx, t0.xyzw, s1, l(0.000000)
        add r17.xyzw, r17.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.y, r17.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.z, r17.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.w, r18.zwzz, t0.yzwx, s1, l(0.000000)
        add r17.xyzw, -r16.zzzz, r19.xyzw
        mad_sat r17.xyzw, r17.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r16.zw, -r17.wwwx, r17.zzzy
        mad r16.xz, r16.xxxx, r16.zzwz, r17.wwxw
        add r10.w, -r16.x, r16.z
        mad r10.w, r16.y, r10.w, r16.x
      else
        mov r10.w, l(1.000000)
      endif
    else
      mov r10.w, l(1.000000)
    endif
  else
    mov r10.w, l(1.000000)
  endif
  if_nz r7.w
    mad_sat r7.w, v5.w, r10.y, r10.z
    mul r7.w, r7.w, r7.w
    add r10.y, -r10.w, l(1.000000)
    mad r16.x, r7.w, r10.y, r10.w
    min r16.y, r16.x, l(1.000000)
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r16.y, r16.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r15.xyzx, r15.xyzx
    rsq r7.w, r7.w
    mul r10.yzw, r7.wwww, r15.xxyz
    dp3 r7.w, r6.zxyz, r10.yzwy
    mov_sat r11.w, r7.w
    max r12.w, r0.z, l(0.020000)
    dp3 r10.y, r4.xyzx, r10.yzwy
    mad r10.z, r10.y, l(2.000000), l(2.000000)
    rsq r10.z, r10.z
    add r7.w, r0.y, r7.w
    mul_sat r7.w, r10.z, r7.w
    mad_sat r10.y, r10.z, r10.y, r10.z
    add r10.z, |r0.y|, l(0.000010)
    min r10.z, r10.z, l(1.000000)
    mul r15.xyz, r11.wwww, r11.xyzx
    mul r10.w, r12.w, r12.w
    mul r13.w, r10.w, r10.w
    mad r14.w, r7.w, r13.w, -r7.w
    mad r7.w, r14.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r13.w, r7.w
    mad r12.w, -r12.w, r12.w, l(1.000000)
    mad r13.w, r10.z, r12.w, r10.w
    mad r10.w, r11.w, r12.w, r10.w
    mul r10.z, r10.w, r10.z
    mad r10.z, r11.w, r13.w, r10.z
    rcp r10.z, r10.z
    mul r7.w, r7.w, r10.z
    add r10.y, -r10.y, l(1.000000)
    mul r10.z, r10.y, r10.y
    mul r10.z, r10.z, r10.z
    mul r10.w, r10.y, r10.z
    mul_sat r12.w, r12.y, l(50.000000)
    mad r10.y, -r10.z, r10.y, l(1.000000)
    mul r16.yzw, r12.xxyz, r10.yyyy
    mad r10.yzw, r12.wwww, r10.wwww, r16.yyzw
    mul r7.w, r7.w, l(0.500000)
    mul r10.yzw, r10.yyzw, r7.wwww
    mul r10.yzw, r10.yyzw, r11.wwww
    mad r10.yzw, r15.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), r10.yyzw
    mul r14.xyz, r14.xyzx, r16.xxxx
    mul r10.yzw, r10.yyzw, r14.xxyz
  else
    mov r10.yzw, l(0,0,0,0)
  endif
  ushr r7.w, r10.x, l(8)
  and r7.w, r7.w, cb2[16].w
  movc r10.xyz, r7.wwww, r10.yzwy, l(0,0,0,0)
  mov r7.w, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
  mov r7.w, l(0)
endif
if_z r0.x
  ishl r10.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t2.yzwx
  umin r10.w, r10.w, cb4[0].x
  bfi r11.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t2.yzwx
else
  ishl r12.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r12.wwww, t5.yzwx
  umin r10.w, r12.w, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r6.wwww, t5.yzwx
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r6.w, r6.w, r10.w
dp3 r10.w, -r4.yzxy, r6.xyzx
add r10.w, r10.w, r10.w
mad r14.xyz, r6.zxyz, -r10.wwww, -r4.xyzx
max r10.w, r0.z, l(0.020000)
mul r12.w, r10.w, r10.w
mad r10.w, -r10.w, r10.w, l(1.000000)
add r13.w, r0.y, r0.y
mad r14.w, r13.w, r0.y, l(-1.000000)
add r15.x, |r0.y|, l(0.000010)
min r15.x, r15.x, l(1.000000)
mul r15.yzw, r11.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r16.x, r12.w, r12.w
mul r17.xyzw, r12.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r16.yzw, r10.xxyz
mov r18.z, l(0)
loop
  uge r18.w, r18.z, r6.w
  breakc_nz r18.w
  iadd r18.w, r11.w, r18.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r19.x, r18.wwww, t3.xyzw
    imul null, r19.y, r19.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.yyyy, t1.xyzw
    imad r19.xyzw, r19.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r19.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r19.zzzz, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r19.wwww, t1.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.wwww, t6.yzwx
    imul null, r24.x, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r24.xxxx, t4.xyzw
    imad r24.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r24.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r24.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r24.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r24.wwww, t4.wxyz
  endif
  eq r18.w, r21.w, l(0.000000)
  lt r24.x, l(-2.000000), r23.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r24.y, r20.xyzx, r20.xyzx
  rsq r24.z, r24.y
  mul r25.xyz, r20.xyzx, r24.zzzz
  mul r24.z, r20.w, r20.w
  mul r24.y, r24.z, r24.y
  mad r24.y, -r24.y, r24.y, l(1.000000)
  max r24.y, r24.y, l(0.000000)
  mul r24.y, r24.y, r24.y
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r21.w
  exp r20.w, r20.w
  movc r20.w, r18.w, r24.y, r20.w
  dp3 r21.w, r25.xyzx, r22.yzwy
  add r21.w, -r23.x, r21.w
  mul_sat r21.w, r23.y, r21.w
  mul r21.w, r21.w, r21.w
  mul r21.w, r20.w, r21.w
  movc r20.w, r24.x, r21.w, r20.w
  lt r21.w, l(0.000000), r20.w
  if_nz r21.w
    and r21.w, r22.x, l(255)
    movc r21.w, r21.w, l(1), l(0)
    if_nz r21.w
      and r24.xyzw, r22.xxxx, l(1, 2, 4, 8)
      movc r24.xyzw, r24.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r21.w, r22.x, l(4)
      ubfe r22.y, l(1), l(4), r22.x
      movc r25.x, r22.y, l(1.000000), l(0)
      and r22.yzw, r21.wwww, l(0, 2, 4, 8)
      movc r25.yzw, r22.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r21.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r22.y, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      mad r22.z, r7.w, r24.x, l(-1.000000)
      mad r22.y, r22.y, r22.z, l(1.000000)
      mul r22.yz, r21.wwww, r22.yyyy
    else
      mov r22.yz, l(0,1.000000,1.000000,0)
    endif
    add r21.w, r22.z, r22.y
    lt r21.w, l(0.000000), r21.w
    if_nz r21.w
      f16tof32 r21.w, r23.w
      mul r22.z, r21.w, l(0.500000)
      mad r23.xyw, -r22.zzzz, r19.yzyw, r20.xyxz
      mad r19.yzw, r22.zzzz, r19.yyzw, r20.xxyz
      lt r20.x, l(0.000000), r21.w
      if_nz r20.x
        dp3 r20.y, r23.xywx, r23.xywx
        dp3 r20.z, r19.yzwy, r19.yzwy
        rsq r20.y, r20.y
        rsq r20.z, r20.z
        mul r22.z, r20.z, r20.y
        dp3 r22.w, r23.xywx, r19.yzwy
        mul r22.w, r22.z, r22.w
        mad r24.x, r22.w, l(0.500000), r22.z
        add r24.x, r24.x, l(0.500000)
        div r24.y, r22.z, r24.x
        dp3 r22.z, r6.zxyz, r23.xywx
        dp3 r24.z, r6.zxyz, r19.yzwy
        mul r20.z, r20.z, r24.z
        mad r20.y, r22.z, r20.y, r20.z
        mul r24.x, r20.y, l(0.500000)
      else
        dp3 r20.y, r23.xywx, r23.xywx
        add r20.z, r20.y, l(1.000000)
        rcp r24.y, r20.z
        rsq r20.y, r20.y
        mul r25.xyz, r20.yyyy, r23.xywx
        dp3 r24.x, r6.zxyz, r25.xyzx
        mov r22.w, l(1.000000)
      endif
      lt r20.y, l(0.000000), r23.z
      mul r20.z, r23.z, r23.z
      mul_sat r20.z, r24.y, r20.z
      sqrt r20.z, r20.z
      lt r22.z, r24.x, r20.z
      max r24.z, -r20.z, r24.x
      add r24.z, r20.z, r24.z
      mul r24.z, r24.z, r24.z
      mul r20.z, r20.z, l(4.000000)
      div r20.z, r24.z, r20.z
      movc r20.z, r22.z, r20.z, r24.x
      movc_sat r20.y, r20.y, r20.z, r24.x
      movc r18.w, r18.w, r24.y, l(1.000000)
      add r19.yzw, -r23.xxyw, r19.yyzw
      dp3 r20.z, r14.xyzx, r19.yzwy
      mad r24.xyz, r20.zzzz, r14.xyzx, -r19.yzwy
      dp3 r22.z, r23.xywx, r24.xyzx
      mul r20.z, r20.z, r20.z
      mad r20.z, r21.w, r21.w, -r20.z
      div_sat r20.z, r22.z, r20.z
      mad r19.yzw, r20.zzzz, r19.yyzw, r23.xxyw
      movc r19.yzw, r20.xxxx, r19.yyzw, r23.xxyw
      dp3 r20.x, r19.yzwy, r19.yzwy
      rsq r20.x, r20.x
      mul r19.yzw, r19.yyzw, r20.xxxx
      mul r20.z, r20.x, r23.z
      mul_sat r20.z, r10.w, r20.z
      mul_sat r19.x, r19.x, r20.x
      dp3 r20.x, r6.zxyz, r19.yzwy
      dp3 r19.y, r4.xyzx, r19.yzwy
      mad r19.z, r19.y, l(2.000000), l(2.000000)
      rsq r19.z, r19.z
      add r19.w, r0.y, r20.x
      mul_sat r19.w, r19.z, r19.w
      mad_sat r19.z, r19.z, r19.y, r19.z
      lt r21.w, l(0.000000), r20.z
      if_nz r21.w
        mad r22.z, -r20.z, r20.z, l(1.000000)
        sqrt r22.z, r22.z
        dp2 r23.x, r0.yyyy, r20.xxxx
        add r23.y, -r19.y, r23.x
        ge r23.z, r23.y, r22.z
        if_nz r23.z
          mov r19.w, l(1.000000)
          mov r19.z, |r0.y|
        else
          mad r23.z, -r23.y, r23.y, l(1.000000)
          rsq r23.z, r23.z
          mul r23.z, r20.z, r23.z
          mad r23.w, -r23.y, r20.x, r0.y
          mul r24.x, r23.w, r23.z
          mad r23.y, -r23.y, r19.y, r14.w
          mul r24.y, r20.x, r20.x
          mad r24.y, -r0.y, r0.y, -r24.y
          add r24.y, r24.y, l(1.000000)
          mad r24.y, -r19.y, r19.y, r24.y
          mad_sat r23.x, r23.x, r19.y, r24.y
          sqrt r23.x, r23.x
          mul r23.xy, r23.xyxx, r23.zzzz
          mul r24.y, r0.y, r23.x
          add r24.z, r24.y, r24.y
          mad r24.w, r20.x, r22.z, r0.y
          mad r23.z, r23.z, r23.w, r24.w
          mad r23.w, r19.y, r22.z, r23.y
          add r23.w, r23.w, l(1.000000)
          mul r25.xy, r23.wwww, r23.xzxx
          mul r25.z, r23.z, r24.z
          mul r24.y, r24.y, r23.z
          mul r24.y, r24.y, l(0.500000)
          mad r24.y, r25.x, l(-0.500000), r24.y
          mul r24.y, r24.y, r25.y
          mad r25.w, -r25.x, l(2.000000), r25.z
          mul r25.z, r25.w, r25.z
          mad r25.x, r25.x, r25.x, r25.z
          mul r25.z, r23.w, r23.w
          mad r23.w, r19.y, r22.z, r23.w
          mad r23.w, r23.w, l(-0.500000), l(-0.500000)
          mul r23.w, r23.w, r25.y
          mad r23.w, r24.w, r25.z, r23.w
          mad r23.z, r23.z, r23.w, r25.x
          add r23.w, r24.y, r24.y
          mul r24.w, r24.y, r24.y
          mad r24.w, r23.z, r23.z, r24.w
          div r23.w, r23.w, r24.w
          mul r23.z, r23.z, r23.w
          mad r23.w, -r23.w, r24.y, l(1.000000)
          mul r23.x, r23.x, r23.z
          mad r23.x, r23.w, r24.x, r23.x
          mul r23.z, r24.z, r23.z
          mad r23.y, r23.w, r23.y, r23.z
          mad r20.x, r20.x, r22.z, r23.x
          mad r19.y, r19.y, r22.z, r23.y
          mad r22.z, r19.y, l(2.000000), l(2.000000)
          rsq r22.z, r22.z
          add r20.x, r0.y, r20.x
          mul_sat r19.w, r22.z, r20.x
          mad_sat r19.z, r22.z, r19.y, r22.z
        endif
      endif
      mul r18.w, r20.y, r18.w
      lt r19.y, l(0.000000), r19.x
      mul r19.x, r19.x, r19.x
      mad r20.x, r19.z, l(3.600000), l(0.400000)
      div r19.x, r19.x, r20.x
      mad r19.x, r12.w, r12.w, r19.x
      min r19.x, r19.x, l(1.000000)
      movc r18.x, r19.y, r19.x, r16.x
      mul r19.x, r20.z, l(0.250000)
      ishr r19.y, r18.x, l(1)
      iadd r19.y, r19.y, l(0x1fbd1df5)
      mad r19.y, r19.y, l(3.000000), r20.z
      mul r19.x, r19.y, r19.x
      add r19.y, r19.z, l(0.001000)
      div r19.x, r19.x, r19.y
      add r23.x, r18.x, r19.x
      div r23.y, r18.x, r23.x
      movc r20.xz, r21.wwww, r23.xxyx, r18.xxyx
      lt r19.x, r22.w, l(1.000000)
      add r21.w, -r22.w, l(1.000100)
      add r22.z, r22.w, l(1.000000)
      div r21.w, r21.w, r22.z
      sqrt r21.w, r21.w
      mul r22.z, r21.w, l(0.250000)
      ishr r22.w, r20.x, l(1)
      iadd r22.w, r22.w, l(0x1fbd1df5)
      mad r21.w, r22.w, l(3.000000), r21.w
      mul r21.w, r21.w, r22.z
      div r19.y, r21.w, r19.y
      add r19.y, r19.y, r20.x
      div r19.y, r20.x, r19.y
      sqrt r19.y, r19.y
      mul r19.y, r19.y, r20.z
      movc r19.x, r19.x, r19.y, r20.z
      mad r19.y, r19.w, r18.x, -r19.w
      mad r19.y, r19.y, r19.w, l(1.000000)
      mul r19.y, r19.y, r19.y
      mul r19.y, r19.y, l(3.14159274)
      div r19.y, r18.x, r19.y
      mul r19.x, r19.x, r19.y
      sqrt r18.x, r18.x
      add r19.y, -r18.x, l(1.000000)
      mad r19.w, r15.x, r19.y, r18.x
      mad r18.x, r20.y, r19.y, r18.x
      mul r18.x, r15.x, r18.x
      mad r18.x, r20.y, r19.w, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r19.x
      add r19.x, -r19.z, l(1.000000)
      mul r19.y, r19.x, r19.x
      mul r19.y, r19.y, r19.y
      mul r19.z, r19.x, r19.y
      mad r19.x, -r19.y, r19.x, l(1.000000)
      mul r19.xyw, r12.xyxz, r19.xxxx
      mad r19.xyz, r17.xxxx, r19.zzzz, r19.xywx
      mul r18.x, r18.x, l(0.500000)
      mul r19.xyz, r19.xyzx, r18.xxxx
      mul r19.xyz, r18.wwww, r19.xyzx
      mad r19.xyz, r18.wwww, r15.yzwy, r19.xyzx
      mul r20.xyz, r20.wwww, r21.xyzx
      mul r20.xyz, r22.yyyy, r20.xyzx
      mul r19.xyz, r19.xyzx, r20.xyzx
    else
      mov r19.xyz, l(0,0,0,0)
    endif
  else
    mov r19.xyz, l(0,0,0,0)
  endif
  ushr r18.x, r22.x, l(8)
  and r18.x, r18.x, cb2[16].w
  add r19.xyz, r16.yzwy, r19.xyzx
  movc r16.yzw, r18.xxxx, r19.xxyz, r16.yyzw
  iadd r18.z, r18.z, l(1)
endloop
mad r6.xyz, r13.wwww, r6.zxyz, -r4.xyzx
min r0.x, r4.w, l(1.000000)
log r0.y, r0.z
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r4.x, cb1[163].z, l(-1.000000)
add r0.y, -r0.y, r4.x
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t7.xyzw, s2, r0.y
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.y, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.y, r0.y, cb0[29].w
mad_sat r4.w, r0.z, cb1[165].x, cb1[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.y, r0.y, l(0.000100)
div r0.y, r0.w, r0.y
min r0.y, r0.y, cb1[165].z
add r0.y, r0.y, l(-1.000000)
mad r0.y, r4.w, r0.y, l(1.000000)
mul r4.xyz, r0.yyyy, r4.xyzx
mad r6.xyz, r17.yzwy, r0.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r6.x, r6.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.y, r17.x, r0.y
mad r0.xyz, r12.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r16.yzwy
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r11.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r9.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r9.xyzw, r0.wwww, r3.yzwx, r9.xyzw
  mov o0.w, r9.w
else
  mov o0.w, r9.w
endif
mad r0.xyz, r13.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r9.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
