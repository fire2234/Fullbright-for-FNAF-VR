//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 20:51:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float   xyz
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        4     NONE   float   xyzw
// ATTRIBUTE                5   xy          5     NONE   float   xy
// ATTRIBUTE               13   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 6     z         2     NONE   float     z
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.z
dcl_output o3.x
dcl_output o4.xyz
dcl_output_siv o5.xyzw, position
dcl_temps 8
imul null, r0.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
mul r1.xyzw, r1.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.xxxx, t0.xyzw
mad r1.xyzw, v4.xxxx, r2.xyzw, r1.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.wwww, t0.xyzw
mad r1.xyzw, v4.zzzz, r2.xyzw, r1.xyzw
mad r0.xyzw, v4.wwww, r0.xyzw, r1.xyzw
dp3 r1.x, r0.xyzx, v1.xyzx
imad r2.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.zzzz, t0.xyzw
mul r3.xyzw, r3.xyzw, v4.yyyy
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.xxxx, t0.xyzw
mad r3.xyzw, v4.xxxx, r4.xyzw, r3.xyzw
imad r4.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.xxxx, t0.xyzw
mad r3.xyzw, v4.zzzz, r5.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.zzzz, t0.xyzw
mad r3.xyzw, v4.wwww, r5.xyzw, r3.xyzw
dp3 r1.y, r3.xyzx, v1.xyzx
mul r5.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r1.yzw, r1.yyyy, r5.xxyz
mul r6.xyz, cb2[0].xyzx, cb2[4].xxxx
mad r1.xyz, r1.xxxx, r6.xyzx, r1.yzwy
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r2.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r2.yyyy, t0.xyzw
mul r7.xyzw, r7.xyzw, v4.yyyy
mad r2.xyzw, v4.xxxx, r2.xyzw, r7.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r4.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r4.wwww, t0.xyzw
mad r2.xyzw, v4.zzzz, r7.xyzw, r2.xyzw
mad r2.xyzw, v4.wwww, r4.xyzw, r2.xyzw
dp3 r1.w, r2.xyzx, v1.xyzx
mul r4.xyz, cb2[2].xyzx, cb2[4].zzzz
mad o0.xyz, r1.wwww, r4.xyzx, r1.xyzx
mov o0.w, l(0)
dp3 r1.x, r3.xyzx, v2.xyzx
mul r1.xyz, r5.xyzx, r1.xxxx
dp3 r1.w, r0.xyzx, v2.xyzx
mad r1.xyz, r1.wwww, r6.xyzx, r1.xyzx
dp3 r1.w, r2.xyzx, v2.xyzx
mad o1.xyz, r1.wwww, r4.xyzx, r1.xyzx
mul o1.w, v2.w, cb2[4].w
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r3.x, r3.xyzw, r1.xyzw
mul r3.xyz, r3.xxxx, cb2[1].xyzx
dp4 r0.x, r0.xyzw, r1.xyzw
dp4 r0.y, r2.xyzw, r1.xyzw
mad r0.xzw, cb2[0].xxyz, r0.xxxx, r3.xxyz
mad r0.xyz, cb2[2].xyzx, r0.yyyy, r0.xzwx
add r1.xyz, cb1[62].xyzx, cb2[3].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyzw, r0.yyyy, cb0[9].xyzw
mad r1.xyzw, r0.xxxx, cb0[8].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[10].xyzw, r1.xyzw
mov o4.xyz, r0.xyzx
add r0.xyzw, r1.xyzw, cb0[11].xyzw
lt r1.x, r0.z, l(0.000000)
ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[12].x
and r1.x, r1.x, r1.y
movc r0.zw, r1.xxxx, l(0,0,0.000001,1.000000), r0.zzzw
mov o2.z, r0.z
mov o5.xyzw, r0.xyzw
mov o2.xy, v5.xyxx
mov o3.x, l(0)
ret
// Approximately 0 instruction slots used
