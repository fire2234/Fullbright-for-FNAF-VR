// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:46:52 2019
Texture2D<float4> t1 : register(t1);

Texture2D<uint4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[5];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[124];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.zw = float2(0,0);
  r1.xy = cb1[4].xx * cb0[122].zw;
  r1.z = -r1.y;
  r2.xy = -cb0[121].xy + v0.xy;
  r3.xyzw = r2.xyxy * cb0[122].zwzw + r1.xzxy;
  r3.xyzw = r3.xyzw * cb0[122].xyxy + cb0[121].xyxy;
  r3.xyzw = cb0[123].zwzw * r3.xyzw;
  r3.xyzw = cb0[123].xyxy * r3.xyzw;
  r3.xyzw = trunc(r3.xyzw);
  r0.xy = (int2)r3.zw;
  r3.xy = (int2)r3.xy;
  r0.x = t0.Load(r0.xyz).y;
  r0.x = (uint)r0.x;
  r1.zw = float2(0,0);
  r4.xyzw = r2.xyxy * cb0[122].zwzw + r1.xwwy;
  r4.xyzw = r4.xyzw * cb0[122].xyxy + cb0[121].xyxy;
  r4.xyzw = cb0[123].zwzw * r4.xyzw;
  r4.xyzw = cb0[123].xyxy * r4.xyzw;
  r4.xyzw = trunc(r4.xyzw);
  r5.xy = (int2)r4.zw;
  r4.xy = (int2)r4.xy;
  r5.zw = float2(0,0);
  r0.y = t0.Load(r5.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r0.yz = cb0[122].zw * r2.xy;
  r0.yz = r1.xy * float2(-1,1) + r0.yz;
  r1.xy = -r1.xy;
  r0.yz = r0.yz * cb0[122].xy + cb0[121].xy;
  r0.yz = cb0[123].zw * r0.yz;
  r0.yz = cb0[123].xy * r0.yz;
  r0.yz = trunc(r0.yz);
  r5.xy = (int2)r0.yz;
  r5.zw = float2(0,0);
  r0.y = t0.Load(r5.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r4.zw = float2(0,0);
  r0.y = t0.Load(r4.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r4.xyzw = r2.xyxy * cb0[122].zwzw + r1.zyxz;
  r0.yz = r2.xy * cb0[122].zw + r1.xy;
  r0.yz = r0.yz * cb0[122].xy + cb0[121].xy;
  r0.yz = cb0[123].zw * r0.yz;
  r0.yz = cb0[123].xy * r0.yz;
  r0.yz = trunc(r0.yz);
  r1.xy = (int2)r0.yz;
  r2.xyzw = r4.xyzw * cb0[122].xyxy + cb0[121].xyxy;
  r2.xyzw = cb0[123].zwzw * r2.xyzw;
  r2.xyzw = cb0[123].xyxy * r2.xyzw;
  r2.xyzw = trunc(r2.xyzw);
  r4.xy = (int2)r2.zw;
  r2.xy = (int2)r2.xy;
  r4.zw = float2(0,0);
  r0.y = t0.Load(r4.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r3.zw = float2(0,0);
  r0.y = t0.Load(r3.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r2.zw = float2(0,0);
  r0.y = t0.Load(r2.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r1.zw = float2(0,0);
  r0.y = t0.Load(r1.xyz).y;
  r0.y = (uint)r0.y;
  r0.x = max(r0.y, r0.x);
  r0.x = min(1, r0.x);
  r0.yz = cb0[123].zw * v0.xy;
  r1.xy = cb0[123].xy * r0.yz;
  r0.yzw = t1.Sample(s0_s, r0.yz).xyz;
  r1.xy = trunc(r1.xy);
  r1.xy = (int2)r1.xy;
  r1.zw = float2(0,0);
  r1.x = t0.Load(r1.xyz).y;
  r1.x = (uint)r1.x;
  r1.x = min(1, r1.x);
  r1.x = 1 + -r1.x;
  r0.x = r1.x * r0.x;
  r1.xyz = cb1[2].xyz + -r0.yzw;
  r0.xyz = r0.xxx * r1.xyz + r0.yzw;
  r0.xyz = cb1[3].xyz + r0.xyz;
  o0.xyz = max(float3(0,0,0), r0.xyz);
  o0.w = 1;
  return;
}