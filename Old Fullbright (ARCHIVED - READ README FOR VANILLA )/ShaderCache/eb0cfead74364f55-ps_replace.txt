// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:46:48 2019
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[19];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[126];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[134];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  nointerpolation uint v3 : PACKED_EYE_INDEX0,
  float4 v4 : TEXCOORD6,
  float3 v5 : TEXCOORD7,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out uint oMask : SV_Coverage)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v3.x & 1;
  if (r0.x == 0) {
    r0.x = cb0[125].x;
  } else {
    r0.x = cb1[125].x;
  }
  r0.y = t0.SampleBias(s0_s, v2.xy, cb0[133].x).x;
  r0.yz = r0.yy * cb2[14].zz + -cb2[15].xy;
  r0.z = max(0, r0.z);
  r0.z = log2(r0.z);
  r0.z = cb2[15].z * r0.z;
  r0.z = exp2(r0.z);
  r0.z = min(1, r0.z);
  r1.xy = float2(2,1) * v2.xy;
  r1.xy = cb0[132].zz * cb2[16].yy + r1.xy;
  r1.xy = t1.SampleBias(s1_s, r1.xy, cb0[133].x).xy;
  r0.w = 2.09439516 * cb0[132].z;
  r0.w = sin(r0.w);
  r1.zw = cb0[132].zz * r0.ww + v2.xy;
  r0.w = t2.SampleBias(s2_s, r1.zw, cb0[133].x).x;
  r0.w = r1.x + -r0.w;
  r0.w = r0.w + r1.y;
  r0.w = saturate(r0.w * 3 + -1);
  r0.w = 1 + -r0.w;
  r0.y = saturate(r0.y);
  r0.y = max(r0.y, r0.z);
  r0.z = r0.w * cb2[17].w + -r0.y;
  r0.y = cb2[17].y * r0.z + r0.y;
  r0.z = 1 + -r0.y;
  r0.y = cb2[18].x * r0.z + r0.y;
  r0.x = cmp(1 < (int)r0.x);
  r0.y = -0.333299994 + r0.y;
  r1.xyzw = cmp(float4(0.00666699978,0.166675001,0.333350003,0.500024974) < r0.yyyy);
  r0.z = r1.x ? 0.000000 : 0;
  r0.z = r1.y ? 9 : r0.z;
  r0.z = r1.z ? 13 : r0.z;
  r0.w = (uint)r0.z;
  r0.w = -0.5 + r0.w;
  r0.yw = cmp(r0.yw < float2(0,0));
  r0.w = r1.w ? 0 : r0.w;
  r0.w = r0.x ? r0.w : 0;
  if (r0.w != 0) discard;
  r0.x = ~(int)r0.x;
  r0.y = r0.x ? r0.y : 0;
  if (r0.y != 0) discard;
  r0.x = (int)r0.x | (int)r1.w;
  oMask = r0.x ? 15 : r0.z;
  o0.xyzw = float4(0,0,0,0);
  return;
}