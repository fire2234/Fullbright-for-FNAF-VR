// ---- Created with 3Dmigoto v1.3.16 on Sun Sep 15 09:54:37 2019
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[3];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[126];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[134];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD0,
  nointerpolation uint v1 : PACKED_EYE_INDEX0,
  float4 v2 : SV_Position0,
  uint v3 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out uint oMask : SV_Coverage)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v1.x & 1;
  if (r0.x == 0) {
    r0.x = cb0[125].x;
  } else {
    r0.x = cb1[125].x;
  }
  r0.y = t0.SampleBias(s0_s, v0.xy, cb0[133].x).w;
  r0.zw = float2(-0.5,-0.5) + v0.yx;
  r0.zw = r0.zw + r0.zw;
  r1.x = min(abs(r0.z), abs(r0.w));
  r1.y = max(abs(r0.z), abs(r0.w));
  r1.y = 1 / r1.y;
  r1.x = r1.x * r1.y;
  r1.y = r1.x * r1.x;
  r1.z = r1.y * 0.0208350997 + -0.0851330012;
  r1.z = r1.y * r1.z + 0.180141002;
  r1.z = r1.y * r1.z + -0.330299497;
  r1.y = r1.y * r1.z + 0.999866009;
  r1.z = r1.x * r1.y;
  r1.w = cmp(abs(r0.w) < abs(r0.z));
  r1.z = r1.z * -2 + 1.57079637;
  r1.z = r1.w ? r1.z : 0;
  r1.x = r1.x * r1.y + r1.z;
  r1.y = cmp(r0.w < -r0.w);
  r1.y = r1.y ? -3.141593 : 0;
  r1.x = r1.x + r1.y;
  r1.y = min(r0.z, r0.w);
  r0.z = max(r0.z, r0.w);
  r0.w = cmp(r1.y < -r1.y);
  r0.z = cmp(r0.z >= -r0.z);
  r0.z = r0.z ? r0.w : 0;
  r0.z = r0.z ? -r1.x : r1.x;
  r0.z = 0.159154952 * r0.z;
  r0.z = frac(r0.z);
  r0.z = cb2[2].x + r0.z;
  r0.z = floor(r0.z);
  r0.x = cmp(1 < (int)r0.x);
  r0.y = r0.y * r0.z + -0.333299994;
  r1.xyzw = cmp(float4(0.00666699978,0.166675001,0.333350003,0.500024974) < r0.yyyy);
  r0.z = r1.x ? 0.000000 : 0;
  r0.z = r1.y ? 9 : r0.z;
  r0.z = r1.z ? 13 : r0.z;
  r0.w = (uint)r0.z;
  r0.w = -0.5 + r0.w;
  r0.yw = cmp(r0.yw < float2(0,0));
  r0.w = r1.w ? 0 : r0.w;
  r0.w = r0.x ? r0.w : 0;
  if (r0.w != 0) discard;
  r0.x = ~(int)r0.x;
  r0.y = r0.x ? r0.y : 0;
  if (r0.y != 0) discard;
  r0.x = (int)r0.x | (int)r1.w;
  oMask = r0.x ? 15 : r0.z;
  o0.xyzw = float4(0,0,0,0);
  return;
}