// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 22:41:07 2019
Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[8];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[92];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[132];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[177];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  nointerpolation uint v3 : PACKED_EYE_INDEX0,
  float4 v4 : TEXCOORD7,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v3.x & 1;
  if (r0.x == 0) {
    r0.x = cb0[4].x;
    r0.y = cb0[5].x;
    r0.z = cb0[6].x;
    r0.w = cb0[7].x;
    r1.x = cb0[4].y;
    r1.y = cb0[5].y;
    r1.z = cb0[6].y;
    r1.w = cb0[7].y;
    r2.x = cb0[4].w;
    r2.y = cb0[5].w;
    r2.z = cb0[6].w;
    r2.w = cb0[7].w;
    r3.x = cb0[40].x;
    r3.y = cb0[41].x;
    r3.z = cb0[42].x;
    r3.w = cb0[43].x;
    r4.x = cb0[40].y;
    r4.y = cb0[41].y;
    r4.z = cb0[42].y;
    r4.w = cb0[43].y;
    r5.x = cb0[40].z;
    r5.y = cb0[41].z;
    r5.z = cb0[42].z;
    r5.w = cb0[43].z;
    r6.x = cb0[40].w;
    r6.y = cb0[41].w;
    r6.z = cb0[42].w;
    r6.w = cb0[43].w;
    r7.xy = cb0[122].zw;
    r7.z = cb0[128].w;
    r7.w = cb0[131].w;
    r8.xyz = cb0[62].xyz;
    r9.xyz = cb0[128].xyz;
    r10.xyzw = cb0[58].xyzw;
    r11.xy = cb0[121].xy;
  } else {
    r0.x = cb2[4].x;
    r0.y = cb2[5].x;
    r0.z = cb2[6].x;
    r0.w = cb2[7].x;
    r1.x = cb2[4].y;
    r1.y = cb2[5].y;
    r1.z = cb2[6].y;
    r1.w = cb2[7].y;
    r2.x = cb2[4].w;
    r2.y = cb2[5].w;
    r2.z = cb2[6].w;
    r2.w = cb2[7].w;
    r3.x = cb2[40].x;
    r3.y = cb2[41].x;
    r3.z = cb2[42].x;
    r3.w = cb2[43].x;
    r4.x = cb2[40].y;
    r4.y = cb2[41].y;
    r4.z = cb2[42].y;
    r4.w = cb2[43].y;
    r5.x = cb2[40].z;
    r5.y = cb2[41].z;
    r5.z = cb2[42].z;
    r5.w = cb2[43].z;
    r6.x = cb2[40].w;
    r6.y = cb2[41].w;
    r6.z = cb2[42].w;
    r6.w = cb2[43].w;
    r7.xy = cb2[122].zw;
    r7.z = cb2[128].w;
    r7.w = cb2[131].w;
    r8.xyz = cb2[62].xyz;
    r9.xyz = cb2[128].xyz;
    r10.xyzw = cb2[58].xyzw;
    r11.xy = cb2[121].xy;
  }
  r12.xyz = v1.zxy * v0.yzx;
  r12.xyz = v1.yzx * v0.zxy + -r12.xyz;
  r12.xyz = v1.www * r12.xyz;
  r11.xy = v5.xy + -r11.xy;
  r7.xy = r11.xy * r7.xy + float2(-0.5,-0.5);
  r11.xy = v5.ww * r7.xy;
  r11.z = v5.w;
  r11.xyw = float3(2,-2,1) * r11.xyz;
  r13.xyz = v5.xyz;
  r13.w = 1;
  r3.x = dot(r13.xyzw, r3.xyzw);
  r3.y = dot(r13.xyzw, r4.xyzw);
  r3.z = dot(r13.xyzw, r5.xyzw);
  r3.w = dot(r13.xyzw, r6.xyzw);
  r3.xyz = r3.xyz / r3.www;
  r4.xyz = r3.xyz + -r8.xyz;
  r3.w = dot(-r3.xyz, -r3.xyz);
  r3.w = rsqrt(r3.w);
  r3.xyz = -r3.xyz * r3.www;
  r3.w = cb1[4].w * r7.w;
  r5.x = v6.x ? 1 : -1;
  r3.w = r5.x * r3.w;
  r5.xyz = r7.zzz * float3(0,0,1) + r9.xyz;
  r5.w = dot(r5.xyz, r5.xyz);
  r5.w = rsqrt(r5.w);
  r5.xyz = r5.xyz * r5.www;
  r6.xyz = r5.yyy * r12.xyz;
  r5.xyw = r5.xxx * v0.xyz + r6.xyz;
  r5.xyz = r5.zzz * v1.xyz + r5.xyw;
  r5.w = dot(r5.xyz, r5.xyz);
  r5.w = rsqrt(r5.w);
  r5.xyz = r5.xyz * r5.www;
  r5.xyz = r5.xyz * r3.www;
  r6.xyz = cb4[4].xyz + cb4[3].xyz;
  r3.w = saturate(cb4[5].z * r11.w);
  r5.w = 1 + -v2.y;
  r3.x = dot(r5.xyz, r3.xyz);
  r3.x = max(0, r3.x);
  r3.x = 1 + -r3.x;
  r3.x = log2(abs(r3.x));
  r3.x = cb4[5].w * r3.x;
  r3.x = exp2(r3.x);
  r3.x = r3.x * cb4[6].y + cb4[6].x;
  r3.x = 1 + -r3.x;
  r3.x = max(0, r3.x);
  r3.x = log2(r3.x);
  r3.x = cb4[6].z * r3.x;
  r3.x = exp2(r3.x);
  r3.x = cb4[6].w * r3.x;
  r3.x = r5.w * r3.x;
  r3.x = r3.w * r3.x;
  r3.yz = r11.xy / r11.ww;
  r3.yz = r3.yz * r10.xy + r10.wz;
  r3.y = t1.SampleLevel(s1_s, r3.yz, 0).x;
  r3.z = r3.y * cb0[57].x + cb0[57].y;
  r3.y = r3.y * cb0[57].z + -cb0[57].w;
  r3.y = 1 / r3.y;
  r3.y = r3.z + r3.y;
  r3.y = -r11.z * 1 + r3.y;
  r3.y = saturate(r3.y / cb4[7].y);
  r3.w = saturate(r3.x * r3.y);
  r5.x = cmp(0 < cb3[91].w);
  if (r5.x != 0) {
    r4.w = 1;
    r0.x = dot(r4.xyzw, r0.xyzw);
    r0.y = dot(r4.xyzw, r1.xyzw);
    r0.z = dot(r4.xyzw, r2.xyzw);
    r0.xy = r0.xy / r0.zz;
    r1.xy = r0.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.x = r0.z * cb0[176].x + cb0[176].y;
    r0.x = log2(r0.x);
    r0.x = cb0[176].z * r0.x;
    r1.z = cb0[175].z * r0.x;
    r0.x = t0.SampleLevel(s0_s, r1.xyz, 0).w;
    r0.x = v4.w * r0.x;
  } else {
    r0.x = v4.w;
  }
  r3.xyz = max(float3(0,0,0), r6.xyz);
  r0.y = cmp(0 < cb0[130].x);
  if (r0.y != 0) {
    r0.yzw = -cb1[5].xyz + r4.xyz;
    r1.xyz = float3(1,1,1) + cb1[11].xyz;
    r0.yzw = cmp(r1.xyz < abs(r0.yzw));
    r0.y = (int)r0.z | (int)r0.y;
    r0.y = (int)r0.w | (int)r0.y;
    r0.z = dot(r4.xyz, float3(0.577000022,0.577000022,0.577000022));
    r0.z = 0.00200000009 * r0.z;
    r0.z = frac(r0.z);
    r0.z = cmp(0.5 < r0.z);
    r1.yzw = r0.zzz ? float3(0,1,1) : float3(1,1,0);
    r1.x = 1;
    r3.xyzw = r0.yyyy ? r1.yzwx : r3.xyzw;
  }
  r0.xyz = r3.xyz * r0.xxx;
  o0.xyz = r0.xyz * r3.www;
  o0.w = 0;
  return;
}