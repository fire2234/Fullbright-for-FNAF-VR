//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 20:16:39 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
// SV_ClipDistance          1   x           7  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[178], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[164], immediateIndexed
dcl_constantbuffer cb4[92], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_output o0.xy
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_output_siv o7.x, clip_distance
dcl_temps 12
and r0.x, v1.x, l(1)
if_z r0.x
  mov r1.x, cb1[0].x
  mov r1.y, cb1[1].x
  mov r1.z, cb1[2].x
  mov r1.w, cb1[3].x
  mov r2.x, cb1[0].y
  mov r2.y, cb1[1].y
  mov r2.z, cb1[2].y
  mov r2.w, cb1[3].y
  mov r3.x, cb1[0].z
  mov r3.y, cb1[1].z
  mov r3.z, cb1[2].z
  mov r3.w, cb1[3].z
  mov r4.x, cb1[0].w
  mov r4.y, cb1[1].w
  mov r4.z, cb1[2].w
  mov r4.w, cb1[3].w
  mov r0.yzw, cb1[62].xxyz
  mov r5.x, cb1[163].y
  mov r5.yzw, cb1[60].xxyz
else
  mov r1.x, cb3[0].x
  mov r1.y, cb3[1].x
  mov r1.z, cb3[2].x
  mov r1.w, cb3[3].x
  mov r2.x, cb3[0].y
  mov r2.y, cb3[1].y
  mov r2.z, cb3[2].y
  mov r2.w, cb3[3].y
  mov r3.x, cb3[0].z
  mov r3.y, cb3[1].z
  mov r3.z, cb3[2].z
  mov r3.w, cb3[3].z
  mov r4.x, cb3[0].w
  mov r4.y, cb3[1].w
  mov r4.z, cb3[2].w
  mov r4.w, cb3[3].w
  mov r0.yzw, cb3[62].xxyz
  mov r5.x, cb3[163].y
  mov r5.yzw, cb3[60].xxyz
endif
mul r6.xy, v0.yxyy, cb0[4].wwww
mad r6.zw, -v0.xxxy, cb0[4].wwww, l(0.000000, 0.000000, 1.000000, 1.000000)
add r7.xyzw, r6.xyzw, r6.xyzw
lt r8.xy, l(0.500000, 0.500000, 0.000000, 0.000000), v0.wzww
mad r9.xyzw, -r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
mul r10.xyzw, r9.xyzw, cb0[9].xyzw
mad r10.xyzw, r7.xyzw, cb0[5].wwww, r10.xyzw
mul r11.xyzw, r9.xyzw, cb0[8].xyzw
mad r11.xyzw, r7.xyzw, cb0[5].zzzz, r11.xyzw
movc r10.xyzw, r8.yyyy, r10.xyzw, r11.xyzw
mul r11.xyzw, r9.xyzw, cb0[7].xyzw
mad r11.xyzw, r7.xyzw, cb0[5].yyyy, r11.xyzw
mul r9.xyzw, r9.xyzw, cb0[6].xyzw
mad r7.xyzw, r7.xyzw, cb0[5].xxxx, r9.xyzw
movc r7.xyzw, r8.yyyy, r11.xyzw, r7.xyzw
movc r7.xyzw, r8.xxxx, r10.xyzw, r7.xyzw
add r6.z, r6.x, r6.y
lt r6.z, l(1.000000), r6.z
lt r6.x, r6.y, r6.x
movc r6.xy, r6.xxxx, r7.wyww, r7.zxzz
movc r6.x, r6.z, r6.x, r6.y
round_ni r6.y, r6.x
add r6.x, -r6.y, r6.x
add r6.z, r6.y, -cb0[4].x
exp r6.z, -r6.z
mul r6.zw, r6.zzzz, v0.xxxy
round_ni r6.zw, r6.zzzw
exp r7.x, -r6.y
mul r7.y, r7.x, cb5[3].x
mad r8.x, cb5[3].x, r7.x, l(-1.000000)
mul r7.x, r7.y, l(0.500000)
max r7.x, r7.x, l(2.000000)
add r8.y, r7.x, l(-1.000000)
mul r7.xy, r8.xyxx, cb5[3].yyyy
div r7.xz, r6.zzwz, r7.xxxx
mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
round_ni r6.zw, r6.zzzw
div r6.zw, r6.zzzw, r7.yyyy
mad r7.yw, r7.xxxz, cb5[0].xxxy, cb5[0].zzzw
mad r7.yw, cb5[0].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000), r7.yyyw
mad r7.yw, v0.zzzw, cb5[4].xxxy, r7.yyyw
add r8.xy, r6.yyyy, -cb0[3].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r7.yw, r7.ywyy, t1.zxwy, s1, r8.x
dp2 r7.y, r7.ywyy, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r7.y, r7.y, l(-32768.000000)
mul r9.z, r7.y, l(0.00781250000)
mad r7.yw, r6.zzzw, cb5[0].xxxy, cb5[0].zzzw
mad r7.yw, cb5[0].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000), r7.yyyw
mad r7.yw, v0.zzzw, cb5[4].xxxy, r7.yyyw
add r6.y, r6.y, l(1.000000)
add r8.xz, r6.yyyy, -cb0[3].zzwz
sample_l_indexable(texture2d)(float,float,float,float) r7.yw, r7.ywyy, t1.zxwy, s1, r8.x
dp2 r6.y, r7.ywyy, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r6.y, r6.y, l(-32768.000000)
mul r10.z, r6.y, l(0.00781250000)
mad r7.yw, r7.xxxz, cb5[1].xxxy, cb5[1].zzzw
mad r7.yw, v0.zzzw, cb5[4].zzzz, r7.yyyw
sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r7.ywyy, t2.xyzw, s2, r8.y
mad r7.yw, r6.zzzw, cb5[1].xxxy, cb5[1].zzzw
mad r7.yw, v0.zzzw, cb5[4].zzzz, r7.yyyw
sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r7.ywyy, t2.xyzw, s2, r8.z
dp2 r6.y, r11.xyxx, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r6.y, r6.y, l(-32768.000000)
mul r11.x, r6.y, l(0.00390625000)
dp2 r6.y, r11.zwzz, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r6.y, r6.y, l(-32768.000000)
mul r11.y, r6.y, l(0.00390625000)
dp2 r6.y, r8.xyxx, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r6.y, r6.y, l(-32768.000000)
mul r8.x, r6.y, l(0.00390625000)
dp2 r6.y, r8.zwzz, l(65280.000000, 255.000000, 0.000000, 0.000000)
add r6.y, r6.y, l(-32768.000000)
mul r8.y, r6.y, l(0.00390625000)
add r9.xy, r7.xzxx, r11.xyxx
add r10.xy, r6.zwzz, r8.xyxx
add r6.yzw, -r9.xxyz, r10.xxyz
mad r6.xyz, r6.xxxx, r6.yzwy, r9.xyzx
mul r7.xy, v0.zwzz, cb5[4].wwww
mov r7.z, l(0)
add r7.xyz, r6.xyzx, r7.xyzx
mul r8.xyz, r7.yyyy, cb2[1].xyzx
mad r7.xyw, cb2[0].xyxz, r7.xxxx, r8.xyxz
mad r7.xyz, cb2[2].xyzx, r7.zzzz, r7.xywx
add r0.yzw, r0.yyzw, cb2[3].xxyz
add r7.xyz, r0.yzwy, r7.xyzx
add r0.yz, r6.xxyx, cb5[3].zzwz
mad o0.xy, v0.zwzz, cb5[4].wwww, r0.yzyy
mov r7.w, l(1.000000)
dp4 r1.x, r7.xyzw, r1.xyzw
dp4 r1.y, r7.xyzw, r2.xyzw
dp4 r1.z, r7.xyzw, r3.xyzw
dp4 r1.w, r7.xyzw, r4.xyzw
if_nz cb0[0].x
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o7.x, r1.xwxx, r2.xyxx
  mul r0.y, r5.x, l(0.500000)
  mul r0.z, r1.w, icb[r0.x + 0].x
  mad r0.w, -r5.x, l(0.500000), l(1.000000)
  mul r0.z, r0.w, r0.z
  mad r1.x, r1.x, r0.y, r0.z
else
  mov o7.x, l(0)
endif
mad r0.yz, r6.xxyx, cb5[1].xxyx, cb5[1].zzwz
mad o1.xy, v0.zwzz, cb5[4].zzzz, r0.yzyy
mad r0.yz, r6.xxyx, cb5[0].xxyx, cb5[0].zzwz
mad r0.yz, cb5[0].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r0.yyzy
mad o1.zw, v0.zzzw, cb5[4].xxxy, r0.yyyz
mad r0.yz, r6.xxyx, cb5[2].xxyx, cb5[2].wwzw
mad r0.yz, v0.zzwz, cb5[5].xxyx, r0.yyzy
mad o3.xy, r0.yzyy, cb6[16].xyxx, cb6[16].zwzz
mad o3.zw, r0.yyyz, cb6[17].xxxy, cb6[17].zzzw
movc r0.y, cb0[0].x, l(1), l(0)
imad o4.x, r0.y, l(0x80000000), r0.x
add r0.xyz, -r5.yzwy, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r2.x, r0.w
dp3 r2.y, r0.xyzx, cb1[52].xyzx
div r2.x, r2.x, r2.y
mul r2.x, r2.x, cb1[177].z
max r2.x, r2.x, l(0.000000)
rsq r2.y, r0.w
mul r0.w, r0.w, r2.y
mul r3.xyz, r0.xyzx, r2.yyyy
max r2.x, r2.x, cb4[85].w
lt r2.z, l(0.000000), r2.x
mul r2.w, r2.y, r2.x
mad r3.w, r2.w, r0.z, cb1[59].z
mad r2.w, -r2.w, r0.z, r0.z
mad r2.x, -r2.x, r2.y, l(1.000000)
mul r2.x, r0.w, r2.x
add r2.y, r3.w, -cb4[87].y
mul r2.y, r2.y, cb4[85].y
max r2.y, r2.y, l(-127.000000)
exp r2.y, -r2.y
mul r2.y, r2.y, cb4[87].x
movc r2.y, r2.z, r2.y, cb4[85].x
movc r2.x, r2.z, r2.x, r0.w
movc r2.z, r2.z, r2.w, r0.z
mul r2.z, r2.z, cb4[85].y
max r2.z, r2.z, l(-127.000000)
exp r2.w, -r2.z
add r2.w, -r2.w, l(1.000000)
div r2.w, r2.w, r2.z
mad r3.w, -r2.z, l(0.240226507), l(0.693147182)
lt r2.z, l(0.010000), |r2.z|
movc r2.z, r2.z, r2.w, r3.w
mul r2.y, r2.z, r2.y
mul r2.z, r2.x, r2.y
lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[87].zwzz
if_nz r4.x
  mad_sat r2.w, r0.w, cb4[91].x, cb4[91].y
  mul r4.xz, cb4[90].yyxy, l(1.000000, 0.000000, -1.000000, 0.000000)
  dp2 r5.x, r0.xyxx, r4.xzxx
  dp2 r5.y, r0.xyxx, cb4[90].xyxx
  mov r5.z, r0.z
  sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r5.xyzx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r4.xzw, r5.xyzx, t0.xwyz, s0, cb4[91].z
  add r0.xyz, r0.xyzx, -r4.xzwx
  mad r0.xyz, r2.wwww, r0.xyzx, r4.xzwx
  mul r0.xyz, r0.xyzx, cb4[86].xyzx
else
  mov r0.xyz, cb4[86].xyzx
endif
ge r2.w, cb4[88].w, l(0.000000)
eq r3.w, cb4[87].z, l(0.000000)
and r2.w, r2.w, r3.w
dp3_sat r3.x, r3.xyzx, cb4[88].xyzx
log r3.x, r3.x
mul r3.x, r3.x, cb4[89].w
exp r3.x, r3.x
mul r3.xyz, r3.xxxx, cb4[89].xyzx
add r2.x, r2.x, -cb4[88].w
max r2.x, r2.x, l(0.000000)
mul r2.x, r2.x, r2.y
exp r2.x, -r2.x
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
mul r3.xyz, r2.xxxx, r3.xyzx
and r3.xyz, r2.wwww, r3.xyzx
exp r2.x, -r2.z
min r2.x, r2.x, l(1.000000)
max r3.w, r2.x, cb4[86].w
lt r0.w, cb4[87].w, r0.w
and r0.w, r0.w, r4.y
movc r2.xyzw, r0.wwww, l(0,0,0,1.000000), r3.xyzw
add r0.w, -r2.w, l(1.000000)
mad o5.xyz, r0.xyzx, r0.wwww, r2.xyzx
mov o2.xyzw, l(0,0,0,0)
mov o5.w, r2.w
mov o6.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used
