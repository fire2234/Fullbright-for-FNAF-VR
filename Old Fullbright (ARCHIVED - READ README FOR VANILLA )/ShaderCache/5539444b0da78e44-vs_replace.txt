// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 19:07:46 2019
Buffer<float4> t1 : register(t1);

TextureCube<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb5 : register(b5)
{
  float4 cb5[10];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[164];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[4];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[178];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[92];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[4];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  float4 v1 : ATTRIBUTE1,
  float4 v2 : ATTRIBUTE2,
  float4 v3 : ATTRIBUTE3,
  float2 v4 : ATTRIBUTE4,
  uint v5 : SV_VertexID0,
  uint v6 : SV_InstanceID0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out uint o4 : PACKED_EYE_INDEX0,
  out float4 o5 : TEXCOORD7,
  out float4 o6 : SV_POSITION0,
  out float o7 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v5.x, vertex_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cb0[0].x ? 1 : 0;
  r0.y = (int)r0.x & asint(cb0[3].y);
  if (r0.y == 0) {
    r1.x = cb2[0].x;
    r1.y = cb2[1].x;
    r1.z = cb2[2].x;
    r1.w = cb2[3].x;
    r2.x = cb2[0].y;
    r2.y = cb2[1].y;
    r2.z = cb2[2].y;
    r2.w = cb2[3].y;
    r3.x = cb2[0].z;
    r3.y = cb2[1].z;
    r3.z = cb2[2].z;
    r3.w = cb2[3].z;
    r4.x = cb2[0].w;
    r4.y = cb2[1].w;
    r4.z = cb2[2].w;
    r4.w = cb2[3].w;
    r5.xyz = cb2[62].xyz;
    r0.z = cb2[163].y;
    r6.xyz = cb2[53].xyz;
    r7.xyz = cb2[54].xyz;
    r8.xyz = cb2[55].xyz;
    r9.xyz = cb2[56].xyz;
    r10.xyz = cb2[59].xyz;
    r11.xyz = cb2[60].xyz;
  } else {
    r1.x = cb4[0].x;
    r1.y = cb4[1].x;
    r1.z = cb4[2].x;
    r1.w = cb4[3].x;
    r2.x = cb4[0].y;
    r2.y = cb4[1].y;
    r2.z = cb4[2].y;
    r2.w = cb4[3].y;
    r3.x = cb4[0].z;
    r3.y = cb4[1].z;
    r3.z = cb4[2].z;
    r3.w = cb4[3].z;
    r4.x = cb4[0].w;
    r4.y = cb4[1].w;
    r4.z = cb4[2].w;
    r4.w = cb4[3].w;
    r5.xyz = cb4[62].xyz;
    r0.z = cb4[163].y;
    r6.xyz = cb4[53].xyz;
    r7.xyz = cb4[54].xyz;
    r8.xyz = cb4[55].xyz;
    r9.xyz = cb4[56].xyz;
    r10.xyz = cb4[59].xyz;
    r11.xyz = cb4[60].xyz;
  }
  r12.xyz = cb3[1].xyz * v0.yyy;
  r12.xyz = v0.xxx * cb3[0].xyz + r12.xyz;
  r12.xyz = v0.zzz * cb3[2].xyz + r12.xyz;
  r12.xyz = cb3[3].xyz + r12.xyz;
  r13.xyz = cb3[1].zxy * v1.yyy;
  r13.xyz = v1.xxx * cb3[0].zxy + r13.xyz;
  r13.xyz = v1.zzz * cb3[2].zxy + r13.xyz;
  r13.xyz = cb3[3].zxy + r13.xyz;
  r9.xyz = r9.zxy + -r7.zxy;
  r7.xyz = cb5[6].www * r9.xyz + r7.zxy;
  r8.xyz = r8.zxy + -r6.zxy;
  r6.xyz = cb5[6].www * r8.xyz + r6.zxy;
  r8.xyz = cb5[0].zxy + -r7.xyz;
  r7.xyz = cb5[0].www * r8.xyz + r7.xyz;
  r8.xyz = cb5[1].zxy + r6.xyz;
  r6.xyz = cb5[1].www * r8.xyz + -r6.xyz;
  r8.xyz = -r12.yzx + r10.yzx;
  r0.w = dot(r8.xyz, r8.xyz);
  r5.w = max(0.00999999978, r0.w);
  r5.w = rsqrt(r5.w);
  r8.xyz = r8.xyz * r5.www;
  r9.xyz = -r13.xyz + r12.zxy;
  r5.w = dot(r9.xyz, r9.xyz);
  r5.w = max(0.00999999978, r5.w);
  r5.w = rsqrt(r5.w);
  r9.xyz = r9.xyz * r5.www;
  r10.xyz = r9.yzx * r8.xyz;
  r10.xyz = r8.zxy * r9.zxy + -r10.xyz;
  r5.w = dot(r10.xyz, r10.xyz);
  r5.w = max(0.00999999978, r5.w);
  r5.w = rsqrt(r5.w);
  r10.xyz = r10.xyz * r5.www;
  r13.xyz = cb5[0].yzx * r8.zxy;
  r13.xyz = cb5[0].xyz * r8.xyz + -r13.xyz;
  r5.w = dot(r13.xyz, r13.xyz);
  r5.w = max(0.00999999978, r5.w);
  r5.w = rsqrt(r5.w);
  r13.xyz = r13.xyz * r5.www;
  r14.xyz = float3(0,0,1) * r8.xyz;
  r14.xyz = r8.zxy * float3(0,1,0) + -r14.xyz;
  r5.w = dot(r14.yz, r14.yz);
  r5.w = max(0.00999999978, r5.w);
  r5.w = rsqrt(r5.w);
  r14.xyz = r14.xyz * r5.www;
  r15.xyz = r14.yzx * r8.xyz;
  r8.xyz = r8.zxy * r14.zxy + -r15.xyz;
  r5.w = cmp(0 < cb5[6].x);
  if (r5.w != 0) {
    r0.w = saturate(r0.w * cb5[6].y + -cb5[6].z);
    r5.w = 1 + -r0.w;
  } else {
    r5.w = cb5[2].x;
    r0.w = cb5[2].w;
  }
  r10.xyz = cb5[2].yyy * r10.xyz;
  r7.xyz = r7.xyz * r5.www + r10.xyz;
  r7.xyz = cb5[0].zxy * cb5[2].zzz + r7.xyz;
  r7.xyz = r14.xyz * r0.www + r7.xyz;
  r9.xyz = cb5[2].yyy * -r9.xyz;
  r6.xyz = r6.xyz * r5.www + r9.xyz;
  r6.xyz = -r13.xyz * cb5[2].zzz + r6.xyz;
  r6.xyz = r8.xyz * r0.www + r6.xyz;
  r0.w = dot(r7.xyz, r7.xyz);
  r0.w = rsqrt(r0.w);
  r7.xyz = r7.xyz * r0.www;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = rsqrt(r0.w);
  r6.xyz = r6.xyz * r0.www;
  r0.w = v2.z * cb5[8].x + cb5[8].y;
  sincos(r0.w, r8.x, r9.x);
  r8.yzw = r9.xxx * r7.yzx;
  r10.xyz = r8.xxx * r6.yzx + r8.yzw;
  r7.xyz = r8.xxx * r7.xyz;
  r6.xyz = r9.xxx * r6.xyz + -r7.xyz;
  r7.xy = cmp(float2(0,0) < v2.xy);
  r7.zw = cmp(v2.xy < float2(0,0));
  r7.xy = (int2)-r7.xy + (int2)r7.zw;
  r7.xy = (int2)r7.xy;
  if (cb0[3].x != 0) {
    r0.w = (uint)v5.x;
    r5.w = asuint(cb0[3].x);
    r0.w = r0.w / r5.w;
    r6.w = cmp(r0.w >= -r0.w);
    r0.w = frac(r0.w);
    r0.w = r6.w ? r0.w : -r0.w;
    r0.w = r0.w * r5.w;
    r0.w = (uint)r0.w;
    r5.w = cb5[5].x * cb5[5].y;
    r6.w = v2.w / r5.w;
    r7.z = cmp(r6.w >= -r6.w);
    r6.w = frac(abs(r6.w));
    r6.w = r7.z ? r6.w : -r6.w;
    r5.w = r6.w * r5.w;
    r5.w = (uint)r5.w;
    r6.w = r7.x * r7.y;
    r6.w = cmp(r6.w < 0);
    r7.z = asint(cb0[3].x) + -1;
    r7.z = (int)-r0.w + (int)r7.z;
    r0.w = r6.w ? r7.z : r0.w;
    r0.w = mad((int)r5.w, asint(cb0[3].x), (int)r0.w);
    r7.zw = t1.Load(r0.w).xy;
    r8.xy = cmp(r7.xy < float2(0,0));
    r8.zw = float2(1,1) + -r7.zw;
    r8.xy = r8.xy ? r8.zw : r7.zw;
  } else {
    r7.xy = cmp(r7.xy < float2(0,0));
    r8.zw = float2(1,1) + -v4.xy;
    r7.zw = r7.xy ? r8.zw : v4.xy;
    r8.xy = v4.xy;
  }
  r5.xyz = r12.xyz + r5.xyz;
  r7.xy = cb5[9].xy + r8.xy;
  r7.xy = abs(v2.xy) * r7.xy;
  r5.xyz = r7.xxx * r10.xyz + r5.xyz;
  r5.xyz = r7.yyy * r6.yzx + r5.xyz;
  r10.w = frac(v2.w);
  r0.w = v2.w + -r10.w;
  r6.w = r0.w / cb5[5].x;
  r7.x = cmp(r6.w >= -r6.w);
  r6.w = frac(abs(r6.w));
  r6.w = r7.x ? r6.w : -r6.w;
  r7.x = cb5[5].x * r6.w;
  r0.w = cb5[5].z * r0.w;
  r7.y = floor(r0.w);
  r7.xy = r7.xy + r7.zw;
  o3.xy = cb5[5].zw * r7.xy;
  r7.xyz = r10.zxy * r6.zxy;
  r7.xyz = r10.yzx * r6.xyz + -r7.xyz;
  r0.w = dot(r7.xyz, r7.xyz);
  r0.w = rsqrt(r0.w);
  r7.xyz = r7.xyz * r0.www;
  r8.xy = cmp(cb5[8].zz < float2(0.5,1.5));
  r9.xyz = -cb5[3].xyz + r12.xyz;
  r0.w = dot(r9.xyz, r9.xyz);
  r0.w = rsqrt(r0.w);
  r13.xyz = r9.xyz * r0.www;
  r0.w = dot(cb5[4].xyz, r9.xyz);
  r9.xyz = r0.www * cb5[4].xyz + cb5[3].xyz;
  r9.xyz = r12.xyz + -r9.xyz;
  r0.w = dot(r9.xyz, r9.xyz);
  r0.w = rsqrt(r0.w);
  r9.xyz = r9.xyz * r0.www;
  r8.yzw = r8.yyy ? r13.xyz : r9.xyz;
  r7.xyz = r8.xxx ? r7.xyz : r8.yzw;
  r5.w = 1;
  r1.x = dot(r5.xyzw, r1.xyzw);
  r1.y = dot(r5.xyzw, r2.xyzw);
  r1.z = dot(r5.xyzw, r3.xyzw);
  r1.w = dot(r5.xyzw, r4.xyzw);
  if (cb0[0].x != 0) {
    r2.x = icb[r0.y+0].x;
    r2.y = 1;
    o7.x = dot(r1.xw, r2.xy);
    r0.w = 0.5 * r0.z;
    r2.x = icb[r0.y+0].x * r1.w;
    r0.z = -r0.z * 0.5 + 1;
    r0.z = r2.x * r0.z;
    r1.x = r1.x * r0.w + r0.z;
  } else {
    o7.x = 0;
  }
  r2.xyz = r7.yzx * r6.xyz;
  r2.xyz = r6.zxy * r7.zxy + -r2.xyz;
  r0.z = dot(r2.xyz, r10.xyz);
  r0.w = cmp(0 < r0.z);
  r0.z = cmp(r0.z < 0);
  r0.z = (int)-r0.w + (int)r0.z;
  o1.w = (int)r0.z;
  o4.x = mad((int)r0.x, 0x80000000, (int)r0.y);
  r0.xyz = r5.xyz + -r11.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r2.x = sqrt(r0.w);
  r2.y = dot(r0.xyz, cb2[52].xyz);
  r2.x = r2.x / r2.y;
  r2.x = cb2[177].z * r2.x;
  r2.x = max(0, r2.x);
  r2.y = rsqrt(r0.w);
  r0.w = r2.y * r0.w;
  r3.xyz = r2.yyy * r0.xyz;
  r2.x = max(cb1[85].w, r2.x);
  r2.z = cmp(0 < r2.x);
  r2.w = r2.x * r2.y;
  r3.w = r2.w * r0.z + cb2[59].z;
  r2.w = -r2.w * r0.z + r0.z;
  r2.x = -r2.x * r2.y + 1;
  r2.x = r2.x * r0.w;
  r2.y = -cb1[87].y + r3.w;
  r2.y = cb1[85].y * r2.y;
  r2.y = max(-127, r2.y);
  r2.y = exp2(-r2.y);
  r2.y = cb1[87].x * r2.y;
  r2.y = r2.z ? r2.y : cb1[85].x;
  r2.x = r2.z ? r2.x : r0.w;
  r2.z = r2.z ? r2.w : r0.z;
  r2.z = cb1[85].y * r2.z;
  r2.z = max(-127, r2.z);
  r2.w = exp2(-r2.z);
  r2.w = 1 + -r2.w;
  r2.w = r2.w / r2.z;
  r3.w = -r2.z * 0.240226507 + 0.693147182;
  r2.z = cmp(0.00999999978 < abs(r2.z));
  r2.z = r2.z ? r2.w : r3.w;
  r2.y = r2.y * r2.z;
  r2.z = r2.y * r2.x;
  r4.xy = cmp(float2(0,0) < cb1[87].zw);
  if (r4.x != 0) {
    r2.w = saturate(r0.w * cb1[91].x + cb1[91].y);
    r4.xz = float2(1,-1) * cb1[90].yx;
    r5.x = dot(r0.xy, r4.xz);
    r5.y = dot(r0.xy, cb1[90].xy);
    r5.z = r0.z;
    r0.xyz = t0.SampleLevel(s0_s, r5.xyz, 0).xyz;
    r4.xzw = t0.SampleLevel(s0_s, r5.xyz, cb1[91].z).xyz;
    r0.xyz = -r4.xzw + r0.xyz;
    r0.xyz = r2.www * r0.xyz + r4.xzw;
    r0.xyz = cb1[86].xyz * r0.xyz;
  } else {
    r0.xyz = cb1[86].xyz;
  }
  r2.w = cmp(cb1[88].w >= 0);
  r3.w = cmp(cb1[87].z == 0.000000);
  r2.w = r2.w ? r3.w : 0;
  r3.x = saturate(dot(r3.xyz, cb1[88].xyz));
  r3.x = log2(r3.x);
  r3.x = cb1[89].w * r3.x;
  r3.x = exp2(r3.x);
  r3.xyz = cb1[89].xyz * r3.xxx;
  r2.x = -cb1[88].w + r2.x;
  r2.x = max(0, r2.x);
  r2.x = r2.y * r2.x;
  r2.x = exp2(-r2.x);
  r2.x = min(1, r2.x);
  r2.x = 1 + -r2.x;
  r3.xyz = r3.xyz * r2.xxx;
  r3.xyz = r2.www ? r3.xyz : 0;
  r2.x = exp2(-r2.z);
  r2.x = min(1, r2.x);
  r3.w = max(cb1[86].w, r2.x);
  r0.w = cmp(cb1[87].w < r0.w);
  r0.w = r0.w ? r4.y : 0;
  r2.xyzw = r0.wwww ? float4(0,0,0,1) : r3.xyzw;
  r0.w = 1 + -r2.w;
  o5.xyz = r0.xyz * r0.www + r2.xyz;
  o0.xyzw = r10.xyzw;
  o1.xyz = r7.xyz;
  o2.xyzw = v3.xyzw;
  o3.zw = float2(0,0);
  o5.w = r2.w;
  o6.xyzw = r1.xyzw;
  return;
}