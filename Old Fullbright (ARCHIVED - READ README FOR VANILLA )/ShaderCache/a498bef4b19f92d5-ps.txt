//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Sep 16 21:04:39 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[133], immediateIndexed
dcl_constantbuffer cb2[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (uint,uint,uint,uint) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 7
mul r0.x, cb1[132].z, l(25.132742)
sincos r0.x, null, r0.x
mul r0.xy, r0.xxxx, cb2[12].xyxx
mul r1.xyzw, v0.yyyy, cb1[41].xyzw
mad r1.xyzw, v0.xxxx, cb1[40].xyzw, r1.xyzw
utof r0.zw, cb0[26].xxxy
add r0.zw, -r0.zzzw, v0.xxxy
mul r0.zw, r0.zzzw, cb0[25].zzzw
mad r2.xy, r0.zwzz, cb1[122].xyxx, cb1[121].xyxx
mul r2.xy, r2.xyxx, cb1[123].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.xyxx, t0.yzxw, s0, l(0.000000)
mul r2.xy, r2.xyxx, cb1[123].xyxx
round_z r2.xy, r2.xyxx
ftoi r3.xy, r2.xyxx
max r2.x, r2.z, l(1.000000046E-018)
mad r1.xyzw, r2.xxxx, cb1[42].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb1[43].xyzw
div r1.xyz, r1.xyzx, r1.wwww
dp3 r1.w, r1.xyzx, r1.xyzx
add r1.xyz, r1.xyzx, -cb1[62].xyzx
div r1.xyz, r1.xyzx, cb2[15].zzzz
sqrt r1.w, r1.w
mul r2.x, cb1[132].z, cb2[12].z
frc r2.x, r2.x
mul r2.y, r2.x, cb2[12].w
div r2.y, r1.w, r2.y
max r2.y, r2.y, l(0.000000)
log r2.y, r2.y
mul r2.y, r2.y, cb2[13].x
exp r2.y, r2.y
mad r2.z, r2.x, cb2[12].w, cb2[13].y
div r2.z, r1.w, r2.z
max r2.z, r2.z, l(0.000000)
log r2.z, r2.z
mul r2.zw, r2.zzzz, cb2[13].xxxz
exp r2.zw, r2.zzzw
min r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
add r4.xy, -r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.z, r2.w, l(8.000000)
mul r2.y, r2.y, r4.x
add r2.w, -r2.x, l(1.000000)
mad r2.x, r2.x, cb2[12].w, -cb2[13].y
div r1.w, r1.w, r2.x
max r1.w, r1.w, l(0.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb2[13].z
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
mul r1.w, r4.y, r1.w
add r2.x, r4.x, r4.x
min r2.xz, r2.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
log r2.w, r2.w
mul r2.w, r2.w, l(0.900000)
exp r2.w, r2.w
mul r4.x, r2.w, r2.y
mad r0.xy, r4.xxxx, r0.xyxx, r0.zwzz
add r0.z, cb2[13].w, -cb2[14].x
mad r0.z, r2.z, r0.z, cb2[14].x
div r0.zw, cb1[122].xxxy, r0.zzzz
round_ni r0.zw, r0.zzzw
mul r0.xy, r0.zwzz, r0.xyxx
div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.zzzw
round_pi r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.zwzz, r0.xyxx
mad r0.xy, r0.xyxx, cb0[28].xyxx, cb0[28].zwzz
max r0.xy, r0.xyxx, cb0[14].xyxx
min r0.xy, r0.xyxx, cb0[14].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t3.xyzw, s2
dp3 r0.w, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r4.yzw, -r0.xxyz, r0.wwww
mad r4.yzw, cb2[14].yyyy, r4.yyzw, r0.xxyz
mul r4.yzw, r4.yyzw, cb2[14].zzzz
mad r5.xyz, r0.xyzx, cb2[14].wwww, -r4.yzwy
mad r4.yzw, r2.xxxx, r5.xxyz, r4.yyzw
mul r0.xyz, r0.xyzx, cb2[8].xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.yzyy, t2.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xzxx, t2.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t2.xyzw, s1
add r5.xyz, r5.xyzx, -r6.xyzx
mov_sat r0.w, cb2[2].x
mad r5.xyz, r0.wwww, r5.xyzx, r6.xyzx
add r1.xyz, r1.xyzx, -r5.xyzx
mov_sat r0.w, cb2[16].y
mad r1.xyz, r0.wwww, r1.xyzx, r5.xyzx
add_sat r1.xyz, r1.xyzx, r1.xyzx
mul r0.w, r1.w, r2.w
mad r1.w, r2.y, r2.w, r0.w
mul r1.xyz, r1.xyzx, r0.wwww
mad r1.xyz, r1.xyzx, cb2[5].xyzx, r4.yzwy
min r0.w, r1.w, l(1.000000)
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(uint,uint,uint,uint) r1.w, r3.xyzw, t1.xzwy
utof r1.w, r1.w
add r1.w, r1.w, -cb2[17].x
lt r2.x, l(0.000000), r1.w
lt r1.w, r1.w, l(0.000000)
iadd r1.w, -r2.x, r1.w
itof r1.w, r1.w
add r1.w, -|r1.w|, l(1.000000)
mul r0.w, r0.w, r1.w
mul_sat r0.w, r0.w, l(4.000000)
add r1.w, -r0.w, l(1.000000)
mad r0.xyz, r1.wwww, r0.xyzx, -r1.xyzx
mad r0.xyz, r4.xxxx, r0.xyzx, r1.xyzx
add r1.xyz, -r0.xyzx, cb2[10].xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb2[11].xyzx
max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used
