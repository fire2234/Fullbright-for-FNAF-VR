//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 30 06:50:52 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_buffer (float,float,float,float) t10
dcl_resource_buffer (uint,uint,uint,uint) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_buffer (float,float,float,float) t13
dcl_resource_buffer (uint,uint,uint,uint) t14
dcl_resource_buffer (uint,uint,uint,uint) t15
dcl_resource_texturecubearray (float,float,float,float) t16
dcl_resource_texture3d (float,float,float,float) t17
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 26
and r0.x, v2.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v4.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
dp3 r0.y, r6.xyzx, r4.xyzx
max r4.w, r0.y, l(0.000000)
add r6.w, -r4.w, l(1.000000)
log r6.w, |r6.w|
mul r6.w, r6.w, cb6[7].x
exp r6.w, r6.w
mad r6.w, r6.w, l(0.960000), l(0.040000)
add r7.xyz, cb6[5].xyzx, -cb6[6].xyzx
mad_sat r7.xyz, r6.wwww, r7.xyzx, cb6[6].xyzx
add r7.w, cb6[7].w, -cb6[8].x
mad_sat r9.w, r6.w, r7.w, cb6[8].x
mov_sat r8.yz, cb6[7].yyzy
mad r0.z, r8.z, r0.w, r0.z
mad r11.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r11.xyz, r11.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r11.xyz, r11.xyzx, cb1[180].xyzx
ftoi r12.xyz, r11.xyzx
mov r12.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
utof r12.xyzw, r12.xyzw
add r0.w, cb1[180].w, l(1.000000)
div r11.xyz, r11.xyzx, r12.wwww
frc r11.xyz, r11.xyzx
mul r11.xyz, r11.xyzx, cb1[180].wwww
mad r11.xyz, r12.xyzx, r0.wwww, r11.xyzx
add r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r11.xyz, r11.xyzx, cb1[181].xyzx
lt r0.w, l(0.000000), cb2[12].z
if_nz r0.w
  sample_l_indexable(texture3d)(float,float,float,float) r12.x, r11.xyzx, t8.xyzw, s0, l(0.000000)
else
  lt r0.w, l(0.000000), cb2[10].w
  movc r12.x, r0.w, cb5[5].x, l(1.000000)
endif
mul r0.w, r8.y, l(0.080000)
mad r8.yzw, -r8.yyyy, l(0.000000, 0.080000, 0.080000, 0.080000), r7.xxyz
mad r8.yzw, r8.yyzw, l(0.000000, 0.100000, 0.100000, 0.100000), r0.wwww
mul r13.xyz, r7.xyzx, cb1[126].wwww
mad r13.xyz, r13.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000), cb1[126].xyzx
mad r8.yzw, r8.yyzw, cb1[127].wwww, cb1[127].xxyz
sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r11.xyzx, t1.zxyw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r11.xyzx, t2.xyzw, s0, l(0.000000)
mad r15.xyzw, r15.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r11.xyzx, t4.xyzw, s0, l(0.000000)
mad r16.xyzw, r16.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r17.xyzw, r11.xyzx, t6.xyzw, s0, l(0.000000)
mad r17.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r15.xyzw, r14.yyyy, r15.xyzw
mul r15.xyzw, r15.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r16.xyzw, r14.zzzz, r16.xyzw
mul r16.xyzw, r16.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r17.xyzw, r14.xxxx, r17.xyzw
mul r17.xyzw, r17.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
sample_l_indexable(texture3d)(float,float,float,float) r18.xyzw, r11.xyzx, t3.xyzw, s0, l(0.000000)
mad r18.xyzw, r18.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r19.xyzw, r11.xyzx, t5.xyzw, s0, l(0.000000)
mad r19.xyzw, r19.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r11.xyzx, t7.xyzw, s0, l(0.000000)
mad r11.xyzw, r11.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r18.xyzw, r14.yyyy, r18.xyzw
mul r18.xyzw, r18.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r19.xyzw, r14.zzzz, r19.xyzw
mul r19.xyzw, r19.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r11.xyzw, r14.xxxx, r11.xyzw
mul r11.xyzw, r11.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r20.xyz, r6.yzxy, r6.yzyy
mul r21.yw, r6.yyyx, r6.zzzz
mad r0.w, r6.x, r6.x, -r20.x
mul r22.yzw, r6.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r21.xz, r20.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r20.xyzw, r21.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r0.w, r0.w, l(0.429042608)
mov r21.x, r14.y
mov r21.yzw, r15.yyzw
mov r22.x, l(0.886227548)
dp4 r6.w, r21.xyzw, r22.xyzw
mov r15.yzw, r18.xxyz
dp4 r7.w, r15.xyzw, r20.xyzw
add r6.w, r6.w, r7.w
mad r15.x, r18.w, r0.w, r6.w
mov r18.x, r14.z
mov r18.yzw, r16.yyzw
dp4 r6.w, r18.xyzw, r22.xyzw
mov r16.yzw, r19.xxyz
dp4 r7.w, r16.xyzw, r20.xyzw
add r6.w, r6.w, r7.w
mad r15.y, r19.w, r0.w, r6.w
mov r14.yzw, r17.yyzw
dp4 r6.w, r14.xyzw, r22.xyzw
mov r17.yzw, r11.xxyz
dp4 r7.w, r17.xyzw, r20.xyzw
add r6.w, r6.w, r7.w
mad r15.z, r11.w, r0.w, r6.w
max r11.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r11.xyz, r11.xyzx, cb1[146].xyzx
mul r11.xyz, r11.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r0.w, r11.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r11.xyz, r13.xyzx, r11.xyzx
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r14.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r10.xy, -r10.xyxx, v4.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r10.z, cb4[3].z
  mov r10.w, cb4[1].z
  mov r14.xy, cb4[1].xyxx
  mov r11.w, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r10.z, cb4[43].z
  mov r10.w, cb4[41].z
  mov r14.xy, cb4[41].xyxx
  mov r11.w, cb4[42].x
endif
mad r6.w, v4.w, r6.w, r7.w
log r6.w, r6.w
mul r6.w, r10.z, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.w, r10.w, l(-1)
umin r6.w, r6.w, r7.w
ushr r10.xy, r10.xyxx, r11.wwww
imad r6.w, r6.w, r14.y, r10.y
imad r6.w, r6.w, r14.x, r10.x
if_z r0.x
  mov r7.w, cb4[0].z
  mov r10.xyz, cb4[6].xzwx
  mov r14.xyz, cb4[5].xyzx
  mov r15.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r10.xyz, cb4[46].xzwx
  mov r14.xyz, cb4[45].xyzx
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r16.xyzw, r10.xxxx, l(255, 2, 4, 8)
  movc r16.xyzw, r16.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r7.w, cb4[7].x
    mov r10.w, l(0)
    loop
      uge r11.w, r10.w, cb4[7].x
      breakc_nz r11.w
      dp4 r11.w, cb4[8].xyzw, icb[r10.w + 0].xyzw
      lt r11.w, v4.w, r11.w
      if_nz r11.w
        mov r7.w, r10.w
        break
      endif
      iadd r10.w, r10.w, l(1)
    endloop
    ult r10.w, r7.w, cb4[7].x
    if_nz r10.w
      ishl r10.w, r7.w, l(2)
      mul r17.xyzw, r5.yyyy, cb4[r10.w + 10].xyzw
      mad r17.xyzw, r5.xxxx, cb4[r10.w + 9].xyzw, r17.xyzw
      mad r17.xyzw, r5.zzzz, cb4[r10.w + 11].xyzw, r17.xyzw
      add r17.xyzw, r17.xyzw, cb4[r10.w + 12].xyzw
      div r18.xyzw, r17.xyxy, r17.wwww
      ge r17.xy, r18.zwzz, cb4[r7.w + 25].xyxx
      ge r19.xy, cb4[r7.w + 25].zwzz, r18.zwzz
      and r17.xy, r17.xyxx, r19.xyxx
      and r7.w, r17.y, r17.x
      if_nz r7.w
        mad r18.xyzw, r18.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r17.xy, r18.zwzz
        round_ni r18.xyzw, r18.xyzw
        add r19.xyzw, r18.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r19.xyzw, r19.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r20.x, r19.xyxx, t9.xyzw, s1, l(0.000000)
        add r18.xyzw, r18.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r20.y, r18.xyxx, t9.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r20.z, r18.zwzz, t9.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r20.w, r19.zwzz, t9.yzwx, s1, l(0.000000)
        add r18.xyzw, -r17.zzzz, r20.xyzw
        mad_sat r18.xyzw, r18.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r17.zw, -r18.wwwx, r18.zzzy
        mad r17.xz, r17.xxxx, r17.zzwz, r18.wwxw
        add r7.w, -r17.x, r17.z
        mad r7.w, r17.y, r7.w, r17.x
      else
        mov r7.w, l(1.000000)
      endif
    else
      mov r7.w, l(1.000000)
    endif
  else
    mov r7.w, l(1.000000)
  endif
  if_nz r16.x
    mov r16.x, l(1.000000)
    dp4 r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r16.xyzw
    add r11.w, r10.w, l(-1.000000)
    mad r10.w, r10.w, r11.w, l(1.000000)
    mad_sat r10.y, v4.w, r10.y, r10.z
    mul r10.y, r10.y, r10.y
    add r10.z, -r7.w, r10.w
    mad r16.x, r10.y, r10.z, r7.w
    min r16.y, r16.x, l(1.000000)
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r16.y, r16.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r15.xyzx, r15.xyzx
    rsq r7.w, r7.w
    mul r10.yzw, r7.wwww, r15.xxyz
    dp3 r7.w, r6.xyzx, r10.yzwy
    mov_sat r11.w, r7.w
    max r13.w, r0.z, l(0.020000)
    dp3 r10.y, r4.xyzx, r10.yzwy
    mad r10.z, r10.y, l(2.000000), l(2.000000)
    rsq r10.z, r10.z
    add r7.w, r0.y, r7.w
    mul_sat r7.w, r10.z, r7.w
    mad_sat r10.y, r10.z, r10.y, r10.z
    add r10.z, |r0.y|, l(0.000010)
    min r10.z, r10.z, l(1.000000)
    mul r15.xyz, r11.wwww, r13.xyzx
    mul r10.w, r13.w, r13.w
    mul r14.w, r10.w, r10.w
    mad r15.w, r7.w, r14.w, -r7.w
    mad r7.w, r15.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r14.w, r7.w
    mad r13.w, -r13.w, r13.w, l(1.000000)
    mad r14.w, r10.z, r13.w, r10.w
    mad r10.w, r11.w, r13.w, r10.w
    mul r10.z, r10.w, r10.z
    mad r10.z, r11.w, r14.w, r10.z
    rcp r10.z, r10.z
    mul r7.w, r7.w, r10.z
    add r10.y, -r10.y, l(1.000000)
    mul r10.z, r10.y, r10.y
    mul r10.z, r10.z, r10.z
    mul r10.w, r10.y, r10.z
    mul_sat r13.w, r8.z, l(50.000000)
    mad r10.y, -r10.z, r10.y, l(1.000000)
    mul r16.yzw, r8.yyzw, r10.yyyy
    mad r10.yzw, r13.wwww, r10.wwww, r16.yyzw
    mul r7.w, r7.w, l(0.500000)
    mul r10.yzw, r10.yyzw, r7.wwww
    mul r10.yzw, r10.yyzw, r11.wwww
    mad r10.yzw, r15.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), r10.yyzw
    mul r14.xyz, r14.xyzx, r16.xxxx
    mul r10.yzw, r10.yyzw, r14.xxyz
  else
    mov r10.yzw, l(0,0,0,0)
  endif
  ushr r7.w, r10.x, l(8)
  and r7.w, r7.w, cb2[16].w
  movc r10.xyz, r7.wwww, r10.yzwy, l(0,0,0,0)
  mov r12.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t11.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r10.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t11.yzwx
else
  ishl r11.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t14.yzwx
  umin r7.w, r11.w, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r6.wwww, t14.yzwx
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r6.w, r6.w, r7.w
dp3 r7.w, -r4.xyzx, r6.xyzx
add r7.w, r7.w, r7.w
mad r14.xyz, r6.xyzx, -r7.wwww, -r4.xyzx
max r7.w, r0.z, l(0.020000)
mul r11.w, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
add r13.w, r0.y, r0.y
mad r14.w, r13.w, r0.y, l(-1.000000)
add r15.x, |r0.y|, l(0.000010)
min r15.x, r15.x, l(1.000000)
mul r15.yzw, r13.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r16.x, r11.w, r11.w
mul r17.xyzw, r8.zyzw, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r12.yw, l(0,1.000000,0,1.000000)
mov r16.yzw, r10.xxyz
mov r18.x, l(0)
loop
  uge r18.y, r18.x, r6.w
  breakc_nz r18.y
  iadd r18.y, r10.w, r18.x
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r18.z, r18.yyyy, t12.yzxw
    imul null, r18.w, r18.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.wwww, t10.xyzw
    imad r20.xyzw, r18.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r20.xxxx, t10.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r20.yyyy, t10.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r20.zzzz, t10.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.wwww, t10.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.y, r18.yyyy, t15.yxzw
    imul null, r18.z, r18.y, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.zzzz, t13.xyzw
    imad r24.xyzw, r18.yyyy, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r24.xxxx, t13.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r24.yyyy, t13.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r24.zzzz, t13.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r24.wwww, t13.wxyz
  endif
  eq r18.y, r21.w, l(0.000000)
  lt r18.z, l(-2.000000), r23.x
  add r19.xyz, -r5.xyzx, r19.xyzx
  dp3 r18.w, r19.xyzx, r19.xyzx
  rsq r24.x, r18.w
  mul r24.xyz, r19.xyzx, r24.xxxx
  mul r24.w, r19.w, r19.w
  mul r18.w, r18.w, r24.w
  mad r18.w, -r18.w, r18.w, l(1.000000)
  max r18.w, r18.w, l(0.000000)
  mul r18.w, r18.w, r18.w
  mul r25.xyz, r19.wwww, r19.xyzx
  dp3 r19.w, r25.xyzx, r25.xyzx
  min r19.w, r19.w, l(1.000000)
  add r19.w, -r19.w, l(1.000000)
  log r19.w, r19.w
  mul r19.w, r19.w, r21.w
  exp r19.w, r19.w
  movc r18.w, r18.y, r18.w, r19.w
  dp3 r19.w, r24.xyzx, r22.yzwy
  add r19.w, -r23.x, r19.w
  mul_sat r19.w, r23.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r18.w, r19.w
  movc r18.z, r18.z, r19.w, r18.w
  lt r18.w, l(0.000000), r18.z
  if_nz r18.w
    and r18.w, r22.x, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r24.xyzw, r22.xxxx, l(1, 2, 4, 8)
      movc r24.xyzw, r24.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r22.x, l(4)
      ubfe r19.w, l(1), l(4), r22.x
      movc r25.x, r19.w, l(1.000000), l(0)
      and r22.yzw, r18.wwww, l(0, 2, 4, 8)
      movc r25.yzw, r22.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.w, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r21.w, r12.xyyy, r24.xyzw
      add r21.w, r21.w, l(-1.000000)
      mad r19.w, r19.w, r21.w, l(1.000000)
      mul r22.yz, r18.wwww, r19.wwww
    else
      mov r22.yz, l(0,1.000000,1.000000,0)
    endif
    add r18.w, r22.z, r22.y
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r23.w
      mul r19.w, r18.w, l(0.500000)
      mad r23.xyw, -r19.wwww, r20.yzyw, r19.xyxz
      mad r19.xyz, r19.wwww, r20.yzwy, r19.xyzx
      lt r19.w, l(0.000000), r18.w
      if_nz r19.w
        dp3 r20.y, r23.xywx, r23.xywx
        dp3 r20.z, r19.xyzx, r19.xyzx
        rsq r20.y, r20.y
        rsq r20.z, r20.z
        mul r20.w, r20.z, r20.y
        dp3 r21.w, r23.xywx, r19.xyzx
        mul r21.w, r20.w, r21.w
        mad r22.z, r21.w, l(0.500000), r20.w
        add r22.z, r22.z, l(0.500000)
        div r24.y, r20.w, r22.z
        dp3 r20.w, r6.xyzx, r23.xywx
        dp3 r22.z, r6.xyzx, r19.xyzx
        mul r20.z, r20.z, r22.z
        mad r20.y, r20.w, r20.y, r20.z
        mul r24.x, r20.y, l(0.500000)
      else
        dp3 r20.y, r23.xywx, r23.xywx
        add r20.z, r20.y, l(1.000000)
        rcp r24.y, r20.z
        rsq r20.y, r20.y
        mul r20.yzw, r20.yyyy, r23.xxyw
        dp3 r24.x, r6.xyzx, r20.yzwy
        mov r21.w, l(1.000000)
      endif
      lt r20.y, l(0.000000), r23.z
      mul r20.z, r23.z, r23.z
      mul_sat r20.z, r24.y, r20.z
      sqrt r20.z, r20.z
      lt r20.w, r24.x, r20.z
      max r22.z, -r20.z, r24.x
      add r22.z, r20.z, r22.z
      mul r22.z, r22.z, r22.z
      mul r20.z, r20.z, l(4.000000)
      div r20.z, r22.z, r20.z
      movc r20.z, r20.w, r20.z, r24.x
      movc_sat r20.y, r20.y, r20.z, r24.x
      movc r18.y, r18.y, r24.y, l(1.000000)
      add r19.xyz, -r23.xywx, r19.xyzx
      dp3 r20.z, r14.xyzx, r19.xyzx
      mad r24.xyz, r20.zzzz, r14.xyzx, -r19.xyzx
      dp3 r20.w, r23.xywx, r24.xyzx
      mul r20.z, r20.z, r20.z
      mad r18.w, r18.w, r18.w, -r20.z
      div_sat r18.w, r20.w, r18.w
      mad r19.xyz, r18.wwww, r19.xyzx, r23.xywx
      movc r19.xyz, r19.wwww, r19.xyzx, r23.xywx
      dp3 r18.w, r19.xyzx, r19.xyzx
      rsq r18.w, r18.w
      mul r19.xyz, r18.wwww, r19.xyzx
      mul r19.w, r18.w, r23.z
      mul_sat r19.w, r7.w, r19.w
      mul_sat r18.w, r18.w, r20.x
      dp3 r20.x, r6.xyzx, r19.xyzx
      dp3 r19.x, r4.xyzx, r19.xyzx
      mad r19.y, r19.x, l(2.000000), l(2.000000)
      rsq r19.y, r19.y
      add r19.z, r0.y, r20.x
      mul_sat r19.z, r19.y, r19.z
      mad_sat r19.y, r19.y, r19.x, r19.y
      lt r20.z, l(0.000000), r19.w
      if_nz r20.z
        mad r20.w, -r19.w, r19.w, l(1.000000)
        sqrt r20.w, r20.w
        dp2 r22.z, r0.yyyy, r20.xxxx
        add r22.w, -r19.x, r22.z
        ge r23.x, r22.w, r20.w
        if_nz r23.x
          mov r19.z, l(1.000000)
          mov r19.y, |r0.y|
        else
          mad r23.x, -r22.w, r22.w, l(1.000000)
          rsq r23.x, r23.x
          mul r23.x, r19.w, r23.x
          mad r23.y, -r22.w, r20.x, r0.y
          mul r23.z, r23.y, r23.x
          mad r22.w, -r22.w, r19.x, r14.w
          mul r23.w, r20.x, r20.x
          mad r23.w, -r0.y, r0.y, -r23.w
          add r23.w, r23.w, l(1.000000)
          mad r23.w, -r19.x, r19.x, r23.w
          mad_sat r22.z, r22.z, r19.x, r23.w
          sqrt r22.z, r22.z
          mul r22.zw, r22.zzzw, r23.xxxx
          mul r23.w, r0.y, r22.z
          add r24.x, r23.w, r23.w
          mad r24.y, r20.x, r20.w, r0.y
          mad r23.x, r23.x, r23.y, r24.y
          mad r23.y, r19.x, r20.w, r22.w
          add r23.y, r23.y, l(1.000000)
          mul r24.z, r22.z, r23.y
          mul r24.w, r23.y, r23.x
          mul r25.x, r23.x, r24.x
          mul r23.w, r23.w, r23.x
          mul r23.w, r23.w, l(0.500000)
          mad r23.w, r24.z, l(-0.500000), r23.w
          mad r25.y, -r24.z, l(2.000000), r25.x
          mul r25.x, r25.y, r25.x
          mad r24.z, r24.z, r24.z, r25.x
          mul r25.x, r23.y, r23.y
          mad r23.y, r19.x, r20.w, r23.y
          mad r23.y, r23.y, l(-0.500000), l(-0.500000)
          mul r23.yw, r23.yyyw, r24.wwww
          mad r23.y, r24.y, r25.x, r23.y
          mad r23.x, r23.x, r23.y, r24.z
          add r23.y, r23.w, r23.w
          mul r24.y, r23.w, r23.w
          mad r24.y, r23.x, r23.x, r24.y
          div r23.y, r23.y, r24.y
          mul r23.x, r23.x, r23.y
          mad r23.y, -r23.y, r23.w, l(1.000000)
          mul r22.z, r22.z, r23.x
          mad r22.z, r23.y, r23.z, r22.z
          mul r23.x, r24.x, r23.x
          mad r22.w, r23.y, r22.w, r23.x
          mad r20.x, r20.x, r20.w, r22.z
          mad r19.x, r19.x, r20.w, r22.w
          mad r20.w, r19.x, l(2.000000), l(2.000000)
          rsq r20.w, r20.w
          add r20.x, r0.y, r20.x
          mul_sat r19.z, r20.w, r20.x
          mad_sat r19.y, r20.w, r19.x, r20.w
        endif
      endif
      mul r18.y, r20.y, r18.y
      lt r19.x, l(0.000000), r18.w
      mul r18.w, r18.w, r18.w
      mad r20.x, r19.y, l(3.600000), l(0.400000)
      div r18.w, r18.w, r20.x
      mad r18.w, r11.w, r11.w, r18.w
      min r18.w, r18.w, l(1.000000)
      movc r12.z, r19.x, r18.w, r16.x
      mul r18.w, r19.w, l(0.250000)
      ishr r19.x, r12.z, l(1)
      iadd r19.x, r19.x, l(0x1fbd1df5)
      mad r19.x, r19.x, l(3.000000), r19.w
      mul r18.w, r18.w, r19.x
      add r19.x, r19.y, l(0.001000)
      div r18.w, r18.w, r19.x
      add r23.x, r12.z, r18.w
      div r23.y, r12.z, r23.x
      movc r20.xz, r20.zzzz, r23.xxyx, r12.zzwz
      lt r18.w, r21.w, l(1.000000)
      add r19.w, -r21.w, l(1.000100)
      add r20.w, r21.w, l(1.000000)
      div r19.w, r19.w, r20.w
      sqrt r19.w, r19.w
      mul r20.w, r19.w, l(0.250000)
      ishr r21.w, r20.x, l(1)
      iadd r21.w, r21.w, l(0x1fbd1df5)
      mad r19.w, r21.w, l(3.000000), r19.w
      mul r19.w, r19.w, r20.w
      div r19.x, r19.w, r19.x
      add r19.x, r19.x, r20.x
      div r19.x, r20.x, r19.x
      sqrt r19.x, r19.x
      mul r19.x, r19.x, r20.z
      movc r18.w, r18.w, r19.x, r20.z
      mad r19.x, r19.z, r12.z, -r19.z
      mad r19.x, r19.x, r19.z, l(1.000000)
      mul r19.x, r19.x, r19.x
      mul r19.x, r19.x, l(3.14159274)
      div r19.x, r12.z, r19.x
      mul r18.w, r18.w, r19.x
      sqrt r12.z, r12.z
      add r19.x, -r12.z, l(1.000000)
      mad r19.z, r15.x, r19.x, r12.z
      mad r12.z, r20.y, r19.x, r12.z
      mul r12.z, r12.z, r15.x
      mad r12.z, r20.y, r19.z, r12.z
      rcp r12.z, r12.z
      mul r12.z, r12.z, r18.w
      add r18.w, -r19.y, l(1.000000)
      mul r19.x, r18.w, r18.w
      mul r19.x, r19.x, r19.x
      mul r19.y, r18.w, r19.x
      mad r18.w, -r19.x, r18.w, l(1.000000)
      mul r19.xzw, r8.yyzw, r18.wwww
      mad r19.xyz, r17.xxxx, r19.yyyy, r19.xzwx
      mul r12.z, r12.z, l(0.500000)
      mul r19.xyz, r19.xyzx, r12.zzzz
      mul r19.xyz, r18.yyyy, r19.xyzx
      mad r19.xyz, r18.yyyy, r15.yzwy, r19.xyzx
      mul r18.yzw, r18.zzzz, r21.xxyz
      mul r18.yzw, r22.yyyy, r18.yyzw
      mul r18.yzw, r18.yyzw, r19.xxyz
    else
      mov r18.yzw, l(0,0,0,0)
    endif
  else
    mov r18.yzw, l(0,0,0,0)
  endif
  ushr r12.z, r22.x, l(8)
  and r12.z, r12.z, cb2[16].w
  add r18.yzw, r16.yyzw, r18.yyzw
  movc r16.yzw, r12.zzzz, r18.yyzw, r16.yyzw
  iadd r18.x, r18.x, l(1)
endloop
mad r6.xyz, r13.wwww, r6.xyzx, -r4.xyzx
min r0.x, r4.w, l(1.000000)
log r0.y, r0.z
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r4.x, cb1[163].z, l(-1.000000)
add r0.y, -r0.y, r4.x
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t16.xyzw, s2, r0.y
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.y, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.y, r0.y, cb0[29].w
mad_sat r4.w, r0.z, cb1[165].x, cb1[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.y, r0.y, l(0.000100)
div r0.y, r0.w, r0.y
min r0.y, r0.y, cb1[165].z
add r0.y, r0.y, l(-1.000000)
mad r0.y, r4.w, r0.y, l(1.000000)
mul r4.xyz, r0.yyyy, r4.xyzx
mad r6.xyz, r17.yzwy, r0.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r6.x, r6.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.y, r17.x, r0.y
mad r0.xyz, r8.yzwy, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r8.yzwy, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r16.yzwy
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t17.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r2.x, v3.w
endif
mad r2.yzw, r8.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r13.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r9.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r9.xyzw, r0.wwww, r3.yzwx, r9.xyzw
  mov o0.w, r9.w
else
  mov o0.w, r9.w
endif
mad r0.xyz, r11.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r9.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
