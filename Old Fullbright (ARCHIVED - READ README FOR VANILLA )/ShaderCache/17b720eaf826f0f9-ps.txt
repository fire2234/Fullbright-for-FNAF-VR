//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 31 12:50:51 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// TEXCOORD                 9   xyz         6     NONE   float
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.zxyz, v1.xyzx
mad r11.xyz, v1.zxyz, v0.xyzx, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v7.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mad r7.xy, cb1[132].zzzz, cb6[4].yyyy, v2.xyxx
add r0.y, cb1[133].x, l(-1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r7.w, r7.xyxx, t11.xyzw, s5, r0.y
mul r8.yzw, r7.wwww, cb6[2].xxyz
mad r8.yzw, r8.yyzw, cb6[4].zzzz, cb6[3].xxyz
mov_sat r9.xyz, cb6[2].xyzx
mad r0.y, r0.w, l(0.500000), r0.z
mov_sat r7.w, r7.w
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, v3.zwzz, t10.xyzw, s4
mad r12.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r11.xyzw, r11.xyzw, cb5[7].xyzw, r12.xyzw
mul r11.xyzw, r11.xyzw, r11.xyzw
mul r11.xyzw, r11.xyzw, cb5[6].xyzw
mad r12.xyz, r9.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r13.xyz, cb1[127].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb1[127].xyzx
mul r0.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r10.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r0.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.zwzz, t9.xyzw, s3
mad r0.z, r15.w, l(0.00392156886), r14.w
add r0.z, r0.z, l(-0.00196078443)
mad r0.z, r0.z, cb5[18].w, cb5[20].w
mul r14.xyz, r14.xyzx, r14.xyzx
mad r14.xyz, r14.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.z, r0.z
add r0.z, r0.z, l(-0.0185813606)
mad r15.xyzw, r15.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r0.w, r15.xyzw, r6.xyzw
max r0.w, r0.w, l(0.000000)
mul r0.z, r0.w, r0.z
mul r14.xyz, r14.xyzx, r0.zzzz
mul r14.xyz, r14.xyzx, cb1[146].xyzx
dp3 r0.z, r14.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r14.xyz, r12.xyzx, r14.xyzx
mad r15.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r15.xyzx
mad r9.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r15.xyzx
add r9.xyz, r9.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r10.xy, -r10.xyxx, v7.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r0.w, cb4[3].x
  mov r4.w, cb4[3].y
  mov r6.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.zw, cb4[1].xxxy
  mov r12.w, cb4[2].x
else
  mov r0.w, cb4[43].x
  mov r4.w, cb4[43].y
  mov r6.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.zw, cb4[41].xxxy
  mov r12.w, cb4[42].x
endif
mad r0.w, v7.w, r0.w, r4.w
log r0.w, r0.w
mul r0.w, r6.w, r0.w
max r0.w, r0.w, l(0.000000)
ftou r0.w, r0.w
iadd r4.w, r9.w, l(-1)
umin r0.w, r0.w, r4.w
ushr r10.xy, r10.xyxx, r12.wwww
imad r0.w, r0.w, r10.w, r10.y
imad r0.w, r0.w, r10.z, r10.x
if_z r0.x
  mov r4.w, cb4[0].z
  mov r6.w, cb4[6].x
  mov r9.w, cb4[6].z
  mov r10.x, cb4[6].w
  mov r10.yzw, cb4[5].xxyz
  mov r15.xyz, cb4[4].xyzx
else
  mov r4.w, cb4[40].z
  mov r6.w, cb4[46].x
  mov r9.w, cb4[46].z
  mov r10.x, cb4[46].w
  mov r10.yzw, cb4[45].xxyz
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r4.w
  and r16.xyzw, r6.wwww, l(255, 2, 4, 8)
  movc r16.xyzw, r16.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r4.w, cb4[7].x
    mov r12.w, l(0)
    loop
      uge r13.w, r12.w, cb4[7].x
      breakc_nz r13.w
      dp4 r13.w, cb4[8].xyzw, icb[r12.w + 0].xyzw
      lt r13.w, v7.w, r13.w
      if_nz r13.w
        mov r4.w, r12.w
        break
      endif
      iadd r12.w, r12.w, l(1)
    endloop
    ult r12.w, r4.w, cb4[7].x
    if_nz r12.w
      ishl r12.w, r4.w, l(2)
      mul r17.xyzw, r5.yyyy, cb4[r12.w + 10].xyzw
      mad r17.xyzw, r5.xxxx, cb4[r12.w + 9].xyzw, r17.xyzw
      mad r17.xyzw, r5.zzzz, cb4[r12.w + 11].xyzw, r17.xyzw
      add r17.xyzw, r17.xyzw, cb4[r12.w + 12].xyzw
      div r18.xyzw, r17.xyxy, r17.wwww
      ge r17.xy, r18.zwzz, cb4[r4.w + 25].xyxx
      ge r19.xy, cb4[r4.w + 25].zwzz, r18.zwzz
      and r17.xy, r17.xyxx, r19.xyxx
      and r4.w, r17.y, r17.x
      if_nz r4.w
        mad r18.xyzw, r18.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r17.xy, r18.zwzz
        round_ni r18.xyzw, r18.xyzw
        add r19.xyzw, r18.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r19.xyzw, r19.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r20.x, r19.xyxx, t0.xyzw, s1, l(0.000000)
        add r18.xyzw, r18.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r20.y, r18.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r20.z, r18.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r20.w, r19.zwzz, t0.yzwx, s1, l(0.000000)
        add r18.xyzw, -r17.zzzz, r20.xyzw
        mad_sat r18.xyzw, r18.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r17.zw, -r18.wwwx, r18.zzzy
        mad r17.xz, r17.xxxx, r17.zzwz, r18.wwxw
        add r4.w, -r17.x, r17.z
        mad r4.w, r17.y, r4.w, r17.x
      else
        mov r4.w, l(1.000000)
      endif
    else
      mov r4.w, l(1.000000)
    endif
  else
    mov r4.w, l(1.000000)
  endif
  if_nz r16.x
    mov r16.x, l(1.000000)
    dp4 r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r16.xyzw
    mov r11.x, l(1.000000)
    dp4 r13.w, r11.xyzw, r16.xyzw
    add r13.w, r13.w, l(-1.000000)
    mad r12.w, r12.w, r13.w, l(1.000000)
    mad_sat r9.w, v7.w, r9.w, r10.x
    mul r9.w, r9.w, r9.w
    add r10.x, -r4.w, r12.w
    mad r16.x, r9.w, r10.x, r4.w
    min r16.y, r16.x, l(1.000000)
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r4.w, r16.y, r16.x
  lt r4.w, l(0.000000), r4.w
  if_nz r4.w
    dp3 r4.w, r15.xyzx, r15.xyzx
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, r15.xyzx
    dp3 r4.w, r6.zxyz, r15.xyzx
    mov_sat r9.w, r4.w
    max r10.x, r0.y, l(0.020000)
    dp3 r12.w, r6.zxyz, r4.xyzx
    dp3 r13.w, r4.xyzx, r15.xyzx
    mad r14.w, r13.w, l(2.000000), l(2.000000)
    rsq r14.w, r14.w
    add r4.w, r4.w, r12.w
    mul_sat r4.w, r14.w, r4.w
    mad_sat r13.w, r14.w, r13.w, r14.w
    add r12.w, |r12.w|, l(0.000010)
    min r12.w, r12.w, l(1.000000)
    mul r15.xyz, r9.wwww, r12.xyzx
    mul r14.w, r10.x, r10.x
    mul r15.w, r14.w, r14.w
    mad r16.y, r4.w, r15.w, -r4.w
    mad r4.w, r16.y, r4.w, l(1.000000)
    mul r4.w, r4.w, r4.w
    mul r4.w, r4.w, l(3.14159274)
    div r4.w, r15.w, r4.w
    mad r10.x, -r10.x, r10.x, l(1.000000)
    mad r15.w, r12.w, r10.x, r14.w
    mad r10.x, r9.w, r10.x, r14.w
    mul r10.x, r10.x, r12.w
    mad r10.x, r9.w, r15.w, r10.x
    rcp r10.x, r10.x
    mul r4.w, r4.w, r10.x
    add r10.x, -r13.w, l(1.000000)
    mul r12.w, r10.x, r10.x
    mul r12.w, r12.w, r12.w
    mul r13.w, r10.x, r12.w
    mul_sat r14.w, r13.y, l(50.000000)
    mad r10.x, -r12.w, r10.x, l(1.000000)
    mul r16.yzw, r13.xxyz, r10.xxxx
    mad r16.yzw, r14.wwww, r13.wwww, r16.yyzw
    mul r4.w, r4.w, l(0.500000)
    mul r16.yzw, r16.yyzw, r4.wwww
    mul r16.yzw, r9.wwww, r16.yyzw
    mad r15.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r16.yzwy
    mul r10.xyz, r10.yzwy, r16.xxxx
    mul r10.xyz, r10.xyzx, r15.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r4.w, r6.w, l(8)
  and r4.w, r4.w, cb2[16].w
  movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)
  mov r11.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r4.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t2.yzwx
  umin r4.w, r4.w, cb4[0].x
  bfi r6.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t2.yzwx
else
  ishl r9.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t5.yzwx
  umin r4.w, r9.w, cb4[40].x
  bfi r0.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r0.wwww, t5.yzwx
endif
movc r0.w, r0.x, cb4[40].x, cb4[0].x
umin r0.w, r0.w, r4.w
dp3 r4.w, -r4.yzxy, r6.xyzx
add r4.w, r4.w, r4.w
mad r15.xyz, r6.zxyz, -r4.wwww, -r4.xyzx
max r4.w, r0.y, l(0.020000)
mul r9.w, r4.w, r4.w
mad r4.w, -r4.w, r4.w, l(1.000000)
dp3 r10.w, r6.zxyz, r4.xyzx
add r12.w, r10.w, r10.w
mad r13.w, r12.w, r10.w, l(-1.000000)
add r14.w, |r10.w|, l(0.000010)
min r14.w, r14.w, l(1.000000)
mul r16.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r15.w, r9.w, r9.w
mul r17.xyzw, r13.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r19.xyz, r10.xyzx
mov r16.w, l(0)
loop
  uge r18.z, r16.w, r0.w
  breakc_nz r18.z
  iadd r18.z, r6.w, r16.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.zzzz, t3.yzwx
    imul null, r19.w, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.wwww, t1.xyzw
    imad r21.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t1.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.z, r18.zzzz, t6.yzxw
    imul null, r18.w, r18.z, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.wwww, t4.xyzw
    imad r25.xyzw, r18.zzzz, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t4.wxyz
  endif
  eq r18.z, r22.w, l(0.000000)
  lt r18.w, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r19.w, r20.xyzx, r20.xyzx
  rsq r25.x, r19.w
  mul r25.xyz, r20.xyzx, r25.xxxx
  mul r25.w, r20.w, r20.w
  mul r19.w, r19.w, r25.w
  mad r19.w, -r19.w, r19.w, l(1.000000)
  max r19.w, r19.w, l(0.000000)
  mul r19.w, r19.w, r19.w
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r22.w
  exp r20.w, r20.w
  movc r19.w, r18.z, r19.w, r20.w
  dp3 r20.w, r25.xyzx, r23.yzwy
  add r20.w, -r24.x, r20.w
  mul_sat r20.w, r24.y, r20.w
  mul r20.w, r20.w, r20.w
  mul r20.w, r19.w, r20.w
  movc r18.w, r18.w, r20.w, r19.w
  lt r19.w, l(0.000000), r18.w
  if_nz r19.w
    and r19.w, r23.x, l(255)
    movc r19.w, r19.w, l(1), l(0)
    if_nz r19.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r19.w, r23.x, l(4)
      ubfe r20.w, l(1), l(4), r23.x
      movc r26.x, r20.w, l(1.000000), l(0)
      and r23.yzw, r19.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r19.w, r26.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r20.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r22.w, r11.xyzw, r25.xyzw
      add r22.w, r22.w, l(-1.000000)
      mad r20.w, r20.w, r22.w, l(1.000000)
      mul r23.yz, r19.wwww, r20.wwww
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r19.w, r23.z, r23.y
    lt r19.w, l(0.000000), r19.w
    if_nz r19.w
      f16tof32 r19.w, r24.w
      mul r20.w, r19.w, l(0.500000)
      mad r24.xyw, -r20.wwww, r21.yzyw, r20.xyxz
      mad r20.xyz, r20.wwww, r21.yzwy, r20.xyzx
      lt r20.w, l(0.000000), r19.w
      if_nz r20.w
        dp3 r21.y, r24.xywx, r24.xywx
        dp3 r21.z, r20.xyzx, r20.xyzx
        rsq r21.y, r21.y
        rsq r21.z, r21.z
        mul r21.w, r21.z, r21.y
        dp3 r22.w, r24.xywx, r20.xyzx
        mul r22.w, r21.w, r22.w
        mad r23.z, r22.w, l(0.500000), r21.w
        add r23.z, r23.z, l(0.500000)
        div r25.y, r21.w, r23.z
        dp3 r21.w, r6.zxyz, r24.xywx
        dp3 r23.z, r6.zxyz, r20.xyzx
        mul r21.z, r21.z, r23.z
        mad r21.y, r21.w, r21.y, r21.z
        mul r25.x, r21.y, l(0.500000)
      else
        dp3 r21.y, r24.xywx, r24.xywx
        add r21.z, r21.y, l(1.000000)
        rcp r25.y, r21.z
        rsq r21.y, r21.y
        mul r21.yzw, r21.yyyy, r24.xxyw
        dp3 r25.x, r6.zxyz, r21.yzwy
        mov r22.w, l(1.000000)
      endif
      lt r21.y, l(0.000000), r24.z
      mul r21.z, r24.z, r24.z
      mul_sat r21.z, r25.y, r21.z
      sqrt r21.z, r21.z
      lt r21.w, r25.x, r21.z
      max r23.z, -r21.z, r25.x
      add r23.z, r21.z, r23.z
      mul r23.z, r23.z, r23.z
      mul r21.z, r21.z, l(4.000000)
      div r21.z, r23.z, r21.z
      movc r21.z, r21.w, r21.z, r25.x
      movc_sat r21.y, r21.y, r21.z, r25.x
      movc r18.z, r18.z, r25.y, l(1.000000)
      add r20.xyz, -r24.xywx, r20.xyzx
      dp3 r21.z, r15.xyzx, r20.xyzx
      mad r25.xyz, r21.zzzz, r15.xyzx, -r20.xyzx
      dp3 r21.w, r24.xywx, r25.xyzx
      mul r21.z, r21.z, r21.z
      mad r19.w, r19.w, r19.w, -r21.z
      div_sat r19.w, r21.w, r19.w
      mad r20.xyz, r19.wwww, r20.xyzx, r24.xywx
      movc r20.xyz, r20.wwww, r20.xyzx, r24.xywx
      dp3 r19.w, r20.xyzx, r20.xyzx
      rsq r19.w, r19.w
      mul r20.xyz, r19.wwww, r20.xyzx
      mul r20.w, r19.w, r24.z
      mul_sat r20.w, r4.w, r20.w
      mul_sat r19.w, r19.w, r21.x
      dp3 r21.x, r6.zxyz, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r10.w, r21.x
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.z, l(0.000000), r20.w
      if_nz r21.z
        mad r21.w, -r20.w, r20.w, l(1.000000)
        sqrt r21.w, r21.w
        dp2 r23.z, r10.wwww, r21.xxxx
        add r23.w, -r20.x, r23.z
        ge r24.x, r23.w, r21.w
        if_nz r24.x
          mov r20.z, l(1.000000)
          mov r20.y, |r10.w|
        else
          mad r24.x, -r23.w, r23.w, l(1.000000)
          rsq r24.x, r24.x
          mul r24.x, r20.w, r24.x
          mad r24.y, -r23.w, r21.x, r10.w
          mul r24.z, r24.y, r24.x
          mad r23.w, -r23.w, r20.x, r13.w
          mul r24.w, r21.x, r21.x
          mad r24.w, -r10.w, r10.w, -r24.w
          add r24.w, r24.w, l(1.000000)
          mad r24.w, -r20.x, r20.x, r24.w
          mad_sat r23.z, r23.z, r20.x, r24.w
          sqrt r23.z, r23.z
          mul r23.zw, r23.zzzw, r24.xxxx
          mul r24.w, r10.w, r23.z
          add r25.x, r24.w, r24.w
          mad r25.y, r21.x, r21.w, r10.w
          mad r24.x, r24.x, r24.y, r25.y
          mad r24.y, r20.x, r21.w, r23.w
          add r24.y, r24.y, l(1.000000)
          mul r25.z, r23.z, r24.y
          mul r25.w, r24.y, r24.x
          mul r26.x, r24.x, r25.x
          mul r24.w, r24.w, r24.x
          mul r24.w, r24.w, l(0.500000)
          mad r24.w, r25.z, l(-0.500000), r24.w
          mad r26.y, -r25.z, l(2.000000), r26.x
          mul r26.x, r26.y, r26.x
          mad r25.z, r25.z, r25.z, r26.x
          mul r26.x, r24.y, r24.y
          mad r24.y, r20.x, r21.w, r24.y
          mad r24.y, r24.y, l(-0.500000), l(-0.500000)
          mul r24.yw, r24.yyyw, r25.wwww
          mad r24.y, r25.y, r26.x, r24.y
          mad r24.x, r24.x, r24.y, r25.z
          add r24.y, r24.w, r24.w
          mul r25.y, r24.w, r24.w
          mad r25.y, r24.x, r24.x, r25.y
          div r24.y, r24.y, r25.y
          mul r24.x, r24.x, r24.y
          mad r24.y, -r24.y, r24.w, l(1.000000)
          mul r23.z, r23.z, r24.x
          mad r23.z, r24.y, r24.z, r23.z
          mul r24.x, r25.x, r24.x
          mad r23.w, r24.y, r23.w, r24.x
          mad r21.x, r21.x, r21.w, r23.z
          mad r20.x, r20.x, r21.w, r23.w
          mad r21.w, r20.x, l(2.000000), l(2.000000)
          rsq r21.w, r21.w
          add r21.x, r10.w, r21.x
          mul_sat r20.z, r21.w, r21.x
          mad_sat r20.y, r21.w, r20.x, r21.w
        endif
      endif
      mul r18.z, r21.y, r18.z
      lt r20.x, l(0.000000), r19.w
      mul r19.w, r19.w, r19.w
      mad r21.x, r20.y, l(3.600000), l(0.400000)
      div r19.w, r19.w, r21.x
      mad r19.w, r9.w, r9.w, r19.w
      min r19.w, r19.w, l(1.000000)
      movc r18.x, r20.x, r19.w, r15.w
      mul r19.w, r20.w, l(0.250000)
      ishr r20.x, r18.x, l(1)
      iadd r20.x, r20.x, l(0x1fbd1df5)
      mad r20.x, r20.x, l(3.000000), r20.w
      mul r19.w, r19.w, r20.x
      add r20.x, r20.y, l(0.001000)
      div r19.w, r19.w, r20.x
      add r24.x, r18.x, r19.w
      div r24.y, r18.x, r24.x
      movc r21.xz, r21.zzzz, r24.xxyx, r18.xxyx
      lt r19.w, r22.w, l(1.000000)
      add r20.w, -r22.w, l(1.000100)
      add r21.w, r22.w, l(1.000000)
      div r20.w, r20.w, r21.w
      sqrt r20.w, r20.w
      mul r21.w, r20.w, l(0.250000)
      ishr r22.w, r21.x, l(1)
      iadd r22.w, r22.w, l(0x1fbd1df5)
      mad r20.w, r22.w, l(3.000000), r20.w
      mul r20.w, r20.w, r21.w
      div r20.x, r20.w, r20.x
      add r20.x, r20.x, r21.x
      div r20.x, r21.x, r20.x
      sqrt r20.x, r20.x
      mul r20.x, r20.x, r21.z
      movc r19.w, r19.w, r20.x, r21.z
      mad r20.x, r20.z, r18.x, -r20.z
      mad r20.x, r20.x, r20.z, l(1.000000)
      mul r20.x, r20.x, r20.x
      mul r20.x, r20.x, l(3.14159274)
      div r20.x, r18.x, r20.x
      mul r19.w, r19.w, r20.x
      sqrt r18.x, r18.x
      add r20.x, -r18.x, l(1.000000)
      mad r20.z, r14.w, r20.x, r18.x
      mad r18.x, r21.y, r20.x, r18.x
      mul r18.x, r14.w, r18.x
      mad r18.x, r21.y, r20.z, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r19.w
      add r19.w, -r20.y, l(1.000000)
      mul r20.x, r19.w, r19.w
      mul r20.x, r20.x, r20.x
      mul r20.y, r19.w, r20.x
      mad r19.w, -r20.x, r19.w, l(1.000000)
      mul r20.xzw, r13.xxyz, r19.wwww
      mad r20.xyz, r17.xxxx, r20.yyyy, r20.xzwx
      mul r18.x, r18.x, l(0.500000)
      mul r20.xyz, r20.xyzx, r18.xxxx
      mul r20.xyz, r18.zzzz, r20.xyzx
      mad r20.xyz, r18.zzzz, r16.xyzx, r20.xyzx
      mul r18.xzw, r18.wwww, r22.xxyz
      mul r18.xzw, r23.yyyy, r18.xxzw
      mul r18.xzw, r18.xxzw, r20.xxyz
    else
      mov r18.xzw, l(0,0,0,0)
    endif
  else
    mov r18.xzw, l(0,0,0,0)
  endif
  ushr r19.w, r23.x, l(8)
  and r19.w, r19.w, cb2[16].w
  add r18.xzw, r18.xxzw, r19.xxyz
  movc r19.xyz, r19.wwww, r18.xzwx, r19.xyzx
  iadd r16.w, r16.w, l(1)
endloop
mad r4.xyz, r12.wwww, r6.zxyz, -r4.xyzx
mov_sat r10.w, r10.w
log r0.x, r0.y
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r0.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t7.xyzw, s2, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r0.w, r0.y, cb1[165].x, cb1[165].y
mad r4.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.z, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r0.xzw, r17.yyzw, r0.zzzz, -r4.xxyz
mad r0.xzw, r8.xxxx, r0.xxzw, r4.xxyz
mad r4.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r4.x, r4.x
mul r6.x, r10.w, l(-9.280000)
exp r6.x, r6.x
min r0.y, r0.y, r6.x
mad r0.y, r0.y, r4.x, r4.y
mad r4.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r4.zwzz
mul r0.y, r17.x, r4.y
mad r4.xyz, r13.xyzx, r4.xxxx, r0.yyyy
mul r0.xyz, r0.xzwx, r4.xyzx
mad r4.xyz, r13.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r13.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r13.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r19.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r13.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r12.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r7.xyz, r8.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r7.xyzw, r0.wwww, r3.yzwx, r7.xyzw
  mov o0.w, r7.w
else
  mov o0.w, r7.w
endif
mad r0.xyz, r14.xyzx, r9.xyzx, r0.xyzx
add r0.xyz, r7.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
