//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 18:13:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_DepthLessEqual        0    N/A oDepthLE  DEPTHLE   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective centroid v6.xyzw, position
dcl_output o0.xyzw
dcl_output oDepthLE
dcl_temps 27
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r9.xyz, cb1[14].xyzx
  mov r8.yzw, cb1[62].xxyz
  mov r10.xyz, cb1[128].xyzx
  mov r11.xyzw, cb1[58].xyzw
  mov r12.xy, cb1[121].xyxx
  mov r12.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r9.xyz, cb3[14].xyzx
  mov r8.yzw, cb3[62].xxyz
  mov r10.xyz, cb3[128].xyzx
  mov r11.xyzw, cb3[58].xyzw
  mov r12.xy, cb3[121].xyxx
  mov r12.zw, cb3[122].zzzw
endif
mul r13.xyz, v0.zxyz, v1.xyzx
mad r13.xyz, v1.zxyz, v0.xyzx, -r13.xyzx
mul r13.xyz, r13.xyzx, v1.wwww
add r12.xy, -r12.xyxx, v6.xyxx
mad r12.zw, r12.xxxy, r12.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r14.xy, r12.zwzz, v6.wwww
mov r14.zw, v6.zzzw
mov r15.xyw, l(2.000000,-2.000000,0,1.000000)
mov r15.z, v6.w
mul r14.xyz, r14.xyzx, r15.xyzx
mov r16.xyz, v6.xyzx
mov r16.w, l(1.000000)
dp4 r4.x, r16.xyzw, r4.xyzw
dp4 r4.y, r16.xyzw, r5.xyzw
dp4 r4.z, r16.xyzw, r6.xyzw
dp4 r4.w, r16.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r6.xy, v2.xyxx, cb6[8].xxxx
dp3 r7.x, v0.xyzx, r4.xyzx
dp3 r7.y, r13.zxyz, r4.xyzx
dp3 r4.w, v1.xyzx, r4.xyzx
div r6.zw, -r7.xxxy, r4.wwww
mul r6.zw, r6.zzzw, cb6[8].yyyy
add r7.xy, v6.xyxx, -cb1[121].xyxx
add r7.zw, r7.xxxy, cb1[141].xxxx
ftou r7.zw, r7.zzzw
ishl r5.w, r7.w, l(1)
iadd r5.w, r5.w, r7.z
udiv null, r5.w, r5.w, l(5)
utof r5.w, r5.w
mul r7.xy, r7.xyxx, l(0.015625, 0.015625, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t16.xyzw, s5, cb1[133].x
add r5.w, r5.w, r7.x
mul r5.w, r5.w, cb6[8].z
mul r5.w, r5.w, cb6[8].w
mul r7.x, r5.w, l(0.166666672)
min r4.w, |r4.w|, l(1.000000)
mad r5.w, -r5.w, l(0.166666672), cb6[9].x
mad r4.w, r4.w, r5.w, r7.x
round_ni r5.w, r4.w
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mul r7.xy, r4.wwww, r6.zwzz
deriv_rtx_coarse r7.zw, r6.xxxy
deriv_rty_coarse r6.xy, r6.xyxx
add r5.w, r5.w, l(2.000000)
mov r15.xy, l(0,0,0,0)
mov r8.yzw, l(0,1.000000,1.000000,1.000000)
mov r9.w, l(0)
mov r10.w, l(0)
loop
  itof r12.z, r10.w
  ge r12.z, r12.z, r5.w
  breakc_nz r12.z
  mad r12.zw, v2.xxxy, cb6[8].xxxx, r15.xxxy
  sample_d_indexable(texture2d)(float,float,float,float) r16.xyzw, r12.zwzz, t17.xyzw, s6, r7.zwzz, r6.xyxx
  dp4 r12.z, cb6[3].xyzw, r16.xyzw
  lt r12.w, r8.y, r12.z
  if_nz r12.w
    add r12.w, -r8.w, r8.z
    add r13.w, -r8.y, r12.z
    add r12.w, r12.w, r13.w
    div r12.w, r13.w, r12.w
    add r13.w, -r12.w, l(1.000000)
    mul r13.w, r8.y, r13.w
    mad r9.w, r8.z, r12.w, r13.w
    mad r16.xy, -r12.wwww, r7.xyxx, r15.xyxx
    mov r15.xy, r16.xyxx
    break
  endif
  add r12.w, -r4.w, r8.y
  mad r15.xy, r6.zwzz, r4.wwww, r15.xyxx
  iadd r10.w, r10.w, l(1)
  mov r8.z, r8.y
  mov r8.w, r12.z
  mov r8.y, r12.w
  mov r9.w, l(0)
endloop
mad r6.zw, v2.xxxy, cb6[8].xxxx, r15.xxxy
mul r7.xy, r7.zwzz, cb1[133].yyyy
mul r8.yz, r6.xxyx, cb1[133].yyyy
sample_d_indexable(texture2d)(float,float,float,float) r7.xy, r6.zwzz, t18.xyzw, s7, r7.xyxx, r8.yzyy
mad r16.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r16.xyxx, r16.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r16.z, r4.w
mad r8.yzw, r16.xxyz, r0.yyyy, r10.xxyz
dp3 r0.y, r8.yzwy, r8.yzwy
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
mul r10.xyz, r13.xyzx, r8.zzzz
mad r10.xyz, r8.yyyy, v0.yzxy, r10.xyzx
mad r8.yzw, r8.wwww, v1.yyzx, r10.xxyz
dp3 r0.y, r8.yzwy, r8.yzwy
rsq r0.y, r0.y
mul r8.yzw, r0.yyyy, r8.yyzw
sample_b_indexable(texture2d)(float,float,float,float) r10.xyz, r6.zwzz, t19.xyzw, s8, cb1[133].x
mul_sat r10.xyz, r10.xyzx, cb6[7].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r13.x, r6.zwzz, t20.xyzw, s9, cb1[133].x
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r6.zwzz, t21.yxzw, s10, cb1[133].x
add r4.w, -r9.w, l(1.000000)
mul r15.z, r4.w, cb6[8].y
dp3 r4.w, r15.xyzx, r15.xyzx
sqrt r4.w, r4.w
dp2 r5.w, |r7.zwzz|, |r7.zwzz|
sqrt r5.w, r5.w
deriv_rtx_coarse r7.xyz, r5.xyzx
dp3 r6.z, r7.xyzx, r7.xyzx
sqrt r6.z, r6.z
div r5.w, r5.w, r6.z
dp2 r6.x, |r6.xyxx|, |r6.xyxx|
deriv_rty_coarse r6.yzw, r5.xxyz
dp3 r6.y, r6.yzwy, r6.yzwy
sqrt r6.xy, r6.xyxx
div r6.x, r6.x, r6.y
max r5.w, r5.w, r6.x
dp3 r6.x, r9.xyzx, r4.xyzx
div r5.w, r5.w, |r6.x|
div r4.w, r4.w, r5.w
mad r5.w, r14.w, r15.w, r4.w
mad r6.xyz, r4.xyzx, r4.wwww, r5.xyzx
div oDepthLE, r14.z, r5.w
mov_sat r13.x, r13.x
mov_sat r0.y, r0.y
mad r13.z, r0.y, r0.w, r0.z
lt r0.y, l(0.000000), cb2[12].x
lt r0.z, l(0.000000), cb1[163].w
and r0.y, r0.z, r0.y
div r0.zw, r14.xxxy, r5.wwww
mad r5.xy, r0.zwzz, r11.xyxx, r11.wzww
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r5.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r5.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r5.xyxx, t13.xyzw, s2, l(0.000000)
mad r9.xyz, r9.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r9.xyz, r8.yzwy, r9.wwww, r9.xyzx
mad r14.xz, r13.xxzx, r11.wwww, r11.xxzx
mad r14.y, r11.w, l(0.500000), r11.y
mad r7.xyz, r10.xyzx, r7.wwww, r7.xyzx
movc r9.xyz, r0.yyyy, r9.xyzx, r8.yzwy
movc r7.xyz, r0.yyyy, r7.xyzx, r10.xyzx
mov r13.y, l(0.500000)
movc r0.yzw, r0.yyyy, r14.xxyz, r13.xxyz
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, v3.zwzz, t15.xyzw, s4
mad r11.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r10.xyzw, r10.xyzw, cb5[7].xyzw, r11.xyzw
mul r10.xyzw, r10.xyzw, r10.xyzw
mul r10.xyzw, r10.xyzw, cb5[6].xyzw
mul r4.w, r0.z, l(0.080000)
mad r8.yzw, -r0.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r7.xxyz
mad r8.yzw, r0.yyyy, r8.yyzw, r4.wwww
mad r11.xyz, -r7.xyzx, r0.yyyy, r7.xyzx
mad r11.xyz, r11.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r8.yzw, r8.yyzw, cb1[127].wwww, cb1[127].xxyz
mul r0.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r12.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r0.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r12.zwzz, t14.xyzw, s3
mad r0.y, r14.w, l(0.00392156886), r13.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb5[18].w, cb5[20].w
mul r13.xyz, r13.xyzx, r13.xyzx
mad r13.xyz, r13.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r14.xyzw, r14.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r9.w, l(1.000000)
dp4 r0.z, r14.xyzw, r9.xyzw
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
mul r13.xyz, r13.xyzx, r0.yyyy
mul r13.xyz, r13.xyzx, cb1[146].xyzx
dp3 r0.y, r13.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.z, l(1), cb1[125].x
if_nz r0.z
  mul r12.zw, r5.xxxy, cb1[123].xxxy
  round_z r12.zw, r12.zzzw
  ftoi r14.xy, r12.zwzz
  mov r14.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r14.xyzz, t10.yzxw
  mad r4.w, r0.z, cb1[57].x, cb1[57].y
  mad r0.z, r0.z, cb1[57].z, -cb1[57].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r4.w
  add r0.z, -r5.w, r0.z
  div r0.z, |r0.z|, r5.w
  lt r0.z, l(0.010000), r0.z
  if_nz r0.z
    mov r15.y, -cb1[123].z
    mov r15.z, l(0)
    add r15.yz, r5.xxyx, r15.yyzy
    iadd r16.xyzw, r14.xxyy, l(1, -1, 1, -1)
    mov r14.w, r16.y
    ld_indexable(texture2d)(float,float,float,float) r0.z, r14.wyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    add r0.z, -r5.w, r0.z
    mov r15.x, |r0.z|
    lt r0.z, r15.x, l(100000000.000000)
    mov r5.z, l(100000000.000000)
    movc r15.xyz, r0.zzzz, r15.xyzx, r5.zxyz
    mov r17.y, l(0)
    mov r17.z, cb1[123].w
    add r17.yz, r5.xxyx, r17.yyzy
    mov r18.xz, r14.xxzx
    mov r18.yw, r16.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.z, r18.xyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    add r0.z, -r5.w, r0.z
    mov r17.x, |r0.z|
    lt r0.z, r17.x, r15.x
    movc r15.xyz, r0.zzzz, r17.xyzx, r15.xyzx
    mov r17.y, cb1[123].z
    mov r17.z, l(0)
    add r17.yz, r5.xxyx, r17.yyzy
    mov r16.yzw, r14.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.z, r16.xyzw, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    add r0.z, -r5.w, r0.z
    mov r17.x, |r0.z|
    lt r0.z, r17.x, r15.x
    movc r14.xyz, r0.zzzz, r17.xyzx, r15.xyzx
    mov r15.x, l(0)
    mov r15.y, -cb1[123].w
    add r12.zw, r5.xxxy, r15.xxxy
    ld_indexable(texture2d)(float,float,float,float) r0.z, r18.xwzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    add r0.z, -r5.w, r0.z
    lt r0.z, |r0.z|, r14.x
    movc r5.xy, r0.zzzz, r12.zwzz, r14.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r12.zw, l(0), t9.zwxy
utof r12.zw, r12.zzzw
mul r12.zw, r5.xxxy, r12.zzzw
round_z r12.zw, r12.zzzw
ftoi r14.xy, r12.zwzz
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r14.xyzw, t9.yzxw
mul r4.w, cb2[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb1[164].y, l(1.000000)
add r0.z, r0.z, l(-1.000000)
mad r0.z, r4.w, r0.z, l(1.000000)
mul r13.xyz, r0.zzzz, r13.xyzx
mul r0.y, r0.z, r0.y
mul r13.xyz, r11.xyzx, r13.xyzx
mad r14.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r14.xyzx
add r7.xyz, r7.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ftou r12.xy, r12.xyxx
if_z r0.x
  mov r4.w, cb4[3].x
  mov r5.z, cb4[3].y
  mov r7.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r12.zw, cb4[1].xxxy
  mov r11.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r5.z, cb4[43].y
  mov r7.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r12.zw, cb4[41].xxxy
  mov r11.w, cb4[42].x
endif
mad r4.w, r5.w, r4.w, r5.z
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r5.z, r9.w, l(-1)
umin r4.w, r4.w, r5.z
ushr r12.xy, r12.xyxx, r11.wwww
imad r4.w, r4.w, r12.w, r12.y
imad r4.w, r4.w, r12.z, r12.x
if_nz cb4[95].x
  mul r5.xy, r5.xyxx, cb1[123].xyxx
  round_z r5.xy, r5.xyxx
  ftoi r12.xy, r5.xyxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.xyzw, t8.xyzw
else
  mov r12.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r12.xyzw, r12.xyzw, r12.xyzw
if_z r0.x
  mov r5.x, cb4[0].z
  mov r5.yz, cb4[6].xxzx
  mov r7.w, cb4[6].w
  mov r14.xyz, cb4[5].xyzx
  mov r15.xyz, cb4[4].xyzx
else
  mov r5.x, cb4[40].z
  mov r5.yz, cb4[46].xxzx
  mov r7.w, cb4[46].w
  mov r14.xyz, cb4[45].xyzx
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r5.x
  and r16.xyzw, r5.yyyy, l(255, 1, 2, 4)
  movc r16.xyzw, r16.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r5.x, r5.y, l(8)
  movc r17.w, r5.x, l(1.000000), l(0)
  ushr r18.xy, r5.yyyy, l(4, 8, 0, 0)
  ubfe r5.x, l(1), l(4), r5.y
  movc r19.x, r5.x, l(1.000000), l(0)
  and r18.xzw, r18.xxxx, l(2, 0, 4, 8)
  movc r19.yzw, r18.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r5.x, r19.xyzw, r12.xyzw
  lt r5.y, r7.w, l(0.000000)
  swapc r5.x, r18.x, r5.y, l(1.000000), r5.x
  if_nz r16.x
    mov r17.xyz, r16.yzwy
    dp4 r5.y, r17.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r9.w, r10.xyzw, r17.xyzw
    add r9.w, r9.w, l(-1.000000)
    mad r5.y, r5.y, r9.w, l(1.000000)
    mad_sat r5.z, r5.w, r5.z, r7.w
    mul r5.z, r5.z, r5.z
    add r5.y, -r5.x, r5.y
    mad r5.x, r5.z, r5.y, r5.x
    min r5.y, r18.x, r5.x
    mul r16.xy, r18.xxxx, r5.xyxx
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r5.x, r16.y, r16.x
  lt r5.x, l(0.000000), r5.x
  if_nz r5.x
    dp3 r5.x, r15.xyzx, r15.xyzx
    rsq r5.x, r5.x
    mul r5.xyz, r5.xxxx, r15.xyzx
    dp3 r5.w, r9.zxyz, r5.xyzx
    mov_sat r7.w, r5.w
    max r9.w, r0.w, l(0.020000)
    dp3 r11.w, r9.zxyz, r4.xyzx
    dp3 r5.x, r4.xyzx, r5.xyzx
    mad r5.y, r5.x, l(2.000000), l(2.000000)
    rsq r5.y, r5.y
    add r5.z, r5.w, r11.w
    mul_sat r5.z, r5.y, r5.z
    mad_sat r5.x, r5.y, r5.x, r5.y
    add r5.y, |r11.w|, l(0.000010)
    min r5.y, r5.y, l(1.000000)
    mul r15.xyz, r7.wwww, r11.xyzx
    mul r5.w, r9.w, r9.w
    mul r11.w, r5.w, r5.w
    mad r13.w, r5.z, r11.w, -r5.z
    mad r5.z, r13.w, r5.z, l(1.000000)
    mul r5.z, r5.z, r5.z
    mul r5.z, r5.z, l(3.14159274)
    div r5.z, r11.w, r5.z
    mad r9.w, -r9.w, r9.w, l(1.000000)
    mad r11.w, r5.y, r9.w, r5.w
    mad r5.w, r7.w, r9.w, r5.w
    mul r5.y, r5.w, r5.y
    mad r5.y, r7.w, r11.w, r5.y
    rcp r5.y, r5.y
    mul r5.y, r5.y, r5.z
    add r5.x, -r5.x, l(1.000000)
    mul r5.z, r5.x, r5.x
    mul r5.z, r5.z, r5.z
    mul r5.w, r5.x, r5.z
    mul_sat r9.w, r8.z, l(50.000000)
    mad r5.x, -r5.z, r5.x, l(1.000000)
    mul r16.yzw, r8.yyzw, r5.xxxx
    mad r5.xzw, r9.wwww, r5.wwww, r16.yyzw
    mul r5.y, r5.y, l(0.500000)
    mul r5.xyz, r5.xzwx, r5.yyyy
    mul r5.xyz, r5.xyzx, r7.wwww
    mad r5.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r5.xyzx
    mul r14.xyz, r14.xyzx, r16.xxxx
    mul r5.xyz, r5.xyzx, r14.xyzx
  else
    mov r5.xyz, l(0,0,0,0)
  endif
  and r5.w, r18.y, cb2[16].w
  movc r5.xyz, r5.wwww, r5.xyzx, l(0,0,0,0)
else
  mov r5.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r5.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r5.w, r5.wwww, t1.yzwx
  umin r5.w, r5.w, cb4[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
else
  ishl r9.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t4.yzwx
  umin r5.w, r9.w, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r4.wwww, t4.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r5.w
dp3 r5.w, -r4.yzxy, r9.xyzx
add r5.w, r5.w, r5.w
mad r14.xyz, r9.zxyz, -r5.wwww, -r4.xyzx
max r5.w, r0.w, l(0.020000)
mul r9.w, r5.w, r5.w
mad r5.w, -r5.w, r5.w, l(1.000000)
dp3 r11.w, r9.zxyz, r4.xyzx
add r13.w, r11.w, r11.w
mad r14.w, r13.w, r11.w, l(-1.000000)
add r15.x, |r11.w|, l(0.000010)
min r15.x, r15.x, l(1.000000)
mul r15.yzw, r11.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
mul r16.x, r9.w, r9.w
mul r17.xyzw, r8.zyzw, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r16.yzw, r5.xxyz
mov r18.z, l(0)
loop
  uge r18.w, r18.z, r4.w
  breakc_nz r18.w
  iadd r18.w, r7.w, r18.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r19.x, r18.wwww, t2.xyzw
    imul null, r19.y, r19.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.yyyy, t0.xyzw
    imad r19.xyzw, r19.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r19.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r19.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r19.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.wwww, t5.yzwx
    imul null, r24.x, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r24.xxxx, t3.xyzw
    imad r24.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r24.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r24.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r24.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r24.wwww, t3.wxyz
  endif
  eq r18.w, r21.w, l(0.000000)
  lt r24.x, l(-2.000000), r23.x
  add r20.xyz, -r6.xyzx, r20.xyzx
  dp3 r24.y, r20.xyzx, r20.xyzx
  rsq r24.z, r24.y
  mul r25.xyz, r20.xyzx, r24.zzzz
  mul r24.z, r20.w, r20.w
  mul r24.y, r24.z, r24.y
  mad r24.y, -r24.y, r24.y, l(1.000000)
  max r24.y, r24.y, l(0.000000)
  mul r24.y, r24.y, r24.y
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r21.w
  exp r20.w, r20.w
  movc r20.w, r18.w, r24.y, r20.w
  dp3 r21.w, r25.xyzx, r22.yzwy
  add r21.w, -r23.x, r21.w
  mul_sat r21.w, r23.y, r21.w
  mul r21.w, r21.w, r21.w
  mul r21.w, r20.w, r21.w
  movc r20.w, r24.x, r21.w, r20.w
  lt r21.w, l(0.000000), r20.w
  if_nz r21.w
    and r21.w, r22.x, l(255)
    movc r21.w, r21.w, l(1), l(0)
    if_nz r21.w
      and r24.xyzw, r22.xxxx, l(1, 2, 4, 8)
      movc r24.xyzw, r24.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r21.w, r22.x, l(4)
      ubfe r22.y, l(1), l(4), r22.x
      movc r25.x, r22.y, l(1.000000), l(0)
      and r22.yzw, r21.wwww, l(0, 2, 4, 8)
      movc r25.yzw, r22.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r21.w, r25.xyzw, r12.xyzw
      dp4 r22.y, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r22.z, r10.xyzw, r24.xyzw
      add r22.z, r22.z, l(-1.000000)
      mad r22.y, r22.y, r22.z, l(1.000000)
      mul r22.yz, r21.wwww, r22.yyyy
    else
      mov r22.yz, l(0,1.000000,1.000000,0)
    endif
    add r21.w, r22.z, r22.y
    lt r21.w, l(0.000000), r21.w
    if_nz r21.w
      f16tof32 r21.w, r23.w
      mul r22.z, r21.w, l(0.500000)
      mad r23.xyw, -r22.zzzz, r19.yzyw, r20.xyxz
      mad r19.yzw, r22.zzzz, r19.yyzw, r20.xxyz
      lt r20.x, l(0.000000), r21.w
      if_nz r20.x
        dp3 r20.y, r23.xywx, r23.xywx
        dp3 r20.z, r19.yzwy, r19.yzwy
        rsq r20.y, r20.y
        rsq r20.z, r20.z
        mul r22.z, r20.z, r20.y
        dp3 r22.w, r23.xywx, r19.yzwy
        mul r22.w, r22.z, r22.w
        mad r24.x, r22.w, l(0.500000), r22.z
        add r24.x, r24.x, l(0.500000)
        div r24.y, r22.z, r24.x
        dp3 r22.z, r9.zxyz, r23.xywx
        dp3 r24.z, r9.zxyz, r19.yzwy
        mul r20.z, r20.z, r24.z
        mad r20.y, r22.z, r20.y, r20.z
        mul r24.x, r20.y, l(0.500000)
      else
        dp3 r20.y, r23.xywx, r23.xywx
        add r20.z, r20.y, l(1.000000)
        rcp r24.y, r20.z
        rsq r20.y, r20.y
        mul r25.xyz, r20.yyyy, r23.xywx
        dp3 r24.x, r9.zxyz, r25.xyzx
        mov r22.w, l(1.000000)
      endif
      lt r20.y, l(0.000000), r23.z
      mul r20.z, r23.z, r23.z
      mul_sat r20.z, r24.y, r20.z
      sqrt r20.z, r20.z
      lt r22.z, r24.x, r20.z
      max r24.z, -r20.z, r24.x
      add r24.z, r20.z, r24.z
      mul r24.z, r24.z, r24.z
      mul r20.z, r20.z, l(4.000000)
      div r20.z, r24.z, r20.z
      movc r20.z, r22.z, r20.z, r24.x
      movc_sat r20.y, r20.y, r20.z, r24.x
      movc r18.w, r18.w, r24.y, l(1.000000)
      add r19.yzw, -r23.xxyw, r19.yyzw
      dp3 r20.z, r14.xyzx, r19.yzwy
      mad r24.xyz, r20.zzzz, r14.xyzx, -r19.yzwy
      dp3 r22.z, r23.xywx, r24.xyzx
      mul r20.z, r20.z, r20.z
      mad r20.z, r21.w, r21.w, -r20.z
      div_sat r20.z, r22.z, r20.z
      mad r19.yzw, r20.zzzz, r19.yyzw, r23.xxyw
      movc r19.yzw, r20.xxxx, r19.yyzw, r23.xxyw
      dp3 r20.x, r19.yzwy, r19.yzwy
      rsq r20.x, r20.x
      mul r19.yzw, r19.yyzw, r20.xxxx
      mul r20.z, r20.x, r23.z
      mul_sat r20.z, r5.w, r20.z
      mul_sat r19.x, r19.x, r20.x
      dp3 r20.x, r9.zxyz, r19.yzwy
      dp3 r19.y, r4.xyzx, r19.yzwy
      mad r19.z, r19.y, l(2.000000), l(2.000000)
      rsq r19.z, r19.z
      add r19.w, r11.w, r20.x
      mul_sat r19.w, r19.z, r19.w
      mad_sat r19.z, r19.z, r19.y, r19.z
      lt r21.w, l(0.000000), r20.z
      if_nz r21.w
        mad r22.z, -r20.z, r20.z, l(1.000000)
        sqrt r22.z, r22.z
        dp2 r23.x, r11.wwww, r20.xxxx
        add r23.y, -r19.y, r23.x
        ge r23.z, r23.y, r22.z
        if_nz r23.z
          mov r19.w, l(1.000000)
          mov r19.z, |r11.w|
        else
          mad r23.z, -r23.y, r23.y, l(1.000000)
          rsq r23.z, r23.z
          mul r23.z, r20.z, r23.z
          mad r23.w, -r23.y, r20.x, r11.w
          mul r24.x, r23.w, r23.z
          mad r23.y, -r23.y, r19.y, r14.w
          mul r24.y, r20.x, r20.x
          mad r24.y, -r11.w, r11.w, -r24.y
          add r24.y, r24.y, l(1.000000)
          mad r24.y, -r19.y, r19.y, r24.y
          mad_sat r23.x, r23.x, r19.y, r24.y
          sqrt r23.x, r23.x
          mul r23.xy, r23.xyxx, r23.zzzz
          mul r24.y, r11.w, r23.x
          add r24.z, r24.y, r24.y
          mad r24.w, r20.x, r22.z, r11.w
          mad r23.z, r23.z, r23.w, r24.w
          mad r23.w, r19.y, r22.z, r23.y
          add r23.w, r23.w, l(1.000000)
          mul r25.xy, r23.wwww, r23.xzxx
          mul r25.z, r23.z, r24.z
          mul r24.y, r24.y, r23.z
          mul r24.y, r24.y, l(0.500000)
          mad r24.y, r25.x, l(-0.500000), r24.y
          mul r24.y, r24.y, r25.y
          mad r25.w, -r25.x, l(2.000000), r25.z
          mul r25.z, r25.w, r25.z
          mad r25.x, r25.x, r25.x, r25.z
          mul r25.z, r23.w, r23.w
          mad r23.w, r19.y, r22.z, r23.w
          mad r23.w, r23.w, l(-0.500000), l(-0.500000)
          mul r23.w, r23.w, r25.y
          mad r23.w, r24.w, r25.z, r23.w
          mad r23.z, r23.z, r23.w, r25.x
          add r23.w, r24.y, r24.y
          mul r24.w, r24.y, r24.y
          mad r24.w, r23.z, r23.z, r24.w
          div r23.w, r23.w, r24.w
          mul r23.z, r23.z, r23.w
          mad r23.w, -r23.w, r24.y, l(1.000000)
          mul r23.x, r23.x, r23.z
          mad r23.x, r23.w, r24.x, r23.x
          mul r23.z, r24.z, r23.z
          mad r23.y, r23.w, r23.y, r23.z
          mad r20.x, r20.x, r22.z, r23.x
          mad r19.y, r19.y, r22.z, r23.y
          mad r22.z, r19.y, l(2.000000), l(2.000000)
          rsq r22.z, r22.z
          add r20.x, r11.w, r20.x
          mul_sat r19.w, r22.z, r20.x
          mad_sat r19.z, r22.z, r19.y, r22.z
        endif
      endif
      mul r18.w, r20.y, r18.w
      lt r19.y, l(0.000000), r19.x
      mul r19.x, r19.x, r19.x
      mad r20.x, r19.z, l(3.600000), l(0.400000)
      div r19.x, r19.x, r20.x
      mad r19.x, r9.w, r9.w, r19.x
      min r19.x, r19.x, l(1.000000)
      movc r18.x, r19.y, r19.x, r16.x
      mul r19.x, r20.z, l(0.250000)
      ishr r19.y, r18.x, l(1)
      iadd r19.y, r19.y, l(0x1fbd1df5)
      mad r19.y, r19.y, l(3.000000), r20.z
      mul r19.x, r19.y, r19.x
      add r19.y, r19.z, l(0.001000)
      div r19.x, r19.x, r19.y
      add r23.x, r18.x, r19.x
      div r23.y, r18.x, r23.x
      movc r20.xz, r21.wwww, r23.xxyx, r18.xxyx
      lt r19.x, r22.w, l(1.000000)
      add r21.w, -r22.w, l(1.000100)
      add r22.z, r22.w, l(1.000000)
      div r21.w, r21.w, r22.z
      sqrt r21.w, r21.w
      mul r22.z, r21.w, l(0.250000)
      ishr r22.w, r20.x, l(1)
      iadd r22.w, r22.w, l(0x1fbd1df5)
      mad r21.w, r22.w, l(3.000000), r21.w
      mul r21.w, r21.w, r22.z
      div r19.y, r21.w, r19.y
      add r19.y, r19.y, r20.x
      div r19.y, r20.x, r19.y
      sqrt r19.y, r19.y
      mul r19.y, r19.y, r20.z
      movc r19.x, r19.x, r19.y, r20.z
      mad r19.y, r19.w, r18.x, -r19.w
      mad r19.y, r19.y, r19.w, l(1.000000)
      mul r19.y, r19.y, r19.y
      mul r19.y, r19.y, l(3.14159274)
      div r19.y, r18.x, r19.y
      mul r19.x, r19.x, r19.y
      sqrt r18.x, r18.x
      add r19.y, -r18.x, l(1.000000)
      mad r19.w, r15.x, r19.y, r18.x
      mad r18.x, r20.y, r19.y, r18.x
      mul r18.x, r15.x, r18.x
      mad r18.x, r20.y, r19.w, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r19.x
      add r19.x, -r19.z, l(1.000000)
      mul r19.y, r19.x, r19.x
      mul r19.y, r19.y, r19.y
      mul r19.z, r19.x, r19.y
      mad r19.x, -r19.y, r19.x, l(1.000000)
      mul r19.xyw, r8.yzyw, r19.xxxx
      mad r19.xyz, r17.xxxx, r19.zzzz, r19.xywx
      mul r18.x, r18.x, l(0.500000)
      mul r19.xyz, r19.xyzx, r18.xxxx
      mul r19.xyz, r18.wwww, r19.xyzx
      mad r19.xyz, r18.wwww, r15.yzwy, r19.xyzx
      mul r20.xyz, r20.wwww, r21.xyzx
      mul r20.xyz, r22.yyyy, r20.xyzx
      mul r19.xyz, r19.xyzx, r20.xyzx
    else
      mov r19.xyz, l(0,0,0,0)
    endif
  else
    mov r19.xyz, l(0,0,0,0)
  endif
  ushr r18.x, r22.x, l(8)
  and r18.x, r18.x, cb2[16].w
  add r19.xyz, r16.yzwy, r19.xyzx
  movc r16.yzw, r18.xxxx, r19.xxyz, r16.yyzw
  iadd r18.z, r18.z, l(1)
endloop
mad r4.xyz, r13.wwww, r9.zxyz, -r4.xyzx
mov_sat r11.w, r11.w
log r0.x, r0.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r5.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r5.x
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r0.w, cb1[165].x, cb1[165].y
mad r5.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r5.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r5.xyz, r17.yzwy, r0.yyyy, -r4.xyzx
mad r4.xyz, r8.xxxx, r5.xyzx, r4.xyzx
mad r5.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r5.x, r5.x
mul r0.y, r11.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r5.x, r5.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r5.zwzz
mul r0.y, r17.x, r0.y
mad r0.xyw, r8.yzyw, r0.xxxx, r0.yyyy
mul r0.xyw, r0.xyxw, r4.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mad r4.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r8.yzwy, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r16.yzwy
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r6.w, l(1.000000)
  dp4 r1.x, r6.xyzw, r1.xyzw
  dp4 r1.y, r6.xyzw, r2.xyzw
  dp4 r0.w, r6.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r8.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r11.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[5].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r6.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r6.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
