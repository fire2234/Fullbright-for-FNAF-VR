// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 20:15:54 2019
Texture2D<float4> t18 : register(t18);

Texture2D<float4> t17 : register(t17);

Texture2D<float4> t16 : register(t16);

Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

Texture2D<float4> t13 : register(t13);

Texture2D<float4> t12 : register(t12);

Texture2D<float4> t11 : register(t11);

Texture2D<float4> t10 : register(t10);

Texture3D<float4> t9 : register(t9);

TextureCubeArray<float4> t8 : register(t8);

Buffer<uint4> t7 : register(t7);

Buffer<uint4> t6 : register(t6);

Buffer<float4> t5 : register(t5);

Buffer<uint4> t4 : register(t4);

Buffer<uint4> t3 : register(t3);

Buffer<float4> t2 : register(t2);

Texture3D<float4> t1 : register(t1);

Texture3D<uint4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[5];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[15];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[96];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[182];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  nointerpolation uint v3 : PACKED_EYE_INDEX0,
  float4 v4 : TEXCOORD7,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v3.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.y = cb1[128].w;
    r0.zw = cb1[129].xy;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r9.xyz = cb1[128].xyz;
    r10.xyzw = cb1[58].xyzw;
    r11.xy = cb1[121].xy;
    r11.zw = cb1[122].zw;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.y = cb3[128].w;
    r0.zw = cb3[129].xy;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r9.xyz = cb3[128].xyz;
    r10.xyzw = cb3[58].xyzw;
    r11.xy = cb3[121].xy;
    r11.zw = cb3[122].zw;
  }
  r12.xyz = v1.zxy * v0.yzx;
  r12.xyz = v1.yzx * v0.zxy + -r12.xyz;
  r12.xyz = v1.www * r12.xyz;
  r11.xy = v5.xy + -r11.xy;
  r11.zw = r11.xy * r11.zw + float2(-0.5,-0.5);
  r13.xy = v5.ww * r11.zw;
  r13.z = v5.w;
  r13.xyw = float3(2,-2,1) * r13.xyz;
  r14.xyz = v5.xyz;
  r14.w = 1;
  r4.x = dot(r14.xyzw, r4.xyzw);
  r4.y = dot(r14.xyzw, r5.xyzw);
  r4.z = dot(r14.xyzw, r6.xyzw);
  r4.w = dot(r14.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r6.xy = float2(3,3) * v2.xy;
  r6.zw = t16.SampleBias(s3_s, r6.xy, cb1[133].x).xy;
  r7.xy = r6.zw * float2(2,2) + float2(-1,-1);
  r4.w = dot(r7.xy, r7.xy);
  r4.w = 1 + -r4.w;
  r4.w = max(0, r4.w);
  r7.z = sqrt(r4.w);
  r7.xyz = r7.xyz * r0.yyy + r9.xyz;
  r0.y = dot(r7.xyz, r7.xyz);
  r0.y = rsqrt(r0.y);
  r7.xyz = r7.xyz * r0.yyy;
  r8.yzw = r7.yyy * r12.xyz;
  r7.xyw = r7.xxx * v0.xyz + r8.yzw;
  r7.xyz = r7.zzz * v1.xyz + r7.xyw;
  r0.y = dot(r7.xyz, r7.xyz);
  r0.y = rsqrt(r0.y);
  r7.xyz = r7.xyz * r0.yyy;
  r8.yzw = t17.SampleBias(s4_s, r6.xy, cb1[133].x).xyz;
  r8.yzw = saturate(cb6[4].xyz * r8.yzw);
  r0.y = t18.SampleBias(s5_s, r6.xy, cb1[133].x).x;
  r0.y = saturate(1 + -r0.y);
  r6.z = r0.y * r0.w + r0.z;
  r0.yz = cmp(float2(0,0) < cb2[12].xz);
  r0.w = cmp(0 < cb1[163].w);
  r0.y = r0.w ? r0.y : 0;
  r9.xy = r13.xy / r13.ww;
  r9.xy = r9.xy * r10.xy + r10.wz;
  r10.xyzw = t13.SampleLevel(s2_s, r9.xy, 0).xyzw;
  r12.xyzw = t14.SampleLevel(s2_s, r9.xy, 0).xyzw;
  r14.xyzw = t15.SampleLevel(s2_s, r9.xy, 0).xyzw;
  r12.xyz = r12.xyz * float3(2,2,2) + float3(-1.00392163,-1.00392163,-1.00392163);
  r12.xyz = r7.xyz * r12.www + r12.xyz;
  r14.z = r6.z * r14.w + r14.z;
  r14.y = r14.w * 0.5 + r14.y;
  r10.xyz = r8.yzw * r10.www + r10.xyz;
  r7.xyz = r0.yyy ? r12.xyz : r7.xyz;
  r8.yzw = r0.yyy ? r10.xyz : r8.yzw;
  r6.xy = float2(0,0.5);
  r6.xyz = r0.yyy ? r14.xyz : r6.xyz;
  if (r0.z != 0) {
    r0.yzw = r5.xyz * cb1[178].xyz + cb1[179].xyz;
    r0.yzw = max(float3(0,0,0), r0.yzw);
    r0.yzw = min(float3(0.99000001,0.99000001,0.99000001), r0.yzw);
    r0.yzw = cb1[180].xyz * r0.yzw;
    r10.xyz = (int3)r0.yzw;
    r10.w = 0;
    r10.xyzw = t0.Load(r10.xyzw).xyzw;
    r10.xyzw = (uint4)r10.xyzw;
    r4.w = 1 + cb1[180].w;
    r0.yzw = r0.yzw / r10.www;
    r0.yzw = frac(r0.yzw);
    r0.yzw = cb1[180].www * r0.yzw;
    r0.yzw = r10.xyz * r4.www + r0.yzw;
    r0.yzw = float3(0.5,0.5,0.5) + r0.yzw;
    r0.yzw = cb1[181].xyz * r0.yzw;
    r0.y = t1.SampleLevel(s0_s, r0.yzw, 0).x;
  } else {
    r4.w = cmp(0 < cb2[10].w);
    r0.y = r4.w ? cb5[5].x : 1;
  }
  r4.w = 0.0799999982 * r6.y;
  r10.xyz = -r6.yyy * float3(0.0799999982,0.0799999982,0.0799999982) + r8.yzw;
  r10.xyz = r6.xxx * r10.xyz + r4.www;
  r6.xyw = -r8.yzw * r6.xxx + r8.yzw;
  r6.xyw = r6.xyw * cb1[126].www + cb1[126].xyz;
  r10.xyz = r10.xyz * cb1[127].www + cb1[127].xyz;
  r12.xyz = r7.yzy * r7.yzx;
  r14.yw = r7.zz * r7.yx;
  r4.w = r7.x * r7.x + -r12.x;
  r15.yzw = float3(-1.02332771,1.02332771,-1.02332771) * r7.yzx;
  r14.xz = r12.zy * float2(1,3) + float2(0,-1);
  r12.xyzw = float4(0.858085215,-0.858085215,0.247708291,-0.858085215) * r14.xyzw;
  r4.w = 0.429042608 * r4.w;
  r15.x = 0.886227548;
  r7.w = dot(cb5[8].xyzw, r15.xyzw);
  r9.w = dot(cb5[11].xyzw, r12.xyzw);
  r7.w = r9.w + r7.w;
  r14.x = cb5[14].x * r4.w + r7.w;
  r7.w = dot(cb5[9].xyzw, r15.xyzw);
  r9.w = dot(cb5[12].xyzw, r12.xyzw);
  r7.w = r9.w + r7.w;
  r14.y = cb5[14].y * r4.w + r7.w;
  r7.w = dot(cb5[10].xyzw, r15.xyzw);
  r9.w = dot(cb5[13].xyzw, r12.xyzw);
  r7.w = r9.w + r7.w;
  r14.z = cb5[14].z * r4.w + r7.w;
  r12.xyz = max(float3(0,0,0), r14.xyz);
  r12.xyz = cb1[146].xyz * r12.xyz;
  r4.w = dot(r12.xyz, float3(0.300000012,0.589999974,0.109999999));
  r7.w = cmp(1 < asint(cb1[125].x));
  if (r7.w != 0) {
    r11.zw = cb1[123].xy * r9.xy;
    r11.zw = trunc(r11.zw);
    r14.xy = (int2)r11.zw;
    r14.z = 0;
    r7.w = t12.Load(r14.xyz).x;
    r9.w = r7.w * cb1[57].x + cb1[57].y;
    r7.w = r7.w * cb1[57].z + -cb1[57].w;
    r7.w = 1 / r7.w;
    r7.w = r9.w + r7.w;
    r7.w = -r13.z * 1 + r7.w;
    r7.w = abs(r7.w) / r13.w;
    r7.w = cmp(0.00999999978 < r7.w);
    if (r7.w != 0) {
      r15.y = -cb1[123].z;
      r15.z = 0;
      r15.yz = r15.yz + r9.xy;
      r16.xyzw = (int4)r14.xxyy + int4(1,-1,1,-1);
      r14.w = r16.y;
      r7.w = t12.Load(r14.wyz).x;
      r9.w = r7.w * cb1[57].x + cb1[57].y;
      r7.w = r7.w * cb1[57].z + -cb1[57].w;
      r7.w = 1 / r7.w;
      r7.w = r9.w + r7.w;
      r7.w = -r13.z * 1 + r7.w;
      r15.x = abs(r7.w);
      r7.w = cmp(r15.x < 100000000);
      r9.z = 100000000;
      r15.xyz = r7.www ? r15.xyz : r9.zxy;
      r17.y = 0;
      r17.z = cb1[123].w;
      r17.yz = r17.yz + r9.xy;
      r18.xz = r14.xz;
      r18.yw = r16.zw;
      r7.w = t12.Load(r18.xyz).x;
      r9.z = r7.w * cb1[57].x + cb1[57].y;
      r7.w = r7.w * cb1[57].z + -cb1[57].w;
      r7.w = 1 / r7.w;
      r7.w = r9.z + r7.w;
      r7.w = -r13.z * 1 + r7.w;
      r17.x = abs(r7.w);
      r7.w = cmp(r17.x < r15.x);
      r15.xyz = r7.www ? r17.xyz : r15.xyz;
      r17.y = cb1[123].z;
      r17.z = 0;
      r17.yz = r17.yz + r9.xy;
      r16.yzw = r14.yzz;
      r7.w = t12.Load(r16.xyz).x;
      r9.z = r7.w * cb1[57].x + cb1[57].y;
      r7.w = r7.w * cb1[57].z + -cb1[57].w;
      r7.w = 1 / r7.w;
      r7.w = r9.z + r7.w;
      r7.w = -r13.z * 1 + r7.w;
      r17.x = abs(r7.w);
      r7.w = cmp(r17.x < r15.x);
      r14.xyz = r7.www ? r17.xyz : r15.xyz;
      r13.x = 0;
      r13.y = -cb1[123].w;
      r9.zw = r13.xy + r9.xy;
      r7.w = t12.Load(r18.xwz).x;
      r10.w = r7.w * cb1[57].x + cb1[57].y;
      r7.w = r7.w * cb1[57].z + -cb1[57].w;
      r7.w = 1 / r7.w;
      r7.w = r10.w + r7.w;
      r7.w = -r13.z * 1 + r7.w;
      r7.w = cmp(abs(r7.w) < r14.x);
      r9.xy = r7.ww ? r9.zw : r14.yz;
    }
  }
  t11.GetDimensions(0, uiDest.x, uiDest.y, uiDest.z);
  r9.zw = uiDest.xy;
  r9.zw = (uint2)r9.zw;
  r9.zw = r9.xy * r9.zw;
  r9.zw = trunc(r9.zw);
  r14.xy = (int2)r9.zw;
  r14.zw = float2(0,0);
  r7.w = t11.Load(r14.xyz).x;
  r9.z = 3.99900007 * cb2[12].y;
  r9.z = (uint)r9.z;
  r9.z = (int)r9.z & 2;
  r9.z = r9.z ? cb1[164].y : 1;
  r7.w = -1 + r7.w;
  r7.w = r9.z * r7.w + 1;
  r12.xyz = r12.xyz * r7.www;
  r4.w = r7.w * r4.w;
  r12.xyz = r12.xyz * r6.xyw;
  r13.xyz = r8.yzw * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r13.xyz = r8.yzw * float3(-4.79510021,-4.79510021,-4.79510021) + r13.xyz;
  r8.yzw = r8.yzw * float3(2.75519991,2.75519991,2.75519991) + r13.xyz;
  r8.yzw = float3(1.33200002,1.33200002,1.33200002) + r8.yzw;
  r8.yzw = max(float3(1,1,1), r8.yzw);
  r9.zw = (uint2)r11.xy;
  if (r0.x == 0) {
    r10.w = cb4[3].x;
    r11.xy = cb4[3].yz;
    r11.z = cb4[1].z;
    r13.xy = cb4[1].xy;
    r11.w = cb4[2].x;
  } else {
    r10.w = cb4[43].x;
    r11.xy = cb4[43].yz;
    r11.z = cb4[41].z;
    r13.xy = cb4[41].xy;
    r11.w = cb4[42].x;
  }
  r10.w = v5.w * r10.w + r11.x;
  r10.w = log2(r10.w);
  r10.w = r10.w * r11.y;
  r10.w = max(0, r10.w);
  r10.w = (uint)r10.w;
  r11.x = (int)r11.z + -1;
  r10.w = min((uint)r11.x, (uint)r10.w);
  r9.zw = (uint2)r9.zw >> (uint2)r11.ww;
  r9.w = mad((int)r10.w, (int)r13.y, (int)r9.w);
  r9.z = mad((int)r9.w, (int)r13.x, (int)r9.z);
  if (cb4[95].x != 0) {
    r9.xy = cb1[123].xy * r9.xy;
    r9.xy = trunc(r9.xy);
    r11.xy = (int2)r9.xy;
    r11.zw = float2(0,0);
    r11.xyzw = t10.Load(r11.xyz).xyzw;
  } else {
    r11.xyzw = float4(1,1,1,1);
  }
  r11.xyzw = r11.xyzw * r11.xyzw;
  if (r0.x == 0) {
    r9.x = cb4[0].z;
    r9.yw = cb4[6].xz;
    r10.w = cb4[6].w;
    r13.xyz = cb4[5].xyz;
    r14.xyz = cb4[4].xyz;
  } else {
    r9.x = cb4[40].z;
    r9.yw = cb4[46].xz;
    r10.w = cb4[46].w;
    r13.xyz = cb4[45].xyz;
    r14.xyz = cb4[44].xyz;
  }
  if (r9.x != 0) {
    r15.xyzw = (int4)r9.yyyy & int4(255,1,2,4);
    r15.xyzw = r15.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    r9.x = (int)r9.y & 8;
    r16.w = r9.x ? 1 : 0;
    r17.xy = (uint2)r9.yy >> int2(4,8);
    if (1 == 0) r9.x = 0; else if (1+4 < 32) {     r9.x = (uint)r9.y << (32-(1 + 4)); r9.x = (uint)r9.x >> (32-1);    } else r9.x = (uint)r9.y >> 4;
    r18.x = r9.x ? 1 : 0;
    r17.xzw = (int3)r17.xxx & int3(2,4,8);
    r18.yzw = r17.xzw ? float3(1,1,1) : float3(0,0,0);
    r9.x = dot(r18.xyzw, r11.xyzw);
    r9.y = cmp(r10.w < 0);
    r9.x = (int)r9.y ? r9.x : 1.000000; r17.x = (int)r9.y ? 1.000000 : r9.x;
    if (r15.x != 0) {
      r16.xyz = r15.yzw;
      r9.y = dot(r16.xyzw, float4(1,1,1,1));
      r0.z = 1;
      r0.z = dot(r0.yzzz, r16.xyzw);
      r0.z = -1 + r0.z;
      r0.z = r9.y * r0.z + 1;
      r9.y = saturate(r13.w * r9.w + r10.w);
      r9.y = r9.y * r9.y;
      r0.z = r0.z + -r9.x;
      r0.z = r9.y * r0.z + r9.x;
      r9.x = min(r0.z, r17.x);
      r15.x = r0.z * r17.x;
      r15.y = r9.x * r17.x;
    } else {
      r15.xy = float2(1,1);
    }
    r0.z = r15.x + r15.y;
    r0.z = cmp(0 < r0.z);
    if (r0.z != 0) {
      r0.z = dot(r14.xyz, r14.xyz);
      r0.z = rsqrt(r0.z);
      r9.xyw = r14.xyz * r0.zzz;
      r0.z = dot(r7.xyz, r9.xyw);
      r10.w = saturate(r0.z);
      r12.w = max(0.0199999996, r6.z);
      r13.w = dot(r7.xyz, r4.xyz);
      r9.x = dot(r4.xyz, r9.xyw);
      r9.y = r9.x * 2 + 2;
      r9.y = rsqrt(r9.y);
      r0.z = r13.w + r0.z;
      r0.z = saturate(r0.z * r9.y);
      r9.x = saturate(r9.y * r9.x + r9.y);
      r9.y = 9.99999975e-006 + abs(r13.w);
      r9.y = min(1, r9.y);
      r14.xyz = r10.www * r6.xyw;
      r9.w = r12.w * r12.w;
      r13.w = r9.w * r9.w;
      r14.w = r0.z * r13.w + -r0.z;
      r0.z = r14.w * r0.z + 1;
      r0.z = r0.z * r0.z;
      r0.z = 3.14159274 * r0.z;
      r0.z = r13.w / r0.z;
      r12.w = -r12.w * r12.w + 1;
      r13.w = r9.y * r12.w + r9.w;
      r9.w = r10.w * r12.w + r9.w;
      r9.y = r9.y * r9.w;
      r9.y = r10.w * r13.w + r9.y;
      r9.y = rcp(r9.y);
      r0.z = r9.y * r0.z;
      r9.x = 1 + -r9.x;
      r9.y = r9.x * r9.x;
      r9.y = r9.y * r9.y;
      r9.w = r9.y * r9.x;
      r12.w = saturate(50 * r10.y);
      r9.x = -r9.y * r9.x + 1;
      r15.yzw = r9.xxx * r10.xyz;
      r9.xyw = r12.www * r9.www + r15.yzw;
      r0.z = 0.5 * r0.z;
      r9.xyw = r0.zzz * r9.xyw;
      r9.xyw = r10.www * r9.xyw;
      r9.xyw = r14.xyz * float3(0.318309873,0.318309873,0.318309873) + r9.xyw;
      r13.xyz = r15.xxx * r13.xyz;
      r9.xyw = r13.xyz * r9.xyw;
    } else {
      r9.xyw = float3(0,0,0);
    }
    r0.z = (int)r17.y & asint(cb2[16].w);
    r9.xyw = r0.zzz ? r9.xyw : float3(0,0,0);
  } else {
    r9.xyw = float3(0,0,0);
  }
  if (r0.x == 0) {
    r0.z = (uint)r9.z << 1;
    r0.z = t3.Load(r0.z).x;
    r0.z = min(asuint(cb4[0].x), (uint)r0.z);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r10.w = (((uint)r9.z << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r10.w = t3.Load(r10.w).x;
  } else {
    r12.w = (uint)r9.z << 1;
    r12.w = t6.Load(r12.w).x;
    r0.z = min(asuint(cb4[40].x), (uint)r12.w);
    bitmask.z = ((~(-1 << 31)) << 1) & 0xffffffff;  r9.z = (((uint)r9.z << 1) & bitmask.z) | ((uint)1 & ~bitmask.z);
    r10.w = t6.Load(r9.z).x;
  }
  r9.z = r0.x ? cb4[40].x : cb4[0].x;
  r0.z = min((uint)r9.z, (uint)r0.z);
  r9.z = dot(-r4.xyz, r7.xyz);
  r9.z = r9.z + r9.z;
  r13.xyz = r7.xyz * -r9.zzz + -r4.xyz;
  r9.z = max(0.0199999996, r6.z);
  r12.w = r9.z * r9.z;
  r9.z = -r9.z * r9.z + 1;
  r13.w = dot(r7.xyz, r4.xyz);
  r14.x = r13.w + r13.w;
  r14.y = r14.x * r13.w + -1;
  r14.z = 9.99999975e-006 + abs(r13.w);
  r14.z = min(1, r14.z);
  r15.xyz = float3(0.318309873,0.318309873,0.318309873) * r6.xyw;
  r14.w = r12.w * r12.w;
  r16.xyzw = float4(50,0.449999988,0.449999988,0.449999988) * r10.yxyz;
  r16.x = saturate(r16.x);
  r0.w = 1;
  r17.y = 1;
  r18.xyz = r9.xyw;
  r15.w = 0;
  while (true) {
    r17.z = cmp((uint)r15.w >= (uint)r0.z);
    if (r17.z != 0) break;
    r17.z = (int)r10.w + (int)r15.w;
    if (r0.x == 0) {
      r17.w = t4.Load(r17.z).x;
      r18.w = (int)r17.w * 5;
      r19.xyzw = t2.Load(r18.w).xyzw;
      r20.xyzw = mad((int4)r17.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r21.xyzw = t2.Load(r20.x).xyzw;
      r22.xyzw = t2.Load(r20.y).wxyz;
      r23.xyzw = t2.Load(r20.z).xyzw;
      r20.xyzw = t2.Load(r20.w).wxyz;
    } else {
      r17.z = t7.Load(r17.z).x;
      r17.w = (int)r17.z * 5;
      r19.xyzw = t5.Load(r17.w).xyzw;
      r24.xyzw = mad((int4)r17.zzzz, int4(5,5,5,5), int4(1,2,3,4));
      r21.xyzw = t5.Load(r24.x).xyzw;
      r22.xyzw = t5.Load(r24.y).wxyz;
      r23.xyzw = t5.Load(r24.z).xyzw;
      r20.xyzw = t5.Load(r24.w).wxyz;
    }
    r17.z = cmp(r21.w == 0.000000);
    r17.w = cmp(-2 < r23.x);
    r19.xyz = r19.xyz + -r5.xyz;
    r18.w = dot(r19.xyz, r19.xyz);
    r24.x = rsqrt(r18.w);
    r24.xyz = r24.xxx * r19.xyz;
    r24.w = r19.w * r19.w;
    r18.w = r24.w * r18.w;
    r18.w = -r18.w * r18.w + 1;
    r18.w = max(0, r18.w);
    r18.w = r18.w * r18.w;
    r25.xyz = r19.xyz * r19.www;
    r19.w = dot(r25.xyz, r25.xyz);
    r19.w = min(1, r19.w);
    r19.w = 1 + -r19.w;
    r19.w = log2(r19.w);
    r19.w = r21.w * r19.w;
    r19.w = exp2(r19.w);
    r18.w = r17.z ? r18.w : r19.w;
    r19.w = dot(r24.xyz, r22.yzw);
    r19.w = r19.w + -r23.x;
    r19.w = saturate(r19.w * r23.y);
    r19.w = r19.w * r19.w;
    r19.w = r19.w * r18.w;
    r17.w = r17.w ? r19.w : r18.w;
    r18.w = cmp(0 < r17.w);
    if (r18.w != 0) {
      r18.w = (int)r22.x & 255;
      r18.w = r18.w ? 1 : 0;
      if (r18.w != 0) {
        r24.xyzw = (int4)r22.xxxx & int4(1,2,4,8);
        r24.xyzw = r24.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r18.w = (uint)r22.x >> 4;
        if (1 == 0) r19.w = 0; else if (1+4 < 32) {         r19.w = (uint)r22.x << (32-(1 + 4)); r19.w = (uint)r19.w >> (32-1);        } else r19.w = (uint)r22.x >> 4;
        r25.x = r19.w ? 1 : 0;
        r22.yzw = (int3)r18.www & int3(2,4,8);
        r25.yzw = r22.yzw ? float3(1,1,1) : float3(0,0,0);
        r18.w = dot(r25.xyzw, r11.xyzw);
        r19.w = dot(r24.xyzw, float4(1,1,1,1));
        r21.w = dot(r0.ywww, r24.xyzw);
        r21.w = -1 + r21.w;
        r19.w = r19.w * r21.w + 1;
        r22.yz = r19.ww * r18.ww;
      } else {
        r22.yz = float2(1,1);
      }
      r18.w = r22.y + r22.z;
      r18.w = cmp(0 < r18.w);
      if (r18.w != 0) {
        r18.w = f16tof32(r23.w);
        r19.w = 0.5 * r18.w;
        r23.xyw = -r19.www * r20.yzw + r19.xyz;
        r19.xyz = r19.www * r20.yzw + r19.xyz;
        r19.w = cmp(0 < r18.w);
        if (r19.w != 0) {
          r20.y = dot(r23.xyw, r23.xyw);
          r20.z = dot(r19.xyz, r19.xyz);
          r20.y = rsqrt(r20.y);
          r20.z = rsqrt(r20.z);
          r20.w = r20.y * r20.z;
          r21.w = dot(r23.xyw, r19.xyz);
          r21.w = r21.w * r20.w;
          r22.z = r21.w * 0.5 + r20.w;
          r22.z = 0.5 + r22.z;
          r24.y = r20.w / r22.z;
          r20.w = dot(r7.xyz, r23.xyw);
          r22.z = dot(r7.xyz, r19.xyz);
          r20.z = r22.z * r20.z;
          r20.y = r20.w * r20.y + r20.z;
          r24.x = 0.5 * r20.y;
        } else {
          r20.y = dot(r23.xyw, r23.xyw);
          r20.z = 1 + r20.y;
          r24.y = rcp(r20.z);
          r20.y = rsqrt(r20.y);
          r20.yzw = r23.xyw * r20.yyy;
          r24.x = dot(r7.xyz, r20.yzw);
          r21.w = 1;
        }
        r20.y = cmp(0 < r23.z);
        r20.z = r23.z * r23.z;
        r20.z = saturate(r20.z * r24.y);
        r20.z = sqrt(r20.z);
        r20.w = cmp(r24.x < r20.z);
        r22.z = max(r24.x, -r20.z);
        r22.z = r22.z + r20.z;
        r22.z = r22.z * r22.z;
        r20.z = 4 * r20.z;
        r20.z = r22.z / r20.z;
        r20.z = r20.w ? r20.z : r24.x;
        r20.y = saturate(r20.y ? r20.z : r24.x);
        r17.z = r17.z ? r24.y : 1;
        r19.xyz = r19.xyz + -r23.xyw;
        r20.z = dot(r13.xyz, r19.xyz);
        r24.xyz = r20.zzz * r13.xyz + -r19.xyz;
        r20.w = dot(r23.xyw, r24.xyz);
        r20.z = r20.z * r20.z;
        r18.w = r18.w * r18.w + -r20.z;
        r18.w = saturate(r20.w / r18.w);
        r19.xyz = r18.www * r19.xyz + r23.xyw;
        r19.xyz = r19.www ? r19.xyz : r23.xyw;
        r18.w = dot(r19.xyz, r19.xyz);
        r18.w = rsqrt(r18.w);
        r19.xyz = r19.xyz * r18.www;
        r19.w = r23.z * r18.w;
        r19.w = saturate(r19.w * r9.z);
        r18.w = saturate(r20.x * r18.w);
        r20.x = dot(r7.xyz, r19.xyz);
        r19.x = dot(r4.xyz, r19.xyz);
        r19.y = r19.x * 2 + 2;
        r19.y = rsqrt(r19.y);
        r19.z = r20.x + r13.w;
        r19.z = saturate(r19.z * r19.y);
        r19.y = saturate(r19.y * r19.x + r19.y);
        r20.z = cmp(0 < r19.w);
        if (r20.z != 0) {
          r20.w = -r19.w * r19.w + 1;
          r20.w = sqrt(r20.w);
          r22.z = dot(r13.ww, r20.xx);
          r22.w = r22.z + -r19.x;
          r23.x = cmp(r22.w >= r20.w);
          if (r23.x != 0) {
            r19.z = 1;
            r19.y = abs(r13.w);
          } else {
            r23.x = -r22.w * r22.w + 1;
            r23.x = rsqrt(r23.x);
            r23.x = r23.x * r19.w;
            r23.y = -r22.w * r20.x + r13.w;
            r23.z = r23.x * r23.y;
            r22.w = -r22.w * r19.x + r14.y;
            r23.w = r20.x * r20.x;
            r23.w = -r13.w * r13.w + -r23.w;
            r23.w = 1 + r23.w;
            r23.w = -r19.x * r19.x + r23.w;
            r22.z = saturate(r22.z * r19.x + r23.w);
            r22.z = sqrt(r22.z);
            r22.zw = r23.xx * r22.zw;
            r23.w = r22.z * r13.w;
            r24.x = r23.w + r23.w;
            r24.y = r20.x * r20.w + r13.w;
            r23.x = r23.x * r23.y + r24.y;
            r23.y = r19.x * r20.w + r22.w;
            r23.y = 1 + r23.y;
            r24.z = r23.y * r22.z;
            r24.w = r23.x * r23.y;
            r25.x = r24.x * r23.x;
            r23.w = r23.x * r23.w;
            r23.w = 0.5 * r23.w;
            r23.w = r24.z * -0.5 + r23.w;
            r25.y = -r24.z * 2 + r25.x;
            r25.x = r25.x * r25.y;
            r24.z = r24.z * r24.z + r25.x;
            r25.x = r23.y * r23.y;
            r23.y = r19.x * r20.w + r23.y;
            r23.y = r23.y * -0.5 + -0.5;
            r23.yw = r24.ww * r23.yw;
            r23.y = r24.y * r25.x + r23.y;
            r23.x = r23.x * r23.y + r24.z;
            r23.y = r23.w + r23.w;
            r24.y = r23.w * r23.w;
            r24.y = r23.x * r23.x + r24.y;
            r23.y = r23.y / r24.y;
            r23.x = r23.y * r23.x;
            r23.y = -r23.y * r23.w + 1;
            r22.z = r23.x * r22.z;
            r22.z = r23.y * r23.z + r22.z;
            r23.x = r23.x * r24.x;
            r22.w = r23.y * r22.w + r23.x;
            r20.x = r20.x * r20.w + r22.z;
            r19.x = r19.x * r20.w + r22.w;
            r20.w = r19.x * 2 + 2;
            r20.w = rsqrt(r20.w);
            r20.x = r20.x + r13.w;
            r19.z = saturate(r20.x * r20.w);
            r19.y = saturate(r20.w * r19.x + r20.w);
          }
        }
        r17.z = r17.z * r20.y;
        r19.x = cmp(0 < r18.w);
        r18.w = r18.w * r18.w;
        r20.x = r19.y * 3.5999999 + 0.400000006;
        r18.w = r18.w / r20.x;
        r18.w = r12.w * r12.w + r18.w;
        r18.w = min(1, r18.w);
        r17.x = r19.x ? r18.w : r14.w;
        r18.w = 0.25 * r19.w;
        r19.x = (uint)r17.x >> 1;
        r19.x = (int)r19.x + 0x1fbd1df5;
        r19.x = r19.x * 3 + r19.w;
        r18.w = r19.x * r18.w;
        r19.x = 0.00100000005 + r19.y;
        r18.w = r18.w / r19.x;
        r23.x = r18.w + r17.x;
        r23.y = r17.x / r23.x;
        r20.xz = r20.zz ? r23.xy : r17.xy;
        r18.w = cmp(r21.w < 1);
        r19.w = 1.00010002 + -r21.w;
        r20.w = 1 + r21.w;
        r19.w = r19.w / r20.w;
        r19.w = sqrt(r19.w);
        r20.w = 0.25 * r19.w;
        r21.w = (uint)r20.x >> 1;
        r21.w = (int)r21.w + 0x1fbd1df5;
        r19.w = r21.w * 3 + r19.w;
        r19.w = r20.w * r19.w;
        r19.x = r19.w / r19.x;
        r19.x = r20.x + r19.x;
        r19.x = r20.x / r19.x;
        r19.x = sqrt(r19.x);
        r19.x = r20.z * r19.x;
        r18.w = r18.w ? r19.x : r20.z;
        r19.x = r19.z * r17.x + -r19.z;
        r19.x = r19.x * r19.z + 1;
        r19.x = r19.x * r19.x;
        r19.x = 3.14159274 * r19.x;
        r19.x = r17.x / r19.x;
        r18.w = r19.x * r18.w;
        r17.x = sqrt(r17.x);
        r19.x = 1 + -r17.x;
        r19.z = r14.z * r19.x + r17.x;
        r17.x = r20.y * r19.x + r17.x;
        r17.x = r17.x * r14.z;
        r17.x = r20.y * r19.z + r17.x;
        r17.x = rcp(r17.x);
        r17.x = r18.w * r17.x;
        r18.w = 1 + -r19.y;
        r19.x = r18.w * r18.w;
        r19.x = r19.x * r19.x;
        r19.y = r19.x * r18.w;
        r18.w = -r19.x * r18.w + 1;
        r19.xzw = r18.www * r10.xyz;
        r19.xyz = r16.xxx * r19.yyy + r19.xzw;
        r17.x = 0.5 * r17.x;
        r19.xyz = r17.xxx * r19.xyz;
        r19.xyz = r19.xyz * r17.zzz;
        r19.xyz = r17.zzz * r15.xyz + r19.xyz;
        r17.xzw = r21.xyz * r17.www;
        r17.xzw = r17.xzw * r22.yyy;
        r17.xzw = r19.xyz * r17.xzw;
      } else {
        r17.xzw = float3(0,0,0);
      }
    } else {
      r17.xzw = float3(0,0,0);
    }
    r18.w = (uint)r22.x >> 8;
    r18.w = (int)r18.w & asint(cb2[16].w);
    r17.xzw = r18.xyz + r17.xzw;
    r18.xyz = r18.www ? r17.xzw : r18.xyz;
    r15.w = (int)r15.w + 1;
  }
  r0.xyz = r14.xxx * r7.xyz + -r4.xyz;
  r13.w = saturate(r13.w);
  r4.x = log2(r6.z);
  r4.x = -r4.x * 1.20000005 + 1;
  r4.y = -1 + cb1[163].z;
  r4.x = r4.y + -r4.x;
  r0.w = asint(cb0[28].x);
  r0.xyz = t8.SampleLevel(s1_s, r0.xyzw, r4.x).xyz;
  r0.xyz = cb0[31].xxx * r0.xyz;
  r0.xyz = cb1[146].xyz * r0.xyz;
  r0.w = dot(cb1[146].xyz, float3(0.300000012,0.589999974,0.109999999));
  r0.w = cb0[29].w * r0.w;
  r4.x = saturate(r6.z * cb1[165].x + cb1[165].y);
  r4.y = r4.x * -2 + 3;
  r4.x = r4.x * r4.x;
  r4.x = r4.y * r4.x;
  r0.w = max(9.99999975e-005, r0.w);
  r0.w = r4.w / r0.w;
  r0.w = min(cb1[165].z, r0.w);
  r0.w = -1 + r0.w;
  r0.w = r4.x * r0.w + 1;
  r0.xyz = r0.xyz * r0.www;
  r4.xyz = r16.yzw * r4.www + -r0.xyz;
  r0.xyz = r8.xxx * r4.xyz + r0.xyz;
  r4.xyzw = r6.zzzz * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.w = r4.x * r4.x;
  r6.z = -9.27999973 * r13.w;
  r6.z = exp2(r6.z);
  r0.w = min(r6.z, r0.w);
  r0.w = r0.w * r4.x + r4.y;
  r4.xy = r0.ww * float2(-1.03999996,1.03999996) + r4.zw;
  r0.w = r4.y * r16.x;
  r4.xyz = r10.xyz * r4.xxx + r0.www;
  r0.xyz = r4.xyz * r0.xyz;
  r0.xyz = r0.xyz * r7.www;
  r4.xyz = r10.xyz * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r4.xyz = r10.xyz * float3(-4.79510021,-4.79510021,-4.79510021) + r4.xyz;
  r4.xyz = r10.xyz * float3(2.75519991,2.75519991,2.75519991) + r4.xyz;
  r4.xyz = float3(1.33200002,1.33200002,1.33200002) + r4.xyz;
  r4.xyz = max(float3(1,1,1), r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r18.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t9.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v4.w * r1.w;
    r1.xyz = v4.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v4.xyz;
    r2.x = v4.w;
  }
  r2.yzw = r10.xyz * float3(0.449999988,0.449999988,0.449999988) + r6.xyw;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r2.yzw = max(float3(0,0,0), cb6[2].xyz);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r3.xyz = -cb2[5].xyz + r5.xyz;
    r4.xyz = float3(1,1,1) + cb2[11].xyz;
    r3.xyz = cmp(r4.xyz < abs(r3.xyz));
    r0.w = (int)r3.y | (int)r3.x;
    r0.w = (int)r3.z | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.xyz = r1.www ? float3(0,1,1) : float3(1,1,0);
    r2.yzw = r0.www ? r3.xyz : r2.yzw;
  }
  r0.xyz = r12.xyz * r8.yzw + r0.xyz;
  r0.xyz = r0.xyz + r2.yzw;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  o0.w = 0;
  return;
}