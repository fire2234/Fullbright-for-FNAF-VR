// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 00:53:24 2019
Texture3D<float4> t10 : register(t10);

TextureCubeArray<float4> t9 : register(t9);

Buffer<uint4> t8 : register(t8);

Buffer<uint4> t7 : register(t7);

Buffer<float4> t6 : register(t6);

Buffer<uint4> t5 : register(t5);

Buffer<uint4> t4 : register(t4);

Buffer<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture3D<float4> t1 : register(t1);

Texture3D<uint4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[6];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[6];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[92];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[153];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[182];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[32];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  nointerpolation uint v2 : PACKED_EYE_INDEX0,
  float4 v3 : TEXCOORD7,
  float4 v4 : SV_Position0,
  uint v5 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v2.x & 1;
  if (r0.x == 0) {
    r1.x = cb1[4].x;
    r1.y = cb1[5].x;
    r1.z = cb1[6].x;
    r1.w = cb1[7].x;
    r2.x = cb1[4].y;
    r2.y = cb1[5].y;
    r2.z = cb1[6].y;
    r2.w = cb1[7].y;
    r3.x = cb1[4].w;
    r3.y = cb1[5].w;
    r3.z = cb1[6].w;
    r3.w = cb1[7].w;
    r4.x = cb1[40].x;
    r4.y = cb1[41].x;
    r4.z = cb1[42].x;
    r4.w = cb1[43].x;
    r5.x = cb1[40].y;
    r5.y = cb1[41].y;
    r5.z = cb1[42].y;
    r5.w = cb1[43].y;
    r6.x = cb1[40].z;
    r6.y = cb1[41].z;
    r6.z = cb1[42].z;
    r6.w = cb1[43].z;
    r7.x = cb1[40].w;
    r7.y = cb1[41].w;
    r7.z = cb1[42].w;
    r7.w = cb1[43].w;
    r0.y = cb1[128].w;
    r0.zw = cb1[129].xy;
    r8.x = cb1[152].w;
    r8.yzw = cb1[62].xyz;
    r9.xyz = cb1[128].xyz;
    r10.xy = cb1[121].xy;
  } else {
    r1.x = cb3[4].x;
    r1.y = cb3[5].x;
    r1.z = cb3[6].x;
    r1.w = cb3[7].x;
    r2.x = cb3[4].y;
    r2.y = cb3[5].y;
    r2.z = cb3[6].y;
    r2.w = cb3[7].y;
    r3.x = cb3[4].w;
    r3.y = cb3[5].w;
    r3.z = cb3[6].w;
    r3.w = cb3[7].w;
    r4.x = cb3[40].x;
    r4.y = cb3[41].x;
    r4.z = cb3[42].x;
    r4.w = cb3[43].x;
    r5.x = cb3[40].y;
    r5.y = cb3[41].y;
    r5.z = cb3[42].y;
    r5.w = cb3[43].y;
    r6.x = cb3[40].z;
    r6.y = cb3[41].z;
    r6.z = cb3[42].z;
    r6.w = cb3[43].z;
    r7.x = cb3[40].w;
    r7.y = cb3[41].w;
    r7.z = cb3[42].w;
    r7.w = cb3[43].w;
    r0.y = cb3[128].w;
    r0.zw = cb3[129].xy;
    r8.x = cb3[152].w;
    r8.yzw = cb3[62].xyz;
    r9.xyz = cb3[128].xyz;
    r10.xy = cb3[121].xy;
  }
  r11.xyz = v1.zxy * v0.yzx;
  r11.xyz = v1.yzx * v0.zxy + -r11.xyz;
  r11.xyz = v1.www * r11.xyz;
  r12.xyz = v4.xyz;
  r12.w = 1;
  r4.x = dot(r12.xyzw, r4.xyzw);
  r4.y = dot(r12.xyzw, r5.xyzw);
  r4.z = dot(r12.xyzw, r6.xyzw);
  r4.w = dot(r12.xyzw, r7.xyzw);
  r4.xyz = r4.xyz / r4.www;
  r5.xyz = r4.xyz + -r8.yzw;
  r4.w = dot(-r4.xyz, -r4.xyz);
  r4.w = rsqrt(r4.w);
  r4.xyz = -r4.xyz * r4.www;
  r6.xyz = r0.yyy * float3(0,0,1) + r9.xyz;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = r6.yyy * r11.xyz;
  r6.xyw = r6.xxx * v0.xyz + r7.xyz;
  r6.xyz = r6.zzz * v1.xyz + r6.xyw;
  r0.y = dot(r6.xyz, r6.xyz);
  r0.y = rsqrt(r0.y);
  r6.xyz = r6.xyz * r0.yyy;
  r7.xyz = saturate(cb6[4].xyz);
  r9.xyw = saturate(cb6[5].xyz);
  r0.y = r9.y * r0.w + r0.z;
  r0.z = cmp(0 < cb2[12].z);
  if (r0.z != 0) {
    r8.yzw = r5.xyz * cb1[178].xyz + cb1[179].xyz;
    r8.yzw = max(float3(0,0,0), r8.yzw);
    r8.yzw = min(float3(0.99000001,0.99000001,0.99000001), r8.yzw);
    r8.yzw = cb1[180].xyz * r8.yzw;
    r11.xyz = (int3)r8.yzw;
    r11.w = 0;
    r11.xyzw = t0.Load(r11.xyzw).xyzw;
    r11.xyzw = (uint4)r11.xyzw;
    r0.z = 1 + cb1[180].w;
    r8.yzw = r8.yzw / r11.www;
    r8.yzw = frac(r8.yzw);
    r8.yzw = cb1[180].www * r8.yzw;
    r8.yzw = r11.xyz * r0.zzz + r8.yzw;
    r8.yzw = float3(0.5,0.5,0.5) + r8.yzw;
    r8.yzw = cb1[181].xyz * r8.yzw;
    r11.x = t1.SampleLevel(s0_s, r8.yzw, 0).x;
  } else {
    r0.z = cmp(0 < cb2[10].w);
    r11.x = r0.z ? cb5[5].x : 1;
  }
  r0.z = cb1[127].w * r9.x;
  r7.xyz = r7.xyz * cb1[126].www + cb1[126].xyz;
  r8.yzw = r0.zzz * float3(0.0799999982,0.0799999982,0.0799999982) + cb1[127].xyz;
  r0.zw = v4.xy + -r10.xy;
  r0.zw = (uint2)r0.zw;
  if (r0.x == 0) {
    r4.w = cb4[3].x;
    r6.w = cb4[3].y;
    r7.w = cb4[3].z;
    r10.xyz = cb4[1].zxy;
    r10.w = cb4[2].x;
  } else {
    r4.w = cb4[43].x;
    r6.w = cb4[43].y;
    r7.w = cb4[43].z;
    r10.xyz = cb4[41].zxy;
    r10.w = cb4[42].x;
  }
  r4.w = v4.w * r4.w + r6.w;
  r4.w = log2(r4.w);
  r4.w = r4.w * r7.w;
  r4.w = max(0, r4.w);
  r4.w = (uint)r4.w;
  r6.w = (int)r10.x + -1;
  r4.w = min((uint)r6.w, (uint)r4.w);
  r0.zw = (uint2)r0.zw >> (uint2)r10.ww;
  r0.w = mad((int)r4.w, (int)r10.z, (int)r0.w);
  r0.z = mad((int)r0.w, (int)r10.y, (int)r0.z);
  if (r0.x == 0) {
    r0.w = cb4[0].z;
    r4.w = cb4[6].x;
    r6.w = cb4[6].z;
    r7.w = cb4[6].w;
    r10.xyz = cb4[5].xyz;
    r12.xyz = cb4[4].xyz;
  } else {
    r0.w = cb4[40].z;
    r4.w = cb4[46].x;
    r6.w = cb4[46].z;
    r7.w = cb4[46].w;
    r10.xyz = cb4[45].xyz;
    r12.xyz = cb4[44].xyz;
  }
  if (r0.w != 0) {
    r13.xyzw = (int4)r4.wwww & int4(255,2,4,8);
    r13.xyzw = r13.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
    if (cb4[7].x != 0) {
      r0.w = cb4[7].x;
      r10.w = 0;
      while (true) {
        r12.w = cmp((uint)r10.w >= asuint(cb4[7].x));
        if (r12.w != 0) break;
        r12.w = dot(cb4[8].xyzw, icb[r10.w+0].xyzw);
        r12.w = cmp(v4.w < r12.w);
        if (r12.w != 0) {
          r0.w = r10.w;
          break;
        }
        r10.w = (int)r10.w + 1;
      }
      r10.w = cmp((uint)r0.w < asuint(cb4[7].x));
      if (r10.w != 0) {
        r10.w = (uint)r0.w << 2;
        r14.xyzw = cb4[r10.w+10].xyzw * r5.yyyy;
        r14.xyzw = r5.xxxx * cb4[r10.w+9].xyzw + r14.xyzw;
        r14.xyzw = r5.zzzz * cb4[r10.w+11].xyzw + r14.xyzw;
        r14.xyzw = cb4[r10.w+12].xyzw + r14.xyzw;
        r15.xyzw = r14.xyxy / r14.wwww;
        r14.xy = cmp(r15.zw >= cb4[r0.w+25].xy);
        r16.xy = cmp(cb4[r0.w+25].zw >= r15.zw);
        r14.xy = r14.xy ? r16.xy : 0;
        r0.w = r14.y ? r14.x : 0;
        if (r0.w != 0) {
          r15.xyzw = r15.xyzw * cb4[29].xyxy + float4(-0.5,-0.5,-0.5,-0.5);
          r14.xy = frac(r15.zw);
          r15.xyzw = floor(r15.xyzw);
          r16.xyzw = float4(0.5,1.5,0.5,0.5) + r15.zwzw;
          r16.xyzw = cb4[29].zwzw * r16.xyzw;
          r17.x = t2.SampleLevel(s1_s, r16.xy, 0).x;
          r15.xyzw = float4(1.5,1.5,1.5,0.5) + r15.xyzw;
          r15.xyzw = cb4[29].zwzw * r15.xyzw;
          r17.y = t2.SampleLevel(s1_s, r15.xy, 0).x;
          r17.z = t2.SampleLevel(s1_s, r15.zw, 0).x;
          r17.w = t2.SampleLevel(s1_s, r16.zw, 0).x;
          r15.xyzw = r17.xyzw + -r14.zzzz;
          r15.xyzw = saturate(r15.xyzw * float4(4000,4000,4000,4000) + float4(1,1,1,1));
          r14.zw = r15.zy + -r15.wx;
          r14.xz = r14.xx * r14.zw + r15.wx;
          r0.w = r14.z + -r14.x;
          r0.w = r14.y * r0.w + r14.x;
        } else {
          r0.w = 1;
        }
      } else {
        r0.w = 1;
      }
    } else {
      r0.w = 1;
    }
    if (r13.x != 0) {
      r13.x = 1;
      r10.w = dot(float4(1,1,1,1), r13.xyzw);
      r12.w = -1 + r10.w;
      r10.w = r10.w * r12.w + 1;
      r6.w = saturate(v4.w * r6.w + r7.w);
      r6.w = r6.w * r6.w;
      r7.w = r10.w + -r0.w;
      r13.x = r6.w * r7.w + r0.w;
      r13.y = min(1, r13.x);
    } else {
      r13.xy = float2(1,1);
    }
    r0.w = r13.x + r13.y;
    r0.w = cmp(0 < r0.w);
    if (r0.w != 0) {
      r0.w = dot(r12.xyz, r12.xyz);
      r0.w = rsqrt(r0.w);
      r12.xyz = r12.xyz * r0.www;
      r0.w = dot(r6.xyz, r12.xyz);
      r6.w = saturate(r0.w);
      r7.w = max(0.0199999996, r0.y);
      r10.w = dot(r6.xyz, r4.xyz);
      r12.x = dot(r4.xyz, r12.xyz);
      r12.y = r12.x * 2 + 2;
      r12.y = rsqrt(r12.y);
      r0.w = r10.w + r0.w;
      r0.w = saturate(r0.w * r12.y);
      r12.x = saturate(r12.y * r12.x + r12.y);
      r10.w = 9.99999975e-006 + abs(r10.w);
      r10.w = min(1, r10.w);
      r12.yzw = r7.xyz * r6.www;
      r13.y = r7.w * r7.w;
      r13.z = r13.y * r13.y;
      r13.w = r0.w * r13.z + -r0.w;
      r0.w = r13.w * r0.w + 1;
      r0.w = r0.w * r0.w;
      r0.w = 3.14159274 * r0.w;
      r0.w = r13.z / r0.w;
      r7.w = -r7.w * r7.w + 1;
      r13.z = r10.w * r7.w + r13.y;
      r7.w = r6.w * r7.w + r13.y;
      r7.w = r10.w * r7.w;
      r7.w = r6.w * r13.z + r7.w;
      r7.w = rcp(r7.w);
      r0.w = r7.w * r0.w;
      r7.w = 1 + -r12.x;
      r10.w = r7.w * r7.w;
      r10.w = r10.w * r10.w;
      r12.x = r10.w * r7.w;
      r13.y = saturate(50 * r8.z);
      r7.w = -r10.w * r7.w + 1;
      r14.xyz = r7.www * r8.yzw;
      r13.yzw = r13.yyy * r12.xxx + r14.xyz;
      r0.w = 0.5 * r0.w;
      r13.yzw = r0.www * r13.yzw;
      r13.yzw = r13.yzw * r6.www;
      r12.xyz = r12.yzw * float3(0.318309873,0.318309873,0.318309873) + r13.yzw;
      r10.xyz = r13.xxx * r10.xyz;
      r10.xyz = r12.xyz * r10.xyz;
    } else {
      r10.xyz = float3(0,0,0);
    }
    r0.w = (uint)r4.w >> 8;
    r0.w = (int)r0.w & asint(cb2[16].w);
    r10.xyz = r0.www ? r10.xyz : float3(0,0,0);
    r11.x = 1;
  } else {
    r10.xyz = float3(0,0,0);
  }
  if (r0.x == 0) {
    r0.w = (uint)r0.z << 1;
    r0.w = t4.Load(r0.w).x;
    r0.w = min(asuint(cb4[0].x), (uint)r0.w);
    bitmask.w = ((~(-1 << 31)) << 1) & 0xffffffff;  r4.w = (((uint)r0.z << 1) & bitmask.w) | ((uint)1 & ~bitmask.w);
    r4.w = t4.Load(r4.w).x;
  } else {
    r6.w = (uint)r0.z << 1;
    r6.w = t7.Load(r6.w).x;
    r0.w = min(asuint(cb4[40].x), (uint)r6.w);
    bitmask.z = ((~(-1 << 31)) << 1) & 0xffffffff;  r0.z = (((uint)r0.z << 1) & bitmask.z) | ((uint)1 & ~bitmask.z);
    r4.w = t7.Load(r0.z).x;
  }
  r0.z = r0.x ? cb4[40].x : cb4[0].x;
  r0.z = min((uint)r0.w, (uint)r0.z);
  r0.w = dot(-r4.xyz, r6.xyz);
  r0.w = r0.w + r0.w;
  r12.xyz = r6.xyz * -r0.www + -r4.xyz;
  r0.w = max(0.0199999996, r0.y);
  r6.w = r0.w * r0.w;
  r0.w = -r0.w * r0.w + 1;
  r7.w = dot(r6.xyz, r4.xyz);
  r10.w = r7.w + r7.w;
  r12.w = r10.w * r7.w + -1;
  r13.x = 9.99999975e-006 + abs(r7.w);
  r13.x = min(1, r13.x);
  r13.yzw = float3(0.318309873,0.318309873,0.318309873) * r7.xyz;
  r14.x = r6.w * r6.w;
  r14.y = 50 * r8.z;
  r14.y = saturate(r14.y);
  r11.yw = float2(1,1);
  r15.xyz = r10.xyz;
  r14.z = 0;
  while (true) {
    r14.w = cmp((uint)r14.z >= (uint)r0.z);
    if (r14.w != 0) break;
    r14.w = (int)r4.w + (int)r14.z;
    if (r0.x == 0) {
      r15.w = t5.Load(r14.w).x;
      r16.x = (int)r15.w * 5;
      r16.xyzw = t3.Load(r16.x).xyzw;
      r17.xyzw = mad((int4)r15.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t3.Load(r17.x).xyzw;
      r19.xyzw = t3.Load(r17.y).wxyz;
      r20.xyzw = t3.Load(r17.z).xyzw;
      r17.xyzw = t3.Load(r17.w).wxyz;
    } else {
      r14.w = t8.Load(r14.w).x;
      r15.w = (int)r14.w * 5;
      r16.xyzw = t6.Load(r15.w).xyzw;
      r21.xyzw = mad((int4)r14.wwww, int4(5,5,5,5), int4(1,2,3,4));
      r18.xyzw = t6.Load(r21.x).xyzw;
      r19.xyzw = t6.Load(r21.y).wxyz;
      r20.xyzw = t6.Load(r21.z).xyzw;
      r17.xyzw = t6.Load(r21.w).wxyz;
    }
    r14.w = cmp(r18.w == 0.000000);
    r15.w = cmp(-2 < r20.x);
    r16.xyz = r16.xyz + -r5.xyz;
    r21.x = dot(r16.xyz, r16.xyz);
    r21.y = rsqrt(r21.x);
    r21.yzw = r21.yyy * r16.xyz;
    r22.x = r16.w * r16.w;
    r21.x = r22.x * r21.x;
    r21.x = -r21.x * r21.x + 1;
    r21.x = max(0, r21.x);
    r21.x = r21.x * r21.x;
    r22.xyz = r16.xyz * r16.www;
    r16.w = dot(r22.xyz, r22.xyz);
    r16.w = min(1, r16.w);
    r16.w = 1 + -r16.w;
    r16.w = log2(r16.w);
    r16.w = r18.w * r16.w;
    r16.w = exp2(r16.w);
    r16.w = r14.w ? r21.x : r16.w;
    r18.w = dot(r21.yzw, r19.yzw);
    r18.w = r18.w + -r20.x;
    r18.w = saturate(r18.w * r20.y);
    r18.w = r18.w * r18.w;
    r18.w = r18.w * r16.w;
    r15.w = r15.w ? r18.w : r16.w;
    r16.w = cmp(0 < r15.w);
    if (r16.w != 0) {
      r16.w = (int)r19.x & 255;
      r16.w = r16.w ? 1 : 0;
      if (r16.w != 0) {
        r21.xyzw = (int4)r19.xxxx & int4(1,2,4,8);
        r21.xyzw = r21.xyzw ? float4(1,1,1,1) : float4(0,0,0,0);
        r16.w = (uint)r19.x >> 4;
        if (1 == 0) r18.w = 0; else if (1+4 < 32) {         r18.w = (uint)r19.x << (32-(1 + 4)); r18.w = (uint)r18.w >> (32-1);        } else r18.w = (uint)r19.x >> 4;
        r22.x = r18.w ? 1 : 0;
        r19.yzw = (int3)r16.www & int3(2,4,8);
        r22.yzw = r19.yzw ? float3(1,1,1) : float3(0,0,0);
        r16.w = dot(r22.xyzw, float4(1,1,1,1));
        r18.w = dot(r21.xyzw, float4(1,1,1,1));
        r19.y = dot(r11.xyyy, r21.xyzw);
        r19.y = -1 + r19.y;
        r18.w = r18.w * r19.y + 1;
        r19.yz = r18.ww * r16.ww;
      } else {
        r19.yz = float2(1,1);
      }
      r16.w = r19.y + r19.z;
      r16.w = cmp(0 < r16.w);
      if (r16.w != 0) {
        r16.w = f16tof32(r20.w);
        r18.w = 0.5 * r16.w;
        r20.xyw = -r18.www * r17.yzw + r16.xyz;
        r16.xyz = r18.www * r17.yzw + r16.xyz;
        r17.y = cmp(0 < r16.w);
        if (r17.y != 0) {
          r17.z = dot(r20.xyw, r20.xyw);
          r17.w = dot(r16.xyz, r16.xyz);
          r17.z = rsqrt(r17.z);
          r17.w = rsqrt(r17.w);
          r18.w = r17.z * r17.w;
          r19.z = dot(r20.xyw, r16.xyz);
          r19.z = r19.z * r18.w;
          r19.w = r19.z * 0.5 + r18.w;
          r19.w = 0.5 + r19.w;
          r21.y = r18.w / r19.w;
          r18.w = dot(r6.xyz, r20.xyw);
          r19.w = dot(r6.xyz, r16.xyz);
          r17.w = r19.w * r17.w;
          r17.z = r18.w * r17.z + r17.w;
          r21.x = 0.5 * r17.z;
        } else {
          r17.z = dot(r20.xyw, r20.xyw);
          r17.w = 1 + r17.z;
          r21.y = rcp(r17.w);
          r17.z = rsqrt(r17.z);
          r22.xyz = r20.xyw * r17.zzz;
          r21.x = dot(r6.xyz, r22.xyz);
          r19.z = 1;
        }
        r17.z = cmp(0 < r20.z);
        r17.w = r20.z * r20.z;
        r17.w = saturate(r17.w * r21.y);
        r17.w = sqrt(r17.w);
        r18.w = cmp(r21.x < r17.w);
        r19.w = max(r21.x, -r17.w);
        r19.w = r19.w + r17.w;
        r19.w = r19.w * r19.w;
        r17.w = 4 * r17.w;
        r17.w = r19.w / r17.w;
        r17.w = r18.w ? r17.w : r21.x;
        r17.z = saturate(r17.z ? r17.w : r21.x);
        r14.w = r14.w ? r21.y : 1;
        r16.xyz = r16.xyz + -r20.xyw;
        r17.w = dot(r12.xyz, r16.xyz);
        r21.xyz = r17.www * r12.xyz + -r16.xyz;
        r18.w = dot(r20.xyw, r21.xyz);
        r17.w = r17.w * r17.w;
        r16.w = r16.w * r16.w + -r17.w;
        r16.w = saturate(r18.w / r16.w);
        r16.xyz = r16.www * r16.xyz + r20.xyw;
        r16.xyz = r17.yyy ? r16.xyz : r20.xyw;
        r16.w = dot(r16.xyz, r16.xyz);
        r16.w = rsqrt(r16.w);
        r16.xyz = r16.xyz * r16.www;
        r17.y = r20.z * r16.w;
        r17.y = saturate(r17.y * r0.w);
        r16.w = saturate(r17.x * r16.w);
        r17.x = dot(r6.xyz, r16.xyz);
        r16.x = dot(r4.xyz, r16.xyz);
        r16.y = r16.x * 2 + 2;
        r16.y = rsqrt(r16.y);
        r16.z = r17.x + r7.w;
        r16.z = saturate(r16.z * r16.y);
        r16.y = saturate(r16.y * r16.x + r16.y);
        r17.w = cmp(0 < r17.y);
        if (r17.w != 0) {
          r18.w = -r17.y * r17.y + 1;
          r18.w = sqrt(r18.w);
          r19.w = dot(r7.ww, r17.xx);
          r20.x = r19.w + -r16.x;
          r20.y = cmp(r20.x >= r18.w);
          if (r20.y != 0) {
            r16.z = 1;
            r16.y = abs(r7.w);
          } else {
            r20.y = -r20.x * r20.x + 1;
            r20.y = rsqrt(r20.y);
            r20.y = r20.y * r17.y;
            r20.z = -r20.x * r17.x + r7.w;
            r20.x = -r20.x * r16.x + r12.w;
            r20.xw = r20.yy * r20.xz;
            r21.x = r17.x * r17.x;
            r21.x = -r7.w * r7.w + -r21.x;
            r21.x = 1 + r21.x;
            r21.x = -r16.x * r16.x + r21.x;
            r19.w = saturate(r19.w * r16.x + r21.x);
            r19.w = sqrt(r19.w);
            r19.w = r20.y * r19.w;
            r21.x = r19.w * r7.w;
            r21.y = r21.x + r21.x;
            r21.z = r17.x * r18.w + r7.w;
            r20.y = r20.y * r20.z + r21.z;
            r20.z = r16.x * r18.w + r20.x;
            r20.z = 1 + r20.z;
            r21.w = r20.z * r19.w;
            r22.x = r20.y * r20.z;
            r22.y = r21.y * r20.y;
            r21.x = r20.y * r21.x;
            r21.x = 0.5 * r21.x;
            r21.x = r21.w * -0.5 + r21.x;
            r21.x = r22.x * r21.x;
            r22.z = -r21.w * 2 + r22.y;
            r22.y = r22.y * r22.z;
            r21.w = r21.w * r21.w + r22.y;
            r22.y = r20.z * r20.z;
            r20.z = r16.x * r18.w + r20.z;
            r20.z = r20.z * -0.5 + -0.5;
            r20.z = r22.x * r20.z;
            r20.z = r21.z * r22.y + r20.z;
            r20.y = r20.y * r20.z + r21.w;
            r20.z = r21.x + r21.x;
            r21.z = r21.x * r21.x;
            r21.z = r20.y * r20.y + r21.z;
            r20.z = r20.z / r21.z;
            r20.y = r20.z * r20.y;
            r20.z = -r20.z * r21.x + 1;
            r19.w = r20.y * r19.w;
            r19.w = r20.z * r20.w + r19.w;
            r20.y = r20.y * r21.y;
            r20.x = r20.z * r20.x + r20.y;
            r17.x = r17.x * r18.w + r19.w;
            r16.x = r16.x * r18.w + r20.x;
            r18.w = r16.x * 2 + 2;
            r18.w = rsqrt(r18.w);
            r17.x = r17.x + r7.w;
            r16.z = saturate(r17.x * r18.w);
            r16.y = saturate(r18.w * r16.x + r18.w);
          }
        }
        r14.w = r14.w * r17.z;
        r16.x = cmp(0 < r16.w);
        r16.w = r16.w * r16.w;
        r17.x = r16.y * 3.5999999 + 0.400000006;
        r16.w = r16.w / r17.x;
        r16.w = r6.w * r6.w + r16.w;
        r16.w = min(1, r16.w);
        r11.z = r16.x ? r16.w : r14.x;
        r16.x = 0.25 * r17.y;
        r16.w = (uint)r11.z >> 1;
        r16.w = (int)r16.w + 0x1fbd1df5;
        r16.w = r16.w * 3 + r17.y;
        r16.x = r16.x * r16.w;
        r16.w = 0.00100000005 + r16.y;
        r16.x = r16.x / r16.w;
        r17.x = r16.x + r11.z;
        r17.y = r11.z / r17.x;
        r17.xy = r17.ww ? r17.xy : r11.zw;
        r16.x = cmp(r19.z < 1);
        r17.w = 1.00010002 + -r19.z;
        r18.w = 1 + r19.z;
        r17.w = r17.w / r18.w;
        r17.w = sqrt(r17.w);
        r18.w = 0.25 * r17.w;
        r19.z = (uint)r17.x >> 1;
        r19.z = (int)r19.z + 0x1fbd1df5;
        r17.w = r19.z * 3 + r17.w;
        r17.w = r18.w * r17.w;
        r16.w = r17.w / r16.w;
        r16.w = r17.x + r16.w;
        r16.w = r17.x / r16.w;
        r16.w = sqrt(r16.w);
        r16.w = r17.y * r16.w;
        r16.x = r16.x ? r16.w : r17.y;
        r16.w = r16.z * r11.z + -r16.z;
        r16.z = r16.w * r16.z + 1;
        r16.z = r16.z * r16.z;
        r16.z = 3.14159274 * r16.z;
        r16.z = r11.z / r16.z;
        r16.x = r16.z * r16.x;
        r11.z = sqrt(r11.z);
        r16.z = 1 + -r11.z;
        r16.w = r13.x * r16.z + r11.z;
        r11.z = r17.z * r16.z + r11.z;
        r11.z = r13.x * r11.z;
        r11.z = r17.z * r16.w + r11.z;
        r11.z = rcp(r11.z);
        r11.z = r16.x * r11.z;
        r16.x = 1 + -r16.y;
        r16.y = r16.x * r16.x;
        r16.y = r16.y * r16.y;
        r16.z = r16.y * r16.x;
        r16.x = -r16.y * r16.x + 1;
        r16.xyw = r16.xxx * r8.yzw;
        r16.xyz = r14.yyy * r16.zzz + r16.xyw;
        r11.z = 0.5 * r11.z;
        r16.xyz = r11.zzz * r16.xyz;
        r16.xyz = r16.xyz * r14.www;
        r16.xyz = r14.www * r13.yzw + r16.xyz;
        r17.xyz = r18.xyz * r15.www;
        r17.xyz = r17.xyz * r19.yyy;
        r16.xyz = r17.xyz * r16.xyz;
      } else {
        r16.xyz = float3(0,0,0);
      }
    } else {
      r16.xyz = float3(0,0,0);
    }
    r11.z = (uint)r19.x >> 8;
    r11.z = (int)r11.z & asint(cb2[16].w);
    r16.xyz = r16.xyz + r15.xyz;
    r15.xyz = r11.zzz ? r16.xyz : r15.xyz;
    r14.z = (int)r14.z + 1;
  }
  r4.xyz = r10.www * r6.xyz + -r4.xyz;
  r7.w = saturate(r7.w);
  r0.x = log2(r0.y);
  r0.x = -r0.x * 1.20000005 + 1;
  r0.z = -1 + cb1[163].z;
  r0.x = r0.z + -r0.x;
  r4.w = asint(cb0[28].x);
  r0.xzw = t9.SampleLevel(s2_s, r4.xyzw, r0.x).xyz;
  r0.xzw = cb0[31].xxx * r0.xzw;
  r0.xzw = cb1[146].xyz * r0.xzw;
  r4.x = saturate(r0.y * cb1[165].x + cb1[165].y);
  r4.y = r4.x * -2 + 3;
  r4.x = r4.x * r4.x;
  r4.x = r4.y * r4.x;
  r4.y = min(0, cb1[165].z);
  r4.y = -1 + r4.y;
  r4.x = r4.x * r4.y + 1;
  r0.xzw = r4.xxx * r0.xzw;
  r0.xzw = r8.xxx * -r0.xzw + r0.xzw;
  r4.xyzw = r0.yyyy * float4(-1,-0.0274999999,-0.572000027,0.0219999999) + float4(1,0.0425000004,1.03999996,-0.0399999991);
  r0.y = r4.x * r4.x;
  r6.x = -9.27999973 * r7.w;
  r6.x = exp2(r6.x);
  r0.y = min(r6.x, r0.y);
  r0.y = r0.y * r4.x + r4.y;
  r4.xy = r0.yy * float2(-1.03999996,1.03999996) + r4.zw;
  r0.y = r4.y * r14.y;
  r4.xyz = r8.yzw * r4.xxx + r0.yyy;
  r0.xyz = r4.xyz * r0.xzw;
  r4.xyz = r8.yzw * float3(2.04040003,2.04040003,2.04040003) + float3(-0.332399994,-0.332399994,-0.332399994);
  r4.xyz = r8.yzw * float3(-4.79510021,-4.79510021,-4.79510021) + r4.xyz;
  r4.xyz = r8.yzw * float3(2.75519991,2.75519991,2.75519991) + r4.xyz;
  r4.xyz = float3(1.33200002,1.33200002,1.33200002) + r4.xyz;
  r4.xyz = max(float3(1,1,1), r4.xyz);
  r0.xyz = r0.xyz * r4.xyz + r15.xyz;
  r0.w = cmp(0 < cb4[91].w);
  if (r0.w != 0) {
    r5.w = 1;
    r1.x = dot(r5.xyzw, r1.xyzw);
    r1.y = dot(r5.xyzw, r2.xyzw);
    r0.w = dot(r5.xyzw, r3.xyzw);
    r1.xy = r1.xy / r0.ww;
    r1.xy = r1.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.w = r0.w * cb1[176].x + cb1[176].y;
    r0.w = log2(r0.w);
    r0.w = cb1[176].z * r0.w;
    r1.z = cb1[175].z * r0.w;
    r1.xyzw = t10.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r2.x = v3.w * r1.w;
    r1.xyz = v3.xyz * r1.www + r1.xyz;
  } else {
    r1.xyz = v3.xyz;
    r2.x = v3.w;
  }
  r2.yzw = r8.yzw * float3(0.449999988,0.449999988,0.449999988) + r7.xyz;
  r2.yzw = r2.yzw + -r0.xyz;
  r0.xyz = cb1[134].zzz * r2.yzw + r0.xyz;
  r9.xyz = max(float3(0,0,0), cb6[2].xyz);
  r0.w = cmp(0 < cb1[130].x);
  if (r0.w != 0) {
    r2.yzw = -cb2[5].xyz + r5.xyz;
    r3.xyz = float3(1,1,1) + cb2[11].xyz;
    r2.yzw = cmp(r3.xyz < abs(r2.yzw));
    r0.w = (int)r2.z | (int)r2.y;
    r0.w = (int)r2.w | (int)r0.w;
    r1.w = dot(r5.xyz, float3(0.577000022,0.577000022,0.577000022));
    r1.w = 0.00200000009 * r1.w;
    r1.w = frac(r1.w);
    r1.w = cmp(0.5 < r1.w);
    r3.yzw = r1.www ? float3(0,1,1) : float3(1,1,0);
    r3.x = 1;
    r9.xyzw = r0.wwww ? r3.yzwx : r9.xyzw;
    o0.w = r9.w;
  } else {
    o0.w = r9.w;
  }
  r0.xyz = r9.xyz + r0.xyz;
  o0.xyz = r0.xyz * r2.xxx + r1.xyz;
  return;
}