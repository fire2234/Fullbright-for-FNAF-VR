// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 19:02:23 2019
Buffer<float4> t2 : register(t2);

Buffer<float4> t1 : register(t1);

TextureCube<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb6 : register(b6)
{
  float4 cb6[18];
}

cbuffer cb5 : register(b5)
{
  float4 cb5[1];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[164];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[5];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[178];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[92];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[8];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : ATTRIBUTE0,
  uint v1 : SV_VertexID0,
  uint v2 : SV_InstanceID0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD4,
  out uint o4 : PACKED_EYE_INDEX0,
  out float4 o5 : TEXCOORD7,
  out float4 o6 : SV_POSITION0,
  out float o7 : SV_ClipDistance1)
{
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, vertex_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v2.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v2.x & 1;
  if (r0.x == 0) {
    r1.x = cb2[0].x;
    r1.y = cb2[1].x;
    r1.z = cb2[2].x;
    r1.w = cb2[3].x;
    r2.x = cb2[0].y;
    r2.y = cb2[1].y;
    r2.z = cb2[2].y;
    r2.w = cb2[3].y;
    r3.x = cb2[0].z;
    r3.y = cb2[1].z;
    r3.z = cb2[2].z;
    r3.w = cb2[3].z;
    r4.x = cb2[0].w;
    r4.y = cb2[1].w;
    r4.z = cb2[2].w;
    r4.w = cb2[3].w;
    r0.yzw = cb2[62].xyz;
    r5.x = cb2[163].y;
    r5.yzw = cb2[60].xyz;
  } else {
    r1.x = cb4[0].x;
    r1.y = cb4[1].x;
    r1.z = cb4[2].x;
    r1.w = cb4[3].x;
    r2.x = cb4[0].y;
    r2.y = cb4[1].y;
    r2.z = cb4[2].y;
    r2.w = cb4[3].y;
    r3.x = cb4[0].z;
    r3.y = cb4[1].z;
    r3.z = cb4[2].z;
    r3.w = cb4[3].z;
    r4.x = cb4[0].w;
    r4.y = cb4[1].w;
    r4.z = cb4[2].w;
    r4.w = cb4[3].w;
    r0.yzw = cb4[62].xyz;
    r5.x = cb4[163].y;
    r5.yzw = cb4[60].xyz;
  }
  r6.x = (int)v1.x + asint(cb0[7].y);
  r6.y = (uint)r6.x << 1;
  r6.yzw = t2.Load(r6.y).xyz;
  bitmask.x = ((~(-1 << 31)) << 1) & 0xffffffff;  r7.x = (((uint)r6.x << 1) & bitmask.x) | ((uint)1 & ~bitmask.x);
  r7.xyzw = t2.Load(r7.x).xyzw;
  r8.xyz = r7.yzx * r6.yzw;
  r6.yzw = r7.xyz * r6.zwy + -r8.xyz;
  r6.yzw = r6.yzw * r7.www;
  r8.xyz = r6.yzw * r7.yzx;
  r6.yzw = r6.wyz * r7.zxy + -r8.xyz;
  r6.yzw = r6.yzw * r7.www;
  r8.xyz = cb3[4].xxx * cb3[0].xyz;
  r9.xyz = cb3[4].yyy * cb3[1].xyz;
  r10.xyz = cb3[4].zzz * cb3[2].xyz;
  r11.xyz = r9.xyz * r6.zzz;
  r11.xyz = r6.yyy * r8.xyz + r11.xyz;
  o0.xyz = r6.www * r10.xyz + r11.xyz;
  r6.yzw = r9.xyz * r7.yyy;
  r6.yzw = r7.xxx * r8.xyz + r6.yzw;
  o1.xyz = r7.zzz * r10.xyz + r6.yzw;
  o1.w = cb3[4].w * r7.w;
  r6.yzw = cb3[1].xyz * v0.yyy;
  r6.yzw = cb3[0].xyz * v0.xxx + r6.yzw;
  r6.yzw = cb3[2].xyz * v0.zzz + r6.yzw;
  r0.yzw = cb3[3].xyz + r0.yzw;
  r7.xyz = r6.yzw + r0.yzw;
  r0.y = (int)r6.x * asint(cb5[0].y);
  r0.yz = t1.Load(r0.y).xy;
  r7.w = 1;
  r1.x = dot(r7.xyzw, r1.xyzw);
  r1.y = dot(r7.xyzw, r2.xyzw);
  r1.z = dot(r7.xyzw, r3.xyzw);
  r1.w = dot(r7.xyzw, r4.xyzw);
  if (cb0[0].x != 0) {
    r2.x = icb[r0.x+0].x;
    r2.y = 1;
    o7.x = dot(r1.xw, r2.xy);
    r0.w = 0.5 * r5.x;
    r2.x = icb[r0.x+0].x * r1.w;
    r2.y = -r5.x * 0.5 + 1;
    r2.x = r2.x * r2.y;
    r1.x = r1.x * r0.w + r2.x;
  } else {
    o7.x = 0;
  }
  r0.w = mad(asint(cb5[0].y), (int)r6.x, asint(cb5[0].z));
  r2.xy = t1.Load(r0.w).xy;
  o3.xy = r2.xy * cb6[16].xy + cb6[16].zw;
  o3.zw = r2.xy * cb6[17].xy + cb6[17].zw;
  r0.w = cb0[0].x ? 1 : 0;
  o4.x = mad((int)r0.w, 0x80000000, (int)r0.x);
  r2.xyz = r7.xyz + -r5.yzw;
  r0.x = dot(r2.xyz, r2.xyz);
  r0.w = sqrt(r0.x);
  r2.w = dot(r2.xyz, cb2[52].xyz);
  r0.w = r0.w / r2.w;
  r0.w = cb2[177].z * r0.w;
  r0.w = max(0, r0.w);
  r2.w = rsqrt(r0.x);
  r0.x = r2.w * r0.x;
  r3.xyz = r2.xyz * r2.www;
  r0.w = max(cb1[85].w, r0.w);
  r3.w = cmp(0 < r0.w);
  r4.x = r0.w * r2.w;
  r4.y = r4.x * r2.z + cb2[59].z;
  r4.x = -r4.x * r2.z + r2.z;
  r0.w = -r0.w * r2.w + 1;
  r0.w = r0.w * r0.x;
  r2.w = -cb1[87].y + r4.y;
  r2.w = cb1[85].y * r2.w;
  r2.w = max(-127, r2.w);
  r2.w = exp2(-r2.w);
  r2.w = cb1[87].x * r2.w;
  r2.w = r3.w ? r2.w : cb1[85].x;
  r0.w = r3.w ? r0.w : r0.x;
  r3.w = r3.w ? r4.x : r2.z;
  r3.w = cb1[85].y * r3.w;
  r3.w = max(-127, r3.w);
  r4.x = exp2(-r3.w);
  r4.x = 1 + -r4.x;
  r4.x = r4.x / r3.w;
  r4.y = -r3.w * 0.240226507 + 0.693147182;
  r3.w = cmp(0.00999999978 < abs(r3.w));
  r3.w = r3.w ? r4.x : r4.y;
  r2.w = r3.w * r2.w;
  r3.w = r2.w * r0.w;
  r4.xy = cmp(float2(0,0) < cb1[87].zw);
  if (r4.x != 0) {
    r4.x = saturate(r0.x * cb1[91].x + cb1[91].y);
    r4.zw = float2(1,-1) * cb1[90].yx;
    r5.x = dot(r2.xy, r4.zw);
    r5.y = dot(r2.xy, cb1[90].xy);
    r5.z = r2.z;
    r2.xyz = t0.SampleLevel(s0_s, r5.xyz, 0).xyz;
    r5.xyz = t0.SampleLevel(s0_s, r5.xyz, cb1[91].z).xyz;
    r2.xyz = -r5.xyz + r2.xyz;
    r2.xyz = r4.xxx * r2.xyz + r5.xyz;
    r2.xyz = cb1[86].xyz * r2.xyz;
  } else {
    r2.xyz = cb1[86].xyz;
  }
  r4.x = cmp(cb1[88].w >= 0);
  r4.z = cmp(cb1[87].z == 0.000000);
  r4.x = r4.z ? r4.x : 0;
  r3.x = saturate(dot(r3.xyz, cb1[88].xyz));
  r3.x = log2(r3.x);
  r3.x = cb1[89].w * r3.x;
  r3.x = exp2(r3.x);
  r3.xyz = cb1[89].xyz * r3.xxx;
  r0.w = -cb1[88].w + r0.w;
  r0.w = max(0, r0.w);
  r0.w = r2.w * r0.w;
  r0.w = exp2(-r0.w);
  r0.w = min(1, r0.w);
  r0.w = 1 + -r0.w;
  r3.xyz = r3.xyz * r0.www;
  r5.xyz = r4.xxx ? r3.xyz : 0;
  r0.w = exp2(-r3.w);
  r0.w = min(1, r0.w);
  r5.w = max(cb1[86].w, r0.w);
  r0.x = cmp(cb1[87].w < r0.x);
  r0.x = r0.x ? r4.y : 0;
  r3.xyzw = r0.xxxx ? float4(0,0,0,1) : r5.xyzw;
  r0.x = 1 + -r3.w;
  o5.xyz = r2.xyz * r0.xxx + r3.xyz;
  o0.w = 0;
  o2.xy = r0.yz;
  o2.zw = float2(0,0);
  o5.w = r3.w;
  o6.xyzw = r1.xyzw;
  return;
}