//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:47:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float
// TEXCOORD                11   xyzw        1     NONE   float
// TEXCOORD                 0   xy          2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 6   xyzw        4     NONE   float
// TEXCOORD                 7   xyz         5     NONE   float
// SV_Position              0   xyzw        6      POS   float
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[134], immediateIndexed
dcl_constantbuffer cb1[126], immediateIndexed
dcl_constantbuffer cb2[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 2
and r0.x, v3.x, l(1)
if_z r0.x
  mov r0.x, cb0[125].x
else
  mov r0.x, cb1[125].x
endif
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t0.yxzw, s0, cb0[133].x
mad r0.yz, r0.yyyy, cb2[14].zzzz, -cb2[15].xxyx
max r0.z, r0.z, l(0.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb2[15].z
exp r0.z, r0.z
min r0.z, r0.z, l(1.000000)
mul r1.xy, v2.xyxx, l(2.000000, 1.000000, 0.000000, 0.000000)
mad r1.xy, cb0[132].zzzz, cb2[16].yyyy, r1.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t1.xyzw, s1, cb0[133].x
mul r0.w, cb0[132].z, l(2.09439516)
sincos r0.w, null, r0.w
mad r1.zw, cb0[132].zzzz, r0.wwww, v2.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t2.yzwx, s2, cb0[133].x
add r0.w, -r0.w, r1.x
add r0.w, r1.y, r0.w
mad_sat r0.w, r0.w, l(3.000000), l(-1.000000)
add r0.w, -r0.w, l(1.000000)
mov_sat r0.y, r0.y
max r0.y, r0.z, r0.y
mad r0.z, r0.w, cb2[17].w, -r0.y
mad r0.y, cb2[17].y, r0.z, r0.y
add r0.z, -r0.y, l(1.000000)
mad r0.y, cb2[18].x, r0.z, r0.y
ilt r0.x, l(1), r0.x
add r0.y, r0.y, l(-0.333300)
lt r1.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.yyyy
and r0.z, r1.x, l(8)
movc r0.z, r1.y, l(9), r0.z
movc r0.z, r1.z, l(13), r0.z
utof r0.w, r0.z
add r0.w, r0.w, l(-0.500000)
lt r0.yw, r0.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.w, r1.w, l(0), r0.w
and r0.w, r0.x, r0.w
discard_nz r0.w
not r0.x, r0.x
and r0.y, r0.x, r0.y
discard_nz r0.y
or r0.x, r0.x, r1.w
movc oMask, r0.x, l(15), r0.z
mov o0.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used
