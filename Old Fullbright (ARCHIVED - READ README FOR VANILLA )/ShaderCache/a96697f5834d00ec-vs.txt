//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 19:13:32 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x
// SV_VertexID              0   x           2   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           5     NONE    uint   x
// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
// SV_POSITION              0   xyzw        7      POS   float   xyzw
// SV_ClipDistance          1   x           8  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[178], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[164], immediateIndexed
dcl_constantbuffer cb4[92], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_input_sgv v2.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.x
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_output_siv o8.x, clip_distance
dcl_temps 17
if_z cb0[7].x
  mov r0.x, cb1[0].x
  mov r0.y, cb1[1].x
  mov r0.z, cb1[2].x
  mov r0.w, cb1[3].x
  mov r1.x, cb1[0].y
  mov r1.y, cb1[1].y
  mov r1.z, cb1[2].y
  mov r1.w, cb1[3].y
  mov r2.x, cb1[0].z
  mov r2.y, cb1[1].z
  mov r2.z, cb1[2].z
  mov r2.w, cb1[3].z
  mov r3.x, cb1[0].w
  mov r3.y, cb1[1].w
  mov r3.z, cb1[2].w
  mov r3.w, cb1[3].w
  mov r4.xyz, cb1[62].xyzx
  mov r4.w, cb1[163].y
  mov r5.xyz, cb1[60].xyzx
else
  mov r0.x, cb3[0].x
  mov r0.y, cb3[1].x
  mov r0.z, cb3[2].x
  mov r0.w, cb3[3].x
  mov r1.x, cb3[0].y
  mov r1.y, cb3[1].y
  mov r1.z, cb3[2].y
  mov r1.w, cb3[3].y
  mov r2.x, cb3[0].z
  mov r2.y, cb3[1].z
  mov r2.z, cb3[2].z
  mov r2.w, cb3[3].z
  mov r3.x, cb3[0].w
  mov r3.y, cb3[1].w
  mov r3.z, cb3[2].w
  mov r3.w, cb3[3].w
  mov r4.xyz, cb3[62].xyzx
  mov r4.w, cb3[163].y
  mov r5.xyz, cb3[60].xyzx
endif
iadd r5.w, v1.x, cb0[14].x
imul null, r6.x, r5.w, l(3)
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.xxxx, t4.xyzw
imad r7.xy, l(3, 3, 0, 0), r5.wwww, l(1, 2, 0, 0)
ld_indexable(buffer)(float,float,float,float) r7.xzw, r7.xxxx, t4.xwyz
ld_indexable(buffer)(float,float,float,float) r8.xyz, r7.yyyy, t4.xyzw
ld_indexable(buffer)(float,float,float,float) r9.xyzw, r5.wwww, t3.xyzw
ld_indexable(buffer)(float,float,float,float) r10.xyzw, r5.wwww, t5.xyzw
iadd r5.w, v2.x, cb0[14].y
ishl r7.y, r5.w, l(1)
ld_indexable(buffer)(float,float,float,float) r11.xyz, r7.yyyy, t2.xyzw
bfi r7.y, l(31), l(1), r5.w, l(1)
ld_indexable(buffer)(float,float,float,float) r12.xyzw, r7.yyyy, t2.xyzw
mul r13.xyz, r11.xyzx, r12.yzxy
mad r11.xyz, r12.xyzx, r11.yzxy, -r13.xyzx
mul r11.xyz, r12.wwww, r11.xyzx
mul r13.xyz, r12.yzxy, r11.xyzx
mad r11.xyz, r11.zxyz, r12.zxyz, -r13.xyzx
mul r11.xyz, r12.wwww, r11.xyzx
mul r13.xyz, r6.yyyy, cb2[1].xyzx
mad r13.xyz, r6.xxxx, cb2[0].xyzx, r13.xyzx
mad r13.xyz, r6.zzzz, cb2[2].xyzx, r13.xyzx
mul r14.xyz, r7.zzzz, cb2[1].xyzx
mad r14.xyz, r7.xxxx, cb2[0].xyzx, r14.xyzx
mad r14.xyz, r7.wwww, cb2[2].xyzx, r14.xyzx
mul r15.xyz, r8.yyyy, cb2[1].xyzx
mad r15.xyz, r8.xxxx, cb2[0].xyzx, r15.xyzx
mad r15.xyz, r8.zzzz, cb2[2].xyzx, r15.xyzx
dp3 r7.y, r13.xyzx, r13.xyzx
rsq r7.y, r7.y
mul r13.xyz, r7.yyyy, r13.xyzx
dp3 r7.y, r14.xyzx, r14.xyzx
rsq r7.y, r7.y
mul r14.xyz, r7.yyyy, r14.xyzx
dp3 r7.y, r15.xyzx, r15.xyzx
rsq r7.y, r7.y
mul r15.xyz, r7.yyyy, r15.xyzx
mul r16.xyz, r11.yyyy, r14.xyzx
mad r11.xyw, r11.xxxx, r13.xyxz, r16.xyxz
mad o0.xyz, r11.zzzz, r15.xyzx, r11.xywx
mul r11.xyz, r12.yyyy, r14.xyzx
mad r11.xyz, r12.xxxx, r13.xyzx, r11.xyzx
mad o1.xyz, r12.zzzz, r15.xyzx, r11.xyzx
mul o1.w, r12.w, cb2[4].w
mul r6.w, r6.w, l(0.00390625000)
round_z r6.w, r6.w
mul r11.xyz, r9.yyyy, cb2[1].xyzx
mad r11.xyz, cb2[0].xyzx, r9.xxxx, r11.xyzx
mad r11.xyz, cb2[2].xyzx, r9.zzzz, r11.xyzx
add r11.xyz, r11.xyzx, cb2[3].xyzx
add r12.xyz, r4.xyzx, r11.xyzx
dp3 r7.y, r12.xyzx, r12.xyzx
sqrt r7.y, r7.y
add r7.y, r7.y, -cb0[13].x
mul_sat r7.y, r7.y, cb0[13].y
add o2.y, -r7.y, l(1.000000)
add r7.y, -r6.w, l(1.000000)
mul r7.y, r7.y, cb0[13].w
mad r6.w, cb0[13].z, r6.w, r7.y
add r12.xyz, r11.xyzx, -cb0[11].xyzx
dp3 r7.y, r12.xyzx, r12.xyzx
sqrt r7.y, r7.y
mad r7.y, cb0[8].w, r9.w, r7.y
add r11.xyz, r11.xyzx, -cb0[12].xyzx
dp3 r11.x, r11.xyzx, r11.xyzx
sqrt r11.x, r11.x
mad r11.x, cb0[8].w, r9.w, r11.x
lt r11.yzw, cb0[8].xxyz, r7.yyyy
and r11.yzw, r11.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
dp3 r7.y, r11.yzwy, cb0[10].xyzx
lt r11.xyz, cb0[9].xyzx, r11.xxxx
and r11.xyz, r11.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
dp3 r11.x, r11.xyzx, cb0[10].xyzx
mul r11.x, r11.x, cb0[12].w
mad r11.w, r7.y, cb0[11].w, r11.x
lt r7.y, |r11.w|, l(0.999000)
and r7.y, r7.y, l(0x3f800000)
mul r11.z, r6.w, r7.y
mov r12.x, r6.x
mov r12.y, r7.x
mov r12.z, r8.x
mov r12.w, r9.x
dp4 r6.x, v0.xyzw, r12.xyzw
mov r12.x, r6.y
mov r12.y, r7.z
mov r12.z, r8.y
mov r12.w, r9.y
dp4 r6.y, v0.xyzw, r12.xyzw
mov r8.x, r6.z
mov r8.y, r7.w
mov r8.w, r9.z
dp4 r6.z, v0.xyzw, r8.xyzw
mul r7.xyz, r6.yyyy, cb2[1].xyzx
mad r6.xyw, cb2[0].xyxz, r6.xxxx, r7.xyxz
mad r6.xyz, cb2[2].xyzx, r6.zzzz, r6.xywx
add r4.xyz, r4.xyzx, cb2[3].xyzx
add r6.xyz, r4.xyzx, r6.xyzx
mov r6.w, l(1.000000)
mul r7.xyzw, r11.zzzz, r6.xyzw
imul null, r4.x, r5.w, cb5[0].y
ld_indexable(buffer)(float,float,float,float) r4.xy, r4.xxxx, t1.xyzw
dp4 r0.x, r7.xyzw, r0.xyzw
dp4 r0.y, r7.xyzw, r1.xyzw
dp4 r0.z, r7.xyzw, r2.xyzw
dp4 r0.w, r7.xyzw, r3.xyzw
if_nz cb0[0].x
  mov r1.x, cb0[7].x
  mov r2.x, icb[r1.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o8.x, r0.xwxx, r2.xyxx
  mul r1.y, r4.w, l(0.500000)
  mul r1.x, r0.w, icb[r1.x + 0].x
  mad r1.z, -r4.w, l(0.500000), l(1.000000)
  mul r1.x, r1.z, r1.x
  mad r0.x, r0.x, r1.y, r1.x
else
  mov o8.x, l(0)
endif
imad r1.x, cb5[0].y, r5.w, cb5[0].z
ld_indexable(buffer)(float,float,float,float) r1.xy, r1.xxxx, t1.xyzw
mad o4.xy, r1.xyxx, cb6[16].xyxx, r10.xyxx
mad o4.zw, r1.xxxy, cb6[17].xxxy, r10.zzzw
movc r1.x, cb0[0].x, l(-0.000000), l(0)
or o5.x, r1.x, cb0[7].x
mad r1.xyz, r6.xyzx, r11.zzzz, -r5.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
sqrt r2.x, r1.w
dp3 r2.y, r1.xyzx, cb1[52].xyzx
div r2.x, r2.x, r2.y
mul r2.x, r2.x, cb1[177].z
max r2.x, r2.x, l(0.000000)
rsq r2.y, r1.w
mul r1.w, r1.w, r2.y
mul r3.xyz, r1.xyzx, r2.yyyy
max r2.x, r2.x, cb4[85].w
lt r2.z, l(0.000000), r2.x
mul r2.w, r2.y, r2.x
mad r3.w, r2.w, r1.z, cb1[59].z
mad r2.w, -r2.w, r1.z, r1.z
mad r2.x, -r2.x, r2.y, l(1.000000)
mul r2.x, r1.w, r2.x
add r2.y, r3.w, -cb4[87].y
mul r2.y, r2.y, cb4[85].y
max r2.y, r2.y, l(-127.000000)
exp r2.y, -r2.y
mul r2.y, r2.y, cb4[87].x
movc r2.y, r2.z, r2.y, cb4[85].x
movc r2.x, r2.z, r2.x, r1.w
movc r2.z, r2.z, r2.w, r1.z
mul r2.z, r2.z, cb4[85].y
max r2.z, r2.z, l(-127.000000)
exp r2.w, -r2.z
add r2.w, -r2.w, l(1.000000)
div r2.w, r2.w, r2.z
mad r3.w, -r2.z, l(0.240226507), l(0.693147182)
lt r2.z, l(0.010000), |r2.z|
movc r2.z, r2.z, r2.w, r3.w
mul r2.y, r2.z, r2.y
mul r2.z, r2.x, r2.y
lt r4.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[87].zzzw
if_nz r4.z
  mad_sat r2.w, r1.w, cb4[91].x, cb4[91].y
  mul r5.xy, cb4[90].yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r5.x, r1.xyxx, r5.xyxx
  dp2 r5.y, r1.xyxx, cb4[90].xyxx
  mov r5.z, r1.z
  sample_l_indexable(texturecube)(float,float,float,float) r1.xyz, r5.xyzx, t0.xyzw, s0, l(0.000000)
  sample_l_indexable(texturecube)(float,float,float,float) r5.xyz, r5.xyzx, t0.xyzw, s0, cb4[91].z
  add r1.xyz, r1.xyzx, -r5.xyzx
  mad r1.xyz, r2.wwww, r1.xyzx, r5.xyzx
  mul r1.xyz, r1.xyzx, cb4[86].xyzx
else
  mov r1.xyz, cb4[86].xyzx
endif
ge r2.w, cb4[88].w, l(0.000000)
eq r3.w, cb4[87].z, l(0.000000)
and r2.w, r2.w, r3.w
dp3_sat r3.x, r3.xyzx, cb4[88].xyzx
log r3.x, r3.x
mul r3.x, r3.x, cb4[89].w
exp r3.x, r3.x
mul r3.xyz, r3.xxxx, cb4[89].xyzx
add r2.x, r2.x, -cb4[88].w
max r2.x, r2.x, l(0.000000)
mul r2.x, r2.x, r2.y
exp r2.x, -r2.x
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
mul r3.xyz, r2.xxxx, r3.xyzx
and r3.xyz, r2.wwww, r3.xyzx
exp r2.x, -r2.z
min r2.x, r2.x, l(1.000000)
max r3.w, r2.x, cb4[86].w
lt r1.w, cb4[87].w, r1.w
and r1.w, r1.w, r4.w
movc r2.xyzw, r1.wwww, l(0,0,0,1.000000), r3.xyzw
add r1.w, -r2.w, l(1.000000)
mad o6.xyz, r1.xyzx, r1.wwww, r2.xyzx
mov o0.w, l(0)
mov o2.x, r9.w
mov o2.zw, r11.zzzw
mov o3.xy, r4.xyxx
mov o3.zw, l(0,0,0,0)
mov o6.w, r2.w
mov o7.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used
