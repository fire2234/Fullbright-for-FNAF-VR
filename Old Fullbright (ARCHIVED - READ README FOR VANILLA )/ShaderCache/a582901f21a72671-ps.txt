//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 22:09:06 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// TEXCOORD                 9   xyz         6     NONE   float
// SV_Position              0   xyzw        7      POS   float   xyzw
// SV_IsFrontFace           0   x           8    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2d (float,float,float,float) t23
dcl_resource_texture2d (float,float,float,float) t24
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v7.xyzw, position
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 28
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
  mov r9.w, cb1[125].x
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
  mov r9.w, cb3[125].x
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v7.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v7.wwww
mov r13.z, v7.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v7.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t16.xyzw, s5, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t17.xyzw, s6, cb1[133].x
mul r7.xyz, r7.xyzx, cb6[2].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t18.yxzw, s7, cb1[133].x
mad r8.yz, r0.yyyy, cb6[14].zzzz, -cb6[15].xxyx
max r0.y, r8.z, l(0.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb6[15].z
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
mad r9.xyz, r0.yyyy, -cb6[4].xyzx, cb6[4].xyzx
mul r12.xyz, r9.xyzx, cb6[15].wwww
mul r14.xyzw, v2.xyxy, l(2.000000, 1.000000, 0.454545468, 0.454545468)
mad r8.zw, cb1[132].zzzz, cb6[16].yyyy, r14.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r8.zw, r8.zwzz, t19.zwxy, s8, cb1[133].x
mul r4.w, cb1[132].z, l(2.09439516)
sincos r4.w, null, r4.w
mad r11.zw, cb1[132].zzzz, r4.wwww, v2.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r11.zwzz, t20.yzwx, s9, cb1[133].x
add r4.w, -r4.w, r8.z
add r4.w, r8.w, r4.w
mad_sat r4.w, r4.w, l(3.000000), l(-1.000000)
add r4.w, -r4.w, l(1.000000)
sample_b_indexable(texture2d)(float,float,float,float) r15.xyz, v2.xyxx, t21.xyzw, s10, cb1[133].x
add r16.xyz, cb6[7].xyzx, -cb6[8].xyzx
mad r15.xyz, r15.xyzx, r16.xyzx, cb6[8].xyzx
frc r6.w, cb1[132].z
mul r8.zw, r6.wwww, l(0.000000, 0.000000, 121.000000, 11.000000)
round_ni r8.zw, r8.zzzw
mad r8.zw, r8.zzzw, l(0.000000, 0.000000, 0.0909090936, 0.0909090936), r14.zzzw
sample_b_indexable(texture2d)(float,float,float,float) r14.xyz, r8.zwzz, t22.xyzw, s11, cb1[133].x
mul r14.xyz, r14.xyzx, cb6[16].zzzz
mul r14.xyz, r14.xyzx, cb6[10].xyzx
mad r14.xyz, r4.wwww, r15.xyzx, r14.xyzx
mul r16.xyz, r14.xyzx, cb6[16].wwww
dp3 r6.w, r6.zxyz, r4.xyzx
max r6.w, r6.w, l(0.000000)
add r6.w, -r6.w, l(1.000000)
log r6.w, |r6.w|
mul r6.w, r6.w, l(10.000000)
exp r6.w, r6.w
mad r6.w, r6.w, l(0.960000), l(0.040000)
mad r14.xyz, r14.xyzx, cb6[16].wwww, r6.wwww
mad r14.xyz, r14.xyzx, cb6[12].xyzx, -r16.xyzx
mad r14.xyz, cb6[17].xxxx, r14.xyzx, r16.xyzx
mad r9.xyz, -r9.xyzx, cb6[15].wwww, r14.xyzx
mad r9.xyz, cb6[17].yyyy, r9.xyzx, r12.xyzx
mad r7.xyz, r7.xyzx, cb6[14].xxxx, r9.xyzx
mad r7.xyz, cb6[17].zzzz, -r7.xyzx, r7.xyzx
add r7.xyz, r7.xyzx, cb6[13].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r9.xyz, v2.xyxx, t23.xyzw, s12, cb1[133].x
add r9.xyz, -r15.xyzx, r9.xyzx
mad_sat r9.xyz, cb6[17].zzzz, r9.xyzx, r15.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r12.xyz, v2.xyxx, t24.xyzw, s13, cb1[133].x
mul_sat r14.x, r12.z, cb6[17].z
add r8.zw, r12.yyyx, l(0.000000, 0.000000, 0.314286, -1.000000)
mov_sat r8.y, r8.y
max r0.y, r0.y, r8.y
mad r4.w, r4.w, cb6[17].w, -r0.y
mad r0.y, cb6[17].y, r4.w, r0.y
add r4.w, -r0.y, l(1.000000)
mad r0.y, cb6[18].x, r4.w, r0.y
mul r4.w, r8.z, cb6[17].z
mad_sat r6.w, cb6[17].z, r8.w, l(1.000000)
ilt r7.w, l(1), r9.w
add r0.y, r0.y, l(-0.333300)
lt r12.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.yyyy
and r8.y, r12.x, l(8)
movc r8.y, r12.y, l(9), r8.y
movc r8.y, r12.z, l(13), r8.y
utof r8.z, r8.y
add r8.z, r8.z, l(-0.500000)
lt r8.z, r8.z, l(0.000000)
movc r8.z, r12.w, l(0), r8.z
and r8.z, r7.w, r8.z
discard_nz r8.z
not r7.w, r7.w
lt r0.y, r0.y, l(0.000000)
and r0.y, r7.w, r0.y
discard_nz r0.y
or r0.y, r7.w, r12.w
movc oMask, r0.y, l(15), r8.y
mov_sat r4.w, r4.w
mad r14.z, r4.w, r0.w, r0.z
lt r0.y, l(0.000000), cb2[12].x
lt r0.z, l(0.000000), cb1[163].w
and r0.y, r0.z, r0.y
div r0.zw, r13.xxxy, r13.wwww
mad r10.xy, r0.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r16.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r8.yzw, r15.yyzx, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.00392163, -1.00392163, -1.00392163)
mad r8.yzw, r6.xxyz, r15.wwww, r8.yyzw
mad r15.xz, r14.xxzx, r16.wwww, r16.xxzx
mad r15.y, r16.w, l(0.500000), r16.y
mad r12.xyz, r9.xyzx, r12.wwww, r12.xyzx
movc r16.xyz, r0.yyyy, r8.yzwy, r6.xyzx
movc r6.xyz, r0.yyyy, r12.xyzx, r9.xyzx
mov r14.y, l(0.500000)
movc r0.yzw, r0.yyyy, r15.xxyz, r14.xxyz
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, v3.zwzz, t15.xyzw, s4
mad r12.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r9.xyzw, r9.xyzw, cb5[7].xyzw, r12.xyzw
mul r9.xyzw, r9.xyzw, r9.xyzw
mul r9.xyzw, r9.xyzw, cb5[6].xyzw
mul r4.w, r0.z, l(0.080000)
mad r8.yzw, -r0.zzzz, l(0.000000, 0.080000, 0.080000, 0.080000), r6.xxyz
mad r8.yzw, r0.yyyy, r8.yyzw, r4.wwww
mad r12.xyz, -r6.xyzx, r0.yyyy, r6.xyzx
mad r12.xyz, r12.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r8.yzw, r8.yyzw, cb1[127].wwww, cb1[127].xxyz
mul r0.yz, v3.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r11.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r0.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r11.zwzz, t14.xyzw, s3
mad r0.y, r15.w, l(0.00392156886), r14.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb5[18].w, cb5[20].w
mul r14.xyz, r14.xyzx, r14.xyzx
mad r14.xyz, r14.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r15.xyzw, r15.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r16.w, l(1.000000)
dp4 r0.z, r15.xyzw, r16.xyzw
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
mul r14.xyz, r14.xyzx, r0.yyyy
mul r14.xyz, r14.xyzx, cb1[146].xyzx
dp3 r0.y, r14.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.z, l(1), cb1[125].x
if_nz r0.z
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r15.xy, r11.zwzz
  mov r15.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r15.xyzz, t10.yzxw
  mad r4.w, r0.z, cb1[57].x, cb1[57].y
  mad r0.z, r0.z, cb1[57].z, -cb1[57].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r4.w
  mad r0.z, -r13.z, l(1.000000), r0.z
  div r0.z, |r0.z|, r13.w
  lt r0.z, l(0.010000), r0.z
  if_nz r0.z
    mov r17.y, -cb1[123].z
    mov r17.z, l(0)
    add r17.yz, r10.xxyx, r17.yyzy
    iadd r18.xyzw, r15.xxyy, l(1, -1, 1, -1)
    mov r15.w, r18.y
    ld_indexable(texture2d)(float,float,float,float) r0.z, r15.wyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r17.x, |r0.z|
    lt r0.z, r17.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r17.xyz, r0.zzzz, r17.xyzx, r10.zxyz
    mov r19.y, l(0)
    mov r19.z, cb1[123].w
    add r19.yz, r10.xxyx, r19.yyzy
    mov r20.xz, r15.xxzx
    mov r20.yw, r18.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r17.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r19.y, cb1[123].z
    mov r19.z, l(0)
    add r19.yz, r10.xxyx, r19.yyzy
    mov r18.yzw, r15.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.z, r18.xyzw, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r15.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r10.zw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xwzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    lt r0.z, |r0.z|, r15.x
    movc r10.xy, r0.zzzz, r10.zwzz, r15.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.zw, l(0), t9.zwxy
utof r10.zw, r10.zzzw
mul r10.zw, r10.zzzw, r10.xxxy
round_z r10.zw, r10.zzzw
ftoi r15.xy, r10.zwzz
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r15.xyzw, t9.yzxw
mul r4.w, cb2[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb1[164].y, l(1.000000)
add r0.z, r0.z, l(-1.000000)
mad r0.z, r4.w, r0.z, l(1.000000)
mul r13.xyz, r0.zzzz, r14.xyzx
mul r0.y, r0.z, r0.y
mul r13.xyz, r12.xyzx, r13.xyzx
mad r14.xyz, r6.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r6.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r6.xyz, r6.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r14.xyz, r6.wwww, r14.xyzx, r15.xyzx
mad r6.xyz, r14.xyzx, r6.wwww, r6.xyzx
mul r6.xyz, r6.wwww, r6.xyzx
max r6.xyz, r6.xyzx, r6.wwww
ftou r10.zw, r11.xxxy
if_z r0.x
  mov r4.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r11.x, cb4[3].z
  mov r11.yzw, cb4[1].zzxy
  mov r12.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r11.x, cb4[43].z
  mov r11.yzw, cb4[41].zzxy
  mov r12.w, cb4[42].x
endif
mad r4.w, v7.w, r4.w, r7.w
log r4.w, r4.w
mul r4.w, r11.x, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r7.w, r11.y, l(-1)
umin r4.w, r4.w, r7.w
ushr r10.zw, r10.zzzw, r12.wwww
imad r4.w, r4.w, r11.w, r10.w
imad r4.w, r4.w, r11.z, r10.z
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r7.w, cb4[0].z
  mov r11.xyz, cb4[6].xzwx
  mov r14.xyz, cb4[5].xyzx
  mov r15.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r11.xyz, cb4[46].xzwx
  mov r14.xyz, cb4[45].xyzx
  mov r15.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r17.xyzw, r11.xxxx, l(255, 1, 2, 4)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r7.w, r11.x, l(8)
  movc r18.w, r7.w, l(1.000000), l(0)
  ushr r19.xy, r11.xxxx, l(4, 8, 0, 0)
  ubfe r7.w, l(1), l(4), r11.x
  movc r20.x, r7.w, l(1.000000), l(0)
  and r19.xzw, r19.xxxx, l(2, 0, 4, 8)
  movc r20.yzw, r19.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r7.w, r20.xyzw, r10.xyzw
  lt r11.x, r11.z, l(0.000000)
  swapc r11.x, r19.x, r11.x, l(1.000000), r7.w
  if_nz r17.x
    mov r18.xyz, r17.yzwy
    dp4 r7.w, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r11.w, r9.xyzw, r18.xyzw
    add r11.w, r11.w, l(-1.000000)
    mad r7.w, r7.w, r11.w, l(1.000000)
    mad_sat r11.y, r13.w, r11.y, r11.z
    mul r11.y, r11.y, r11.y
    add r7.w, -r11.x, r7.w
    mad r7.w, r11.y, r7.w, r11.x
    min r11.x, r19.x, r7.w
    mul r17.x, r19.x, r7.w
    mul r17.y, r19.x, r11.x
  else
    mov r17.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r17.y, r17.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    dp3 r7.w, r15.xyzx, r15.xyzx
    rsq r7.w, r7.w
    mul r11.xyz, r7.wwww, r15.xyzx
    dp3 r7.w, r16.zxyz, r11.xyzx
    mov_sat r11.w, r7.w
    max r12.w, r0.w, l(0.020000)
    dp3 r13.w, r16.zxyz, r4.xyzx
    dp3 r11.x, r4.xyzx, r11.xyzx
    mad r11.y, r11.x, l(2.000000), l(2.000000)
    rsq r11.y, r11.y
    add r7.w, r7.w, r13.w
    mul_sat r7.w, r11.y, r7.w
    mad_sat r11.x, r11.y, r11.x, r11.y
    add r11.y, |r13.w|, l(0.000010)
    min r11.y, r11.y, l(1.000000)
    mul r15.xyz, r11.wwww, r12.xyzx
    mul r11.z, r12.w, r12.w
    mul r13.w, r11.z, r11.z
    mad r14.w, r7.w, r13.w, -r7.w
    mad r7.w, r14.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.14159274)
    div r7.w, r13.w, r7.w
    mad r12.w, -r12.w, r12.w, l(1.000000)
    mad r13.w, r11.y, r12.w, r11.z
    mad r11.z, r11.w, r12.w, r11.z
    mul r11.y, r11.z, r11.y
    mad r11.y, r11.w, r13.w, r11.y
    rcp r11.y, r11.y
    mul r7.w, r7.w, r11.y
    add r11.x, -r11.x, l(1.000000)
    mul r11.y, r11.x, r11.x
    mul r11.y, r11.y, r11.y
    mul r11.z, r11.x, r11.y
    mul_sat r12.w, r8.z, l(50.000000)
    mad r11.x, -r11.y, r11.x, l(1.000000)
    mul r17.yzw, r8.yyzw, r11.xxxx
    mad r11.xyz, r12.wwww, r11.zzzz, r17.yzwy
    mul r7.w, r7.w, l(0.500000)
    mul r11.xyz, r11.xyzx, r7.wwww
    mul r11.xyz, r11.xyzx, r11.wwww
    mad r11.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r11.xyzx
    mul r14.xyz, r14.xyzx, r17.xxxx
    mul r11.xyz, r11.xyzx, r14.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r7.w, r19.y, cb2[16].w
  movc r11.xyz, r7.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r11.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t1.yzwx
else
  ishl r12.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r12.w, r12.wwww, t4.yzwx
  umin r7.w, r12.w, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r4.wwww, t4.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r7.w
dp3 r7.w, -r4.yzxy, r16.xyzx
add r7.w, r7.w, r7.w
mad r14.xyz, r16.zxyz, -r7.wwww, -r4.xyzx
max r7.w, r0.w, l(0.020000)
mul r12.w, r7.w, r7.w
mad r7.w, -r7.w, r7.w, l(1.000000)
dp3 r13.w, r16.zxyz, r4.xyzx
add r14.w, r13.w, r13.w
mad r15.x, r14.w, r13.w, l(-1.000000)
add r15.y, |r13.w|, l(0.000010)
min r15.y, r15.y, l(1.000000)
mul r17.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r15.z, r12.w, r12.w
mul r18.xyzw, r8.zyzw, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r18.x, r18.x
mov r19.y, l(1.000000)
mov r20.xyz, r11.xyzx
mov r15.w, l(0)
loop
  uge r16.w, r15.w, r4.w
  breakc_nz r16.w
  iadd r16.w, r11.w, r15.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r17.w, r16.wwww, t2.yzwx
    imul null, r19.z, r17.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r19.zzzz, t0.xyzw
    imad r22.xyzw, r17.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r22.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r22.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r22.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r22.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r16.wwww, t5.yzwx
    imul null, r17.w, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r17.wwww, t3.xyzw
    imad r26.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r26.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r26.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r26.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r26.wwww, t3.wxyz
  endif
  eq r16.w, r23.w, l(0.000000)
  lt r17.w, l(-2.000000), r25.x
  add r21.xyz, -r5.xyzx, r21.xyzx
  dp3 r19.z, r21.xyzx, r21.xyzx
  rsq r19.w, r19.z
  mul r26.xyz, r19.wwww, r21.xyzx
  mul r19.w, r21.w, r21.w
  mul r19.z, r19.w, r19.z
  mad r19.z, -r19.z, r19.z, l(1.000000)
  max r19.z, r19.z, l(0.000000)
  mul r19.z, r19.z, r19.z
  mul r27.xyz, r21.wwww, r21.xyzx
  dp3 r19.w, r27.xyzx, r27.xyzx
  min r19.w, r19.w, l(1.000000)
  add r19.w, -r19.w, l(1.000000)
  log r19.w, r19.w
  mul r19.w, r19.w, r23.w
  exp r19.w, r19.w
  movc r19.z, r16.w, r19.z, r19.w
  dp3 r19.w, r26.xyzx, r24.yzwy
  add r19.w, -r25.x, r19.w
  mul_sat r19.w, r25.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r19.w, r19.z
  movc r17.w, r17.w, r19.w, r19.z
  lt r19.z, l(0.000000), r17.w
  if_nz r19.z
    and r19.z, r24.x, l(255)
    movc r19.z, r19.z, l(1), l(0)
    if_nz r19.z
      and r26.xyzw, r24.xxxx, l(1, 2, 4, 8)
      movc r26.xyzw, r26.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r19.z, r24.x, l(4)
      ubfe r19.w, l(1), l(4), r24.x
      movc r27.x, r19.w, l(1.000000), l(0)
      and r24.yzw, r19.zzzz, l(0, 2, 4, 8)
      movc r27.yzw, r24.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r19.z, r27.xyzw, r10.xyzw
      dp4 r19.w, r26.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r20.w, r9.xyzw, r26.xyzw
      add r20.w, r20.w, l(-1.000000)
      mad r19.w, r19.w, r20.w, l(1.000000)
      mul r19.zw, r19.wwww, r19.zzzz
    else
      mov r19.zw, l(0,0,1.000000,1.000000)
    endif
    add r19.w, r19.w, r19.z
    lt r19.w, l(0.000000), r19.w
    if_nz r19.w
      f16tof32 r19.w, r25.w
      mul r20.w, r19.w, l(0.500000)
      mad r24.yzw, -r20.wwww, r22.yyzw, r21.xxyz
      mad r21.xyz, r20.wwww, r22.yzwy, r21.xyzx
      lt r20.w, l(0.000000), r19.w
      if_nz r20.w
        dp3 r21.w, r24.yzwy, r24.yzwy
        dp3 r22.y, r21.xyzx, r21.xyzx
        rsq r21.w, r21.w
        rsq r22.y, r22.y
        mul r22.z, r21.w, r22.y
        dp3 r22.w, r24.yzwy, r21.xyzx
        mul r22.w, r22.z, r22.w
        mad r23.w, r22.w, l(0.500000), r22.z
        add r23.w, r23.w, l(0.500000)
        div r25.y, r22.z, r23.w
        dp3 r22.z, r16.zxyz, r24.yzwy
        dp3 r23.w, r16.zxyz, r21.xyzx
        mul r22.y, r22.y, r23.w
        mad r21.w, r22.z, r21.w, r22.y
        mul r25.x, r21.w, l(0.500000)
      else
        dp3 r21.w, r24.yzwy, r24.yzwy
        add r22.y, r21.w, l(1.000000)
        rcp r25.y, r22.y
        rsq r21.w, r21.w
        mul r26.xyz, r21.wwww, r24.yzwy
        dp3 r25.x, r16.zxyz, r26.xyzx
        mov r22.w, l(1.000000)
      endif
      lt r21.w, l(0.000000), r25.z
      mul r22.y, r25.z, r25.z
      mul_sat r22.y, r25.y, r22.y
      sqrt r22.y, r22.y
      lt r22.z, r25.x, r22.y
      max r23.w, -r22.y, r25.x
      add r23.w, r22.y, r23.w
      mul r23.w, r23.w, r23.w
      mul r22.y, r22.y, l(4.000000)
      div r22.y, r23.w, r22.y
      movc r22.y, r22.z, r22.y, r25.x
      movc_sat r21.w, r21.w, r22.y, r25.x
      movc r16.w, r16.w, r25.y, l(1.000000)
      add r21.xyz, -r24.yzwy, r21.xyzx
      dp3 r22.y, r14.xyzx, r21.xyzx
      mad r25.xyw, r22.yyyy, r14.xyxz, -r21.xyxz
      dp3 r22.z, r24.yzwy, r25.xywx
      mul r22.y, r22.y, r22.y
      mad r19.w, r19.w, r19.w, -r22.y
      div_sat r19.w, r22.z, r19.w
      mad r21.xyz, r19.wwww, r21.xyzx, r24.yzwy
      movc r21.xyz, r20.wwww, r21.xyzx, r24.yzwy
      dp3 r19.w, r21.xyzx, r21.xyzx
      rsq r19.w, r19.w
      mul r21.xyz, r19.wwww, r21.xyzx
      mul r20.w, r19.w, r25.z
      mul_sat r20.w, r7.w, r20.w
      mul_sat r19.w, r19.w, r22.x
      dp3 r22.x, r16.zxyz, r21.xyzx
      dp3 r21.x, r4.xyzx, r21.xyzx
      mad r21.y, r21.x, l(2.000000), l(2.000000)
      rsq r21.y, r21.y
      add r21.z, r13.w, r22.x
      mul_sat r21.z, r21.y, r21.z
      mad_sat r21.y, r21.y, r21.x, r21.y
      lt r22.y, l(0.000000), r20.w
      if_nz r22.y
        mad r22.z, -r20.w, r20.w, l(1.000000)
        sqrt r22.z, r22.z
        dp2 r23.w, r13.wwww, r22.xxxx
        add r24.y, -r21.x, r23.w
        ge r24.z, r24.y, r22.z
        if_nz r24.z
          mov r21.z, l(1.000000)
          mov r21.y, |r13.w|
        else
          mad r24.z, -r24.y, r24.y, l(1.000000)
          rsq r24.z, r24.z
          mul r24.z, r20.w, r24.z
          mad r24.w, -r24.y, r22.x, r13.w
          mul r25.x, r24.w, r24.z
          mad r24.y, -r24.y, r21.x, r15.x
          mul r24.y, r24.y, r24.z
          mul r25.y, r22.x, r22.x
          mad r25.y, -r13.w, r13.w, -r25.y
          add r25.y, r25.y, l(1.000000)
          mad r25.y, -r21.x, r21.x, r25.y
          mad_sat r23.w, r23.w, r21.x, r25.y
          sqrt r23.w, r23.w
          mul r23.w, r23.w, r24.z
          mul r25.y, r13.w, r23.w
          add r25.z, r25.y, r25.y
          mad r25.w, r22.x, r22.z, r13.w
          mad r24.z, r24.z, r24.w, r25.w
          mad r24.w, r21.x, r22.z, r24.y
          add r24.w, r24.w, l(1.000000)
          mul r26.x, r23.w, r24.w
          mul r26.y, r24.w, r24.z
          mul r26.z, r24.z, r25.z
          mul r25.y, r25.y, r24.z
          mul r25.y, r25.y, l(0.500000)
          mad r25.y, r26.x, l(-0.500000), r25.y
          mul r25.y, r25.y, r26.y
          mad r26.w, -r26.x, l(2.000000), r26.z
          mul r26.z, r26.w, r26.z
          mad r26.x, r26.x, r26.x, r26.z
          mul r26.z, r24.w, r24.w
          mad r24.w, r21.x, r22.z, r24.w
          mad r24.w, r24.w, l(-0.500000), l(-0.500000)
          mul r24.w, r24.w, r26.y
          mad r24.w, r25.w, r26.z, r24.w
          mad r24.z, r24.z, r24.w, r26.x
          add r24.w, r25.y, r25.y
          mul r25.w, r25.y, r25.y
          mad r25.w, r24.z, r24.z, r25.w
          div r24.w, r24.w, r25.w
          mul r24.z, r24.z, r24.w
          mad r24.w, -r24.w, r25.y, l(1.000000)
          mul r23.w, r23.w, r24.z
          mad r23.w, r24.w, r25.x, r23.w
          mul r24.z, r25.z, r24.z
          mad r24.y, r24.w, r24.y, r24.z
          mad r22.x, r22.x, r22.z, r23.w
          mad r21.x, r21.x, r22.z, r24.y
          mad r22.z, r21.x, l(2.000000), l(2.000000)
          rsq r22.z, r22.z
          add r22.x, r13.w, r22.x
          mul_sat r21.z, r22.z, r22.x
          mad_sat r21.y, r22.z, r21.x, r22.z
        endif
      endif
      mul r16.w, r21.w, r16.w
      lt r21.x, l(0.000000), r19.w
      mul r19.w, r19.w, r19.w
      mad r22.x, r21.y, l(3.600000), l(0.400000)
      div r19.w, r19.w, r22.x
      mad r19.w, r12.w, r12.w, r19.w
      min r19.w, r19.w, l(1.000000)
      movc r19.x, r21.x, r19.w, r15.z
      mul r19.w, r20.w, l(0.250000)
      ishr r21.x, r19.x, l(1)
      iadd r21.x, r21.x, l(0x1fbd1df5)
      mad r20.w, r21.x, l(3.000000), r20.w
      mul r19.w, r19.w, r20.w
      add r20.w, r21.y, l(0.001000)
      div r19.w, r19.w, r20.w
      add r25.x, r19.w, r19.x
      div r25.y, r19.x, r25.x
      movc r22.xy, r22.yyyy, r25.xyxx, r19.xyxx
      lt r19.w, r22.w, l(1.000000)
      add r21.x, -r22.w, l(1.000100)
      add r22.z, r22.w, l(1.000000)
      div r21.x, r21.x, r22.z
      sqrt r21.x, r21.x
      mul r22.z, r21.x, l(0.250000)
      ishr r22.w, r22.x, l(1)
      iadd r22.w, r22.w, l(0x1fbd1df5)
      mad r21.x, r22.w, l(3.000000), r21.x
      mul r21.x, r21.x, r22.z
      div r20.w, r21.x, r20.w
      add r20.w, r20.w, r22.x
      div r20.w, r22.x, r20.w
      sqrt r20.w, r20.w
      mul r20.w, r20.w, r22.y
      movc r19.w, r19.w, r20.w, r22.y
      mad r20.w, r21.z, r19.x, -r21.z
      mad r20.w, r20.w, r21.z, l(1.000000)
      mul r20.w, r20.w, r20.w
      mul r20.w, r20.w, l(3.14159274)
      div r20.w, r19.x, r20.w
      mul r19.w, r19.w, r20.w
      sqrt r19.x, r19.x
      add r20.w, -r19.x, l(1.000000)
      mad r21.x, r15.y, r20.w, r19.x
      mad r19.x, r21.w, r20.w, r19.x
      mul r19.x, r15.y, r19.x
      mad r19.x, r21.w, r21.x, r19.x
      rcp r19.x, r19.x
      mul r19.x, r19.x, r19.w
      add r19.w, -r21.y, l(1.000000)
      mul r20.w, r19.w, r19.w
      mul r20.w, r20.w, r20.w
      mul r21.x, r19.w, r20.w
      mad r19.w, -r20.w, r19.w, l(1.000000)
      mul r21.yzw, r8.yyzw, r19.wwww
      mad r21.xyz, r18.xxxx, r21.xxxx, r21.yzwy
      mul r19.x, r19.x, l(0.500000)
      mul r21.xyz, r21.xyzx, r19.xxxx
      mul r21.xyz, r16.wwww, r21.xyzx
      mad r21.xyz, r16.wwww, r17.xyzx, r21.xyzx
      mul r22.xyz, r17.wwww, r23.xyzx
      mul r19.xzw, r19.zzzz, r22.xxyz
      mul r19.xzw, r19.xxzw, r21.xxyz
    else
      mov r19.xzw, l(0,0,0,0)
    endif
  else
    mov r19.xzw, l(0,0,0,0)
  endif
  ushr r16.w, r24.x, l(8)
  and r16.w, r16.w, cb2[16].w
  add r19.xzw, r19.xxzw, r20.xxyz
  movc r20.xyz, r16.wwww, r19.xzwx, r20.xyzx
  iadd r15.w, r15.w, l(1)
endloop
mad r4.xyz, r14.wwww, r16.zxyz, -r4.xyzx
mov_sat r13.w, r13.w
log r0.x, r0.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r7.w, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r7.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r0.w, cb1[165].x, cb1[165].y
mad r7.w, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r7.w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r9.xyz, r18.yzwy, r0.yyyy, -r4.xyzx
mad r4.xyz, r8.xxxx, r9.xyzx, r4.xyzx
mad r9.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r9.x, r9.x
mul r0.y, r13.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r9.x, r9.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r9.zwzz
mul r0.y, r18.x, r0.y
mad r0.xyw, r8.yzyw, r0.xxxx, r0.yyyy
mul r0.xyw, r0.xyxw, r4.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mad r4.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r9.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r10.xyz, r8.yzwy, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r6.wwww, r4.xyzx, r9.xyzx
mad r4.xyz, r4.xyzx, r6.wwww, r10.xyzx
mul r4.xyz, r6.wwww, r4.xyzx
max r4.xyz, r4.xyzx, r6.wwww
mad r0.xyz, r0.xyzx, r4.xyzx, r20.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r8.yyzw, l(0.000000, 0.450000, 0.450000, 0.450000), r12.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r6.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
