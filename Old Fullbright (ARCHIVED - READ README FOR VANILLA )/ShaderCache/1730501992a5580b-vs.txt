//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 24 15:26:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// ATTRIBUTE                1   xyz         1     NONE   float
// ATTRIBUTE                2   xyzw        2     NONE   float
// ATTRIBUTE                3   xyzw        3     NONE   float
// ATTRIBUTE                4   xy          4     NONE   float   xy
// ATTRIBUTE                8   xyzw        5     NONE   float   xyzw
// ATTRIBUTE                9   xyzw        6     NONE   float   xyzw
// ATTRIBUTE               10   xyzw        7     NONE   float   xyzw
// ATTRIBUTE               11   xyzw        8     NONE     int
// ATTRIBUTE               12   xy          9     NONE   float
// ATTRIBUTE               14   xyzw       10     NONE   float
// ATTRIBUTE               15   xyzw       11     NONE   float
// SV_InstanceID            0   x          12   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           1     NONE    uint   x
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// SV_ClipDistance          1   x           3  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} }
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[166], immediateIndexed
dcl_constantbuffer cb2[164], immediateIndexed
dcl_input v0.xyzw
dcl_input v4.xy
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output o0.xyzw
dcl_output o1.x
dcl_output_siv o2.xyzw, position
dcl_output_siv o3.x, clip_distance
dcl_temps 7
if_nz cb0[7].y
  mov r0.x, cb1[165].w
else
  movc r0.y, cb0[0].x, l(1), l(0)
  and r0.x, r0.y, cb0[7].x
endif
if_z r0.x
  mov r1.x, cb1[0].x
  mov r1.y, cb1[1].x
  mov r1.z, cb1[2].x
  mov r1.w, cb1[3].x
  mov r2.x, cb1[0].y
  mov r2.y, cb1[1].y
  mov r2.z, cb1[2].y
  mov r2.w, cb1[3].y
  mov r3.x, cb1[0].z
  mov r3.y, cb1[1].z
  mov r3.z, cb1[2].z
  mov r3.w, cb1[3].z
  mov r4.x, cb1[0].w
  mov r4.y, cb1[1].w
  mov r4.z, cb1[2].w
  mov r4.w, cb1[3].w
  mov r0.yzw, cb1[62].xxyz
  mov r5.x, cb1[163].y
else
  mov r1.x, cb2[0].x
  mov r1.y, cb2[1].x
  mov r1.z, cb2[2].x
  mov r1.w, cb2[3].x
  mov r2.x, cb2[0].y
  mov r2.y, cb2[1].y
  mov r2.z, cb2[2].y
  mov r2.w, cb2[3].y
  mov r3.x, cb2[0].z
  mov r3.y, cb2[1].z
  mov r3.z, cb2[2].z
  mov r3.w, cb2[3].z
  mov r4.x, cb2[0].w
  mov r4.y, cb2[1].w
  mov r4.z, cb2[2].w
  mov r4.w, cb2[3].w
  mov r0.yzw, cb2[62].xxyz
  mov r5.x, cb2[163].y
endif
dp4 r6.x, v0.xyzw, v5.xyzw
dp4 r6.y, v0.xyzw, v6.xyzw
dp4 r6.z, v0.xyzw, v7.xyzw
add r6.xyz, r0.yzwy, r6.xyzx
mov r6.w, v0.w
dp4 r1.x, r6.xyzw, r1.xyzw
dp4 r1.y, r6.xyzw, r2.xyzw
dp4 r1.z, r6.xyzw, r3.xyzw
dp4 r1.w, r6.xyzw, r4.xyzw
or r0.y, cb0[0].x, cb0[7].y
if_nz r0.y
  mov r2.x, icb[r0.x + 0].x
  mov r2.y, l(1.000000)
  dp2 o3.x, r1.xwxx, r2.xyxx
  mul r0.y, r5.x, l(0.500000)
  mul r0.z, r1.w, icb[r0.x + 0].x
  mad r0.w, -r5.x, l(0.500000), l(1.000000)
  mul r0.z, r0.w, r0.z
  mad r1.x, r1.x, r0.y, r0.z
else
  mov o3.x, l(0)
endif
movc r0.y, cb0[0].x, l(-0.000000), l(0)
or o1.x, r0.x, r0.y
mov o0.xy, v4.xyxx
mov o0.zw, l(0,0,0,0)
mov o2.xyzw, r1.xyzw
ret
// Approximately 0 instruction slots used
