// ---- Created with 3Dmigoto v1.3.16 on Wed Oct 23 22:09:08 2019
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[19];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[164];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[164];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[13];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  uint v3 : PACKED_EYE_INDEX0,
  float4 v4 : VS_to_DS_Position0,
  float4 v5 : PN_POSITION0,
  float4 v6 : PN_POSITION1,
  float4 v7 : PN_POSITION2,
  float3 v8 : PN_DisplacementScales0,
  float w8 : PN_TessellationMultiplier0,
  float v9 : PN_WorldDisplacementMultiplier0,
  out float4 o0 : TEXCOORD10,
  out float4 o1 : TEXCOORD11,
  out float4 o2 : TEXCOORD0,
  out uint o3 : PACKED_EYE_INDEX0,
  out float o4 : TEXCOORD6,
  out float3 p4 : TEXCOORD7,
  out float4 o5 : SV_POSITION0,
  out float o6 : SV_ClipDistance1)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_control_point_count 3
// Needs manual fix for instruction:
// unknown dcl_: dcl_tessellator_domain domain_tri
  const float4 icb[] = { { -1.000000, 0, 0, 1.000000},
                              { 1.000000, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = 1 & (int)vicp[0][3].x;
  if (r0.x == 0) {
    r0.y = cb1[163].y;
  } else {
    r0.y = cb2[163].y;
  }
  r1.xyz = vDomain.xyz * vDomain.xyz;
  r2.xyz = float3(3,3,3) * r1.xyz;
  r3.xyzw = vicp[0][5].xyzw * r1.xxxx;
  r4.xyzw = vicp[1][5].xyzw * r1.yyyy;
  r4.xyzw = vDomain.yyyy * r4.xyzw;
  r3.xyzw = r3.xyzw * vDomain.xxxx + r4.xyzw;
  r1.xyzw = vicp[2][5].xyzw * r1.zzzz;
  r1.xyzw = r1.xyzw * vDomain.zzzz + r3.xyzw;
  r3.xyzw = vicp[0][6].xyzw * r2.xxxx;
  r1.xyzw = r3.xyzw * vDomain.yyyy + r1.xyzw;
  r3.xyzw = vicp[0][7].xyzw * r2.yyyy;
  r1.xyzw = r3.xyzw * vDomain.xxxx + r1.xyzw;
  r3.xyzw = vicp[1][6].xyzw * r2.yyyy;
  r1.xyzw = r3.xyzw * vDomain.zzzz + r1.xyzw;
  r3.xyzw = vicp[1][7].xyzw * r2.zzzz;
  r1.xyzw = r3.xyzw * vDomain.yyyy + r1.xyzw;
  r3.xyzw = vicp[2][6].xyzw * r2.zzzz;
  r1.xyzw = r3.xyzw * vDomain.xxxx + r1.xyzw;
  r2.xyzw = vicp[2][7].xyzw * r2.xxxx;
  r1.xyzw = r2.xyzw * vDomain.zzzz + r1.xyzw;
  r2.xyzw = vDomain.zzzz * vpc4.xyzw;
  r2.xyzw = vDomain.xxxx * r2.xyzw;
  r2.xyzw = vDomain.yyyy * r2.xyzw;
  r1.xyzw = r2.xyzw * float4(6,6,6,6) + r1.xyzw;
  r2.xyz = vicp[1][0].xyz * vDomain.yyy;
  r2.xyz = vicp[0][0].xyz * vDomain.xxx + r2.xyz;
  r3.xyzw = vicp[1][1].xyzw * vDomain.yyyy;
  r3.xyzw = vicp[0][1].xyzw * vDomain.xxxx + r3.xyzw;
  r4.xyzw = vicp[1][2].xyzw * vDomain.yyyy;
  r4.xyzw = vicp[0][2].xyzw * vDomain.xxxx + r4.xyzw;
  o0.xyz = vicp[2][0].xyz * vDomain.zzz + r2.xyz;
  r2.xyzw = vicp[2][1].xyzw * vDomain.zzzz + r3.xyzw;
  r3.xyzw = vicp[2][2].xyzw * vDomain.zzzz + r4.xyzw;
  r0.z = cb3[18].y * cb1[132].z;
  r4.xyzw = float4(20,2,20,2) * r3.xyxy;
  r5.xyzw = r0.zzzz * float4(0.100000001,0.100000001,-0.100000001,-0.100000001) + r4.zwzw;
  r6.xyz = t0.SampleLevel(s0_s, r5.xy, -1).xyz;
  r5.xy = float2(0.418099999,0.354799986) + r5.zw;
  r5.xyz = t0.SampleLevel(s0_s, r5.xy, -1).xyz;
  r5.xyz = r6.xyz + r5.xyz;
  r4.xyzw = r0.zzzz * float4(-0.100000001,0.100000001,0.100000001,-0.100000001) + r4.xyzw;
  r4.xyzw = float4(0.864861012,0.148384005,0.651340008,0.751637995) + r4.xyzw;
  r6.xyz = t0.SampleLevel(s0_s, r4.xy, -1).xyz;
  r4.xyz = t0.SampleLevel(s0_s, r4.zw, -1).xyz;
  r4.xyz = r6.xyz + r4.xyz;
  r4.xyz = r5.xyz + r4.xyz;
  r4.xyz = cb3[18].zzz * r4.xyz;
  r4.xyz = r4.xyz * r2.xyz;
  r4.xyz = float3(0.25,0.25,0.25) * r4.xyz;
  r4.xyz = cb3[17].zzz * -r4.xyz + r4.xyz;
  r0.z = vicp[1][9].x * vDomain.y;
  r0.z = vicp[0][9].x * vDomain.x + r0.z;
  r0.z = vicp[2][9].x * vDomain.z + r0.z;
  r1.xyz = r4.xyz * r0.zzz + r1.xyz;
  r4.xyzw = cb0[9].xyzw * r1.yyyy;
  r4.xyzw = r1.xxxx * cb0[8].xyzw + r4.xyzw;
  r4.xyzw = r1.zzzz * cb0[10].xyzw + r4.xyzw;
  r1.xyzw = r1.wwww * cb0[11].xyzw + r4.xyzw;
  r0.z = cmp(0 != cb0[12].x);
  r0.w = cmp(r1.z < 0);
  r0.z = r0.w ? r0.z : 0;
  r1.zw = r0.zz ? float2(9.99999997e-007,1) : r1.zw;
  r0.z = (uint)vicp[0][3].x >> 1;
  if (r0.z != 0) {
    r4.x = icb[r0.x+0].x;
    r4.y = 1;
    o6.x = dot(r1.xw, r4.xy);
    r0.z = 0.5 * r0.y;
    r0.x = icb[r0.x+0].x * r1.w;
    r0.y = -r0.y * 0.5 + 1;
    r0.x = r0.x * r0.y;
    r1.x = r1.x * r0.z + r0.x;
  } else {
    o6.x = 0;
  }
  o1.xyzw = r2.xyzw;
  o2.xyzw = r3.xyzw;
  o5.xyzw = r1.xyzw;
  o3.x = vicp[0][3].x;
  o4.x = r1.z;
  return;
}