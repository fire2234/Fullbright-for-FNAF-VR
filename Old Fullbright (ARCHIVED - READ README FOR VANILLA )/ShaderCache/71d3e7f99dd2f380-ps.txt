//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 19:13:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    1   xyzw        0     NONE   float      w
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// SV_Position              0   xyzw        3      POS   float   xy
// SV_IsFrontFace           0   x           4    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[134], immediateIndexed
dcl_constantbuffer cb1[126], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.w
dcl_input_ps linear v1.xy
dcl_input_ps constant v2.x
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 2
and r0.x, v2.x, l(1)
if_z r0.x
  mov r0.x, cb0[125].x
else
  mov r0.x, cb1[125].x
endif
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t0.xwyz, s0, cb0[133].x
lt r0.z, l(0.001000), |v0.w|
round_ni r1.xy, v3.xyxx
dp2 r0.w, r1.xyxx, l(347.834503, 3343.283691, 0.000000, 0.000000)
sincos null, r0.w, r0.w
mul r0.w, r0.w, l(1000.000000)
frc r0.w, r0.w
lt r1.x, v0.w, l(0.000000)
add r1.y, v0.w, l(1.000000)
lt r1.y, r0.w, r1.y
lt r0.w, v0.w, r0.w
movc r0.w, r1.x, r1.y, r0.w
ieq r0.w, r0.w, l(0)
and r0.z, r0.z, r0.w
discard_nz r0.z
ilt r0.x, l(1), r0.x
add r0.y, r0.y, l(-0.333300)
lt r1.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.yyyy
and r0.z, r1.x, l(8)
movc r0.z, r1.y, l(9), r0.z
movc r0.z, r1.z, l(13), r0.z
utof r0.w, r0.z
add r0.w, r0.w, l(-0.500000)
lt r0.yw, r0.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.w, r1.w, l(0), r0.w
and r0.w, r0.x, r0.w
discard_nz r0.w
not r0.x, r0.x
and r0.y, r0.x, r0.y
discard_nz r0.y
or r0.x, r0.x, r1.w
movc oMask, r0.x, l(15), r0.z
mov o0.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used
