//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 20:16:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 24
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v5.wwww
mov r13.z, v5.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t16.xyzw, s3, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t17.xyzw, s4, cb1[133].x
mad r7.xyz, r7.xyzx, cb6[2].xxxx, cb6[1].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, v2.xyxx, t18.wxyz, s5, cb1[133].x
add_sat r8.yzw, r8.yyzw, cb6[2].yyyy
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t19.yxzw, s6, cb1[133].x
add_sat r0.y, r0.y, cb6[2].z
mad r9.z, r0.y, r0.w, r0.z
lt r0.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxzx
lt r0.w, l(0.000000), cb1[163].w
and r0.y, r0.w, r0.y
div r11.zw, r13.xxxy, r13.wwww
mad r10.xy, r11.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t14.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t15.xyzw, s2, l(0.000000)
mad r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r14.xyz, r6.xyzx, r14.wwww, r14.xyzx
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.500000), r15.y
mad r12.xyz, r8.yzwy, r12.wwww, r12.xyzx
movc r6.xyz, r0.yyyy, r14.xyzx, r6.xyzx
movc r8.yzw, r0.yyyy, r12.xxyz, r8.yyzw
mov r9.xy, l(0,0.500000,0,0)
movc r9.xyz, r0.yyyy, r15.xyzx, r9.xyzx
if_nz r0.z
  mad r0.yzw, r5.xxyz, cb1[178].xxyz, cb1[179].xxyz
  max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.yzw, r0.yyzw, l(0.000000, 0.990000, 0.990000, 0.990000)
  mul r0.yzw, r0.yyzw, cb1[180].xxyz
  ftoi r12.xyz, r0.yzwy
  mov r12.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
  utof r12.xyzw, r12.xyzw
  add r4.w, cb1[180].w, l(1.000000)
  div r0.yzw, r0.yyzw, r12.wwww
  frc r0.yzw, r0.yyzw
  mul r0.yzw, r0.yyzw, cb1[180].wwww
  mad r0.yzw, r12.xxyz, r4.wwww, r0.yyzw
  add r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r0.yzw, r0.yyzw, cb1[181].xxyz
  sample_l_indexable(texture3d)(float,float,float,float) r0.y, r0.yzwy, t1.wxyz, s0, l(0.000000)
else
  lt r4.w, l(0.000000), cb2[10].w
  movc r0.y, r4.w, cb5[5].x, l(1.000000)
endif
mul r4.w, r9.y, l(0.080000)
mad r12.xyz, -r9.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r12.xyz, r9.xxxx, r12.xyzx, r4.wwww
mad r8.yzw, -r8.yyzw, r9.xxxx, r8.yyzw
mad r8.yzw, r8.yyzw, cb1[126].wwww, cb1[126].xxyz
mad r9.xyw, r12.xyxz, cb1[127].wwww, cb1[127].xyxz
ilt r4.w, l(1), cb1[125].x
if_nz r4.w
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r12.xy, r11.zwzz
  mov r12.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r12.xyzz, t12.yzwx
  mad r6.w, r4.w, cb1[57].x, cb1[57].y
  mad r4.w, r4.w, cb1[57].z, -cb1[57].w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  add r4.w, r4.w, r6.w
  mad r4.w, -r13.z, l(1.000000), r4.w
  div r4.w, |r4.w|, r13.w
  lt r4.w, l(0.010000), r4.w
  if_nz r4.w
    mov r14.y, -cb1[123].z
    mov r14.z, l(0)
    add r14.yz, r10.xxyx, r14.yyzy
    iadd r15.xyzw, r12.xxyy, l(1, -1, 1, -1)
    mov r12.w, r15.y
    ld_indexable(texture2d)(float,float,float,float) r4.w, r12.wyzz, t12.yzwx
    mad r6.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r14.x, |r4.w|
    lt r4.w, r14.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r14.xyz, r4.wwww, r14.xyzx, r10.zxyz
    mov r16.y, l(0)
    mov r16.z, cb1[123].w
    add r16.yz, r10.xxyx, r16.yyzy
    mov r17.xz, r12.xxzx
    mov r17.yw, r15.zzzw
    ld_indexable(texture2d)(float,float,float,float) r4.w, r17.xyzz, t12.yzwx
    mad r6.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r16.x, |r4.w|
    lt r4.w, r16.x, r14.x
    movc r14.xyz, r4.wwww, r16.xyzx, r14.xyzx
    mov r16.y, cb1[123].z
    mov r16.z, l(0)
    add r16.yz, r10.xxyx, r16.yyzy
    mov r15.yzw, r12.yyzz
    ld_indexable(texture2d)(float,float,float,float) r4.w, r15.xyzw, t12.yzwx
    mad r6.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r16.x, |r4.w|
    lt r4.w, r16.x, r14.x
    movc r12.xyz, r4.wwww, r16.xyzx, r14.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r10.zw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r4.w, r17.xwzz, t12.yzwx
    mad r6.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    lt r4.w, |r4.w|, r12.x
    movc r10.xy, r4.wwww, r10.zwzz, r12.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.zw, l(0), t11.zwxy
utof r10.zw, r10.zzzw
mul r10.zw, r10.zzzw, r10.xxxy
round_z r10.zw, r10.zzzw
ftoi r12.xy, r10.zwzz
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.w, r12.xyzw, t11.yzwx
mul r6.w, cb2[12].y, l(3.999000)
ftou r6.w, r6.w
and r6.w, r6.w, l(2)
movc r6.w, r6.w, cb1[164].y, l(1.000000)
add r4.w, r4.w, l(-1.000000)
mad r4.w, r6.w, r4.w, l(1.000000)
ftou r10.zw, r11.xxxy
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r11.x, cb4[3].z
  mov r11.yzw, cb4[1].zzxy
  mov r12.x, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r11.x, cb4[43].z
  mov r11.yzw, cb4[41].zzxy
  mov r12.x, cb4[42].x
endif
mad r6.w, v5.w, r6.w, r7.w
log r6.w, r6.w
mul r6.w, r11.x, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.w, r11.y, l(-1)
umin r6.w, r6.w, r7.w
ushr r10.zw, r10.zzzw, r12.xxxx
imad r6.w, r6.w, r11.w, r10.w
imad r6.w, r6.w, r11.z, r10.z
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t10.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r7.w, cb4[0].z
  mov r11.xyz, cb4[6].xzwx
  mov r12.xyz, cb4[5].xyzx
  mov r13.xyz, cb4[4].xyzx
else
  mov r7.w, cb4[40].z
  mov r11.xyz, cb4[46].xzwx
  mov r12.xyz, cb4[45].xyzx
  mov r13.xyz, cb4[44].xyzx
endif
if_nz r7.w
  and r14.xyzw, r11.xxxx, l(255, 1, 2, 4)
  movc r14.xyzw, r14.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r7.w, r11.x, l(8)
  movc r15.w, r7.w, l(1.000000), l(0)
  ushr r16.xy, r11.xxxx, l(4, 8, 0, 0)
  ubfe r7.w, l(1), l(4), r11.x
  movc r17.x, r7.w, l(1.000000), l(0)
  and r16.xzw, r16.xxxx, l(2, 0, 4, 8)
  movc r17.yzw, r16.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r7.w, r17.xyzw, r10.xyzw
  lt r11.x, r11.z, l(0.000000)
  swapc r11.x, r16.x, r11.x, l(1.000000), r7.w
  if_nz r14.x
    mov r15.xyz, r14.yzwy
    dp4 r7.w, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r0.z, l(1.000000)
    dp4 r0.z, r0.yzzz, r15.xyzw
    add r0.z, r0.z, l(-1.000000)
    mad r0.z, r7.w, r0.z, l(1.000000)
    mad_sat r7.w, r13.w, r11.y, r11.z
    mul r7.w, r7.w, r7.w
    add r0.z, -r11.x, r0.z
    mad r0.z, r7.w, r0.z, r11.x
    min r7.w, r16.x, r0.z
    mul r11.x, r16.x, r0.z
    mul r11.y, r16.x, r7.w
  else
    mov r11.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.z, r11.y, r11.x
  lt r0.z, l(0.000000), r0.z
  if_nz r0.z
    dp3 r0.z, r13.xyzx, r13.xyzx
    rsq r0.z, r0.z
    mul r11.yzw, r0.zzzz, r13.xxyz
    dp3 r0.z, r6.xyzx, r11.yzwy
    mov_sat r7.w, r0.z
    max r12.w, r9.z, l(0.020000)
    dp3 r13.x, r6.xyzx, r4.xyzx
    dp3 r11.y, r4.xyzx, r11.yzwy
    mad r11.z, r11.y, l(2.000000), l(2.000000)
    rsq r11.z, r11.z
    add r0.z, r0.z, r13.x
    mul_sat r0.z, r11.z, r0.z
    mad_sat r11.y, r11.z, r11.y, r11.z
    add r11.z, |r13.x|, l(0.000010)
    min r11.z, r11.z, l(1.000000)
    mul r13.xyz, r7.wwww, r8.yzwy
    mul r11.w, r12.w, r12.w
    mul r13.w, r11.w, r11.w
    mad r14.x, r0.z, r13.w, -r0.z
    mad r0.z, r14.x, r0.z, l(1.000000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, l(3.14159274)
    div r0.z, r13.w, r0.z
    mad r12.w, -r12.w, r12.w, l(1.000000)
    mad r13.w, r11.z, r12.w, r11.w
    mad r11.w, r7.w, r12.w, r11.w
    mul r11.z, r11.w, r11.z
    mad r11.z, r7.w, r13.w, r11.z
    rcp r11.z, r11.z
    mul r0.z, r0.z, r11.z
    add r11.y, -r11.y, l(1.000000)
    mul r11.z, r11.y, r11.y
    mul r11.z, r11.z, r11.z
    mul r11.w, r11.y, r11.z
    mul_sat r12.w, r9.y, l(50.000000)
    mad r11.y, -r11.z, r11.y, l(1.000000)
    mul r14.xyz, r9.xywx, r11.yyyy
    mad r11.yzw, r12.wwww, r11.wwww, r14.xxyz
    mul r0.z, r0.z, l(0.500000)
    mul r11.yzw, r11.yyzw, r0.zzzz
    mul r11.yzw, r7.wwww, r11.yyzw
    mad r11.yzw, r13.xxyz, l(0.000000, 0.318309873, 0.318309873, 0.318309873), r11.yyzw
    mul r12.xyz, r11.xxxx, r12.xyzx
    mul r11.xyz, r11.yzwy, r12.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r0.z, r16.y, cb2[16].w
  movc r11.xyz, r0.zzzz, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.z, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t3.yzxw
  umin r0.z, r0.z, cb4[0].x
  bfi r7.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t3.yzwx
else
  ishl r11.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t6.yzwx
  umin r0.z, r11.w, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r6.wwww, t6.yzwx
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r6.w
dp3 r6.w, -r4.xyzx, r6.xyzx
add r6.w, r6.w, r6.w
mad r12.xyz, r6.xyzx, -r6.wwww, -r4.xyzx
max r6.w, r9.z, l(0.020000)
mul r11.w, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
dp3 r12.w, r6.xyzx, r4.xyzx
add r13.x, r12.w, r12.w
mad r13.y, r13.x, r12.w, l(-1.000000)
add r13.z, |r12.w|, l(0.000010)
min r13.z, r13.z, l(1.000000)
mul r14.xyz, r8.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r13.w, r11.w, r11.w
mul r14.w, r9.y, l(50.000000)
mov_sat r14.w, r14.w
mov r0.w, l(1.000000)
mov r15.y, l(1.000000)
mov r16.xyz, r11.xyzx
mov r15.z, l(0)
loop
  uge r15.w, r15.z, r0.z
  breakc_nz r15.w
  iadd r15.w, r7.w, r15.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r15.wwww, t4.yzwx
    imul null, r17.x, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r17.xxxx, t2.xyzw
    imad r18.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.xxxx, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.yyyy, t2.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r18.zzzz, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r18.wwww, t2.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t7.yzwx
    imul null, r16.w, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.wwww, t5.xyzw
    imad r22.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r22.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r22.yyyy, t5.wxyz
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r22.zzzz, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r22.wwww, t5.wxyz
  endif
  eq r15.w, r19.w, l(0.000000)
  lt r16.w, l(-2.000000), r21.x
  add r17.xyz, -r5.xyzx, r17.xyzx
  dp3 r22.x, r17.xyzx, r17.xyzx
  rsq r22.y, r22.x
  mul r22.yzw, r17.xxyz, r22.yyyy
  mul r23.x, r17.w, r17.w
  mul r22.x, r22.x, r23.x
  mad r22.x, -r22.x, r22.x, l(1.000000)
  max r22.x, r22.x, l(0.000000)
  mul r22.x, r22.x, r22.x
  mul r23.xyz, r17.wwww, r17.xyzx
  dp3 r17.w, r23.xyzx, r23.xyzx
  min r17.w, r17.w, l(1.000000)
  add r17.w, -r17.w, l(1.000000)
  log r17.w, r17.w
  mul r17.w, r17.w, r19.w
  exp r17.w, r17.w
  movc r17.w, r15.w, r22.x, r17.w
  dp3 r19.w, r22.yzwy, r20.yzwy
  add r19.w, -r21.x, r19.w
  mul_sat r19.w, r21.y, r19.w
  mul r19.w, r19.w, r19.w
  mul r19.w, r17.w, r19.w
  movc r16.w, r16.w, r19.w, r17.w
  lt r17.w, l(0.000000), r16.w
  if_nz r17.w
    and r17.w, r20.x, l(255)
    movc r17.w, r17.w, l(1), l(0)
    if_nz r17.w
      and r22.xyzw, r20.xxxx, l(1, 2, 4, 8)
      movc r22.xyzw, r22.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r17.w, r20.x, l(4)
      ubfe r19.w, l(1), l(4), r20.x
      movc r23.x, r19.w, l(1.000000), l(0)
      and r20.yzw, r17.wwww, l(0, 2, 4, 8)
      movc r23.yzw, r20.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r17.w, r23.xyzw, r10.xyzw
      dp4 r19.w, r22.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r20.y, r0.ywww, r22.xyzw
      add r20.y, r20.y, l(-1.000000)
      mad r19.w, r19.w, r20.y, l(1.000000)
      mul r20.yz, r17.wwww, r19.wwww
    else
      mov r20.yz, l(0,1.000000,1.000000,0)
    endif
    add r17.w, r20.z, r20.y
    lt r17.w, l(0.000000), r17.w
    if_nz r17.w
      f16tof32 r17.w, r21.w
      mul r19.w, r17.w, l(0.500000)
      mad r21.xyw, -r19.wwww, r18.yzyw, r17.xyxz
      mad r17.xyz, r19.wwww, r18.yzwy, r17.xyzx
      lt r18.y, l(0.000000), r17.w
      if_nz r18.y
        dp3 r18.z, r21.xywx, r21.xywx
        dp3 r18.w, r17.xyzx, r17.xyzx
        rsq r18.z, r18.z
        rsq r18.w, r18.w
        mul r19.w, r18.w, r18.z
        dp3 r20.z, r21.xywx, r17.xyzx
        mul r20.z, r19.w, r20.z
        mad r20.w, r20.z, l(0.500000), r19.w
        add r20.w, r20.w, l(0.500000)
        div r22.y, r19.w, r20.w
        dp3 r19.w, r6.xyzx, r21.xywx
        dp3 r20.w, r6.xyzx, r17.xyzx
        mul r18.w, r18.w, r20.w
        mad r18.z, r19.w, r18.z, r18.w
        mul r22.x, r18.z, l(0.500000)
      else
        dp3 r18.z, r21.xywx, r21.xywx
        add r18.w, r18.z, l(1.000000)
        rcp r22.y, r18.w
        rsq r18.z, r18.z
        mul r23.xyz, r18.zzzz, r21.xywx
        dp3 r22.x, r6.xyzx, r23.xyzx
        mov r20.z, l(1.000000)
      endif
      lt r18.z, l(0.000000), r21.z
      mul r18.w, r21.z, r21.z
      mul_sat r18.w, r22.y, r18.w
      sqrt r18.w, r18.w
      lt r19.w, r22.x, r18.w
      max r20.w, -r18.w, r22.x
      add r20.w, r18.w, r20.w
      mul r20.w, r20.w, r20.w
      mul r18.w, r18.w, l(4.000000)
      div r18.w, r20.w, r18.w
      movc r18.w, r19.w, r18.w, r22.x
      movc_sat r18.z, r18.z, r18.w, r22.x
      movc r15.w, r15.w, r22.y, l(1.000000)
      add r17.xyz, -r21.xywx, r17.xyzx
      dp3 r18.w, r12.xyzx, r17.xyzx
      mad r22.xyz, r18.wwww, r12.xyzx, -r17.xyzx
      dp3 r19.w, r21.xywx, r22.xyzx
      mul r18.w, r18.w, r18.w
      mad r17.w, r17.w, r17.w, -r18.w
      div_sat r17.w, r19.w, r17.w
      mad r17.xyz, r17.wwww, r17.xyzx, r21.xywx
      movc r17.xyz, r18.yyyy, r17.xyzx, r21.xywx
      dp3 r17.w, r17.xyzx, r17.xyzx
      rsq r17.w, r17.w
      mul r17.xyz, r17.wwww, r17.xyzx
      mul r18.y, r17.w, r21.z
      mul_sat r18.y, r6.w, r18.y
      mul_sat r17.w, r17.w, r18.x
      dp3 r18.x, r6.xyzx, r17.xyzx
      dp3 r17.x, r4.xyzx, r17.xyzx
      mad r17.y, r17.x, l(2.000000), l(2.000000)
      rsq r17.y, r17.y
      add r17.z, r12.w, r18.x
      mul_sat r17.z, r17.y, r17.z
      mad_sat r17.y, r17.y, r17.x, r17.y
      lt r18.w, l(0.000000), r18.y
      if_nz r18.w
        mad r19.w, -r18.y, r18.y, l(1.000000)
        sqrt r19.w, r19.w
        dp2 r20.w, r12.wwww, r18.xxxx
        add r21.x, -r17.x, r20.w
        ge r21.y, r21.x, r19.w
        if_nz r21.y
          mov r17.z, l(1.000000)
          mov r17.y, |r12.w|
        else
          mad r21.y, -r21.x, r21.x, l(1.000000)
          rsq r21.y, r21.y
          mul r21.y, r18.y, r21.y
          mad r21.z, -r21.x, r18.x, r12.w
          mad r21.x, -r21.x, r17.x, r13.y
          mul r21.xw, r21.xxxz, r21.yyyy
          mul r22.x, r18.x, r18.x
          mad r22.x, -r12.w, r12.w, -r22.x
          add r22.x, r22.x, l(1.000000)
          mad r22.x, -r17.x, r17.x, r22.x
          mad_sat r20.w, r20.w, r17.x, r22.x
          sqrt r20.w, r20.w
          mul r20.w, r20.w, r21.y
          mul r22.x, r12.w, r20.w
          add r22.y, r22.x, r22.x
          mad r22.z, r18.x, r19.w, r12.w
          mad r21.y, r21.y, r21.z, r22.z
          mad r21.z, r17.x, r19.w, r21.x
          add r21.z, r21.z, l(1.000000)
          mul r22.w, r20.w, r21.z
          mul r23.x, r21.z, r21.y
          mul r23.y, r21.y, r22.y
          mul r22.x, r22.x, r21.y
          mul r22.x, r22.x, l(0.500000)
          mad r22.x, r22.w, l(-0.500000), r22.x
          mul r22.x, r22.x, r23.x
          mad r23.z, -r22.w, l(2.000000), r23.y
          mul r23.y, r23.z, r23.y
          mad r22.w, r22.w, r22.w, r23.y
          mul r23.y, r21.z, r21.z
          mad r21.z, r17.x, r19.w, r21.z
          mad r21.z, r21.z, l(-0.500000), l(-0.500000)
          mul r21.z, r21.z, r23.x
          mad r21.z, r22.z, r23.y, r21.z
          mad r21.y, r21.y, r21.z, r22.w
          add r21.z, r22.x, r22.x
          mul r22.z, r22.x, r22.x
          mad r22.z, r21.y, r21.y, r22.z
          div r21.z, r21.z, r22.z
          mul r21.y, r21.y, r21.z
          mad r21.z, -r21.z, r22.x, l(1.000000)
          mul r20.w, r20.w, r21.y
          mad r20.w, r21.z, r21.w, r20.w
          mul r21.y, r22.y, r21.y
          mad r21.x, r21.z, r21.x, r21.y
          mad r18.x, r18.x, r19.w, r20.w
          mad r17.x, r17.x, r19.w, r21.x
          mad r19.w, r17.x, l(2.000000), l(2.000000)
          rsq r19.w, r19.w
          add r18.x, r12.w, r18.x
          mul_sat r17.z, r19.w, r18.x
          mad_sat r17.y, r19.w, r17.x, r19.w
        endif
      endif
      mul r15.w, r18.z, r15.w
      lt r17.x, l(0.000000), r17.w
      mul r17.w, r17.w, r17.w
      mad r18.x, r17.y, l(3.600000), l(0.400000)
      div r17.w, r17.w, r18.x
      mad r17.w, r11.w, r11.w, r17.w
      min r17.w, r17.w, l(1.000000)
      movc r15.x, r17.x, r17.w, r13.w
      mul r17.x, r18.y, l(0.250000)
      ishr r17.w, r15.x, l(1)
      iadd r17.w, r17.w, l(0x1fbd1df5)
      mad r17.w, r17.w, l(3.000000), r18.y
      mul r17.x, r17.w, r17.x
      add r17.w, r17.y, l(0.001000)
      div r17.x, r17.x, r17.w
      add r18.x, r15.x, r17.x
      div r18.y, r15.x, r18.x
      movc r18.xy, r18.wwww, r18.xyxx, r15.xyxx
      lt r17.x, r20.z, l(1.000000)
      add r18.w, -r20.z, l(1.000100)
      add r19.w, r20.z, l(1.000000)
      div r18.w, r18.w, r19.w
      sqrt r18.w, r18.w
      mul r19.w, r18.w, l(0.250000)
      ishr r20.z, r18.x, l(1)
      iadd r20.z, r20.z, l(0x1fbd1df5)
      mad r18.w, r20.z, l(3.000000), r18.w
      mul r18.w, r18.w, r19.w
      div r17.w, r18.w, r17.w
      add r17.w, r17.w, r18.x
      div r17.w, r18.x, r17.w
      sqrt r17.w, r17.w
      mul r17.w, r17.w, r18.y
      movc r17.x, r17.x, r17.w, r18.y
      mad r17.w, r17.z, r15.x, -r17.z
      mad r17.z, r17.w, r17.z, l(1.000000)
      mul r17.z, r17.z, r17.z
      mul r17.z, r17.z, l(3.14159274)
      div r17.z, r15.x, r17.z
      mul r17.x, r17.x, r17.z
      sqrt r15.x, r15.x
      add r17.z, -r15.x, l(1.000000)
      mad r17.w, r13.z, r17.z, r15.x
      mad r15.x, r18.z, r17.z, r15.x
      mul r15.x, r13.z, r15.x
      mad r15.x, r18.z, r17.w, r15.x
      rcp r15.x, r15.x
      mul r15.x, r15.x, r17.x
      add r17.x, -r17.y, l(1.000000)
      mul r17.y, r17.x, r17.x
      mul r17.y, r17.y, r17.y
      mul r17.z, r17.x, r17.y
      mad r17.x, -r17.y, r17.x, l(1.000000)
      mul r17.xyw, r9.xyxw, r17.xxxx
      mad r17.xyz, r14.wwww, r17.zzzz, r17.xywx
      mul r15.x, r15.x, l(0.500000)
      mul r17.xyz, r17.xyzx, r15.xxxx
      mul r17.xyz, r15.wwww, r17.xyzx
      mad r17.xyz, r15.wwww, r14.xyzx, r17.xyzx
      mul r18.xyz, r16.wwww, r19.xyzx
      mul r18.xyz, r20.yyyy, r18.xyzx
      mul r17.xyz, r17.xyzx, r18.xyzx
    else
      mov r17.xyz, l(0,0,0,0)
    endif
  else
    mov r17.xyz, l(0,0,0,0)
  endif
  ushr r15.x, r20.x, l(8)
  and r15.x, r15.x, cb2[16].w
  add r17.xyz, r16.xyzx, r17.xyzx
  movc r16.xyz, r15.xxxx, r17.xyzx, r16.xyzx
  iadd r15.z, r15.z, l(1)
endloop
mad r0.xyz, r13.xxxx, r6.xyzx, -r4.xyzx
mov_sat r12.w, r12.w
log r4.x, r9.z
mad r4.x, -r4.x, l(1.200000), l(1.000000)
add r4.y, cb1[163].z, l(-1.000000)
add r4.x, -r4.x, r4.y
itof r0.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw, s1, r4.x
mul r0.xyz, r0.xyzx, cb0[31].xxxx
mul r0.xyz, r0.xyzx, cb1[146].xyzx
mad_sat r0.w, r9.z, cb1[165].x, cb1[165].y
mad r4.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.x
min r4.x, cb1[165].z, l(0.000000)
add r4.x, r4.x, l(-1.000000)
mad r0.w, r0.w, r4.x, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r8.xxxx, -r0.xyzx, r0.xyzx
mad r6.xyzw, r9.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r6.x, r6.x
mul r4.x, r12.w, l(-9.280000)
exp r4.x, r4.x
min r0.w, r0.w, r4.x
mad r0.w, r0.w, r6.x, r6.y
mad r4.xy, r0.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.w, r14.w, r4.y
mad r4.xyz, r9.xywx, r4.xxxx, r0.wwww
mul r0.xyz, r0.xyzx, r4.xyzx
mul r0.xyz, r4.wwww, r0.xyzx
mad r4.xyz, r9.xywx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r9.xywx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r9.xywx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r16.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t9.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r9.xxyw, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
add r0.xyz, r0.xyzx, r2.yzwy
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
