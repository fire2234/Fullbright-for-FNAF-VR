//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 18:13:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 20
and r0.x, v2.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v4.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mad r0.y, r0.w, l(0.500000), r0.z
mad r7.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r7.xyz, r7.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r7.xyz, r7.xyzx, cb1[180].xyzx
ftoi r9.xyz, r7.xyzx
mov r9.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r9.xyzw, r9.xyzw, t0.xyzw
utof r9.xyzw, r9.xyzw
add r0.z, cb1[180].w, l(1.000000)
div r7.xyz, r7.xyzx, r9.wwww
frc r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, cb1[180].wwww
mad r7.xyz, r9.xyzx, r0.zzzz, r7.xyzx
add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r7.xyz, r7.xyzx, cb1[181].xyzx
lt r0.z, l(0.000000), cb2[12].z
if_nz r0.z
  sample_l_indexable(texture3d)(float,float,float,float) r0.z, r7.xyzx, t2.zwxy, s0, l(0.000000)
else
  lt r4.w, l(0.000000), cb2[10].w
  movc r0.z, r4.w, cb5[5].x, l(1.000000)
endif
mad r8.yzw, cb1[126].wwww, l(0.000000, 0.010000, 0.010000, 0.010000), cb1[126].xxyz
mad r9.xyz, cb1[127].wwww, l(0.040000, 0.040000, 0.040000, 0.000000), cb1[127].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r7.xyz, r7.xyzx, t1.xyzw, s0, l(0.000000)
mul r7.xyz, r7.xyzx, l(0.886227548, 0.886227548, 0.886227548, 0.000000)
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r7.xyzx, cb1[146].xyzx
mul r7.xyz, r7.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r4.w, r7.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r10.xy, -r10.xyxx, v4.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r6.w, cb4[3].x
  mov r7.w, cb4[3].y
  mov r9.w, cb4[3].z
  mov r10.z, cb4[1].z
  mov r11.xy, cb4[1].xyxx
  mov r10.w, cb4[2].x
else
  mov r6.w, cb4[43].x
  mov r7.w, cb4[43].y
  mov r9.w, cb4[43].z
  mov r10.z, cb4[41].z
  mov r11.xy, cb4[41].xyxx
  mov r10.w, cb4[42].x
endif
mad r6.w, v4.w, r6.w, r7.w
log r6.w, r6.w
mul r6.w, r9.w, r6.w
max r6.w, r6.w, l(0.000000)
ftou r6.w, r6.w
iadd r7.w, r10.z, l(-1)
umin r6.w, r6.w, r7.w
ushr r10.xy, r10.xyxx, r10.wwww
imad r6.w, r6.w, r11.y, r10.y
imad r6.w, r6.w, r11.x, r10.x
if_z r0.x
  mov r7.w, cb4[0].z
  mov r9.w, cb4[6].x
  mov r10.xy, cb4[6].zwzz
  mov r11.xyz, cb4[5].xyzx
else
  mov r7.w, cb4[40].z
  mov r9.w, cb4[46].x
  mov r10.xy, cb4[46].zwzz
  mov r11.xyz, cb4[45].xyzx
endif
if_nz r7.w
  and r12.xyzw, r9.wwww, l(255, 2, 4, 8)
  movc r12.xyzw, r12.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r7.w, cb4[7].x
    mov r10.z, l(0)
    loop
      uge r10.w, r10.z, cb4[7].x
      breakc_nz r10.w
      dp4 r10.w, cb4[8].xyzw, icb[r10.z + 0].xyzw
      lt r10.w, v4.w, r10.w
      if_nz r10.w
        mov r7.w, r10.z
        break
      endif
      iadd r10.z, r10.z, l(1)
    endloop
    ult r10.z, r7.w, cb4[7].x
    if_nz r10.z
      ishl r10.z, r7.w, l(2)
      mul r13.xyzw, r5.yyyy, cb4[r10.z + 10].xyzw
      mad r13.xyzw, r5.xxxx, cb4[r10.z + 9].xyzw, r13.xyzw
      mad r13.xyzw, r5.zzzz, cb4[r10.z + 11].xyzw, r13.xyzw
      add r13.xyzw, r13.xyzw, cb4[r10.z + 12].xyzw
      div r14.xyzw, r13.xyxy, r13.wwww
      ge r10.zw, r14.zzzw, cb4[r7.w + 25].xxxy
      ge r13.xy, cb4[r7.w + 25].zwzz, r14.zwzz
      and r10.zw, r10.zzzw, r13.xxxy
      and r7.w, r10.w, r10.z
      if_nz r7.w
        mad r14.xyzw, r14.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r10.zw, r14.zzzw
        round_ni r14.xyzw, r14.xyzw
        add r15.xyzw, r14.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r15.xyzw, r15.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.x, r15.xyxx, t3.xyzw, s1, l(0.000000)
        add r14.xyzw, r14.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r14.xyzw, r14.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r16.y, r14.xyxx, t3.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.z, r14.zwzz, t3.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r16.w, r15.zwzz, t3.yzwx, s1, l(0.000000)
        add r13.xyzw, -r13.zzzz, r16.xyzw
        mad_sat r13.xyzw, r13.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r13.yz, -r13.wwxw, r13.zzyz
        mad r13.xy, r10.zzzz, r13.yzyy, r13.wxww
        add r7.w, -r13.x, r13.y
        mad r7.w, r10.w, r7.w, r13.x
      else
        mov r7.w, l(1.000000)
      endif
    else
      mov r7.w, l(1.000000)
    endif
  else
    mov r7.w, l(1.000000)
  endif
  if_nz r12.x
    mov r12.x, l(1.000000)
    dp4 r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r12.xyzw
    add r10.w, r10.z, l(-1.000000)
    mad r10.z, r10.z, r10.w, l(1.000000)
    mad_sat r10.x, v4.w, r10.x, r10.y
    mul r10.x, r10.x, r10.x
    add r10.y, -r7.w, r10.z
    mad r10.x, r10.x, r10.y, r7.w
    min r10.y, r10.x, l(1.000000)
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r7.w, r10.y, r10.x
  lt r7.w, l(0.000000), r7.w
  if_nz r7.w
    mul r10.yzw, r8.yyzw, l(0.000000, 0.318309873, 0.318309873, 0.318309873)
    mul r11.xyz, r10.xxxx, r11.xyzx
    mul r10.xyz, r10.yzwy, r11.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r7.w, r9.w, l(8)
  and r7.w, r7.w, cb2[16].w
  movc r10.xyz, r7.wwww, r10.xyzx, l(0,0,0,0)
  mov r0.z, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r7.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t5.yzwx
  umin r7.w, r7.w, cb4[0].x
  bfi r9.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t5.yzwx
else
  ishl r10.w, r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t8.yzwx
  umin r7.w, r10.w, cb4[40].x
  bfi r6.w, l(31), l(1), r6.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r6.wwww, t8.yzwx
endif
movc r6.w, r0.x, cb4[40].x, cb4[0].x
umin r6.w, r6.w, r7.w
mul r11.xyz, r8.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r0.w, l(1.000000)
mov r12.xyz, r10.xyzx
mov r7.w, l(0)
loop
  uge r10.w, r7.w, r6.w
  breakc_nz r10.w
  iadd r10.w, r7.w, r9.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r10.wwww, t6.yzwx
    imul null, r12.w, r11.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.wwww, t4.xyzw
    imad r14.xyzw, r11.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r14.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r14.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r14.xyz, r14.zzzz, t4.xywz
    ld_indexable(buffer)(float,float,float,float) r17.xyz, r14.wwww, t4.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t9.yzwx
    imul null, r11.w, r10.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.wwww, t7.xyzw
    imad r18.xyzw, r10.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r18.xxxx, t7.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r18.yyyy, t7.wxyz
    ld_indexable(buffer)(float,float,float,float) r14.xyz, r18.zzzz, t7.xywz
    ld_indexable(buffer)(float,float,float,float) r17.xyz, r18.wwww, t7.xyzw
  endif
  eq r10.w, r15.w, l(0.000000)
  lt r11.w, l(-2.000000), r14.x
  add r13.xyz, -r5.xyzx, r13.xyzx
  dp3 r12.w, r13.xyzx, r13.xyzx
  rsq r14.w, r12.w
  mul r18.xyz, r13.xyzx, r14.wwww
  mul r14.w, r13.w, r13.w
  mul r12.w, r12.w, r14.w
  mad r12.w, -r12.w, r12.w, l(1.000000)
  max r12.w, r12.w, l(0.000000)
  mul r12.w, r12.w, r12.w
  mul r19.xyz, r13.wwww, r13.xyzx
  dp3 r13.w, r19.xyzx, r19.xyzx
  min r13.w, r13.w, l(1.000000)
  add r13.w, -r13.w, l(1.000000)
  log r13.w, r13.w
  mul r13.w, r13.w, r15.w
  exp r13.w, r13.w
  movc r12.w, r10.w, r12.w, r13.w
  dp3 r13.w, r18.xyzx, r16.yzwy
  add r13.w, -r14.x, r13.w
  mul_sat r13.w, r14.y, r13.w
  mul r13.w, r13.w, r13.w
  mul r13.w, r12.w, r13.w
  movc r11.w, r11.w, r13.w, r12.w
  lt r12.w, l(0.000000), r11.w
  if_nz r12.w
    and r12.w, r16.x, l(255)
    movc r12.w, r12.w, l(1), l(0)
    if_nz r12.w
      and r18.xyzw, r16.xxxx, l(1, 2, 4, 8)
      movc r18.xyzw, r18.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r12.w, r16.x, l(4)
      ubfe r13.w, l(1), l(4), r16.x
      movc r19.x, r13.w, l(1.000000), l(0)
      and r14.xyw, r12.wwww, l(2, 4, 0, 8)
      movc r19.yzw, r14.xxyw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r12.w, r19.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r13.w, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r14.x, r0.zwww, r18.xyzw
      add r14.x, r14.x, l(-1.000000)
      mad r13.w, r13.w, r14.x, l(1.000000)
      mul r14.xy, r12.wwww, r13.wwww
    else
      mov r14.xy, l(1.000000,1.000000,0,0)
    endif
    add r12.w, r14.y, r14.x
    lt r12.w, l(0.000000), r12.w
    if_nz r12.w
      f16tof32 r12.w, r14.z
      mul r13.w, r12.w, l(0.500000)
      mad r14.yzw, -r13.wwww, r17.xxyz, r13.xxyz
      mad r13.xyz, r13.wwww, r17.xyzx, r13.xyzx
      lt r12.w, l(0.000000), r12.w
      if_nz r12.w
        dp3 r12.w, r14.yzwy, r14.yzwy
        dp3 r13.w, r13.xyzx, r13.xyzx
        rsq r12.w, r12.w
        rsq r13.w, r13.w
        mul r12.w, r12.w, r13.w
        dp3 r13.x, r14.yzwy, r13.xyzx
        mul r13.x, r12.w, r13.x
        mad r13.x, r13.x, l(0.500000), r12.w
        add r13.x, r13.x, l(0.500000)
        div r12.w, r12.w, r13.x
      else
        dp3 r13.x, r14.yzwy, r14.yzwy
        add r13.x, r13.x, l(1.000000)
        rcp r12.w, r13.x
      endif
      movc r10.w, r10.w, r12.w, l(1.000000)
      mul r13.xyz, r10.wwww, r11.xyzx
      mul r14.yzw, r11.wwww, r15.xxyz
      mul r14.xyz, r14.xxxx, r14.yzwy
      mul r13.xyz, r13.xyzx, r14.xyzx
    else
      mov r13.xyz, l(0,0,0,0)
    endif
  else
    mov r13.xyz, l(0,0,0,0)
  endif
  ushr r10.w, r16.x, l(8)
  and r10.w, r10.w, cb2[16].w
  add r13.xyz, r12.xyzx, r13.xyzx
  movc r12.xyz, r10.wwww, r13.xyzx, r12.xyzx
  iadd r7.w, r7.w, l(1)
endloop
dp3 r0.x, r4.xyzx, r6.xyzx
add r0.z, r0.x, r0.x
mad r6.xyz, r0.zzzz, r6.xyzx, -r4.xyzx
mov_sat r0.x, r0.x
log r0.z, r0.y
mad r0.z, -r0.z, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.z, -r0.z, r0.w
itof r6.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r6.xyzw, t10.xyzw, s2, r0.z
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.z, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.z, r0.z, cb0[29].w
mad_sat r0.w, r0.y, cb1[165].x, cb1[165].y
mad r6.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r6.x
max r0.z, r0.z, l(0.000100)
div r0.z, r4.w, r0.z
min r0.z, r0.z, cb1[165].z
add r0.z, r0.z, l(-1.000000)
mad r0.z, r0.w, r0.z, l(1.000000)
mul r4.xyz, r0.zzzz, r4.xyzx
mul r6.xyzw, r9.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mad r6.yzw, r6.yyzw, r4.wwww, -r4.xxyz
mad r4.xyz, r8.xxxx, r6.yzwy, r4.xyzx
mad r10.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r10.x, r10.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r10.x, r10.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r10.zwzz
mov_sat r6.x, r6.x
mul r0.y, r0.y, r6.x
mad r0.xyz, r9.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r9.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r9.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r9.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r12.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t11.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r2.x, v3.w
endif
mad r2.yzw, r9.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r3.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r4.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r4.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r4.x, l(1.000000)
  mov r3.w, l(0.999000)
  movc r3.xyzw, r0.wwww, r4.yzwx, r3.xyzw
  mov o0.w, r3.w
else
  mov o0.w, l(0.999000)
endif
mad r0.xyz, r7.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r3.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
