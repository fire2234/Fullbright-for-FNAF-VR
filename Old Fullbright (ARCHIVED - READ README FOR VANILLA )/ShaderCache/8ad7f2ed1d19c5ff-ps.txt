//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 00:55:15 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           2     NONE    uint   x
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyzw
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_buffer (float,float,float,float) t10
dcl_resource_buffer (uint,uint,uint,uint) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_buffer (float,float,float,float) t13
dcl_resource_buffer (uint,uint,uint,uint) t14
dcl_resource_buffer (uint,uint,uint,uint) t15
dcl_resource_texturecubearray (float,float,float,float) t16
dcl_resource_texture3d (float,float,float,float) t17
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyzw, position
dcl_output o0.xyzw
dcl_temps 26
and r0.x, v2.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v4.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r11.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
dp3_sat r0.y, v1.xyzx, r4.xyzx
add r0.y, -r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, l(1.500000)
exp r0.y, r0.y
mad r7.w, r0.y, l(0.891999960), l(0.008000)
mov_sat r8.yzw, cb6[4].xxyz
mad r0.y, r0.w, l(0.100000), r0.z
mad r9.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r9.xyz, r9.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[180].xyzx
ftoi r11.xyz, r9.xyzx
mov r11.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r11.xyzw, r11.xyzw, t0.xyzw
utof r11.xyzw, r11.xyzw
add r0.z, cb1[180].w, l(1.000000)
div r9.xyz, r9.xyzx, r11.wwww
frc r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb1[180].wwww
mad r9.xyz, r11.xyzx, r0.zzzz, r9.xyzx
add r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[181].xyzx
lt r0.z, l(0.000000), cb2[12].z
if_nz r0.z
  sample_l_indexable(texture3d)(float,float,float,float) r11.x, r9.xyzx, t8.xyzw, s0, l(0.000000)
else
  lt r0.z, l(0.000000), cb2[10].w
  movc r11.x, r0.z, cb5[5].x, l(1.000000)
endif
add r12.xyz, r8.yzwy, l(-0.080000, -0.080000, -0.080000, 0.000000)
mad r12.xyz, r12.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.080000, 0.080000, 0.080000, 0.000000)
mul r13.xyz, r8.yzwy, cb1[126].wwww
mad r13.xyz, r13.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000), cb1[126].xyzx
mad r12.xyz, r12.xyzx, cb1[127].wwww, cb1[127].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r9.xyzx, t1.zxyw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r9.xyzx, t2.xyzw, s0, l(0.000000)
mad r15.xyzw, r15.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r16.xyzw, r9.xyzx, t4.xyzw, s0, l(0.000000)
mad r16.xyzw, r16.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r17.xyzw, r9.xyzx, t6.xyzw, s0, l(0.000000)
mad r17.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r15.xyzw, r14.yyyy, r15.xyzw
mul r15.xyzw, r15.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r16.xyzw, r14.zzzz, r16.xyzw
mul r16.xyzw, r16.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r17.xyzw, r14.xxxx, r17.xyzw
mul r17.xyzw, r17.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
sample_l_indexable(texture3d)(float,float,float,float) r18.xyzw, r9.xyzx, t3.xyzw, s0, l(0.000000)
mad r18.xyzw, r18.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r19.xyzw, r9.xyzx, t5.xyzw, s0, l(0.000000)
mad r19.xyzw, r19.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r9.xyzx, t7.xyzw, s0, l(0.000000)
mad r9.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r18.xyzw, r14.yyyy, r18.xyzw
mul r18.xyzw, r18.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r19.xyzw, r14.zzzz, r19.xyzw
mul r19.xyzw, r19.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r9.xyzw, r14.xxxx, r9.xyzw
mul r9.xyzw, r9.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r20.xyz, r6.yzxy, r6.yzyy
mul r21.yw, r6.yyyx, r6.zzzz
mad r0.z, r6.x, r6.x, -r20.x
mul r22.yzw, r6.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r21.xz, r20.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r20.xyzw, r21.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r0.z, r0.z, l(0.429042608)
mov r21.x, r14.y
mov r21.yzw, r15.yyzw
mov r22.x, l(0.886227548)
dp4 r0.w, r21.xyzw, r22.xyzw
mov r15.yzw, r18.xxyz
dp4 r4.w, r15.xyzw, r20.xyzw
add r0.w, r0.w, r4.w
mad r15.x, r18.w, r0.z, r0.w
mov r18.x, r14.z
mov r18.yzw, r16.yyzw
dp4 r0.w, r18.xyzw, r22.xyzw
mov r16.yzw, r19.xxyz
dp4 r4.w, r16.xyzw, r20.xyzw
add r0.w, r0.w, r4.w
mad r15.y, r19.w, r0.z, r0.w
mov r14.yzw, r17.yyzw
dp4 r0.w, r14.xyzw, r22.xyzw
mov r17.yzw, r9.xxyz
dp4 r4.w, r17.xyzw, r20.xyzw
add r0.w, r0.w, r4.w
mad r15.z, r9.w, r0.z, r0.w
max r9.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[146].xyzx
mul r9.xyz, r9.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r0.z, r9.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r9.xyz, r13.xyzx, r9.xyzx
mad r14.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r14.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r14.xyzx
mad r8.yzw, r8.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r14.xxyz
add r8.yzw, r8.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r8.yzw, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
add r10.xy, -r10.xyxx, v4.xyxx
ftou r10.xy, r10.xyxx
if_z r0.x
  mov r0.w, cb4[3].x
  mov r4.w, cb4[3].y
  mov r6.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.zw, cb4[1].xxxy
  mov r12.w, cb4[2].x
else
  mov r0.w, cb4[43].x
  mov r4.w, cb4[43].y
  mov r6.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.zw, cb4[41].xxxy
  mov r12.w, cb4[42].x
endif
mad r0.w, v4.w, r0.w, r4.w
log r0.w, r0.w
mul r0.w, r6.w, r0.w
max r0.w, r0.w, l(0.000000)
ftou r0.w, r0.w
iadd r4.w, r9.w, l(-1)
umin r0.w, r0.w, r4.w
ushr r10.xy, r10.xyxx, r12.wwww
imad r0.w, r0.w, r10.w, r10.y
imad r0.w, r0.w, r10.z, r10.x
if_z r0.x
  mov r4.w, cb4[0].z
  mov r6.w, cb4[6].x
  mov r9.w, cb4[6].z
  mov r10.x, cb4[6].w
  mov r10.yzw, cb4[5].xxyz
  mov r14.xyz, cb4[4].xyzx
else
  mov r4.w, cb4[40].z
  mov r6.w, cb4[46].x
  mov r9.w, cb4[46].z
  mov r10.x, cb4[46].w
  mov r10.yzw, cb4[45].xxyz
  mov r14.xyz, cb4[44].xyzx
endif
if_nz r4.w
  and r15.xyzw, r6.wwww, l(255, 2, 4, 8)
  movc r15.xyzw, r15.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r4.w, cb4[7].x
    mov r12.w, l(0)
    loop
      uge r13.w, r12.w, cb4[7].x
      breakc_nz r13.w
      dp4 r13.w, cb4[8].xyzw, icb[r12.w + 0].xyzw
      lt r13.w, v4.w, r13.w
      if_nz r13.w
        mov r4.w, r12.w
        break
      endif
      iadd r12.w, r12.w, l(1)
    endloop
    ult r12.w, r4.w, cb4[7].x
    if_nz r12.w
      ishl r12.w, r4.w, l(2)
      mul r16.xyzw, r5.yyyy, cb4[r12.w + 10].xyzw
      mad r16.xyzw, r5.xxxx, cb4[r12.w + 9].xyzw, r16.xyzw
      mad r16.xyzw, r5.zzzz, cb4[r12.w + 11].xyzw, r16.xyzw
      add r16.xyzw, r16.xyzw, cb4[r12.w + 12].xyzw
      div r17.xyzw, r16.xyxy, r16.wwww
      ge r16.xy, r17.zwzz, cb4[r4.w + 25].xyxx
      ge r18.xy, cb4[r4.w + 25].zwzz, r17.zwzz
      and r16.xy, r16.xyxx, r18.xyxx
      and r4.w, r16.y, r16.x
      if_nz r4.w
        mad r17.xyzw, r17.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r16.xy, r17.zwzz
        round_ni r17.xyzw, r17.xyzw
        add r18.xyzw, r17.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r18.xyzw, r18.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.x, r18.xyxx, t9.xyzw, s1, l(0.000000)
        add r17.xyzw, r17.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r17.xyzw, r17.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r19.y, r17.xyxx, t9.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.z, r17.zwzz, t9.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.w, r18.zwzz, t9.yzwx, s1, l(0.000000)
        add r17.xyzw, -r16.zzzz, r19.xyzw
        mad_sat r17.xyzw, r17.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r16.zw, -r17.wwwx, r17.zzzy
        mad r16.xz, r16.xxxx, r16.zzwz, r17.wwxw
        add r4.w, -r16.x, r16.z
        mad r4.w, r16.y, r4.w, r16.x
      else
        mov r4.w, l(1.000000)
      endif
    else
      mov r4.w, l(1.000000)
    endif
  else
    mov r4.w, l(1.000000)
  endif
  if_nz r15.x
    mov r15.x, l(1.000000)
    dp4 r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r15.xyzw
    add r13.w, r12.w, l(-1.000000)
    mad r12.w, r12.w, r13.w, l(1.000000)
    mad_sat r9.w, v4.w, r9.w, r10.x
    mul r9.w, r9.w, r9.w
    add r10.x, -r4.w, r12.w
    mad r15.x, r9.w, r10.x, r4.w
    min r15.y, r15.x, l(1.000000)
  else
    mov r15.xy, l(1.000000,1.000000,0,0)
  endif
  add r4.w, r15.y, r15.x
  lt r4.w, l(0.000000), r4.w
  if_nz r4.w
    dp3 r4.w, r14.xyzx, r14.xyzx
    rsq r4.w, r4.w
    mul r14.xyz, r4.wwww, r14.xyzx
    dp3 r4.w, r6.xyzx, r14.xyzx
    mov_sat r9.w, r4.w
    max r10.x, r0.y, l(0.020000)
    dp3 r12.w, r6.xyzx, r4.xyzx
    dp3 r13.w, r4.xyzx, r14.xyzx
    mad r14.x, r13.w, l(2.000000), l(2.000000)
    rsq r14.x, r14.x
    add r4.w, r4.w, r12.w
    mul_sat r4.w, r14.x, r4.w
    mad_sat r13.w, r14.x, r13.w, r14.x
    add r12.w, |r12.w|, l(0.000010)
    min r12.w, r12.w, l(1.000000)
    mul r14.xyz, r9.wwww, r13.xyzx
    mul r14.w, r10.x, r10.x
    mul r15.y, r14.w, r14.w
    mad r15.z, r4.w, r15.y, -r4.w
    mad r4.w, r15.z, r4.w, l(1.000000)
    mul r4.w, r4.w, r4.w
    mul r4.w, r4.w, l(3.14159274)
    div r4.w, r15.y, r4.w
    mad r10.x, -r10.x, r10.x, l(1.000000)
    mad r15.y, r12.w, r10.x, r14.w
    mad r10.x, r9.w, r10.x, r14.w
    mul r10.x, r10.x, r12.w
    mad r10.x, r9.w, r15.y, r10.x
    rcp r10.x, r10.x
    mul r4.w, r4.w, r10.x
    add r10.x, -r13.w, l(1.000000)
    mul r12.w, r10.x, r10.x
    mul r12.w, r12.w, r12.w
    mul r13.w, r10.x, r12.w
    mul_sat r14.w, r12.y, l(50.000000)
    mad r10.x, -r12.w, r10.x, l(1.000000)
    mul r15.yzw, r12.xxyz, r10.xxxx
    mad r15.yzw, r14.wwww, r13.wwww, r15.yyzw
    mul r4.w, r4.w, l(0.500000)
    mul r15.yzw, r15.yyzw, r4.wwww
    mul r15.yzw, r9.wwww, r15.yyzw
    mad r14.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r15.yzwy
    mul r10.xyz, r10.yzwy, r15.xxxx
    mul r10.xyz, r10.xyzx, r14.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r4.w, r6.w, l(8)
  and r4.w, r4.w, cb2[16].w
  movc r10.xyz, r4.wwww, r10.xyzx, l(0,0,0,0)
  mov r11.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r4.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t11.yzwx
  umin r4.w, r4.w, cb4[0].x
  bfi r6.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t11.yzwx
else
  ishl r9.w, r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t14.yzwx
  umin r4.w, r9.w, cb4[40].x
  bfi r0.w, l(31), l(1), r0.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r0.wwww, t14.yzwx
endif
movc r0.w, r0.x, cb4[40].x, cb4[0].x
umin r0.w, r0.w, r4.w
dp3 r4.w, -r4.xyzx, r6.xyzx
add r4.w, r4.w, r4.w
mad r14.xyz, r6.xyzx, -r4.wwww, -r4.xyzx
max r4.w, r0.y, l(0.020000)
mul r9.w, r4.w, r4.w
mad r4.w, -r4.w, r4.w, l(1.000000)
dp3 r10.w, r6.xyzx, r4.xyzx
add r12.w, r10.w, r10.w
mad r13.w, r12.w, r10.w, l(-1.000000)
add r14.w, |r10.w|, l(0.000010)
min r14.w, r14.w, l(1.000000)
mul r15.xyz, r13.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r15.w, r9.w, r9.w
mul r16.xyzw, r12.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r16.x, r16.x
mov r11.yw, l(0,1.000000,0,1.000000)
mov r17.xyz, r10.xyzx
mov r17.w, l(0)
loop
  uge r18.x, r17.w, r0.w
  breakc_nz r18.x
  iadd r18.x, r6.w, r17.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r18.y, r18.xxxx, t12.yxzw
    imul null, r18.z, r18.y, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.zzzz, t10.xyzw
    imad r20.xyzw, r18.yyyy, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r20.xxxx, t10.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r20.yyyy, t10.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r20.zzzz, t10.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.wwww, t10.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.x, r18.xxxx, t15.xyzw
    imul null, r18.y, r18.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r18.yyyy, t13.xyzw
    imad r18.xyzw, r18.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r18.xxxx, t13.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r18.yyyy, t13.wxyz
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r18.zzzz, t13.xyzw
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r18.wwww, t13.wxyz
  endif
  eq r18.x, r21.w, l(0.000000)
  lt r18.y, l(-2.000000), r23.x
  add r19.xyz, -r5.xyzx, r19.xyzx
  dp3 r18.z, r19.xyzx, r19.xyzx
  rsq r18.w, r18.z
  mul r24.xyz, r18.wwww, r19.xyzx
  mul r18.w, r19.w, r19.w
  mul r18.z, r18.w, r18.z
  mad r18.z, -r18.z, r18.z, l(1.000000)
  max r18.z, r18.z, l(0.000000)
  mul r18.z, r18.z, r18.z
  mul r25.xyz, r19.wwww, r19.xyzx
  dp3 r18.w, r25.xyzx, r25.xyzx
  min r18.w, r18.w, l(1.000000)
  add r18.w, -r18.w, l(1.000000)
  log r18.w, r18.w
  mul r18.w, r18.w, r21.w
  exp r18.w, r18.w
  movc r18.z, r18.x, r18.z, r18.w
  dp3 r18.w, r24.xyzx, r22.yzwy
  add r18.w, -r23.x, r18.w
  mul_sat r18.w, r23.y, r18.w
  mul r18.w, r18.w, r18.w
  mul r18.w, r18.w, r18.z
  movc r18.y, r18.y, r18.w, r18.z
  lt r18.z, l(0.000000), r18.y
  if_nz r18.z
    and r18.z, r22.x, l(255)
    movc r18.z, r18.z, l(1), l(0)
    if_nz r18.z
      and r24.xyzw, r22.xxxx, l(1, 2, 4, 8)
      movc r24.xyzw, r24.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.z, r22.x, l(4)
      ubfe r18.w, l(1), l(4), r22.x
      movc r25.x, r18.w, l(1.000000), l(0)
      and r22.yzw, r18.zzzz, l(0, 2, 4, 8)
      movc r25.yzw, r22.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.z, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r18.w, r24.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.w, r11.xyyy, r24.xyzw
      add r19.w, r19.w, l(-1.000000)
      mad r18.w, r18.w, r19.w, l(1.000000)
      mul r18.zw, r18.wwww, r18.zzzz
    else
      mov r18.zw, l(0,0,1.000000,1.000000)
    endif
    add r18.w, r18.w, r18.z
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r23.w
      mul r19.w, r18.w, l(0.500000)
      mad r22.yzw, -r19.wwww, r20.yyzw, r19.xxyz
      mad r19.xyz, r19.wwww, r20.yzwy, r19.xyzx
      lt r19.w, l(0.000000), r18.w
      if_nz r19.w
        dp3 r20.y, r22.yzwy, r22.yzwy
        dp3 r20.z, r19.xyzx, r19.xyzx
        rsq r20.y, r20.y
        rsq r20.z, r20.z
        mul r20.w, r20.z, r20.y
        dp3 r21.w, r22.yzwy, r19.xyzx
        mul r21.w, r20.w, r21.w
        mad r23.x, r21.w, l(0.500000), r20.w
        add r23.x, r23.x, l(0.500000)
        div r23.y, r20.w, r23.x
        dp3 r20.w, r6.xyzx, r22.yzwy
        dp3 r23.w, r6.xyzx, r19.xyzx
        mul r20.z, r20.z, r23.w
        mad r20.y, r20.w, r20.y, r20.z
        mul r23.x, r20.y, l(0.500000)
      else
        dp3 r20.y, r22.yzwy, r22.yzwy
        add r20.z, r20.y, l(1.000000)
        rcp r23.y, r20.z
        rsq r20.y, r20.y
        mul r20.yzw, r20.yyyy, r22.yyzw
        dp3 r23.x, r6.xyzx, r20.yzwy
        mov r21.w, l(1.000000)
      endif
      lt r20.y, l(0.000000), r23.z
      mul r20.z, r23.z, r23.z
      mul_sat r20.z, r23.y, r20.z
      sqrt r20.z, r20.z
      lt r20.w, r23.x, r20.z
      max r23.w, -r20.z, r23.x
      add r23.w, r20.z, r23.w
      mul r23.w, r23.w, r23.w
      mul r20.z, r20.z, l(4.000000)
      div r20.z, r23.w, r20.z
      movc r20.z, r20.w, r20.z, r23.x
      movc_sat r20.y, r20.y, r20.z, r23.x
      movc r18.x, r18.x, r23.y, l(1.000000)
      add r19.xyz, -r22.yzwy, r19.xyzx
      dp3 r20.z, r14.xyzx, r19.xyzx
      mad r23.xyw, r20.zzzz, r14.xyxz, -r19.xyxz
      dp3 r20.w, r22.yzwy, r23.xywx
      mul r20.z, r20.z, r20.z
      mad r18.w, r18.w, r18.w, -r20.z
      div_sat r18.w, r20.w, r18.w
      mad r19.xyz, r18.wwww, r19.xyzx, r22.yzwy
      movc r19.xyz, r19.wwww, r19.xyzx, r22.yzwy
      dp3 r18.w, r19.xyzx, r19.xyzx
      rsq r18.w, r18.w
      mul r19.xyz, r18.wwww, r19.xyzx
      mul r19.w, r18.w, r23.z
      mul_sat r19.w, r4.w, r19.w
      mul_sat r18.w, r18.w, r20.x
      dp3 r20.x, r6.xyzx, r19.xyzx
      dp3 r19.x, r4.xyzx, r19.xyzx
      mad r19.y, r19.x, l(2.000000), l(2.000000)
      rsq r19.y, r19.y
      add r19.z, r10.w, r20.x
      mul_sat r19.z, r19.y, r19.z
      mad_sat r19.y, r19.y, r19.x, r19.y
      lt r20.z, l(0.000000), r19.w
      if_nz r20.z
        mad r20.w, -r19.w, r19.w, l(1.000000)
        sqrt r20.w, r20.w
        dp2 r22.y, r10.wwww, r20.xxxx
        add r22.z, -r19.x, r22.y
        ge r22.w, r22.z, r20.w
        if_nz r22.w
          mov r19.z, l(1.000000)
          mov r19.y, |r10.w|
        else
          mad r22.w, -r22.z, r22.z, l(1.000000)
          rsq r22.w, r22.w
          mul r22.w, r19.w, r22.w
          mad r23.x, -r22.z, r20.x, r10.w
          mul r23.y, r22.w, r23.x
          mad r22.z, -r22.z, r19.x, r13.w
          mul r23.z, r20.x, r20.x
          mad r23.z, -r10.w, r10.w, -r23.z
          add r23.z, r23.z, l(1.000000)
          mad r23.z, -r19.x, r19.x, r23.z
          mad_sat r22.y, r22.y, r19.x, r23.z
          sqrt r22.y, r22.y
          mul r22.yz, r22.yyzy, r22.wwww
          mul r23.z, r10.w, r22.y
          add r23.w, r23.z, r23.z
          mad r24.x, r20.x, r20.w, r10.w
          mad r22.w, r22.w, r23.x, r24.x
          mad r23.x, r19.x, r20.w, r22.z
          add r23.x, r23.x, l(1.000000)
          mul r24.yz, r22.yywy, r23.xxxx
          mul r24.w, r22.w, r23.w
          mul r23.z, r23.z, r22.w
          mul r23.z, r23.z, l(0.500000)
          mad r23.z, r24.y, l(-0.500000), r23.z
          mad r25.x, -r24.y, l(2.000000), r24.w
          mul r24.w, r24.w, r25.x
          mad r24.y, r24.y, r24.y, r24.w
          mul r24.w, r23.x, r23.x
          mad r23.x, r19.x, r20.w, r23.x
          mad r23.x, r23.x, l(-0.500000), l(-0.500000)
          mul r23.xz, r23.xxzx, r24.zzzz
          mad r23.x, r24.x, r24.w, r23.x
          mad r22.w, r22.w, r23.x, r24.y
          add r23.x, r23.z, r23.z
          mul r24.x, r23.z, r23.z
          mad r24.x, r22.w, r22.w, r24.x
          div r23.x, r23.x, r24.x
          mul r22.w, r22.w, r23.x
          mad r23.x, -r23.x, r23.z, l(1.000000)
          mul r22.y, r22.y, r22.w
          mad r22.y, r23.x, r23.y, r22.y
          mul r22.w, r23.w, r22.w
          mad r22.z, r23.x, r22.z, r22.w
          mad r20.x, r20.x, r20.w, r22.y
          mad r19.x, r19.x, r20.w, r22.z
          mad r20.w, r19.x, l(2.000000), l(2.000000)
          rsq r20.w, r20.w
          add r20.x, r10.w, r20.x
          mul_sat r19.z, r20.w, r20.x
          mad_sat r19.y, r20.w, r19.x, r20.w
        endif
      endif
      mul r18.x, r20.y, r18.x
      lt r19.x, l(0.000000), r18.w
      mul r18.w, r18.w, r18.w
      mad r20.x, r19.y, l(3.600000), l(0.400000)
      div r18.w, r18.w, r20.x
      mad r18.w, r9.w, r9.w, r18.w
      min r18.w, r18.w, l(1.000000)
      movc r11.z, r19.x, r18.w, r15.w
      mul r18.w, r19.w, l(0.250000)
      ishr r19.x, r11.z, l(1)
      iadd r19.x, r19.x, l(0x1fbd1df5)
      mad r19.x, r19.x, l(3.000000), r19.w
      mul r18.w, r18.w, r19.x
      add r19.x, r19.y, l(0.001000)
      div r18.w, r18.w, r19.x
      add r23.x, r11.z, r18.w
      div r23.y, r11.z, r23.x
      movc r20.xz, r20.zzzz, r23.xxyx, r11.zzwz
      lt r18.w, r21.w, l(1.000000)
      add r19.w, -r21.w, l(1.000100)
      add r20.w, r21.w, l(1.000000)
      div r19.w, r19.w, r20.w
      sqrt r19.w, r19.w
      mul r20.w, r19.w, l(0.250000)
      ishr r21.w, r20.x, l(1)
      iadd r21.w, r21.w, l(0x1fbd1df5)
      mad r19.w, r21.w, l(3.000000), r19.w
      mul r19.w, r19.w, r20.w
      div r19.x, r19.w, r19.x
      add r19.x, r19.x, r20.x
      div r19.x, r20.x, r19.x
      sqrt r19.x, r19.x
      mul r19.x, r19.x, r20.z
      movc r18.w, r18.w, r19.x, r20.z
      mad r19.x, r19.z, r11.z, -r19.z
      mad r19.x, r19.x, r19.z, l(1.000000)
      mul r19.x, r19.x, r19.x
      mul r19.x, r19.x, l(3.14159274)
      div r19.x, r11.z, r19.x
      mul r18.w, r18.w, r19.x
      sqrt r11.z, r11.z
      add r19.x, -r11.z, l(1.000000)
      mad r19.z, r14.w, r19.x, r11.z
      mad r11.z, r20.y, r19.x, r11.z
      mul r11.z, r11.z, r14.w
      mad r11.z, r20.y, r19.z, r11.z
      rcp r11.z, r11.z
      mul r11.z, r11.z, r18.w
      add r18.w, -r19.y, l(1.000000)
      mul r19.x, r18.w, r18.w
      mul r19.x, r19.x, r19.x
      mul r19.y, r18.w, r19.x
      mad r18.w, -r19.x, r18.w, l(1.000000)
      mul r19.xzw, r12.xxyz, r18.wwww
      mad r19.xyz, r16.xxxx, r19.yyyy, r19.xzwx
      mul r11.z, r11.z, l(0.500000)
      mul r19.xyz, r19.xyzx, r11.zzzz
      mul r19.xyz, r18.xxxx, r19.xyzx
      mad r19.xyz, r18.xxxx, r15.xyzx, r19.xyzx
      mul r18.xyw, r18.yyyy, r21.xyxz
      mul r18.xyz, r18.zzzz, r18.xywx
      mul r18.xyz, r18.xyzx, r19.xyzx
    else
      mov r18.xyz, l(0,0,0,0)
    endif
  else
    mov r18.xyz, l(0,0,0,0)
  endif
  ushr r11.z, r22.x, l(8)
  and r11.z, r11.z, cb2[16].w
  add r18.xyz, r17.xyzx, r18.xyzx
  movc r17.xyz, r11.zzzz, r18.xyzx, r17.xyzx
  iadd r17.w, r17.w, l(1)
endloop
mad r4.xyz, r12.wwww, r6.xyzx, -r4.xyzx
mov_sat r10.w, r10.w
log r0.x, r0.y
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r0.w, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r0.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t16.xyzw, s2, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r0.w, r0.y, cb1[165].x, cb1[165].y
mad r4.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.w
max r0.x, r0.x, l(0.000100)
div r0.x, r0.z, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r0.xzw, r16.yyzw, r0.zzzz, -r4.xxyz
mad r0.xzw, r8.xxxx, r0.xxzw, r4.xxyz
mad r4.xyzw, r0.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r4.x, r4.x
mul r6.x, r10.w, l(-9.280000)
exp r6.x, r6.x
min r0.y, r0.y, r6.x
mad r0.y, r0.y, r4.x, r4.y
mad r4.xy, r0.yyyy, l(-1.040000, 1.040000, 0.000000, 0.000000), r4.zwzz
mul r0.y, r16.x, r4.y
mad r4.xyz, r12.xyzx, r4.xxxx, r0.yyyy
mul r0.xyz, r0.xzwx, r4.xyzx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r17.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t17.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r2.x, v3.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r13.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r7.xyz, cb6[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r7.xyzw, r0.wwww, r3.yzwx, r7.xyzw
  mov o0.w, r7.w
else
  mov o0.w, r7.w
endif
mad r0.xyz, r9.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r7.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
ret
// Approximately 0 instruction slots used
