//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 19:13:45 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// SV_InstanceID            0   x           1   INSTID    uint   x
// SV_VertexID              0   x           2   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 6   x           5     NONE   float   x
// TEXCOORD                 7    yzw        5     NONE   float    yzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[63], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_input v0.xyzw
dcl_input_sgv v1.x, instance_id
dcl_input_sgv v2.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.x
dcl_output o5.yzw
dcl_output_siv o6.xyzw, position
dcl_temps 9
mov o0.w, l(0)
iadd r0.x, v2.x, cb0[14].y
ishl r0.y, r0.x, l(1)
ld_indexable(buffer)(float,float,float,float) r0.yzw, r0.yyyy, t1.wxyz
bfi r1.x, l(31), l(1), r0.x, l(1)
imul null, r0.x, r0.x, cb3[0].y
ld_indexable(buffer)(float,float,float,float) r1.yz, r0.xxxx, t0.zxyw
mov o3.xy, r1.yzyy
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.xxxx, t1.xyzw
mul r2.xyz, r0.yzwy, r1.yzxy
mad r0.xyz, r1.xyzx, r0.zwyz, -r2.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
mul r2.xyz, r1.yzxy, r0.xyzx
mad r0.xyz, r0.zxyz, r1.zxyz, -r2.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
iadd r0.w, v1.x, cb0[14].x
imad r2.xy, l(3, 3, 0, 0), r0.wwww, l(1, 2, 0, 0)
ld_indexable(buffer)(float,float,float,float) r3.xyz, r2.xxxx, t3.yxzw
ld_indexable(buffer)(float,float,float,float) r2.xyz, r2.yyyy, t3.xyzw
mul r4.xyz, r3.xxxx, cb2[1].xyzx
mad r4.xyz, r3.yyyy, cb2[0].xyzx, r4.xyzx
mad r4.xyz, r3.zzzz, cb2[2].xyzx, r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
mul r5.xyz, r0.yyyy, r4.xyzx
mul r4.xyz, r1.yyyy, r4.xyzx
imul null, r0.y, r0.w, l(3)
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r0.wwww, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r0.yyyy, t3.zxyw
mul r8.xyz, r7.zzzz, cb2[1].xyzx
mad r8.xyz, r7.yyyy, cb2[0].xyzx, r8.xyzx
mad r8.xyz, r7.xxxx, cb2[2].xyzx, r8.xyzx
dp3 r0.y, r8.xyzx, r8.xyzx
rsq r0.y, r0.y
mul r8.xyz, r0.yyyy, r8.xyzx
mad r0.xyw, r0.xxxx, r8.xyxz, r5.xyxz
mad r4.xyz, r1.xxxx, r8.xyzx, r4.xyzx
mul r5.xyz, r2.yyyy, cb2[1].xyzx
mad r5.xyz, r2.xxxx, cb2[0].xyzx, r5.xyzx
mad r5.xyz, r2.zzzz, cb2[2].xyzx, r5.xyzx
dp3 r1.x, r5.xyzx, r5.xyzx
rsq r1.x, r1.x
mul r5.xyz, r1.xxxx, r5.xyzx
mad o0.xyz, r0.zzzz, r5.xyzx, r0.xywx
mad o1.xyz, r1.zzzz, r5.xyzx, r4.xyzx
mul o1.w, r1.w, cb2[4].w
mul r0.xyz, r6.yyyy, cb2[1].xyzx
mad r0.xyz, cb2[0].xyzx, r6.xxxx, r0.xyzx
mad r0.xyz, cb2[2].xyzx, r6.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb2[3].xyzx
add r1.xyz, r0.xyzx, -cb0[12].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
mad r0.w, cb0[8].w, r6.w, r0.w
lt r1.xyz, cb0[9].xyzx, r0.wwww
and r1.xyz, r1.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
dp3 r0.w, r1.xyzx, cb0[10].xyzx
mul r0.w, r0.w, cb0[12].w
add r1.xyz, r0.xyzx, -cb0[11].xyzx
add r0.xyz, r0.xyzx, cb1[62].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.x, r0.x, -cb0[13].x
mul_sat r0.x, r0.x, cb0[13].y
add o2.y, -r0.x, l(1.000000)
dp3 r0.x, r1.xyzx, r1.xyzx
sqrt r0.x, r0.x
mad r0.x, cb0[8].w, r6.w, r0.x
lt r0.xyz, cb0[8].xyzx, r0.xxxx
and r0.xyz, r0.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
dp3 r0.x, r0.xyzx, cb0[10].xyzx
mad r0.w, r0.x, cb0[11].w, r0.w
lt r0.x, |r0.w|, l(0.999000)
and r0.x, r0.x, l(0x3f800000)
mul r0.y, r7.w, l(0.00390625000)
round_z r0.y, r0.y
add r1.x, -r0.y, l(1.000000)
mul r1.x, r1.x, cb0[13].w
mad r0.y, cb0[13].z, r0.y, r1.x
mul r0.z, r0.x, r0.y
mov o2.zw, r0.zzzw
mov o2.x, r6.w
mov o3.zw, l(0,0,0,0)
mov o4.x, l(0)
mov r1.x, r7.z
mov r1.y, r3.x
mov r1.z, r2.y
mov r1.w, r6.y
dp4 r0.x, v0.xyzw, r1.xyzw
mul r0.xyw, r0.xxxx, cb2[1].xyxz
mov r3.x, r7.y
mov r7.y, r3.z
mov r3.z, r2.x
mov r7.z, r2.z
mov r3.w, r6.x
mov r7.w, r6.z
dp4 r1.x, v0.xyzw, r7.xyzw
dp4 r1.y, v0.xyzw, r3.xyzw
mad r0.xyw, cb2[0].xyxz, r1.yyyy, r0.xyxw
mad r0.xyw, cb2[2].xyxz, r1.xxxx, r0.xyxw
add r1.xyz, cb1[62].xyzx, cb2[3].xyzx
add r1.xyz, r0.xywx, r1.xyzx
mov r1.w, l(1.000000)
mul r0.xyzw, r0.zzzz, r1.xyzw
mov o5.yzw, r0.xxyz
mov o5.x, l(0)
mul r1.xyzw, r0.yyyy, cb0[16].xyzw
mad r1.xyzw, r0.xxxx, cb0[15].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb0[17].xyzw, r1.xyzw
mad r0.xyzw, r0.wwww, cb0[18].xyzw, r1.xyzw
mov o6.xy, r0.xyxx
lt r0.x, r0.z, l(0.000000)
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[19].x
and r0.x, r0.x, r0.y
movc r0.xy, r0.xxxx, l(0.000001,1.000000,0,0), r0.zwzz
mad r0.x, r0.x, cb0[14].w, cb0[14].z
mul o6.z, r0.y, r0.x
mov o6.w, r0.y
ret
// Approximately 0 instruction slots used
