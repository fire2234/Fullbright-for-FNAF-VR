//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:47:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz
// ATTRIBUTE                1   xyz         1     NONE   float   xyz
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   xyzw        3     NONE    uint   xyzw
// ATTRIBUTE               14   xyzw        4     NONE    uint   xyzw
// ATTRIBUTE                4   xyzw        5     NONE   float   xyzw
// ATTRIBUTE               15   xyzw        6     NONE   float   xyzw
// ATTRIBUTE                5   xy          7     NONE   float   xy
// ATTRIBUTE               13   xyzw        8     NONE   float
// SV_InstanceID            0   x           9   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// VS_To_DS_Position        0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 7   xyz         5     NONE   float   xyz
// SV_ClipDistance          1   x           6  CLIPDST   float   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[166], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[63], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xy
dcl_input_sgv v9.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.x
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output_siv o6.x, clip_distance
dcl_temps 9
if_nz cb0[7].y
  mov r0.x, cb1[165].w
else
  and r0.x, v9.x, l(1)
endif
if_z r0.x
  mov r0.yzw, cb1[62].xxyz
else
  mov r0.yzw, cb3[62].xxyz
endif
imul null, r1.xyzw, v3.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
imad r3.xyzw, v3.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r3.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r3.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r1.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r3.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r3.wwww, t0.xyzw
mul r6.xyzw, r6.xyzw, v5.yyyy
mul r7.xyzw, r7.xyzw, v5.yyyy
mul r3.xyzw, r3.xyzw, v5.yyyy
mad r2.xyzw, v5.xxxx, r2.xyzw, r6.xyzw
mad r4.xyzw, v5.xxxx, r4.xyzw, r7.xyzw
mad r3.xyzw, v5.xxxx, r5.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r1.zzzz, t0.xyzw
imad r6.xyzw, v3.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.yyyy, t0.xyzw
mad r2.xyzw, v5.zzzz, r5.xyzw, r2.xyzw
mad r4.xyzw, v5.zzzz, r7.xyzw, r4.xyzw
mad r3.xyzw, v5.zzzz, r8.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r6.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t0.xyzw
mad r1.xyzw, v5.wwww, r1.xyzw, r2.xyzw
mad r2.xyzw, v5.wwww, r5.xyzw, r4.xyzw
mad r3.xyzw, v5.wwww, r6.xyzw, r3.xyzw
imul null, r4.xyzw, v4.xyzw, l(3, 3, 3, 3)
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.xxxx, t0.xyzw
imad r6.xyzw, v4.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.yyyy, t0.xyzw
mad r1.xyzw, v6.xxxx, r5.xyzw, r1.xyzw
mad r2.xyzw, v6.xxxx, r7.xyzw, r2.xyzw
mad r3.xyzw, v6.xxxx, r8.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.yyyy, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t0.xyzw
mad r1.xyzw, v6.yyyy, r5.xyzw, r1.xyzw
mad r2.xyzw, v6.yyyy, r7.xyzw, r2.xyzw
mad r3.xyzw, v6.yyyy, r6.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r4.zzzz, t0.xyzw
imad r6.xyzw, v4.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
ld_indexable(buffer)(float,float,float,float) r7.xyzw, r6.xxxx, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r8.xyzw, r6.yyyy, t0.xyzw
mad r1.xyzw, v6.zzzz, r5.xyzw, r1.xyzw
mad r2.xyzw, v6.zzzz, r7.xyzw, r2.xyzw
mad r3.xyzw, v6.zzzz, r8.xyzw, r3.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r4.wwww, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r6.zzzz, t0.xyzw
ld_indexable(buffer)(float,float,float,float) r6.xyzw, r6.wwww, t0.xyzw
mad r1.xyzw, v6.wwww, r4.xyzw, r1.xyzw
mad r2.xyzw, v6.wwww, r5.xyzw, r2.xyzw
mad r3.xyzw, v6.wwww, r6.xyzw, r3.xyzw
dp3 r4.x, r1.xyzx, v1.xyzx
dp3 r4.y, r2.xyzx, v1.xyzx
dp3 r4.z, r3.xyzx, v1.xyzx
dp3 r4.w, r1.xyzx, v2.xyzx
dp3 r5.x, r2.xyzx, v2.xyzx
dp3 r5.y, r3.xyzx, v2.xyzx
mov r6.xyz, v0.xyzx
mov r6.w, l(1.000000)
dp4 r1.x, r1.xyzw, r6.xyzw
dp4 r1.y, r2.xyzw, r6.xyzw
dp4 r1.z, r3.xyzw, r6.xyzw
mul r2.xyz, r1.yyyy, cb2[1].xyzx
mad r1.xyw, cb2[0].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb2[2].xyzx, r1.zzzz, r1.xywx
add r0.yzw, r0.yyzw, cb2[3].xxyz
add r0.yzw, r0.yyzw, r1.xxyz
mul r1.xyz, cb2[0].xyzx, cb2[4].xxxx
mul r2.xyz, cb2[1].xyzx, cb2[4].yyyy
mul r3.xyz, cb2[2].xyzx, cb2[4].zzzz
mul r6.xyz, r2.xyzx, r4.yyyy
mad r6.xyz, r4.xxxx, r1.xyzx, r6.xyzx
mad o0.xyz, r4.zzzz, r3.xyzx, r6.xyzx
mul r2.xyz, r2.xyzx, r5.xxxx
mad r1.xyz, r4.wwww, r1.xyzx, r2.xyzx
mad o1.xyz, r5.yyyy, r3.xyzx, r1.xyzx
mul o1.w, v2.w, cb2[4].w
movc r1.x, cb0[0].x, l(-0.000000), l(0)
or o3.x, r0.x, r1.x
mov o0.w, l(0)
mov o4.xyz, r0.yzwy
mov o4.w, l(1.000000)
mov o5.xyz, r0.yzwy
mov o2.xy, v7.xyxx
mov o6.x, l(0)
ret
// Approximately 0 instruction slots used
