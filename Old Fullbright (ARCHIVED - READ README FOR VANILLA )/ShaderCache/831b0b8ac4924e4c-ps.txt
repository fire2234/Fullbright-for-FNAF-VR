//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sun Sep 15 09:54:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_buffer (float,float,float,float) t9
dcl_resource_buffer (uint,uint,uint,uint) t10
dcl_resource_buffer (uint,uint,uint,uint) t11
dcl_resource_buffer (float,float,float,float) t12
dcl_resource_buffer (uint,uint,uint,uint) t13
dcl_resource_buffer (uint,uint,uint,uint) t14
dcl_resource_texturecubearray (float,float,float,float) t15
dcl_resource_texture3d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2d (float,float,float,float) t23
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v5.wwww
mov r13.z, v5.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r6.xy, v2.xyxx, t23.xyzw, s3, cb1[133].x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r6.z, r4.w
mad r6.xyz, r6.xyzx, r0.yyyy, r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, v1.xyzx, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r7.xyz, v2.xyxx, t24.xyzw, s4, cb1[133].x
mul_sat r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t25.yxzw, s5, cb1[133].x
mov_sat r0.y, r0.y
mad r9.z, r0.w, l(0.500000), r0.z
lt r0.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxxz
lt r4.w, l(0.000000), cb1[163].w
and r0.z, r0.z, r4.w
div r8.yz, r13.xxyx, r13.wwww
mad r10.xy, r8.yzyy, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t20.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t21.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t22.xyzw, s2, l(0.000000)
mad r8.yzw, r14.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.00392163, -1.00392163, -1.00392163)
mad r8.yzw, r6.xxyz, r14.wwww, r8.yyzw
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.500000), r15.y
mad r12.xyz, r7.xyzx, r12.wwww, r12.xyzx
movc r6.xyz, r0.zzzz, r8.yzwy, r6.xyzx
movc r7.xyz, r0.zzzz, r12.xyzx, r7.xyzx
mov r9.xy, l(0,0.500000,0,0)
movc r8.yzw, r0.zzzz, r15.xxyz, r9.xxyz
mad r9.xyz, r5.xyzx, cb1[178].xyzx, cb1[179].xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r9.xyz, r9.xyzx, l(0.990000, 0.990000, 0.990000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[180].xyzx
ftoi r12.xyz, r9.xyzx
mov r12.w, l(0)
ld_indexable(texture3d)(uint,uint,uint,uint) r12.xyzw, r12.xyzw, t0.xyzw
utof r12.xyzw, r12.xyzw
add r0.z, cb1[180].w, l(1.000000)
div r9.xyz, r9.xyzx, r12.wwww
frc r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb1[180].wwww
mad r9.xyz, r12.xyzx, r0.zzzz, r9.xyzx
add r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[181].xyzx
if_nz r0.w
  sample_l_indexable(texture3d)(float,float,float,float) r12.x, r9.xyzx, t8.xyzw, s0, l(0.000000)
else
  lt r0.z, l(0.000000), cb2[10].w
  movc r12.x, r0.z, cb5[5].x, l(1.000000)
endif
mul r0.z, r8.z, l(0.080000)
mad r14.xyz, -r8.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r7.xyzx
mad r14.xyz, r8.yyyy, r14.xyzx, r0.zzzz
mad r15.xyz, -r7.xyzx, r8.yyyy, r7.xyzx
mad r15.xyz, r15.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r14.xyz, r14.xyzx, cb1[127].wwww, cb1[127].xyzx
sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r9.xyzx, t1.zxyw, s0, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r17.xyzw, r9.xyzx, t2.xyzw, s0, l(0.000000)
mad r17.xyzw, r17.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r18.xyzw, r9.xyzx, t4.xyzw, s0, l(0.000000)
mad r18.xyzw, r18.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r19.xyzw, r9.xyzx, t6.xyzw, s0, l(0.000000)
mad r19.xyzw, r19.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r17.xyzw, r16.yyyy, r17.xyzw
mul r17.xyzw, r17.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r18.xyzw, r16.zzzz, r18.xyzw
mul r18.xyzw, r18.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
mul r19.xyzw, r16.xxxx, r19.xyzw
mul r19.xyzw, r19.wxyz, l(3.872979, 1.73205125, 1.73205125, 1.73205125)
sample_l_indexable(texture3d)(float,float,float,float) r20.xyzw, r9.xyzx, t3.xyzw, s0, l(0.000000)
mad r20.xyzw, r20.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r21.xyzw, r9.xyzx, t5.xyzw, s0, l(0.000000)
mad r21.xyzw, r21.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r9.xyzx, t7.xyzw, s0, l(0.000000)
mad r9.xyzw, r9.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r20.xyzw, r16.yyyy, r20.xyzw
mul r20.xyzw, r20.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r21.xyzw, r16.zzzz, r21.xyzw
mul r21.xyzw, r21.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r9.xyzw, r16.xxxx, r9.xyzw
mul r9.xyzw, r9.xyzw, l(3.872979, 4.472139, 3.872979, 3.872979)
mul r22.xyz, r6.yzxy, r6.yzyy
mul r23.yw, r6.yyyx, r6.zzzz
mad r0.z, r6.x, r6.x, -r22.x
mul r24.yzw, r6.yyzx, l(0.000000, -1.02332771, 1.02332771, -1.02332771)
mad r23.xz, r22.zzyz, l(1.000000, 0.000000, 3.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
mul r22.xyzw, r23.xyzw, l(0.858085215, -0.858085215, 0.247708291, -0.858085215)
mul r0.z, r0.z, l(0.429042608)
mov r23.x, r16.y
mov r23.yzw, r17.yyzw
mov r24.x, l(0.886227548)
dp4 r0.w, r23.xyzw, r24.xyzw
mov r17.yzw, r20.xxyz
dp4 r4.w, r17.xyzw, r22.xyzw
add r0.w, r0.w, r4.w
mad r17.x, r20.w, r0.z, r0.w
mov r20.x, r16.z
mov r20.yzw, r18.yyzw
dp4 r0.w, r20.xyzw, r24.xyzw
mov r18.yzw, r21.xxyz
dp4 r4.w, r18.xyzw, r22.xyzw
add r0.w, r0.w, r4.w
mad r17.y, r21.w, r0.z, r0.w
mov r16.yzw, r19.yyzw
dp4 r0.w, r16.xyzw, r24.xyzw
mov r19.yzw, r9.xxyz
dp4 r4.w, r19.xyzw, r22.xyzw
add r0.w, r0.w, r4.w
mad r17.z, r9.w, r0.z, r0.w
max r9.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.xyzx, cb1[146].xyzx
mul r9.xyz, r9.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
dp3 r0.z, r9.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.w, l(1), cb1[125].x
if_nz r0.w
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r16.xy, r8.yzyy
  mov r16.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r16.xyzz, t19.yzwx
  mad r4.w, r0.w, cb1[57].x, cb1[57].y
  mad r0.w, r0.w, cb1[57].z, -cb1[57].w
  div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  add r0.w, r0.w, r4.w
  mad r0.w, -r13.z, l(1.000000), r0.w
  div r0.w, |r0.w|, r13.w
  lt r0.w, l(0.010000), r0.w
  if_nz r0.w
    mov r8.y, -cb1[123].z
    mov r8.z, l(0)
    add r17.yz, r8.yyzy, r10.xxyx
    iadd r18.xyzw, r16.xxyy, l(1, -1, 1, -1)
    mov r16.w, r18.y
    ld_indexable(texture2d)(float,float,float,float) r0.w, r16.wyzz, t19.yzwx
    mad r4.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r4.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r17.x, |r0.w|
    lt r0.w, r17.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r17.xyz, r0.wwww, r17.xyzx, r10.zxyz
    mov r8.y, l(0)
    mov r8.z, cb1[123].w
    add r19.yz, r8.yyzy, r10.xxyx
    mov r20.xz, r16.xxzx
    mov r20.yw, r18.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.w, r20.xyzz, t19.yzwx
    mad r4.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r4.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r19.x, |r0.w|
    lt r0.w, r19.x, r17.x
    movc r17.xyz, r0.wwww, r19.xyzx, r17.xyzx
    mov r8.y, cb1[123].z
    mov r8.z, l(0)
    add r19.yz, r8.yyzy, r10.xxyx
    mov r18.yzw, r16.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.w, r18.xyzw, t19.yzwx
    mad r4.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r4.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    mov r19.x, |r0.w|
    lt r0.w, r19.x, r17.x
    movc r16.xyz, r0.wwww, r19.xyzx, r17.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r8.yz, r10.xxyx, r13.xxyx
    ld_indexable(texture2d)(float,float,float,float) r0.w, r20.xwzz, t19.yzwx
    mad r4.w, r0.w, cb1[57].x, cb1[57].y
    mad r0.w, r0.w, cb1[57].z, -cb1[57].w
    div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
    add r0.w, r0.w, r4.w
    mad r0.w, -r13.z, l(1.000000), r0.w
    lt r0.w, |r0.w|, r16.x
    movc r10.xy, r0.wwww, r8.yzyy, r16.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r8.yz, l(0), t18.zxyw
utof r8.yz, r8.yyzy
mul r8.yz, r8.yyzy, r10.xxyx
round_z r8.yz, r8.yyzy
ftoi r16.xy, r8.yzyy
mov r16.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r16.xyzw, t18.yzwx
mul r4.w, cb2[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb1[164].y, l(1.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.w, r4.w, r0.w, l(1.000000)
mul r9.xyz, r0.wwww, r9.xyzx
mul r0.z, r0.w, r0.z
mul r9.xyz, r15.xyzx, r9.xyzx
mad r13.xyz, r7.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r16.xyz, r7.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r7.xyz, r7.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r13.xyz, r0.yyyy, r13.xyzx, r16.xyzx
mad r7.xyz, r13.xyzx, r0.yyyy, r7.xyzx
mul r7.xyz, r0.yyyy, r7.xyzx
max r7.xyz, r0.yyyy, r7.xyzx
ftou r8.yz, r11.xxyx
if_z r0.x
  mov r4.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.zw, cb4[1].xxxy
  mov r11.x, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.zw, cb4[41].xxxy
  mov r11.x, cb4[42].x
endif
mad r4.w, v5.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r9.w, l(-1)
umin r4.w, r4.w, r6.w
ushr r8.yz, r8.yyzy, r11.xxxx
imad r4.w, r4.w, r10.w, r8.z
imad r4.w, r4.w, r10.z, r8.y
if_nz cb4[95].x
  mul r8.yz, r10.xxyx, cb1[123].xxyx
  round_z r8.yz, r8.yyzy
  ftoi r10.xy, r8.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t17.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r6.w, cb4[0].z
  mov r7.w, cb4[6].x
  mov r8.yz, cb4[6].zzwz
  mov r11.xyz, cb4[5].xyzx
  mov r13.xyz, cb4[4].xyzx
else
  mov r6.w, cb4[40].z
  mov r7.w, cb4[46].x
  mov r8.yz, cb4[46].zzwz
  mov r11.xyz, cb4[45].xyzx
  mov r13.xyz, cb4[44].xyzx
endif
if_nz r6.w
  and r16.xyzw, r7.wwww, l(255, 1, 2, 4)
  movc r16.xyzw, r16.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r6.w, r7.w, l(8)
  movc r17.w, r6.w, l(1.000000), l(0)
  ushr r18.xy, r7.wwww, l(4, 8, 0, 0)
  ubfe r6.w, l(1), l(4), r7.w
  movc r19.x, r6.w, l(1.000000), l(0)
  and r18.xzw, r18.xxxx, l(2, 0, 4, 8)
  movc r19.yzw, r18.xxzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r6.w, r19.xyzw, r10.xyzw
  lt r7.w, r8.z, l(0.000000)
  swapc r18.x, r19.x, r7.w, l(1.000000), r6.w
  if_nz r16.x
    mov r17.xyz, r16.yzwy
    dp4 r6.w, r17.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r12.y, l(1.000000)
    dp4 r7.w, r12.xyyy, r17.xyzw
    add r7.w, r7.w, l(-1.000000)
    mad r6.w, r6.w, r7.w, l(1.000000)
    mad_sat r7.w, r13.w, r8.y, r8.z
    mul r7.w, r7.w, r7.w
    add r6.w, -r18.x, r6.w
    mad r6.w, r7.w, r6.w, r18.x
    min r7.w, r19.x, r6.w
    mul r16.x, r19.x, r6.w
    mul r16.y, r19.x, r7.w
  else
    mov r16.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r16.y, r16.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    dp3 r6.w, r13.xyzx, r13.xyzx
    rsq r6.w, r6.w
    mul r13.xyz, r6.wwww, r13.xyzx
    dp3 r6.w, r6.xyzx, r13.xyzx
    mov_sat r7.w, r6.w
    max r8.y, r8.w, l(0.020000)
    dp3 r8.z, r6.xyzx, r4.xyzx
    dp3 r9.w, r4.xyzx, r13.xyzx
    mad r11.w, r9.w, l(2.000000), l(2.000000)
    rsq r11.w, r11.w
    add r6.w, r6.w, r8.z
    mul_sat r6.w, r11.w, r6.w
    mad_sat r9.w, r11.w, r9.w, r11.w
    add r8.z, |r8.z|, l(0.000010)
    min r8.z, r8.z, l(1.000000)
    mul r13.xyz, r7.wwww, r15.xyzx
    mul r11.w, r8.y, r8.y
    mul r12.y, r11.w, r11.w
    mad r12.w, r6.w, r12.y, -r6.w
    mad r6.w, r12.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(3.14159274)
    div r6.w, r12.y, r6.w
    mad r8.y, -r8.y, r8.y, l(1.000000)
    mad r12.y, r8.z, r8.y, r11.w
    mad r8.y, r7.w, r8.y, r11.w
    mul r8.y, r8.y, r8.z
    mad r8.y, r7.w, r12.y, r8.y
    rcp r8.y, r8.y
    mul r6.w, r6.w, r8.y
    add r8.y, -r9.w, l(1.000000)
    mul r8.z, r8.y, r8.y
    mul r8.z, r8.z, r8.z
    mul r9.w, r8.y, r8.z
    mul_sat r11.w, r14.y, l(50.000000)
    mad r8.y, -r8.z, r8.y, l(1.000000)
    mul r16.yzw, r14.xxyz, r8.yyyy
    mad r16.yzw, r11.wwww, r9.wwww, r16.yyzw
    mul r6.w, r6.w, l(0.500000)
    mul r16.yzw, r16.yyzw, r6.wwww
    mul r16.yzw, r7.wwww, r16.yyzw
    mad r13.xyz, r13.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r16.yzwy
    mul r11.xyz, r11.xyzx, r16.xxxx
    mul r11.xyz, r11.xyzx, r13.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r6.w, r18.y, cb2[16].w
  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t10.yzwx
  umin r6.w, r6.w, cb4[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t10.yzwx
else
  ishl r8.y, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.y, r8.yyyy, t13.yxzw
  umin r6.w, r8.y, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r4.wwww, t13.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r6.w
dp3 r6.w, -r4.xyzx, r6.xyzx
add r6.w, r6.w, r6.w
mad r13.xyz, r6.xyzx, -r6.wwww, -r4.xyzx
max r6.w, r8.w, l(0.020000)
mul r8.y, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
dp3 r8.z, r6.xyzx, r4.xyzx
add r9.w, r8.z, r8.z
mad r11.w, r9.w, r8.z, l(-1.000000)
add r12.y, |r8.z|, l(0.000010)
min r12.y, r12.y, l(1.000000)
mul r16.xyz, r15.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r12.w, r8.y, r8.y
mul r17.xyzw, r14.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r12.z, l(1.000000)
mov r18.y, l(1.000000)
mov r19.xyz, r11.xyzx
mov r13.w, l(0)
loop
  uge r14.w, r13.w, r4.w
  breakc_nz r14.w
  iadd r14.w, r7.w, r13.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r14.wwww, t11.yzwx
    imul null, r16.w, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r16.wwww, t9.xyzw
    imad r21.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t9.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t9.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t9.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t9.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r14.w, r14.wwww, t14.yzwx
    imul null, r15.w, r14.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r15.wwww, t12.xyzw
    imad r25.xyzw, r14.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t12.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t12.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t12.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t12.wxyz
  endif
  eq r14.w, r22.w, l(0.000000)
  lt r15.w, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r16.w, r20.xyzx, r20.xyzx
  rsq r18.z, r16.w
  mul r25.xyz, r18.zzzz, r20.xyzx
  mul r18.z, r20.w, r20.w
  mul r16.w, r16.w, r18.z
  mad r16.w, -r16.w, r16.w, l(1.000000)
  max r16.w, r16.w, l(0.000000)
  mul r16.w, r16.w, r16.w
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r18.z, r26.xyzx, r26.xyzx
  min r18.z, r18.z, l(1.000000)
  add r18.z, -r18.z, l(1.000000)
  log r18.z, r18.z
  mul r18.z, r18.z, r22.w
  exp r18.z, r18.z
  movc r16.w, r14.w, r16.w, r18.z
  dp3 r18.z, r25.xyzx, r23.yzwy
  add r18.z, -r24.x, r18.z
  mul_sat r18.z, r24.y, r18.z
  mul r18.z, r18.z, r18.z
  mul r18.z, r16.w, r18.z
  movc r15.w, r15.w, r18.z, r16.w
  lt r16.w, l(0.000000), r15.w
  if_nz r16.w
    and r16.w, r23.x, l(255)
    movc r16.w, r16.w, l(1), l(0)
    if_nz r16.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r16.w, r23.x, l(4)
      ubfe r18.z, l(1), l(4), r23.x
      movc r26.x, r18.z, l(1.000000), l(0)
      and r23.yzw, r16.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r16.w, r26.xyzw, r10.xyzw
      dp4 r18.z, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r18.w, r12.xzzz, r25.xyzw
      add r18.w, r18.w, l(-1.000000)
      mad r18.z, r18.z, r18.w, l(1.000000)
      mul r18.zw, r16.wwww, r18.zzzz
    else
      mov r18.zw, l(0,0,1.000000,1.000000)
    endif
    add r16.w, r18.w, r18.z
    lt r16.w, l(0.000000), r16.w
    if_nz r16.w
      f16tof32 r16.w, r24.w
      mul r18.w, r16.w, l(0.500000)
      mad r23.yzw, -r18.wwww, r21.yyzw, r20.xxyz
      mad r20.xyz, r18.wwww, r21.yzwy, r20.xyzx
      lt r18.w, l(0.000000), r16.w
      if_nz r18.w
        dp3 r19.w, r23.yzwy, r23.yzwy
        dp3 r20.w, r20.xyzx, r20.xyzx
        rsq r19.w, r19.w
        rsq r20.w, r20.w
        mul r21.y, r19.w, r20.w
        dp3 r21.z, r23.yzwy, r20.xyzx
        mul r21.z, r21.y, r21.z
        mad r21.w, r21.z, l(0.500000), r21.y
        add r21.w, r21.w, l(0.500000)
        div r24.y, r21.y, r21.w
        dp3 r21.y, r6.xyzx, r23.yzwy
        dp3 r21.w, r6.xyzx, r20.xyzx
        mul r20.w, r20.w, r21.w
        mad r19.w, r21.y, r19.w, r20.w
        mul r24.x, r19.w, l(0.500000)
      else
        dp3 r19.w, r23.yzwy, r23.yzwy
        add r20.w, r19.w, l(1.000000)
        rcp r24.y, r20.w
        rsq r19.w, r19.w
        mul r25.xyz, r19.wwww, r23.yzwy
        dp3 r24.x, r6.xyzx, r25.xyzx
        mov r21.z, l(1.000000)
      endif
      lt r19.w, l(0.000000), r24.z
      mul r20.w, r24.z, r24.z
      mul_sat r20.w, r24.y, r20.w
      sqrt r20.w, r20.w
      lt r21.y, r24.x, r20.w
      max r21.w, -r20.w, r24.x
      add r21.w, r20.w, r21.w
      mul r21.w, r21.w, r21.w
      mul r20.w, r20.w, l(4.000000)
      div r20.w, r21.w, r20.w
      movc r20.w, r21.y, r20.w, r24.x
      movc_sat r19.w, r19.w, r20.w, r24.x
      movc r14.w, r14.w, r24.y, l(1.000000)
      add r20.xyz, -r23.yzwy, r20.xyzx
      dp3 r20.w, r13.xyzx, r20.xyzx
      mad r24.xyw, r20.wwww, r13.xyxz, -r20.xyxz
      dp3 r21.y, r23.yzwy, r24.xywx
      mul r20.w, r20.w, r20.w
      mad r16.w, r16.w, r16.w, -r20.w
      div_sat r16.w, r21.y, r16.w
      mad r20.xyz, r16.wwww, r20.xyzx, r23.yzwy
      movc r20.xyz, r18.wwww, r20.xyzx, r23.yzwy
      dp3 r16.w, r20.xyzx, r20.xyzx
      rsq r16.w, r16.w
      mul r20.xyz, r16.wwww, r20.xyzx
      mul r18.w, r16.w, r24.z
      mul_sat r18.w, r6.w, r18.w
      mul_sat r16.w, r16.w, r21.x
      dp3 r20.w, r6.xyzx, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r8.z, r20.w
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.x, l(0.000000), r18.w
      if_nz r21.x
        mad r21.y, -r18.w, r18.w, l(1.000000)
        sqrt r21.y, r21.y
        dp2 r21.w, r8.zzzz, r20.wwww
        add r22.w, -r20.x, r21.w
        ge r23.y, r22.w, r21.y
        if_nz r23.y
          mov r20.z, l(1.000000)
          mov r20.y, |r8.z|
        else
          mad r23.y, -r22.w, r22.w, l(1.000000)
          rsq r23.y, r23.y
          mul r23.y, r18.w, r23.y
          mad r23.z, -r22.w, r20.w, r8.z
          mul r23.w, r23.z, r23.y
          mad r22.w, -r22.w, r20.x, r11.w
          mul r22.w, r22.w, r23.y
          mul r24.x, r20.w, r20.w
          mad r24.x, -r8.z, r8.z, -r24.x
          add r24.x, r24.x, l(1.000000)
          mad r24.x, -r20.x, r20.x, r24.x
          mad_sat r21.w, r21.w, r20.x, r24.x
          sqrt r21.w, r21.w
          mul r21.w, r21.w, r23.y
          mul r24.x, r8.z, r21.w
          add r24.y, r24.x, r24.x
          mad r24.z, r20.w, r21.y, r8.z
          mad r23.y, r23.y, r23.z, r24.z
          mad r23.z, r20.x, r21.y, r22.w
          add r23.z, r23.z, l(1.000000)
          mul r24.w, r21.w, r23.z
          mul r25.x, r23.z, r23.y
          mul r25.y, r23.y, r24.y
          mul r24.x, r24.x, r23.y
          mul r24.x, r24.x, l(0.500000)
          mad r24.x, r24.w, l(-0.500000), r24.x
          mul r24.x, r24.x, r25.x
          mad r25.z, -r24.w, l(2.000000), r25.y
          mul r25.y, r25.z, r25.y
          mad r24.w, r24.w, r24.w, r25.y
          mul r25.y, r23.z, r23.z
          mad r23.z, r20.x, r21.y, r23.z
          mad r23.z, r23.z, l(-0.500000), l(-0.500000)
          mul r23.z, r23.z, r25.x
          mad r23.z, r24.z, r25.y, r23.z
          mad r23.y, r23.y, r23.z, r24.w
          add r23.z, r24.x, r24.x
          mul r24.z, r24.x, r24.x
          mad r24.z, r23.y, r23.y, r24.z
          div r23.z, r23.z, r24.z
          mul r23.y, r23.y, r23.z
          mad r23.z, -r23.z, r24.x, l(1.000000)
          mul r21.w, r21.w, r23.y
          mad r21.w, r23.z, r23.w, r21.w
          mul r23.y, r24.y, r23.y
          mad r22.w, r23.z, r22.w, r23.y
          mad r20.w, r20.w, r21.y, r21.w
          mad r20.x, r20.x, r21.y, r22.w
          mad r21.y, r20.x, l(2.000000), l(2.000000)
          rsq r21.y, r21.y
          add r20.w, r8.z, r20.w
          mul_sat r20.z, r21.y, r20.w
          mad_sat r20.y, r21.y, r20.x, r21.y
        endif
      endif
      mul r14.w, r19.w, r14.w
      lt r20.x, l(0.000000), r16.w
      mul r16.w, r16.w, r16.w
      mad r20.w, r20.y, l(3.600000), l(0.400000)
      div r16.w, r16.w, r20.w
      mad r16.w, r8.y, r8.y, r16.w
      min r16.w, r16.w, l(1.000000)
      movc r18.x, r20.x, r16.w, r12.w
      mul r16.w, r18.w, l(0.250000)
      ishr r20.x, r18.x, l(1)
      iadd r20.x, r20.x, l(0x1fbd1df5)
      mad r18.w, r20.x, l(3.000000), r18.w
      mul r16.w, r16.w, r18.w
      add r18.w, r20.y, l(0.001000)
      div r16.w, r16.w, r18.w
      add r24.x, r16.w, r18.x
      div r24.y, r18.x, r24.x
      movc r20.xw, r21.xxxx, r24.xxxy, r18.xxxy
      lt r16.w, r21.z, l(1.000000)
      add r21.x, -r21.z, l(1.000100)
      add r21.y, r21.z, l(1.000000)
      div r21.x, r21.x, r21.y
      sqrt r21.x, r21.x
      mul r21.y, r21.x, l(0.250000)
      ishr r21.z, r20.x, l(1)
      iadd r21.z, r21.z, l(0x1fbd1df5)
      mad r21.x, r21.z, l(3.000000), r21.x
      mul r21.x, r21.x, r21.y
      div r18.w, r21.x, r18.w
      add r18.w, r18.w, r20.x
      div r18.w, r20.x, r18.w
      sqrt r18.w, r18.w
      mul r18.w, r18.w, r20.w
      movc r16.w, r16.w, r18.w, r20.w
      mad r18.w, r20.z, r18.x, -r20.z
      mad r18.w, r18.w, r20.z, l(1.000000)
      mul r18.w, r18.w, r18.w
      mul r18.w, r18.w, l(3.14159274)
      div r18.w, r18.x, r18.w
      mul r16.w, r16.w, r18.w
      sqrt r18.x, r18.x
      add r18.w, -r18.x, l(1.000000)
      mad r20.x, r12.y, r18.w, r18.x
      mad r18.x, r19.w, r18.w, r18.x
      mul r18.x, r12.y, r18.x
      mad r18.x, r19.w, r20.x, r18.x
      rcp r18.x, r18.x
      mul r16.w, r16.w, r18.x
      add r18.x, -r20.y, l(1.000000)
      mul r18.w, r18.x, r18.x
      mul r18.w, r18.w, r18.w
      mul r19.w, r18.x, r18.w
      mad r18.x, -r18.w, r18.x, l(1.000000)
      mul r20.xyz, r14.xyzx, r18.xxxx
      mad r20.xyz, r17.xxxx, r19.wwww, r20.xyzx
      mul r16.w, r16.w, l(0.500000)
      mul r20.xyz, r20.xyzx, r16.wwww
      mul r20.xyz, r14.wwww, r20.xyzx
      mad r20.xyz, r14.wwww, r16.xyzx, r20.xyzx
      mul r21.xyz, r15.wwww, r22.xyzx
      mul r18.xzw, r18.zzzz, r21.xxyz
      mul r18.xzw, r18.xxzw, r20.xxyz
    else
      mov r18.xzw, l(0,0,0,0)
    endif
  else
    mov r18.xzw, l(0,0,0,0)
  endif
  ushr r14.w, r23.x, l(8)
  and r14.w, r14.w, cb2[16].w
  add r18.xzw, r18.xxzw, r19.xxyz
  movc r19.xyz, r14.wwww, r18.xzwx, r19.xyzx
  iadd r13.w, r13.w, l(1)
endloop
mad r4.xyz, r9.wwww, r6.xyzx, -r4.xyzx
mov_sat r8.z, r8.z
log r0.x, r8.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r6.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r6.x
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t15.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r8.w, cb1[165].x, cb1[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.z, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r6.xyz, r17.yzwy, r0.zzzz, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r8.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r6.x, r6.x
mul r0.z, r8.z, l(-9.280000)
exp r0.z, r0.z
min r0.x, r0.z, r0.x
mad r0.x, r0.x, r6.x, r6.y
mad r0.xz, r0.xxxx, l(-1.040000, 0.000000, 1.040000, 0.000000), r6.zzwz
mul r0.z, r17.x, r0.z
mad r6.xyz, r14.xyzx, r0.xxxx, r0.zzzz
mul r4.xyz, r4.xyzx, r6.xyzx
mul r0.xzw, r0.wwww, r4.xxyz
mad r4.xyz, r14.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r6.xyz, r14.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), l(0.641700, 0.641700, 0.641700, 0.000000)
mad r8.xyz, r14.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), l(0.690300, 0.690300, 0.690300, 0.000000)
mad r4.xyz, r0.yyyy, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r0.yyyy, r8.xyzx
mul r4.xyz, r0.yyyy, r4.xyzx
max r4.xyz, r0.yyyy, r4.xyzx
mad r0.xyz, r0.xzwx, r4.xyzx, r19.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t16.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r14.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r15.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r9.xyzx, r7.xyzx, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
