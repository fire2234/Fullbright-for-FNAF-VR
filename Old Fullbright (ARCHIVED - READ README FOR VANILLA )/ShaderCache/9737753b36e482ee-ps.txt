//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 01:31:58 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[124], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 4
mul r0.xyzw, v0.yyyy, cb0[9].xyzw
mad r0.xyzw, v0.xxxx, cb0[8].xyzw, r0.xyzw
mul r1.xy, v0.xyxx, cb1[123].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.xyzw, r1.xxxx, cb0[10].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[11].xyzw
div r0.xyz, r0.yzxy, r0.wwww
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r0.xxyz
max r0.w, |r1.z|, |r1.y|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r2.x, |r1.z|, |r1.y|
mul r0.w, r0.w, r2.x
mul r2.x, r0.w, r0.w
mad r2.y, r2.x, l(0.0208350997), l(-0.085133)
mad r2.y, r2.x, r2.y, l(0.180141)
mad r2.y, r2.x, r2.y, l(-0.330299497)
mad r2.x, r2.x, r2.y, l(0.999866)
mul r2.y, r0.w, r2.x
mad r2.y, r2.y, l(-2.000000), l(1.57079637)
lt r2.z, |r1.z|, |r1.y|
and r2.y, r2.z, r2.y
mad r0.w, r0.w, r2.x, r2.y
lt r2.xy, r1.zwzz, -r1.zwzz
and r2.x, r2.x, l(0xc0490fdb)
add r0.w, r0.w, r2.x
min r2.x, r1.z, r1.y
lt r2.x, r2.x, -r2.x
max r1.y, r1.z, r1.y
ge r1.y, r1.y, -r1.y
and r1.y, r1.y, r2.x
movc r0.w, r1.y, -r0.w, r0.w
add r0.w, r0.w, l(3.14159274)
mul r3.x, r0.w, l(0.159154937)
mad r0.w, |r1.w|, l(-0.0187292993), l(0.074261)
mad r0.w, r0.w, |r1.w|, l(-0.212114394)
mad r0.w, r0.w, |r1.w|, l(1.57072878)
add r1.y, -|r1.w|, l(1.000000)
sqrt r1.y, r1.y
mul r1.z, r0.w, r1.y
mad r1.z, r1.z, l(-2.000000), l(3.14159274)
and r1.z, r2.y, r1.z
mad r0.w, r0.w, r1.y, r1.z
mul r3.y, r0.w, l(0.318309873)
lt r1.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[3].zzwz
movc r1.zw, r1.zzzz, r3.xxxy, r0.yyyx
mul r0.z, r0.z, cb0[3].x
div r0.xy, r0.yxyy, r0.zzzz
mad r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
movc r0.xy, r1.yyyy, r0.xyxx, r1.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t1.xyzw, s1
add r0.xyz, r0.xyzx, cb3[1].xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.x, r0.xyzx, l(0.333300, 0.333300, 0.333300, 0.000000)
add r0.x, r0.x, -cb0[12].y
mul r2.xyzw, v0.yyyy, cb1[41].xyzw
mad r2.xyzw, v0.xxxx, cb1[40].xyzw, r2.xyzw
mad r1.xyzw, r1.xxxx, cb1[42].xyzw, r2.xyzw
add r1.xyzw, r1.xyzw, cb1[43].xyzw
div r0.yzw, r1.xxyz, r1.wwww
add r0.yzw, r0.yyzw, -cb1[62].xxyz
add r1.xyz, -r0.yzwy, cb1[59].xyzx
add r0.yzw, -r0.yyzw, cb2[0].xxyz
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r1.x, cb0[12].x
mul r1.y, cb0[12].x, l(0.200000)
div_sat r1.x, r1.x, r1.y
mul r0.x, r0.x, r1.x
mad r0.x, cb0[3].y, r0.x, cb0[12].y
add r0.x, r0.x, l(-1.000000)
mul r1.xyz, r0.yzwy, cb2[0].wwww
dp3 r1.x, r1.xyzx, r1.xyzx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb2[1].w
exp r1.x, r1.x
dp3 r1.y, r0.yzwy, r0.yzwy
mul r1.z, cb2[0].w, cb2[0].w
mul r1.z, r1.z, r1.y
rsq r1.y, r1.y
mul r0.yzw, r0.yyzw, r1.yyyy
dp3 r0.y, r0.yzwy, cb2[2].xyzx
add r0.y, r0.y, -cb2[4].x
mul_sat r0.y, r0.y, cb2[4].y
mul r0.y, r0.y, r0.y
mad r0.z, -r1.z, r1.z, l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, r0.z
eq r0.w, cb2[1].w, l(0.000000)
movc r1.x, r0.w, r0.z, r1.x
lt r0.z, l(-2.000000), cb2[4].x
movc r1.y, r0.z, r0.y, l(1.000000)
lt r0.y, l(0.000000), cb2[0].w
movc r0.yz, r0.yyyy, r1.xxyx, l(0,1.000000,1.000000,0)
mul r0.y, r0.z, r0.y
lt r0.y, l(0.000000), r0.y
and r0.y, r0.y, l(0x3f800000)
mad r0.x, r0.y, r0.x, l(1.000000)
sqrt o0.xyzw, r0.xxxx
ret
// Approximately 0 instruction slots used
