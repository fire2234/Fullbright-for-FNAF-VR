// ---- Created with 3Dmigoto v1.3.16 on Sat Oct 26 15:59:15 2019
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[19];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[134];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  uint v3 : PACKED_EYE_INDEX0,
  float3 v4 : TEXCOORD7,
  float4 v5 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = 2.09439516 * cb0[132].z;
  r0.x = sin(r0.x);
  r0.xy = cb0[132].zz * r0.xx + v2.xy;
  r0.x = t2.SampleBias(s2_s, r0.xy, cb0[133].x).x;
  r0.yz = float2(2,1) * v2.xy;
  r0.yz = cb0[132].zz * cb1[16].yy + r0.yz;
  r0.yz = t1.SampleBias(s1_s, r0.yz, cb0[133].x).xy;
  r0.x = r0.y + -r0.x;
  r0.x = r0.x + r0.z;
  r0.x = saturate(r0.x * 3 + -1);
  r0.x = 1 + -r0.x;
  r0.y = t0.SampleBias(s0_s, v2.xy, cb0[133].x).x;
  r0.yz = r0.yy * cb1[14].zz + -cb1[15].xy;
  r0.z = max(0, r0.z);
  r0.y = saturate(r0.y);
  r0.z = log2(r0.z);
  r0.z = cb1[15].z * r0.z;
  r0.z = exp2(r0.z);
  r0.z = min(1, r0.z);
  r0.y = max(r0.y, r0.z);
  r0.x = r0.x * cb1[17].w + -r0.y;
  r0.x = cb1[17].y * r0.x + r0.y;
  r0.y = 1 + -r0.x;
  r0.x = cb1[18].x * r0.y + r0.x;
  r0.x = -0.333299994 + r0.x;
  r0.x = cmp(r0.x < 0);
  if (r0.x != 0) discard;
  o0.xyzw = float4(0,0,0,0);
  return;
}