// ---- Created with 3Dmigoto v1.3.16 on Thu Jul 18 19:02:06 2019
Texture2D<float4> t1 : register(t1);

Texture3D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[3];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[92];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[63];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[177];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : TEXCOORD10,
  float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  nointerpolation uint v3 : PACKED_EYE_INDEX0,
  float4 v4 : TEXCOORD7,
  float4 v5 : SV_Position0,
  uint v6 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = (int)v3.x & 1;
  if (r0.x == 0) {
    r0.x = cb0[4].x;
    r0.y = cb0[5].x;
    r0.z = cb0[6].x;
    r0.w = cb0[7].x;
    r1.x = cb0[4].y;
    r1.y = cb0[5].y;
    r1.z = cb0[6].y;
    r1.w = cb0[7].y;
    r2.x = cb0[4].w;
    r2.y = cb0[5].w;
    r2.z = cb0[6].w;
    r2.w = cb0[7].w;
    r3.x = cb0[40].x;
    r3.y = cb0[41].x;
    r3.z = cb0[42].x;
    r3.w = cb0[43].x;
    r4.x = cb0[40].y;
    r4.y = cb0[41].y;
    r4.z = cb0[42].y;
    r4.w = cb0[43].y;
    r5.x = cb0[40].z;
    r5.y = cb0[41].z;
    r5.z = cb0[42].z;
    r5.w = cb0[43].z;
    r6.x = cb0[40].w;
    r6.y = cb0[41].w;
    r6.z = cb0[42].w;
    r6.w = cb0[43].w;
    r7.xyz = cb0[62].xyz;
  } else {
    r0.x = cb2[4].x;
    r0.y = cb2[5].x;
    r0.z = cb2[6].x;
    r0.w = cb2[7].x;
    r1.x = cb2[4].y;
    r1.y = cb2[5].y;
    r1.z = cb2[6].y;
    r1.w = cb2[7].y;
    r2.x = cb2[4].w;
    r2.y = cb2[5].w;
    r2.z = cb2[6].w;
    r2.w = cb2[7].w;
    r3.x = cb2[40].x;
    r3.y = cb2[41].x;
    r3.z = cb2[42].x;
    r3.w = cb2[43].x;
    r4.x = cb2[40].y;
    r4.y = cb2[41].y;
    r4.z = cb2[42].y;
    r4.w = cb2[43].y;
    r5.x = cb2[40].z;
    r5.y = cb2[41].z;
    r5.z = cb2[42].z;
    r5.w = cb2[43].z;
    r6.x = cb2[40].w;
    r6.y = cb2[41].w;
    r6.z = cb2[42].w;
    r6.w = cb2[43].w;
    r7.xyz = cb2[62].xyz;
  }
  r8.xyz = v5.xyz;
  r8.w = 1;
  r3.x = dot(r8.xyzw, r3.xyzw);
  r3.y = dot(r8.xyzw, r4.xyzw);
  r3.z = dot(r8.xyzw, r5.xyzw);
  r3.w = dot(r8.xyzw, r6.xyzw);
  r3.xyz = r3.xyz / r3.www;
  r3.xyz = r3.xyz + -r7.xyz;
  r4.x = cb4[2].x * cb0[132].z;
  r4.x = frac(r4.x);
  r4.x = cb4[2].y + r4.x;
  r4.x = frac(r4.x);
  r4.xy = float2(36,6) * r4.xx;
  r4.xy = floor(r4.xy);
  r4.xy = float2(0.166666672,0.166666672) * r4.xy;
  r4.xy = v2.xy * float2(0.166666672,0.166666672) + r4.xy;
  r4.xyz = t1.Sample(s1_s, r4.xy).xyz;
  r4.xyz = r4.xyz * float3(7,7,7) + cb4[1].xyz;
  r4.w = cmp(0 < cb3[91].w);
  if (r4.w != 0) {
    r3.w = 1;
    r0.x = dot(r3.xyzw, r0.xyzw);
    r0.y = dot(r3.xyzw, r1.xyzw);
    r0.z = dot(r3.xyzw, r2.xyzw);
    r0.xy = r0.xy / r0.zz;
    r1.xy = r0.xy * float2(0.5,-0.5) + float2(0.5,0.5);
    r0.x = r0.z * cb0[176].x + cb0[176].y;
    r0.x = log2(r0.x);
    r0.x = cb0[176].z * r0.x;
    r1.z = cb0[175].z * r0.x;
    r0.xyzw = t0.SampleLevel(s0_s, r1.xyz, 0).xyzw;
    r1.x = v4.w * r0.w;
    r0.xyz = v4.xyz * r0.www + r0.xyz;
  } else {
    r0.xyz = v4.xyz;
    r1.x = v4.w;
  }
  r1.yzw = max(float3(0,0,0), r4.xyz);
  r0.w = cmp(0 < cb0[130].x);
  if (r0.w != 0) {
    r2.xyz = -cb1[5].xyz + r3.xyz;
    r4.xyz = float3(1,1,1) + cb1[11].xyz;
    r2.xyz = cmp(r4.xyz < abs(r2.xyz));
    r0.w = (int)r2.y | (int)r2.x;
    r0.w = (int)r2.z | (int)r0.w;
    r2.x = dot(r3.xyz, float3(0.577000022,0.577000022,0.577000022));
    r2.x = 0.00200000009 * r2.x;
    r2.x = frac(r2.x);
    r2.x = cmp(0.5 < r2.x);
    r2.xyz = r2.xxx ? float3(0,1,1) : float3(1,1,0);
    r1.yzw = r0.www ? r2.xyz : r1.yzw;
  }
  o0.xyz = r1.yzw * r1.xxx + r0.xyz;
  o0.w = 0;
  return;
}