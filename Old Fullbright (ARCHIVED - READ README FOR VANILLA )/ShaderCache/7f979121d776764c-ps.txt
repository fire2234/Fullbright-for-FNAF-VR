//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 24 00:27:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float
// PACKED_EYE_INDEX         0   x           3     NONE    uint
// TEXCOORD                 6   xyzw        4     NONE   float
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[129], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 5
mul r0.xyzw, v5.yyyy, cb1[41].xyzw
mad r0.xyzw, v5.xxxx, cb1[40].xyzw, r0.xyzw
mad r0.xyzw, v5.zzzz, cb1[42].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[43].xyzw
div r0.xyz, r0.xyzx, r0.wwww
dp3 r0.w, -r0.xyzx, -r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, -r0.xyzx
mul r1.xyz, v0.yzxy, v1.zxyz
mad r1.xyz, v1.yzxy, v0.zxyz, -r1.xyzx
mul r1.xyz, r1.xyzx, v1.wwww
mad r2.xyz, cb1[128].wwww, l(0.000000, 0.000000, 1.000000, 0.000000), cb1[128].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r2.xyzx
mul r4.xyz, r1.xyzx, r3.yyyy
mul r1.xyz, r1.xyzx, r2.yyyy
mad r1.xyz, r2.xxxx, v0.xyzx, r1.xyzx
mad r1.xyz, r2.zzzz, v1.xyzx, r1.xyzx
mad r2.xyz, r3.xxxx, v0.xyzx, r4.xyzx
mad r2.xyz, r3.zzzz, v1.xyzx, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
add r0.x, -r0.x, l(1.000000)
mul r0.y, |r0.x|, |r0.x|
mul r0.y, r0.y, r0.y
mul r0.x, r0.y, |r0.x|
mul r0.x, r0.x, l(0.0499999523)
mul r0.yzw, r1.yyyy, cb1[9].xxyz
mad r0.yzw, r1.xxxx, cb1[8].xxyz, r0.yyzw
mad r0.yzw, r1.zzzz, cb1[10].xxyz, r0.yyzw
dp3 r0.w, r0.yzwy, r0.yzwy
rsq r0.w, r0.w
mul r0.yz, r0.wwww, r0.yyzy
mul r0.xy, r0.xxxx, r0.yzyy
mul r0.xy, r0.xyxx, cb1[122].xyxx
mul r0.xy, r0.xyxx, cb1[123].zwzz
dp2 r0.z, r0.xyxx, r0.xyxx
add r0.z, r0.z, l(-0.000010)
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
mul r0.w, cb0[8].x, cb0[8].y
mov r0.z, cb0[8].x
mul r0.zw, r0.zzzw, cb0[8].zzzw
mul r0.xy, r0.xyxx, r0.zwzz
add r0.zw, v5.xxxy, -cb1[121].xxxy
mad r0.zw, r0.zzzw, cb1[122].zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r1.xy, r0.zwzz, v5.wwww
mov r1.z, v5.w
mul r1.xyw, r1.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
div r0.zw, r1.xxxy, r1.wwww
mad r0.zw, r0.zzzw, cb1[58].xxxy, cb1[58].wwwz
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.000230, -0.000230), r0.zzzw
mul r0.xy, r0.xyxx, l(0.000230, -0.000230, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0, l(0.000000)
mad r0.w, r0.z, cb1[57].z, -cb1[57].w
mad r0.z, r0.z, cb1[57].x, cb1[57].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.z, r0.w, r0.z
mad r0.z, -r1.z, l(1.000000), r0.z
mul r0.w, cb2[3].x, l(-0.500000)
min r0.w, |r0.w|, l(50.000000)
max r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mad_sat r0.z, r0.z, r0.w, -cb2[3].x
mul r0.xy, r0.zzzz, r0.xyxx
mul r0.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
min r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
max o0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.zw, -r0.zzzw
ret
// Approximately 0 instruction slots used
