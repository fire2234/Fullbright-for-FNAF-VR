//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 23 20:16:23 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 4   xyzw        2     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texturecubearray (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 27
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v5.wwww
mov r13.z, v5.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xyz, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.000000), r9.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
mul r7.xyz, r12.xyzx, r6.yyyy
mad r6.xyw, r6.xxxx, v0.yzyx, r7.xyxz
mad r6.xyz, r6.zzzz, v1.yzxy, r6.xywx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
add r7.xyz, cb6[3].xyzx, cb6[4].xyzx
mov_sat r8.yzw, cb6[2].xxyz
mad r9.z, r0.w, l(0.500000), r0.z
lt r0.y, l(0.000000), cb2[12].x
lt r0.z, l(0.000000), cb1[163].w
and r0.y, r0.z, r0.y
div r0.zw, r13.xxxy, r13.wwww
mad r10.xy, r0.zwzz, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t11.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r10.xyxx, t12.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xyzw, r10.xyxx, t13.xyzw, s2, l(0.000000)
mad r14.xyz, r14.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r14.xyz, r6.xyzx, r14.wwww, r14.xyzx
mad r15.z, r9.z, r15.w, r15.z
mad r15.y, r15.w, l(0.500000), r15.y
mad r12.xyz, r8.yzwy, r12.wwww, r12.xyzx
movc r6.xyz, r0.yyyy, r14.xyzx, r6.xyzx
movc r8.yzw, r0.yyyy, r12.xxyz, r8.yyzw
mov r9.xy, l(0,0.500000,0,0)
movc r0.yzw, r0.yyyy, r15.xxyz, r9.xxyz
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, v2.zwzz, t15.xyzw, s4
mad r12.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r9.xyzw, r9.xyzw, cb5[7].xyzw, r12.xyzw
mul r9.xyzw, r9.xyzw, r9.xyzw
mul r9.xyzw, r9.xyzw, cb5[6].xyzw
mul r4.w, r0.z, l(0.080000)
mad r12.xyz, -r0.zzzz, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r12.xyz, r0.yyyy, r12.xyzx, r4.wwww
mad r14.xyz, -r8.yzwy, r0.yyyy, r8.yzwy
mad r14.xyz, r14.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r12.xyz, r12.xyzx, cb1[127].wwww, cb1[127].xyzx
mul r0.yz, v2.xxyx, l(0.000000, 1.000000, 0.500000, 0.000000)
mad r11.zw, v2.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r0.yzyy, t14.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r11.zwzz, t14.xyzw, s3
mad r0.y, r16.w, l(0.00392156886), r15.w
add r0.y, r0.y, l(-0.00196078443)
mad r0.y, r0.y, cb5[18].w, cb5[20].w
mul r15.xyz, r15.xyzx, r15.xyzx
mad r15.xyz, r15.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.y, r0.y
add r0.y, r0.y, l(-0.0185813606)
mad r16.xyzw, r16.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r6.w, l(1.000000)
dp4 r0.z, r16.xyzw, r6.xyzw
max r0.z, r0.z, l(0.000000)
mul r0.y, r0.z, r0.y
mul r15.xyz, r15.xyzx, r0.yyyy
mul r15.xyz, r15.xyzx, cb1[146].xyzx
dp3 r0.y, r15.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ilt r0.z, l(1), cb1[125].x
if_nz r0.z
  mul r11.zw, r10.xxxy, cb1[123].xxxy
  round_z r11.zw, r11.zzzw
  ftoi r16.xy, r11.zwzz
  mov r16.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r16.xyzz, t10.yzxw
  mad r4.w, r0.z, cb1[57].x, cb1[57].y
  mad r0.z, r0.z, cb1[57].z, -cb1[57].w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, r0.z, r4.w
  mad r0.z, -r13.z, l(1.000000), r0.z
  div r0.z, |r0.z|, r13.w
  lt r0.z, l(0.010000), r0.z
  if_nz r0.z
    mov r17.y, -cb1[123].z
    mov r17.z, l(0)
    add r17.yz, r10.xxyx, r17.yyzy
    iadd r18.xyzw, r16.xxyy, l(1, -1, 1, -1)
    mov r16.w, r18.y
    ld_indexable(texture2d)(float,float,float,float) r0.z, r16.wyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r17.x, |r0.z|
    lt r0.z, r17.x, l(100000000.000000)
    mov r10.z, l(100000000.000000)
    movc r17.xyz, r0.zzzz, r17.xyzx, r10.zxyz
    mov r19.y, l(0)
    mov r19.z, cb1[123].w
    add r19.yz, r10.xxyx, r19.yyzy
    mov r20.xz, r16.xxzx
    mov r20.yw, r18.zzzw
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xyzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r17.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r19.y, cb1[123].z
    mov r19.z, l(0)
    add r19.yz, r10.xxyx, r19.yyzy
    mov r18.yzw, r16.yyzz
    ld_indexable(texture2d)(float,float,float,float) r0.z, r18.xyzw, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    mov r19.x, |r0.z|
    lt r0.z, r19.x, r17.x
    movc r16.xyz, r0.zzzz, r19.xyzx, r17.xyzx
    mov r13.x, l(0)
    mov r13.y, -cb1[123].w
    add r10.zw, r10.xxxy, r13.xxxy
    ld_indexable(texture2d)(float,float,float,float) r0.z, r20.xwzz, t10.yzxw
    mad r4.w, r0.z, cb1[57].x, cb1[57].y
    mad r0.z, r0.z, cb1[57].z, -cb1[57].w
    div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
    add r0.z, r0.z, r4.w
    mad r0.z, -r13.z, l(1.000000), r0.z
    lt r0.z, |r0.z|, r16.x
    movc r10.xy, r0.zzzz, r10.zwzz, r16.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r10.zw, l(0), t9.zwxy
utof r10.zw, r10.zzzw
mul r10.zw, r10.zzzw, r10.xxxy
round_z r10.zw, r10.zzzw
ftoi r16.xy, r10.zwzz
mov r16.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r16.xyzw, t9.yzxw
mul r4.w, cb2[12].y, l(3.999000)
ftou r4.w, r4.w
and r4.w, r4.w, l(2)
movc r4.w, r4.w, cb1[164].y, l(1.000000)
add r0.z, r0.z, l(-1.000000)
mad r0.z, r4.w, r0.z, l(1.000000)
mul r13.xyz, r0.zzzz, r15.xyzx
mul r0.y, r0.z, r0.y
mul r13.xyz, r14.xyzx, r13.xyzx
mad r15.xyz, r8.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r15.xyz, r8.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r15.xyzx
mad r8.yzw, r8.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r15.xxyz
add r8.yzw, r8.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r8.yzw, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
ftou r10.zw, r11.xxxy
if_z r0.x
  mov r4.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r11.xyz, cb4[1].zxyz
  mov r11.w, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r11.xyz, cb4[41].zxyz
  mov r11.w, cb4[42].x
endif
mad r4.w, v5.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r11.x, l(-1)
umin r4.w, r4.w, r6.w
ushr r10.zw, r10.zzzw, r11.wwww
imad r4.w, r4.w, r11.z, r10.w
imad r4.w, r4.w, r11.y, r10.z
if_nz cb4[95].x
  mul r10.xy, r10.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t8.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r6.w, cb4[0].z
  mov r7.w, cb4[6].x
  mov r11.xy, cb4[6].zwzz
  mov r15.xyz, cb4[5].xyzx
  mov r16.xyz, cb4[4].xyzx
else
  mov r6.w, cb4[40].z
  mov r7.w, cb4[46].x
  mov r11.xy, cb4[46].zwzz
  mov r15.xyz, cb4[45].xyzx
  mov r16.xyz, cb4[44].xyzx
endif
if_nz r6.w
  and r17.xyzw, r7.wwww, l(255, 1, 2, 4)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r6.w, r7.w, l(8)
  movc r18.w, r6.w, l(1.000000), l(0)
  ushr r11.zw, r7.wwww, l(0, 0, 4, 8)
  ubfe r6.w, l(1), l(4), r7.w
  movc r19.x, r6.w, l(1.000000), l(0)
  and r20.xyz, r11.zzzz, l(2, 4, 8, 0)
  movc r19.yzw, r20.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r6.w, r19.xyzw, r10.xyzw
  lt r7.w, r11.y, l(0.000000)
  swapc r19.x, r20.x, r7.w, l(1.000000), r6.w
  if_nz r17.x
    mov r18.xyz, r17.yzwy
    dp4 r6.w, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r7.w, r9.xyzw, r18.xyzw
    add r7.w, r7.w, l(-1.000000)
    mad r6.w, r6.w, r7.w, l(1.000000)
    mad_sat r7.w, r13.w, r11.x, r11.y
    mul r7.w, r7.w, r7.w
    add r6.w, -r19.x, r6.w
    mad r6.w, r7.w, r6.w, r19.x
    min r7.w, r20.x, r6.w
    mul r11.x, r20.x, r6.w
    mul r11.y, r20.x, r7.w
  else
    mov r11.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r11.y, r11.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    dp3 r6.w, r16.xyzx, r16.xyzx
    rsq r6.w, r6.w
    mul r16.xyz, r6.wwww, r16.xyzx
    dp3 r6.w, r6.zxyz, r16.xyzx
    mov_sat r7.w, r6.w
    max r11.y, r0.w, l(0.020000)
    dp3 r11.z, r6.zxyz, r4.xyzx
    dp3 r12.w, r4.xyzx, r16.xyzx
    mad r13.w, r12.w, l(2.000000), l(2.000000)
    rsq r13.w, r13.w
    add r6.w, r6.w, r11.z
    mul_sat r6.w, r13.w, r6.w
    mad_sat r12.w, r13.w, r12.w, r13.w
    add r11.z, |r11.z|, l(0.000010)
    min r11.z, r11.z, l(1.000000)
    mul r16.xyz, r7.wwww, r14.xyzx
    mul r13.w, r11.y, r11.y
    mul r14.w, r13.w, r13.w
    mad r15.w, r6.w, r14.w, -r6.w
    mad r6.w, r15.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(3.14159274)
    div r6.w, r14.w, r6.w
    mad r11.y, -r11.y, r11.y, l(1.000000)
    mad r14.w, r11.z, r11.y, r13.w
    mad r11.y, r7.w, r11.y, r13.w
    mul r11.y, r11.y, r11.z
    mad r11.y, r7.w, r14.w, r11.y
    rcp r11.y, r11.y
    mul r6.w, r6.w, r11.y
    add r11.y, -r12.w, l(1.000000)
    mul r11.z, r11.y, r11.y
    mul r11.z, r11.z, r11.z
    mul r12.w, r11.y, r11.z
    mul_sat r13.w, r12.y, l(50.000000)
    mad r11.y, -r11.z, r11.y, l(1.000000)
    mul r17.xyz, r12.xyzx, r11.yyyy
    mad r17.xyz, r13.wwww, r12.wwww, r17.xyzx
    mul r6.w, r6.w, l(0.500000)
    mul r17.xyz, r17.xyzx, r6.wwww
    mul r17.xyz, r7.wwww, r17.xyzx
    mad r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r17.xyzx
    mul r11.xyz, r11.xxxx, r15.xyzx
    mul r11.xyz, r11.xyzx, r16.xyzx
  else
    mov r11.xyz, l(0,0,0,0)
  endif
  and r6.w, r11.w, cb2[16].w
  movc r11.xyz, r6.wwww, r11.xyzx, l(0,0,0,0)
else
  mov r11.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t1.yzwx
  umin r6.w, r6.w, cb4[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t1.yzwx
else
  ishl r11.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r11.wwww, t4.yzwx
  umin r6.w, r11.w, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r4.wwww, t4.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r6.w
dp3 r6.w, -r4.yzxy, r6.xyzx
add r6.w, r6.w, r6.w
mad r15.xyz, r6.zxyz, -r6.wwww, -r4.xyzx
max r6.w, r0.w, l(0.020000)
mul r11.w, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
dp3 r12.w, r6.zxyz, r4.xyzx
add r13.w, r12.w, r12.w
mad r14.w, r13.w, r12.w, l(-1.000000)
add r15.w, |r12.w|, l(0.000010)
min r15.w, r15.w, l(1.000000)
mul r16.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r16.w, r11.w, r11.w
mul r17.xyzw, r12.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r17.x, r17.x
mov r18.y, l(1.000000)
mov r19.xyz, r11.xyzx
mov r18.z, l(0)
loop
  uge r18.w, r18.z, r4.w
  breakc_nz r18.w
  iadd r18.w, r7.w, r18.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r19.w, r18.wwww, t2.yzwx
    imul null, r20.x, r19.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r20.xxxx, t0.xyzw
    imad r21.xyzw, r19.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r21.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r21.yyyy, t0.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r21.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r21.wwww, t0.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r18.w, r18.wwww, t5.yzwx
    imul null, r19.w, r18.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r19.wwww, t3.xyzw
    imad r25.xyzw, r18.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r25.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r25.yyyy, t3.wxyz
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r25.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r25.wwww, t3.wxyz
  endif
  eq r18.w, r22.w, l(0.000000)
  lt r19.w, l(-2.000000), r24.x
  add r20.xyz, -r5.xyzx, r20.xyzx
  dp3 r25.x, r20.xyzx, r20.xyzx
  rsq r25.y, r25.x
  mul r25.yzw, r20.xxyz, r25.yyyy
  mul r26.x, r20.w, r20.w
  mul r25.x, r25.x, r26.x
  mad r25.x, -r25.x, r25.x, l(1.000000)
  max r25.x, r25.x, l(0.000000)
  mul r25.x, r25.x, r25.x
  mul r26.xyz, r20.wwww, r20.xyzx
  dp3 r20.w, r26.xyzx, r26.xyzx
  min r20.w, r20.w, l(1.000000)
  add r20.w, -r20.w, l(1.000000)
  log r20.w, r20.w
  mul r20.w, r20.w, r22.w
  exp r20.w, r20.w
  movc r20.w, r18.w, r25.x, r20.w
  dp3 r22.w, r25.yzwy, r23.yzwy
  add r22.w, -r24.x, r22.w
  mul_sat r22.w, r24.y, r22.w
  mul r22.w, r22.w, r22.w
  mul r22.w, r20.w, r22.w
  movc r19.w, r19.w, r22.w, r20.w
  lt r20.w, l(0.000000), r19.w
  if_nz r20.w
    and r20.w, r23.x, l(255)
    movc r20.w, r20.w, l(1), l(0)
    if_nz r20.w
      and r25.xyzw, r23.xxxx, l(1, 2, 4, 8)
      movc r25.xyzw, r25.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r20.w, r23.x, l(4)
      ubfe r22.w, l(1), l(4), r23.x
      movc r26.x, r22.w, l(1.000000), l(0)
      and r23.yzw, r20.wwww, l(0, 2, 4, 8)
      movc r26.yzw, r23.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r20.w, r26.xyzw, r10.xyzw
      dp4 r22.w, r25.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r23.y, r9.xyzw, r25.xyzw
      add r23.y, r23.y, l(-1.000000)
      mad r22.w, r22.w, r23.y, l(1.000000)
      mul r23.yz, r20.wwww, r22.wwww
    else
      mov r23.yz, l(0,1.000000,1.000000,0)
    endif
    add r20.w, r23.z, r23.y
    lt r20.w, l(0.000000), r20.w
    if_nz r20.w
      f16tof32 r20.w, r24.w
      mul r22.w, r20.w, l(0.500000)
      mad r24.xyw, -r22.wwww, r21.yzyw, r20.xyxz
      mad r20.xyz, r22.wwww, r21.yzwy, r20.xyzx
      lt r21.y, l(0.000000), r20.w
      if_nz r21.y
        dp3 r21.z, r24.xywx, r24.xywx
        dp3 r21.w, r20.xyzx, r20.xyzx
        rsq r21.z, r21.z
        rsq r21.w, r21.w
        mul r22.w, r21.w, r21.z
        dp3 r23.z, r24.xywx, r20.xyzx
        mul r23.z, r22.w, r23.z
        mad r23.w, r23.z, l(0.500000), r22.w
        add r23.w, r23.w, l(0.500000)
        div r25.y, r22.w, r23.w
        dp3 r22.w, r6.zxyz, r24.xywx
        dp3 r23.w, r6.zxyz, r20.xyzx
        mul r21.w, r21.w, r23.w
        mad r21.z, r22.w, r21.z, r21.w
        mul r25.x, r21.z, l(0.500000)
      else
        dp3 r21.z, r24.xywx, r24.xywx
        add r21.w, r21.z, l(1.000000)
        rcp r25.y, r21.w
        rsq r21.z, r21.z
        mul r26.xyz, r21.zzzz, r24.xywx
        dp3 r25.x, r6.zxyz, r26.xyzx
        mov r23.z, l(1.000000)
      endif
      lt r21.z, l(0.000000), r24.z
      mul r21.w, r24.z, r24.z
      mul_sat r21.w, r25.y, r21.w
      sqrt r21.w, r21.w
      lt r22.w, r25.x, r21.w
      max r23.w, -r21.w, r25.x
      add r23.w, r21.w, r23.w
      mul r23.w, r23.w, r23.w
      mul r21.w, r21.w, l(4.000000)
      div r21.w, r23.w, r21.w
      movc r21.w, r22.w, r21.w, r25.x
      movc_sat r21.z, r21.z, r21.w, r25.x
      movc r18.w, r18.w, r25.y, l(1.000000)
      add r20.xyz, -r24.xywx, r20.xyzx
      dp3 r21.w, r15.xyzx, r20.xyzx
      mad r25.xyz, r21.wwww, r15.xyzx, -r20.xyzx
      dp3 r22.w, r24.xywx, r25.xyzx
      mul r21.w, r21.w, r21.w
      mad r20.w, r20.w, r20.w, -r21.w
      div_sat r20.w, r22.w, r20.w
      mad r20.xyz, r20.wwww, r20.xyzx, r24.xywx
      movc r20.xyz, r21.yyyy, r20.xyzx, r24.xywx
      dp3 r20.w, r20.xyzx, r20.xyzx
      rsq r20.w, r20.w
      mul r20.xyz, r20.wwww, r20.xyzx
      mul r21.y, r20.w, r24.z
      mul_sat r21.y, r6.w, r21.y
      mul_sat r20.w, r20.w, r21.x
      dp3 r21.x, r6.zxyz, r20.xyzx
      dp3 r20.x, r4.xyzx, r20.xyzx
      mad r20.y, r20.x, l(2.000000), l(2.000000)
      rsq r20.y, r20.y
      add r20.z, r12.w, r21.x
      mul_sat r20.z, r20.y, r20.z
      mad_sat r20.y, r20.y, r20.x, r20.y
      lt r21.w, l(0.000000), r21.y
      if_nz r21.w
        mad r22.w, -r21.y, r21.y, l(1.000000)
        sqrt r22.w, r22.w
        dp2 r23.w, r12.wwww, r21.xxxx
        add r24.x, -r20.x, r23.w
        ge r24.y, r24.x, r22.w
        if_nz r24.y
          mov r20.z, l(1.000000)
          mov r20.y, |r12.w|
        else
          mad r24.y, -r24.x, r24.x, l(1.000000)
          rsq r24.y, r24.y
          mul r24.y, r21.y, r24.y
          mad r24.z, -r24.x, r21.x, r12.w
          mad r24.x, -r24.x, r20.x, r14.w
          mul r24.xw, r24.xxxz, r24.yyyy
          mul r25.x, r21.x, r21.x
          mad r25.x, -r12.w, r12.w, -r25.x
          add r25.x, r25.x, l(1.000000)
          mad r25.x, -r20.x, r20.x, r25.x
          mad_sat r23.w, r23.w, r20.x, r25.x
          sqrt r23.w, r23.w
          mul r23.w, r23.w, r24.y
          mul r25.x, r12.w, r23.w
          add r25.y, r25.x, r25.x
          mad r25.z, r21.x, r22.w, r12.w
          mad r24.y, r24.y, r24.z, r25.z
          mad r24.z, r20.x, r22.w, r24.x
          add r24.z, r24.z, l(1.000000)
          mul r25.w, r23.w, r24.z
          mul r26.x, r24.z, r24.y
          mul r26.y, r24.y, r25.y
          mul r25.x, r25.x, r24.y
          mul r25.x, r25.x, l(0.500000)
          mad r25.x, r25.w, l(-0.500000), r25.x
          mul r25.x, r25.x, r26.x
          mad r26.z, -r25.w, l(2.000000), r26.y
          mul r26.y, r26.z, r26.y
          mad r25.w, r25.w, r25.w, r26.y
          mul r26.y, r24.z, r24.z
          mad r24.z, r20.x, r22.w, r24.z
          mad r24.z, r24.z, l(-0.500000), l(-0.500000)
          mul r24.z, r24.z, r26.x
          mad r24.z, r25.z, r26.y, r24.z
          mad r24.y, r24.y, r24.z, r25.w
          add r24.z, r25.x, r25.x
          mul r25.z, r25.x, r25.x
          mad r25.z, r24.y, r24.y, r25.z
          div r24.z, r24.z, r25.z
          mul r24.y, r24.y, r24.z
          mad r24.z, -r24.z, r25.x, l(1.000000)
          mul r23.w, r23.w, r24.y
          mad r23.w, r24.z, r24.w, r23.w
          mul r24.y, r25.y, r24.y
          mad r24.x, r24.z, r24.x, r24.y
          mad r21.x, r21.x, r22.w, r23.w
          mad r20.x, r20.x, r22.w, r24.x
          mad r22.w, r20.x, l(2.000000), l(2.000000)
          rsq r22.w, r22.w
          add r21.x, r12.w, r21.x
          mul_sat r20.z, r22.w, r21.x
          mad_sat r20.y, r22.w, r20.x, r22.w
        endif
      endif
      mul r18.w, r21.z, r18.w
      lt r20.x, l(0.000000), r20.w
      mul r20.w, r20.w, r20.w
      mad r21.x, r20.y, l(3.600000), l(0.400000)
      div r20.w, r20.w, r21.x
      mad r20.w, r11.w, r11.w, r20.w
      min r20.w, r20.w, l(1.000000)
      movc r18.x, r20.x, r20.w, r16.w
      mul r20.x, r21.y, l(0.250000)
      ishr r20.w, r18.x, l(1)
      iadd r20.w, r20.w, l(0x1fbd1df5)
      mad r20.w, r20.w, l(3.000000), r21.y
      mul r20.x, r20.w, r20.x
      add r20.w, r20.y, l(0.001000)
      div r20.x, r20.x, r20.w
      add r21.x, r18.x, r20.x
      div r21.y, r18.x, r21.x
      movc r21.xy, r21.wwww, r21.xyxx, r18.xyxx
      lt r20.x, r23.z, l(1.000000)
      add r21.w, -r23.z, l(1.000100)
      add r22.w, r23.z, l(1.000000)
      div r21.w, r21.w, r22.w
      sqrt r21.w, r21.w
      mul r22.w, r21.w, l(0.250000)
      ishr r23.z, r21.x, l(1)
      iadd r23.z, r23.z, l(0x1fbd1df5)
      mad r21.w, r23.z, l(3.000000), r21.w
      mul r21.w, r21.w, r22.w
      div r20.w, r21.w, r20.w
      add r20.w, r20.w, r21.x
      div r20.w, r21.x, r20.w
      sqrt r20.w, r20.w
      mul r20.w, r20.w, r21.y
      movc r20.x, r20.x, r20.w, r21.y
      mad r20.w, r20.z, r18.x, -r20.z
      mad r20.z, r20.w, r20.z, l(1.000000)
      mul r20.z, r20.z, r20.z
      mul r20.z, r20.z, l(3.14159274)
      div r20.z, r18.x, r20.z
      mul r20.x, r20.x, r20.z
      sqrt r18.x, r18.x
      add r20.z, -r18.x, l(1.000000)
      mad r20.w, r15.w, r20.z, r18.x
      mad r18.x, r21.z, r20.z, r18.x
      mul r18.x, r15.w, r18.x
      mad r18.x, r21.z, r20.w, r18.x
      rcp r18.x, r18.x
      mul r18.x, r18.x, r20.x
      add r20.x, -r20.y, l(1.000000)
      mul r20.y, r20.x, r20.x
      mul r20.y, r20.y, r20.y
      mul r20.z, r20.x, r20.y
      mad r20.x, -r20.y, r20.x, l(1.000000)
      mul r20.xyw, r12.xyxz, r20.xxxx
      mad r20.xyz, r17.xxxx, r20.zzzz, r20.xywx
      mul r18.x, r18.x, l(0.500000)
      mul r20.xyz, r20.xyzx, r18.xxxx
      mul r20.xyz, r18.wwww, r20.xyzx
      mad r20.xyz, r18.wwww, r16.xyzx, r20.xyzx
      mul r21.xyz, r19.wwww, r22.xyzx
      mul r21.xyz, r23.yyyy, r21.xyzx
      mul r20.xyz, r20.xyzx, r21.xyzx
    else
      mov r20.xyz, l(0,0,0,0)
    endif
  else
    mov r20.xyz, l(0,0,0,0)
  endif
  ushr r18.x, r23.x, l(8)
  and r18.x, r18.x, cb2[16].w
  add r20.xyz, r19.xyzx, r20.xyzx
  movc r19.xyz, r18.xxxx, r20.xyzx, r19.xyzx
  iadd r18.z, r18.z, l(1)
endloop
mad r4.xyz, r13.wwww, r6.zxyz, -r4.xyzx
mov_sat r12.w, r12.w
log r0.x, r0.w
mad r0.x, -r0.x, l(1.200000), l(1.000000)
add r6.x, cb1[163].z, l(-1.000000)
add r0.x, -r0.x, r6.x
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t6.xyzw, s1, r0.x
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.x, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.x, r0.x, cb0[29].w
mad_sat r4.w, r0.w, cb1[165].x, cb1[165].y
mad r6.x, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.x
max r0.x, r0.x, l(0.000100)
div r0.x, r0.y, r0.x
min r0.x, r0.x, cb1[165].z
add r0.x, r0.x, l(-1.000000)
mad r0.x, r4.w, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, r4.xyzx
mad r6.xyz, r17.yzwy, r0.yyyy, -r4.xyzx
mad r4.xyz, r8.xxxx, r6.xyzx, r4.xyzx
mad r6.xyzw, r0.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.x, r6.x, r6.x
mul r0.y, r12.w, l(-9.280000)
exp r0.y, r0.y
min r0.x, r0.y, r0.x
mad r0.x, r0.x, r6.x, r6.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.y, r17.x, r0.y
mad r0.xyw, r12.xyxz, r0.xxxx, r0.yyyy
mul r0.xyw, r0.xyxw, r4.xyxz
mul r0.xyz, r0.zzzz, r0.xywx
mad r4.xyz, r12.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r12.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r12.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r19.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t7.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r12.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r14.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, r7.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
mad r0.xyz, r13.xyzx, r8.yzwy, r0.xyzx
add r0.xyz, r2.yzwy, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
