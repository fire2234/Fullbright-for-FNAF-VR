//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jul 18 00:45:01 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyzw
// ATTRIBUTE                1   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 3     zw        0     NONE   float     zw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 4   xy          3     NONE   float   xy
// SV_POSITION              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[47], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output o0.xy
dcl_output o0.zw
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output_siv o4.xyzw, position
dcl_temps 3
mad r0.xy, v1.xyxx, cb1[1].xyxx, cb1[1].zwzz
mul r0.zw, r0.xxxy, cb1[2].zzzw
mad o2.zw, r0.xxxy, cb1[2].zzzw, cb0[42].xxxy
mov o0.xy, r0.zwzz
mul r1.z, cb0[23].z, cb0[23].y
mad r0.x, r1.z, r1.z, l(1.000000)
sqrt r0.x, r0.x
div r0.x, l(1.41421354), r0.x
mov r1.y, l(1.000000)
mad r1.xw, v0.xxxy, cb1[0].xxxy, cb1[0].zzzw
mul r1.xw, r1.xxxw, cb1[2].xxxy
mad r2.xy, r1.xwxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r2.z, -r2.y
mul r1.xy, r1.yzyy, r2.xzxx
mov o4.xy, r2.xzxx
mad o3.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul o1.yz, r0.xxxx, r1.xxyx
ld_indexable(texture2d)(float,float,float,float) r0.x, l(0, 0, 0, 0), t0.xyzw
mov o1.x, r0.x
mad o2.xy, cb0[1].zwzz, l(-0.500000, 0.500000, 0.000000, 0.000000), r0.zwzz
mad r0.xy, r0.zwzz, cb0[1].xyxx, -cb0[46].zwzz
div o0.zw, r0.xxxy, cb0[46].xxxy
mov o4.zw, v0.zzzw
ret
// Approximately 0 instruction slots used
