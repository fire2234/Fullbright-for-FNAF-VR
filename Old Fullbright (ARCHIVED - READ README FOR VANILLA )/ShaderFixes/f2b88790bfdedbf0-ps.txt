//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Sep 18 21:04:21 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[92], dynamicIndexed
dcl_constantbuffer cb5[22], immediateIndexed
dcl_constantbuffer cb6[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texturecube (float,float,float,float) t13
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_temps 29
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xy, cb1[121].xyxx
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xy, cb3[121].xyxx
endif
mul r11.xyz, v0.yzxy, v1.zxyz
mad r11.xyz, v1.yzxy, v0.zxyz, -r11.xyzx
mul r11.xyz, r11.xyzx, v1.wwww
mov r12.xyz, v6.xyzx
mov r12.w, l(1.000000)
dp4 r4.x, r12.xyzw, r4.xyzw
dp4 r4.y, r12.xyzw, r5.xyzw
dp4 r4.z, r12.xyzw, r6.xyzw
dp4 r4.w, r12.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mul r6.xy, v2.xyxx, cb6[10].xxxx
sample_b_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t11.yzwx, s5, cb1[133].x
mul r6.x, r4.w, cb6[10].y
add r6.yzw, -cb6[2].xxyz, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r6.yzw, r6.xxxx, r6.yyzw, cb6[2].xxyz
mad r6.yzw, r6.yyzw, r0.yyyy, r9.xxyz
dp3 r0.y, r6.yzwy, r6.yzwy
rsq r0.y, r0.y
mul r6.yzw, r0.yyyy, r6.yyzw
mul r7.xyz, r11.yzxy, r6.zzzz
mad r7.xyz, r6.yyyy, v0.yzxy, r7.xyzx
mad r6.yzw, r6.wwww, v1.yyzx, r7.xxyz
dp3 r0.y, r6.yzwy, r6.yzwy
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r6.yzwy
dp3 r0.y, r7.zxyz, r4.xyzx
mul r6.yzw, r0.yyyy, r7.zzxy
mad r6.yzw, r6.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r4.xxyz
max r8.y, r0.y, l(0.000000)
add r8.z, -r8.y, l(1.000000)
log r8.z, |r8.z|
mul r8.z, r8.z, cb6[10].z
exp r8.z, r8.z
mad r8.z, r8.z, l(0.960000), l(0.040000)
sample_indexable(texturecube)(float,float,float,float) r9.xyz, r6.yzwy, t13.xyzw, s7
sample_b_indexable(texturecube)(float,float,float,float) r6.yzw, r6.yzwy, t13.wxyz, s7, cb6[10].w
add r6.yzw, -r9.xxyz, r6.yyzw
mad r6.yzw, cb6[11].yyyy, r6.yyzw, r9.xxyz
dp3 r8.w, r6.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
add r9.xyz, -r6.yzwy, r8.wwww
mad r6.yzw, cb6[11].wwww, r9.xxyz, r6.yyzw
mad r9.xyz, r6.yzwy, cb6[12].xxxx, r8.zzzz
mul r9.xyz, r9.xyzx, cb6[12].yyyy
mad r9.xyz, r6.xxxx, -r9.xyzx, r9.xyzx
add r9.xyz, r9.xyzx, cb6[3].xyzx
mul r8.zw, v2.xxxy, cb6[12].zzzz
sample_b_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t12.xzyw, s6, cb1[133].x
mul r8.w, r8.z, cb6[12].w
mov_sat r9.w, r8.w
add r9.w, -r9.w, l(1.000000)
mul r6.yzw, r6.yyzw, cb6[6].xxyz
mul r6.yzw, r6.yyzw, cb6[13].yyyy
mad r6.yzw, r9.wwww, r6.yyzw, cb6[7].xxyz
mad r12.xyz, r4.wwww, cb6[9].xyzx, -r6.yzwy
mad_sat r6.yzw, r6.xxxx, r12.xxyz, r6.yyzw
mul r10.zw, r9.wwww, cb6[13].zzzw
mad_sat r10.zw, r6.xxxx, -r10.zzzw, r10.zzzw
mad r4.w, -r8.z, cb6[12].w, l(1.000000)
mad_sat r4.w, r6.x, r4.w, r8.w
mul r11.xyz, r11.xyzx, cb6[2].yyyy
mad r11.xyz, cb6[2].xxxx, v0.xyzx, r11.xyzx
mad r11.xyz, cb6[2].zzzz, v1.xyzx, r11.xyzx
dp3 r8.z, r11.xyzx, r4.xyzx
max r8.z, r8.z, l(0.000000)
add r8.z, -r8.z, l(1.000000)
mul r8.w, |r8.z|, |r8.z|
mul r8.w, r8.w, r8.w
mul r8.z, r8.w, |r8.z|
mad r8.z, r8.z, l(0.960000), l(0.040000)
add r8.w, -cb6[14].x, cb6[14].y
mad r8.z, r8.z, r8.w, cb6[14].x
add r8.w, -r8.z, l(1.000000)
mad_sat r11.w, r6.x, r8.w, r8.z
mad r0.z, r4.w, r0.w, r0.z
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, v3.zwzz, t10.xyzw, s4
mad r13.xyzw, cb5[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r12.xyzw, r12.xyzw, cb5[7].xyzw, r13.xyzw
mul r12.xyzw, r12.xyzw, r12.xyzw
mul r12.xyzw, r12.xyzw, cb5[6].xyzw
mul r0.w, r10.w, l(0.080000)
mad r13.xyz, -r10.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r6.yzwy
mad r13.xyz, r10.zzzz, r13.xyzx, r0.wwww
mad r14.xyz, -r6.yzwy, r10.zzzz, r6.yzwy
mad r14.xyz, r14.xyzx, cb1[126].wwww, cb1[126].xyzx
mad r13.xyz, r13.xyzx, cb1[127].wwww, cb1[127].xyzx
mul r8.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000)
mad r10.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r8.zwzz, t9.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r10.zwzz, t9.xyzw, s3

mov r29.xyz, r7.yzwy


mad r0.w, r16.w, l(0.00392156886), r15.w
add r0.w, r0.w, l(-0.00196078443)
mad r0.w, r0.w, cb5[18].w, cb5[20].w
mul r15.xyz, r15.xyzx, r15.xyzx
mad r15.xyz, r15.xyzx, cb5[18].xyzx, cb5[20].xyzx
exp r0.w, r0.w
add r0.w, r0.w, l(-0.0185813606)
mad r16.xyzw, r16.xyzw, cb5[19].xyzw, cb5[21].xyzw
mov r7.w, l(1.000000)
dp4 r4.w, r16.xyzw, r7.xyzw
max r4.w, r4.w, l(0.000000)
mul r0.w, r0.w, r4.w
mul r15.xyz, r15.xyzx, r0.wwww
mul r15.xyz, r15.xyzx, cb1[146].xyzx
dp3 r0.w, r15.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r15.xyz, r14.xyzx, r15.xyzx
mad r16.xyz, r6.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r16.xyz, r6.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r16.xyzx
mad r6.xyz, r6.yzwy, l(2.755200, 2.755200, 2.755200, 0.000000), r16.xyzx
add r6.xyz, r6.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r8.zw, -r10.xxxy, v6.xxxy
ftou r8.zw, r8.zzzw
if_z r0.x
  mov r4.w, cb4[3].x
  mov r6.w, cb4[3].y
  mov r7.w, cb4[3].z
  mov r9.w, cb4[1].z
  mov r10.xy, cb4[1].xyxx
  mov r10.z, cb4[2].x
else
  mov r4.w, cb4[43].x
  mov r6.w, cb4[43].y
  mov r7.w, cb4[43].z
  mov r9.w, cb4[41].z
  mov r10.xy, cb4[41].xyxx
  mov r10.z, cb4[42].x
endif
mad r4.w, v6.w, r4.w, r6.w
log r4.w, r4.w
mul r4.w, r7.w, r4.w
max r4.w, r4.w, l(0.000000)
ftou r4.w, r4.w
iadd r6.w, r9.w, l(-1)
umin r4.w, r4.w, r6.w
ushr r8.zw, r8.zzzw, r10.zzzz
imad r4.w, r4.w, r10.y, r8.w
imad r4.w, r4.w, r10.x, r8.z
if_z r0.x
  mov r6.w, cb4[0].z
  mov r7.w, cb4[6].x
  mov r8.zw, cb4[6].zzzw
  mov r10.xyz, cb4[5].xyzx
  mov r16.xyz, cb4[4].xyzx
else
  mov r6.w, cb4[40].z
  mov r7.w, cb4[46].x
  mov r8.zw, cb4[46].zzzw
  mov r10.xyz, cb4[45].xyzx
  mov r16.xyz, cb4[44].xyzx
endif
if_nz r6.w
  and r17.xyzw, r7.wwww, l(255, 2, 4, 8)
  movc r17.xyzw, r17.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  if_nz cb4[7].x
    mov r6.w, cb4[7].x
    mov r9.w, l(0)
    loop
      uge r10.w, r9.w, cb4[7].x
      breakc_nz r10.w
      dp4 r10.w, cb4[8].xyzw, icb[r9.w + 0].xyzw
      lt r10.w, v6.w, r10.w
      if_nz r10.w
        mov r6.w, r9.w
        break
      endif
      iadd r9.w, r9.w, l(1)
    endloop
    ult r9.w, r6.w, cb4[7].x
    if_nz r9.w
      ishl r9.w, r6.w, l(2)
      mul r18.xyzw, r5.yyyy, cb4[r9.w + 10].xyzw
      mad r18.xyzw, r5.xxxx, cb4[r9.w + 9].xyzw, r18.xyzw
      mad r18.xyzw, r5.zzzz, cb4[r9.w + 11].xyzw, r18.xyzw
      add r18.xyzw, r18.xyzw, cb4[r9.w + 12].xyzw
      div r19.xyzw, r18.xyxy, r18.wwww
      ge r18.xy, r19.zwzz, cb4[r6.w + 25].xyxx
      ge r20.xy, cb4[r6.w + 25].zwzz, r19.zwzz
      and r18.xy, r18.xyxx, r20.xyxx
      and r6.w, r18.y, r18.x
      if_nz r6.w
        mad r19.xyzw, r19.xyzw, cb4[29].xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
        frc r18.xy, r19.zwzz
        round_ni r19.xyzw, r19.xyzw
        add r20.xyzw, r19.zwzw, l(0.500000, 1.500000, 0.500000, 0.500000)
        mul r20.xyzw, r20.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r21.x, r20.xyxx, t0.xyzw, s1, l(0.000000)
        add r19.xyzw, r19.xyzw, l(1.500000, 1.500000, 1.500000, 0.500000)
        mul r19.xyzw, r19.xyzw, cb4[29].zwzw
        sample_l_indexable(texture2d)(float,float,float,float) r21.y, r19.xyxx, t0.yxzw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r21.z, r19.zwzz, t0.yzxw, s1, l(0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r21.w, r20.zwzz, t0.yzwx, s1, l(0.000000)
        add r19.xyzw, -r18.zzzz, r21.xyzw
        mad_sat r19.xyzw, r19.xyzw, l(4000.000000, 4000.000000, 4000.000000, 4000.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
        add r18.zw, -r19.wwwx, r19.zzzy
        mad r18.xz, r18.xxxx, r18.zzwz, r19.wwxw
        add r6.w, -r18.x, r18.z
        mad r6.w, r18.y, r6.w, r18.x
      else
        mov r6.w, l(1.000000)
      endif
    else
      mov r6.w, l(1.000000)
    endif
  else
    mov r6.w, l(1.000000)
  endif
  if_nz r17.x
    mov r17.x, l(1.000000)
    dp4 r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r17.xyzw
    mov r12.x, l(1.000000)
    dp4 r10.w, r12.xyzw, r17.xyzw
    add r10.w, r10.w, l(-1.000000)
    mad r9.w, r9.w, r10.w, l(1.000000)
    mad_sat r8.z, v6.w, r8.z, r8.w
    mul r8.z, r8.z, r8.z
    add r8.w, -r6.w, r9.w
    mad r17.x, r8.z, r8.w, r6.w
    min r17.y, r17.x, l(1.000000)
  else
    mov r17.xy, l(1.000000,1.000000,0,0)
  endif
  add r6.w, r17.y, r17.x
  lt r6.w, l(0.000000), r6.w
  if_nz r6.w
    dp3 r6.w, r16.xyzx, r16.xyzx
    rsq r6.w, r6.w
    mul r16.xyz, r6.wwww, r16.xyzx
    dp3 r6.w, r7.zxyz, r16.xyzx
    mov_sat r8.z, r6.w
    max r8.w, r0.z, l(0.020000)
    dp3 r9.w, r4.xyzx, r16.xyzx
    mad r10.w, r9.w, l(2.000000), l(2.000000)
    rsq r10.w, r10.w
    add r6.w, r0.y, r6.w
    mul_sat r6.w, r10.w, r6.w
    mad_sat r9.w, r10.w, r9.w, r10.w
    add r10.w, |r0.y|, l(0.000010)
    min r10.w, r10.w, l(1.000000)
    mul r16.xyz, r8.zzzz, r14.xyzx
    mul r13.w, r8.w, r8.w
    mul r14.w, r13.w, r13.w
    mad r15.w, r6.w, r14.w, -r6.w
    mad r6.w, r15.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mul r6.w, r6.w, l(3.14159274)
    div r6.w, r14.w, r6.w
    mad r8.w, -r8.w, r8.w, l(1.000000)
    mad r14.w, r10.w, r8.w, r13.w
    mad r8.w, r8.z, r8.w, r13.w
    mul r8.w, r8.w, r10.w
    mad r8.w, r8.z, r14.w, r8.w
    rcp r8.w, r8.w
    mul r6.w, r6.w, r8.w
    add r8.w, -r9.w, l(1.000000)
    mul r9.w, r8.w, r8.w
    mul r9.w, r9.w, r9.w
    mul r10.w, r8.w, r9.w
    mul_sat r13.w, r13.y, l(50.000000)
    mad r8.w, -r9.w, r8.w, l(1.000000)
    mul r17.yzw, r13.xxyz, r8.wwww
    mad r17.yzw, r13.wwww, r10.wwww, r17.yyzw
    mul r6.w, r6.w, l(0.500000)
    mul r17.yzw, r17.yyzw, r6.wwww
    mul r17.yzw, r8.zzzz, r17.yyzw
    mad r16.xyz, r16.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000), r17.yzwy
    mul r10.xyz, r10.xyzx, r17.xxxx
    mul r10.xyz, r10.xyzx, r16.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  ushr r6.w, r7.w, l(8)
  and r6.w, r6.w, cb2[16].w
  movc r10.xyz, r6.wwww, r10.xyzx, l(0,0,0,0)
  mov r12.x, l(1.000000)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r6.w, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r6.w, r6.wwww, t2.yzwx
  umin r6.w, r6.w, cb4[0].x
  bfi r7.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t2.yzwx
else
  ishl r8.z, r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.z, r8.zzzz, t5.yzxw
  umin r6.w, r8.z, cb4[40].x
  bfi r4.w, l(31), l(1), r4.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r4.wwww, t5.yzwx
endif
movc r4.w, r0.x, cb4[40].x, cb4[0].x
umin r4.w, r4.w, r6.w
dp3 r6.w, -r4.yzxy, r7.xyzx
add r6.w, r6.w, r6.w
mad r16.xyz, r7.zxyz, -r6.wwww, -r4.xyzx
max r6.w, r0.z, l(0.020000)
mul r8.z, r6.w, r6.w
mad r6.w, -r6.w, r6.w, l(1.000000)
add r8.w, r0.y, r0.y
mad r9.w, r8.w, r0.y, l(-1.000000)
add r10.w, |r0.y|, l(0.000010)
min r10.w, r10.w, l(1.000000)
mul r17.xyz, r14.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r13.w, r8.z, r8.z
mul r18.xyzw, r13.yxyz, l(50.000000, 0.450000, 0.450000, 0.450000)
mov_sat r18.x, r18.x
mov r19.y, l(1.000000)
mov r20.xyz, r10.xyzx
mov r14.w, l(0)
loop
  uge r15.w, r14.w, r4.w
  breakc_nz r15.w
  iadd r15.w, r7.w, r14.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.w, r15.wwww, t3.yzwx
    imul null, r17.w, r16.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r17.wwww, t1.xyzw
    imad r22.xyzw, r16.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r22.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r22.yyyy, t1.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r22.zzzz, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r22.wwww, t1.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t6.yzwx
    imul null, r16.w, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r21.xyzw, r16.wwww, t4.xyzw
    imad r26.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r23.xyzw, r26.xxxx, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r24.xyzw, r26.yyyy, t4.wxyz
    ld_indexable(buffer)(float,float,float,float) r25.xyzw, r26.zzzz, t4.xyzw
    ld_indexable(buffer)(float,float,float,float) r22.xyzw, r26.wwww, t4.wxyz
  endif
  eq r15.w, r23.w, l(0.000000)
  lt r16.w, l(-2.000000), r25.x
  add r21.xyz, -r5.xyzx, r21.xyzx
  dp3 r17.w, r21.xyzx, r21.xyzx
  rsq r19.z, r17.w
  mul r26.xyz, r19.zzzz, r21.xyzx
  mul r19.z, r21.w, r21.w
  mul r17.w, r17.w, r19.z
  mad r17.w, -r17.w, r17.w, l(1.000000)
  max r17.w, r17.w, l(0.000000)
  mul r17.w, r17.w, r17.w
  mul r27.xyz, r21.wwww, r21.xyzx
  dp3 r19.z, r27.xyzx, r27.xyzx
  min r19.z, r19.z, l(1.000000)
  add r19.z, -r19.z, l(1.000000)
  log r19.z, r19.z
  mul r19.z, r19.z, r23.w
  exp r19.z, r19.z
  movc r17.w, r15.w, r17.w, r19.z
  dp3 r19.z, r26.xyzx, r24.yzwy
  add r19.z, -r25.x, r19.z
  mul_sat r19.z, r25.y, r19.z
  mul r19.z, r19.z, r19.z
  mul r19.z, r17.w, r19.z
  movc r16.w, r16.w, r19.z, r17.w
  lt r17.w, l(0.000000), r16.w
  if_nz r17.w
    and r17.w, r24.x, l(255)
    movc r17.w, r17.w, l(1), l(0)
    if_nz r17.w
      and r26.xyzw, r24.xxxx, l(1, 2, 4, 8)
      movc r26.xyzw, r26.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r17.w, r24.x, l(4)
      ubfe r19.z, l(1), l(4), r24.x
      movc r27.x, r19.z, l(1.000000), l(0)
      and r24.yzw, r17.wwww, l(0, 2, 4, 8)
      movc r27.yzw, r24.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r17.w, r27.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.z, r26.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.w, r12.xyzw, r26.xyzw
      add r19.w, r19.w, l(-1.000000)
      mad r19.z, r19.z, r19.w, l(1.000000)
      mul r19.zw, r17.wwww, r19.zzzz
    else
      mov r19.zw, l(0,0,1.000000,1.000000)
    endif
    add r17.w, r19.w, r19.z
    lt r17.w, l(0.000000), r17.w
    if_nz r17.w
      f16tof32 r17.w, r25.w
      mul r19.w, r17.w, l(0.500000)
      mad r24.yzw, -r19.wwww, r22.yyzw, r21.xxyz
      mad r21.xyz, r19.wwww, r22.yzwy, r21.xyzx
      lt r19.w, l(0.000000), r17.w
      if_nz r19.w
        dp3 r20.w, r24.yzwy, r24.yzwy
        dp3 r21.w, r21.xyzx, r21.xyzx
        rsq r20.w, r20.w
        rsq r21.w, r21.w
        mul r22.y, r20.w, r21.w
        dp3 r22.z, r24.yzwy, r21.xyzx
        mul r22.z, r22.y, r22.z
        mad r22.w, r22.z, l(0.500000), r22.y
        add r22.w, r22.w, l(0.500000)
        div r25.y, r22.y, r22.w
        dp3 r22.y, r7.zxyz, r24.yzwy
        dp3 r22.w, r7.zxyz, r21.xyzx
        mul r21.w, r21.w, r22.w
        mad r20.w, r22.y, r20.w, r21.w
        mul r25.x, r20.w, l(0.500000)
      else
        dp3 r20.w, r24.yzwy, r24.yzwy
        add r21.w, r20.w, l(1.000000)
        rcp r25.y, r21.w
        rsq r20.w, r20.w
        mul r26.xyz, r20.wwww, r24.yzwy
        dp3 r25.x, r7.zxyz, r26.xyzx
        mov r22.z, l(1.000000)
      endif
      lt r20.w, l(0.000000), r25.z
      mul r21.w, r25.z, r25.z
      mul_sat r21.w, r25.y, r21.w
      sqrt r21.w, r21.w
      lt r22.y, r25.x, r21.w
      max r22.w, -r21.w, r25.x
      add r22.w, r21.w, r22.w
      mul r22.w, r22.w, r22.w
      mul r21.w, r21.w, l(4.000000)
      div r21.w, r22.w, r21.w
      movc r21.w, r22.y, r21.w, r25.x
      movc_sat r20.w, r20.w, r21.w, r25.x
      movc r15.w, r15.w, r25.y, l(1.000000)
      add r21.xyz, -r24.yzwy, r21.xyzx
      dp3 r21.w, r16.xyzx, r21.xyzx
      mad r25.xyw, r21.wwww, r16.xyxz, -r21.xyxz
      dp3 r22.y, r24.yzwy, r25.xywx
      mul r21.w, r21.w, r21.w
      mad r17.w, r17.w, r17.w, -r21.w
      div_sat r17.w, r22.y, r17.w
      mad r21.xyz, r17.wwww, r21.xyzx, r24.yzwy
      movc r21.xyz, r19.wwww, r21.xyzx, r24.yzwy
      dp3 r17.w, r21.xyzx, r21.xyzx
      rsq r17.w, r17.w
      mul r21.xyz, r17.wwww, r21.xyzx
      mul r19.w, r17.w, r25.z
      mul_sat r19.w, r6.w, r19.w
      mul_sat r17.w, r17.w, r22.x
      dp3 r21.w, r7.zxyz, r21.xyzx
      dp3 r21.x, r4.xyzx, r21.xyzx
      mad r21.y, r21.x, l(2.000000), l(2.000000)
      rsq r21.y, r21.y
      add r21.z, r0.y, r21.w
      mul_sat r21.z, r21.y, r21.z
      mad_sat r21.y, r21.y, r21.x, r21.y
      lt r22.x, l(0.000000), r19.w
      if_nz r22.x
        mad r22.y, -r19.w, r19.w, l(1.000000)
        sqrt r22.y, r22.y
        dp2 r22.w, r0.yyyy, r21.wwww
        add r23.w, -r21.x, r22.w
        ge r24.y, r23.w, r22.y
        if_nz r24.y
          mov r21.z, l(1.000000)
          mov r21.y, |r0.y|
        else
          mad r24.y, -r23.w, r23.w, l(1.000000)
          rsq r24.y, r24.y
          mul r24.y, r19.w, r24.y
          mad r24.z, -r23.w, r21.w, r0.y
          mul r24.w, r24.z, r24.y
          mad r23.w, -r23.w, r21.x, r9.w
          mul r23.w, r23.w, r24.y
          mul r25.x, r21.w, r21.w
          mad r25.x, -r0.y, r0.y, -r25.x
          add r25.x, r25.x, l(1.000000)
          mad r25.x, -r21.x, r21.x, r25.x
          mad_sat r22.w, r22.w, r21.x, r25.x
          sqrt r22.w, r22.w
          mul r22.w, r22.w, r24.y
          mul r25.x, r0.y, r22.w
          add r25.y, r25.x, r25.x
          mad r25.z, r21.w, r22.y, r0.y
          mad r24.y, r24.y, r24.z, r25.z
          mad r24.z, r21.x, r22.y, r23.w
          add r24.z, r24.z, l(1.000000)
          mul r25.w, r22.w, r24.z
          mul r26.x, r24.z, r24.y
          mul r26.y, r24.y, r25.y
          mul r25.x, r25.x, r24.y
          mul r25.x, r25.x, l(0.500000)
          mad r25.x, r25.w, l(-0.500000), r25.x
          mul r25.x, r25.x, r26.x
          mad r26.z, -r25.w, l(2.000000), r26.y
          mul r26.y, r26.z, r26.y
          mad r25.w, r25.w, r25.w, r26.y
          mul r26.y, r24.z, r24.z
          mad r24.z, r21.x, r22.y, r24.z
          mad r24.z, r24.z, l(-0.500000), l(-0.500000)
          mul r24.z, r24.z, r26.x
          mad r24.z, r25.z, r26.y, r24.z
          mad r24.y, r24.y, r24.z, r25.w
          add r24.z, r25.x, r25.x
          mul r25.z, r25.x, r25.x
          mad r25.z, r24.y, r24.y, r25.z
          div r24.z, r24.z, r25.z
          mul r24.y, r24.y, r24.z
          mad r24.z, -r24.z, r25.x, l(1.000000)
          mul r22.w, r22.w, r24.y
          mad r22.w, r24.z, r24.w, r22.w
          mul r24.y, r25.y, r24.y
          mad r23.w, r24.z, r23.w, r24.y
          mad r21.w, r21.w, r22.y, r22.w
          mad r21.x, r21.x, r22.y, r23.w
          mad r22.y, r21.x, l(2.000000), l(2.000000)
          rsq r22.y, r22.y
          add r21.w, r0.y, r21.w
          mul_sat r21.z, r22.y, r21.w
          mad_sat r21.y, r22.y, r21.x, r22.y
        endif
      endif
      mul r15.w, r20.w, r15.w
      lt r21.x, l(0.000000), r17.w
      mul r17.w, r17.w, r17.w
      mad r21.w, r21.y, l(3.600000), l(0.400000)
      div r17.w, r17.w, r21.w
      mad r17.w, r8.z, r8.z, r17.w
      min r17.w, r17.w, l(1.000000)
      movc r19.x, r21.x, r17.w, r13.w
      mul r17.w, r19.w, l(0.250000)
      ishr r21.x, r19.x, l(1)
      iadd r21.x, r21.x, l(0x1fbd1df5)
      mad r19.w, r21.x, l(3.000000), r19.w
      mul r17.w, r17.w, r19.w
      add r19.w, r21.y, l(0.001000)
      div r17.w, r17.w, r19.w
      add r25.x, r17.w, r19.x
      div r25.y, r19.x, r25.x
      movc r21.xw, r22.xxxx, r25.xxxy, r19.xxxy
      lt r17.w, r22.z, l(1.000000)
      add r22.x, -r22.z, l(1.000100)
      add r22.y, r22.z, l(1.000000)
      div r22.x, r22.x, r22.y
      sqrt r22.x, r22.x
      mul r22.y, r22.x, l(0.250000)
      ishr r22.z, r21.x, l(1)
      iadd r22.z, r22.z, l(0x1fbd1df5)
      mad r22.x, r22.z, l(3.000000), r22.x
      mul r22.x, r22.x, r22.y
      div r19.w, r22.x, r19.w
      add r19.w, r19.w, r21.x
      div r19.w, r21.x, r19.w
      sqrt r19.w, r19.w
      mul r19.w, r19.w, r21.w
      movc r17.w, r17.w, r19.w, r21.w
      mad r19.w, r21.z, r19.x, -r21.z
      mad r19.w, r19.w, r21.z, l(1.000000)
      mul r19.w, r19.w, r19.w
      mul r19.w, r19.w, l(3.14159274)
      div r19.w, r19.x, r19.w
      mul r17.w, r17.w, r19.w
      sqrt r19.x, r19.x
      add r19.w, -r19.x, l(1.000000)
      mad r21.x, r10.w, r19.w, r19.x
      mad r19.x, r20.w, r19.w, r19.x
      mul r19.x, r10.w, r19.x
      mad r19.x, r20.w, r21.x, r19.x
      rcp r19.x, r19.x
      mul r17.w, r17.w, r19.x
      add r19.x, -r21.y, l(1.000000)
      mul r19.w, r19.x, r19.x
      mul r19.w, r19.w, r19.w
      mul r20.w, r19.x, r19.w
      mad r19.x, -r19.w, r19.x, l(1.000000)
      mul r21.xyz, r13.xyzx, r19.xxxx
      mad r21.xyz, r18.xxxx, r20.wwww, r21.xyzx
      mul r17.w, r17.w, l(0.500000)
      mul r21.xyz, r21.xyzx, r17.wwww
      mul r21.xyz, r15.wwww, r21.xyzx
      mad r21.xyz, r15.wwww, r17.xyzx, r21.xyzx
      mul r22.xyz, r16.wwww, r23.xyzx
      mul r19.xzw, r19.zzzz, r22.xxyz
      mul r19.xzw, r19.xxzw, r21.xxyz
    else
      mov r19.xzw, l(0,0,0,0)
    endif
  else
    mov r19.xzw, l(0,0,0,0)
  endif
  ushr r15.w, r24.x, l(8)
  and r15.w, r15.w, cb2[16].w
  add r19.xzw, r19.xxzw, r20.xxyz
  movc r20.xyz, r15.wwww, r19.xzwx, r20.xyzx
  iadd r14.w, r14.w, l(1)
endloop
mad r4.xyz, r8.wwww, r7.zxyz, -r4.xyzx
min r0.x, r8.y, l(1.000000)
log r0.y, r0.z
mad r0.y, -r0.y, l(1.200000), l(1.000000)
add r6.w, cb1[163].z, l(-1.000000)
add r0.y, -r0.y, r6.w
itof r4.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t7.xyzw, s2, r0.y
mul r4.xyz, r4.xyzx, cb0[31].xxxx
mul r4.xyz, r4.xyzx, cb1[146].xyzx
dp3 r0.y, cb1[146].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.y, r0.y, cb0[29].w
mad_sat r4.w, r0.z, cb1[165].x, cb1[165].y
mad r6.w, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r6.w
max r0.y, r0.y, l(0.000100)
div r0.y, r0.w, r0.y
min r0.y, r0.y, cb1[165].z
add r0.y, r0.y, l(-1.000000)
mad r0.y, r4.w, r0.y, l(1.000000)
mul r4.xyz, r0.yyyy, r4.xyzx
mad r7.xyz, r18.yzwy, r0.wwww, -r4.xyzx
mad r4.xyz, r8.xxxx, r7.xyzx, r4.xyzx
mad r7.xyzw, r0.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r7.x, r7.x
mul r0.x, r0.x, l(-9.280000)
exp r0.x, r0.x
min r0.x, r0.x, r0.y
mad r0.x, r0.x, r7.x, r7.y
mad r0.xy, r0.xxxx, l(-1.040000, 1.040000, 0.000000, 0.000000), r7.zwzz
mul r0.y, r18.x, r0.y
mad r0.xyz, r13.xyzx, r0.xxxx, r0.yyyy
mul r0.xyz, r0.xyzx, r4.xyzx
mad r4.xyz, r13.xyzx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r13.xyzx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r13.xyzx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r20.xyzx
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t8.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r2.x, v5.w
endif
mad r2.yzw, r13.xxyz, l(0.000000, 0.450000, 0.450000, 0.450000), r14.xxyz
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r11.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r2.yzw, r5.xxyz, -cb2[5].xxyz
  add r3.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r2.yzw, r3.xxyz, |r2.yyzw|
  or r0.w, r2.z, r2.y
  or r0.w, r2.w, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.yzw, r1.wwww, l(0,0,1.000000,1.000000), l(0,1.000000,1.000000,0)
  mov r3.x, l(1.000000)
  movc r11.xyzw, r0.wwww, r3.yzwx, r11.xyzw
  mov o0.w, r11.w
else
  mov o0.w, r11.w
endif
mad r0.xyz, r15.xyzx, r6.xyzx, r0.xyzx
add r0.xyz, r11.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx

ret
// Approximately 0 instruction slots used
