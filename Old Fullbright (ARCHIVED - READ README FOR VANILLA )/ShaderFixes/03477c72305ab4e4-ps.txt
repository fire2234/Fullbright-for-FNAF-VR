//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Jul 13 01:28:58 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x
// TEXCOORD                 7   xyzw        4     NONE   float   xyzw
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[182], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_constantbuffer cb3[153], immediateIndexed
dcl_constantbuffer cb4[96], immediateIndexed
dcl_constantbuffer cb5[6], immediateIndexed
dcl_constantbuffer cb6[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_temps 26
and r0.x, v3.x, l(1)
if_z r0.x
  mov r1.x, cb1[4].x
  mov r1.y, cb1[5].x
  mov r1.z, cb1[6].x
  mov r1.w, cb1[7].x
  mov r2.x, cb1[4].y
  mov r2.y, cb1[5].y
  mov r2.z, cb1[6].y
  mov r2.w, cb1[7].y
  mov r3.x, cb1[4].w
  mov r3.y, cb1[5].w
  mov r3.z, cb1[6].w
  mov r3.w, cb1[7].w
  mov r4.x, cb1[40].x
  mov r4.y, cb1[41].x
  mov r4.z, cb1[42].x
  mov r4.w, cb1[43].x
  mov r5.x, cb1[40].y
  mov r5.y, cb1[41].y
  mov r5.z, cb1[42].y
  mov r5.w, cb1[43].y
  mov r6.x, cb1[40].z
  mov r6.y, cb1[41].z
  mov r6.z, cb1[42].z
  mov r6.w, cb1[43].z
  mov r7.x, cb1[40].w
  mov r7.y, cb1[41].w
  mov r7.z, cb1[42].w
  mov r7.w, cb1[43].w
  mov r0.y, cb1[128].w
  mov r0.zw, cb1[129].xxxy
  mov r8.x, cb1[152].w
  mov r8.yzw, cb1[62].xxyz
  mov r9.xyz, cb1[128].xyzx
  mov r10.xyzw, cb1[58].xyzw
  mov r11.xy, cb1[121].xyxx
  mov r11.zw, cb1[122].zzzw
else
  mov r1.x, cb3[4].x
  mov r1.y, cb3[5].x
  mov r1.z, cb3[6].x
  mov r1.w, cb3[7].x
  mov r2.x, cb3[4].y
  mov r2.y, cb3[5].y
  mov r2.z, cb3[6].y
  mov r2.w, cb3[7].y
  mov r3.x, cb3[4].w
  mov r3.y, cb3[5].w
  mov r3.z, cb3[6].w
  mov r3.w, cb3[7].w
  mov r4.x, cb3[40].x
  mov r4.y, cb3[41].x
  mov r4.z, cb3[42].x
  mov r4.w, cb3[43].x
  mov r5.x, cb3[40].y
  mov r5.y, cb3[41].y
  mov r5.z, cb3[42].y
  mov r5.w, cb3[43].y
  mov r6.x, cb3[40].z
  mov r6.y, cb3[41].z
  mov r6.z, cb3[42].z
  mov r6.w, cb3[43].z
  mov r7.x, cb3[40].w
  mov r7.y, cb3[41].w
  mov r7.z, cb3[42].w
  mov r7.w, cb3[43].w
  mov r0.y, cb3[128].w
  mov r0.zw, cb3[129].xxxy
  mov r8.x, cb3[152].w
  mov r8.yzw, cb3[62].xxyz
  mov r9.xyz, cb3[128].xyzx
  mov r10.xyzw, cb3[58].xyzw
  mov r11.xy, cb3[121].xyxx
  mov r11.zw, cb3[122].zzzw
endif
mul r12.xyz, v0.yzxy, v1.zxyz
mad r12.xyz, v1.yzxy, v0.zxyz, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r11.xy, -r11.xyxx, v5.xyxx
mad r11.zw, r11.xxxy, r11.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r13.xy, r11.zwzz, v5.wwww
mov r13.z, v5.w
mul r13.xyw, r13.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
dp4 r4.x, r14.xyzw, r4.xyzw
dp4 r4.y, r14.xyzw, r5.xyzw
dp4 r4.z, r14.xyzw, r6.xyzw
dp4 r4.w, r14.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r5.xyz, -r8.yzwy, r4.xyzx
dp3 r4.w, -r4.xyzx, -r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, -r4.xyzx
mad r6.xy, v2.xyxx, cb6[9].xxxx, l(-0.500000, 0.500000, 0.000000, 0.000000)
dp2 r7.x, r6.xyxx, cb6[1].xyxx
dp2 r7.y, r6.xyxx, cb6[2].xyxx
add r6.xy, r7.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r6.zw, r6.xyxx, t16.zwxy, s3, cb1[133].x
mad r7.xy, r6.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r7.xyxx, r7.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r7.z, r4.w
mul r7.yzw, r7.xxyz, cb6[4].xxyz
mad r7.yzw, r7.yyzw, r0.yyyy, r9.xxyz
dp3 r0.y, r7.yzwy, r7.yzwy
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
mul r8.yzw, r12.xxyz, r7.zzzz
mad r8.yzw, r7.yyyy, v0.xxyz, r8.yyzw
mad r7.yzw, r7.wwww, v1.xxyz, r8.yyzw
dp3 r0.y, r7.yzwy, r7.yzwy
rsq r0.y, r0.y
mul r7.yzw, r0.yyyy, r7.yyzw
sample_b_indexable(texture2d)(float,float,float,float) r8.yzw, r6.xyxx, t17.wxyz, s4, cb1[133].x
mul_sat r8.yzw, r8.yyzw, cb6[8].xxyz
sample_b_indexable(texture2d)(float,float,float,float) r9.x, r6.xyxx, t18.xyzw, s5, cb1[133].x
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r6.xyxx, t19.yxzw, s6, cb1[133].x
add r0.y, r0.y, cb6[10].z
add_sat r0.y, r7.x, r0.y
mov_sat r9.x, r9.x
mad r9.z, r0.y, r0.w, r0.z
lt r0.yz, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[12].xxzx
lt r0.w, l(0.000000), cb1[163].w
and r0.y, r0.w, r0.y
div r6.xy, r13.xyxx, r13.wwww
mad r6.xy, r6.xyxx, r10.xyxx, r10.wzww
sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r6.xyxx, t13.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r12.xyzw, r6.xyxx, t14.xyzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r14.xyzw, r6.xyxx, t15.xyzw, s2, l(0.000000)
mov r26.xyz, r8.yzwy
mad r12.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r12.xyz, r7.yzwy, r12.wwww, r12.xyzx
mad r15.xz, r9.xxzx, r14.wwww, r14.xxzx
mad r15.y, r14.w, l(0.500000), r14.y
mad r10.xyz, r8.yzwy, r10.wwww, r10.xyzx
movc r7.xyz, r0.yyyy, r12.xyzx, r7.yzwy
movc r8.yzw, r0.yyyy, r10.xxyz, r8.yyzw
mov r9.y, l(0.500000)
movc r9.xyz, r0.yyyy, r15.xyzx, r9.xyzx
if_nz r0.z
  mad r0.yzw, r5.xxyz, cb1[178].xxyz, cb1[179].xxyz
  max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.yzw, r0.yyzw, l(0.000000, 0.990000, 0.990000, 0.990000)
  mul r0.yzw, r0.yyzw, cb1[180].xxyz
  ftoi r10.xyz, r0.yzwy
  mov r10.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r10.xyzw, r10.xyzw, t0.xyzw
  utof r10.xyzw, r10.xyzw
  add r4.w, cb1[180].w, l(1.000000)
  div r0.yzw, r0.yyzw, r10.wwww
  frc r0.yzw, r0.yyzw
  mul r0.yzw, r0.yyzw, cb1[180].wwww
  mad r0.yzw, r10.xxyz, r4.wwww, r0.yyzw
  add r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r0.yzw, r0.yyzw, cb1[181].xxyz
  sample_l_indexable(texture3d)(float,float,float,float) r0.y, r0.yzwy, t1.wxyz, s0, l(0.000000)
else
  lt r4.w, l(0.000000), cb2[10].w
  movc r0.y, r4.w, cb5[5].x, l(1.000000)
endif
mul r4.w, r9.y, l(0.080000)
mad r10.xyz, -r9.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r8.yzwy
mad r10.xyz, r9.xxxx, r10.xyzx, r4.wwww
mad r8.yzw, -r8.yyzw, r9.xxxx, r8.yyzw
mad r8.yzw, r8.yyzw, cb1[126].wwww, cb1[126].xxyz
mad r9.xyw, r10.xyxz, cb1[127].wwww, cb1[127].xyxz
ilt r4.w, l(1), cb1[125].x
if_nz r4.w
  mul r10.xy, r6.xyxx, cb1[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r10.xy, r10.xyxx
  mov r10.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzz, t12.yzwx
  mad r6.w, r4.w, cb1[57].x, cb1[57].y
  mad r4.w, r4.w, cb1[57].z, -cb1[57].w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  add r4.w, r4.w, r6.w
  mad r4.w, -r13.z, l(1.000000), r4.w
  div r4.w, |r4.w|, r13.w
  lt r4.w, l(0.010000), r4.w
  if_nz r4.w
    mov r12.y, -cb1[123].z
    mov r12.z, l(0)
    add r12.yz, r6.xxyx, r12.yyzy
    iadd r14.xyzw, r10.xxyy, l(1, -1, 1, -1)
    mov r10.w, r14.y
    ld_indexable(texture2d)(float,float,float,float) r4.w, r10.wyzz, t12.yzwx
    mad r6.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r12.x, |r4.w|
    lt r4.w, r12.x, l(100000000.000000)
    mov r6.z, l(100000000.000000)
    movc r12.xyz, r4.wwww, r12.xyzx, r6.zxyz
    mov r15.y, l(0)
    mov r15.z, cb1[123].w
    add r15.yz, r6.xxyx, r15.yyzy
    mov r16.xz, r10.xxzx
    mov r16.yw, r14.zzzw
    ld_indexable(texture2d)(float,float,float,float) r4.w, r16.xyzz, t12.yzwx
    mad r6.z, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.z
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r15.x, |r4.w|
    lt r4.w, r15.x, r12.x
    movc r12.xyz, r4.wwww, r15.xyzx, r12.xyzx
    mov r15.y, cb1[123].z
    mov r15.z, l(0)
    add r15.yz, r6.xxyx, r15.yyzy
    mov r14.yzw, r10.yyzz
    ld_indexable(texture2d)(float,float,float,float) r4.w, r14.xyzw, t12.yzwx
    mad r6.z, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r6.z
    mad r4.w, -r13.z, l(1.000000), r4.w
    mov r15.x, |r4.w|
    lt r4.w, r15.x, r12.x
    movc r10.xyz, r4.wwww, r15.xyzx, r12.xyzx
    mov r12.x, l(0)
    mov r12.y, -cb1[123].w
    add r6.zw, r6.xxxy, r12.xxxy
    ld_indexable(texture2d)(float,float,float,float) r4.w, r16.xwzz, t12.yzwx
    mad r7.w, r4.w, cb1[57].x, cb1[57].y
    mad r4.w, r4.w, cb1[57].z, -cb1[57].w
    div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
    add r4.w, r4.w, r7.w
    mad r4.w, -r13.z, l(1.000000), r4.w
    lt r4.w, |r4.w|, r10.x
    movc r6.xy, r4.wwww, r6.zwzz, r10.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r6.zw, l(0), t11.zwxy
utof r6.zw, r6.zzzw
mul r6.zw, r6.zzzw, r6.xxxy
round_z r6.zw, r6.zzzw
ftoi r10.xy, r6.zwzz
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t11.yzwx
mul r6.z, cb2[12].y, l(3.999000)
ftou r6.z, r6.z
and r6.z, r6.z, l(2)
movc r6.z, r6.z, cb1[164].y, l(1.000000)
add r4.w, r4.w, l(-1.000000)
mad r4.w, r6.z, r4.w, l(1.000000)
ftou r6.zw, r11.xxxy
if_z r0.x
  mov r7.w, cb4[3].x
  mov r10.xy, cb4[3].yzyy
  mov r10.z, cb4[1].z
  mov r11.xy, cb4[1].xyxx
  mov r10.w, cb4[2].x
else
  mov r7.w, cb4[43].x
  mov r10.xy, cb4[43].yzyy
  mov r10.z, cb4[41].z
  mov r11.xy, cb4[41].xyxx
  mov r10.w, cb4[42].x
endif
mad r7.w, v5.w, r7.w, r10.x
log r7.w, r7.w
mul r7.w, r10.y, r7.w
max r7.w, r7.w, l(0.000000)
ftou r7.w, r7.w
iadd r10.x, r10.z, l(-1)
umin r7.w, r7.w, r10.x
ushr r6.zw, r6.zzzw, r10.wwww
imad r6.w, r7.w, r11.y, r6.w
imad r6.z, r6.w, r11.x, r6.z
if_nz cb4[95].x
  mul r6.xy, r6.xyxx, cb1[123].xyxx
  round_z r6.xy, r6.xyxx
  ftoi r10.xy, r6.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyzw, t10.xyzw
else
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r10.xyzw, r10.xyzw, r10.xyzw
if_z r0.x
  mov r6.x, cb4[0].z
  mov r6.yw, cb4[6].xxxz
  mov r7.w, cb4[6].w
  mov r11.xyz, cb4[5].xyzx
  mov r12.xyz, cb4[4].xyzx
else
  mov r6.x, cb4[40].z
  mov r6.yw, cb4[46].xxxz
  mov r7.w, cb4[46].w
  mov r11.xyz, cb4[45].xyzx
  mov r12.xyz, cb4[44].xyzx
endif
if_nz r6.x
  and r14.xyzw, r6.yyyy, l(255, 1, 2, 4)
  movc r14.xyzw, r14.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r6.x, r6.y, l(8)
  movc r15.w, r6.x, l(1.000000), l(0)
  ushr r13.xy, r6.yyyy, l(4, 8, 0, 0)
  ubfe r6.x, l(1), l(4), r6.y
  movc r16.x, r6.x, l(1.000000), l(0)
  and r17.xyz, r13.xxxx, l(2, 4, 8, 0)
  movc r16.yzw, r17.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r6.x, r16.xyzw, r10.xyzw
  lt r6.y, r7.w, l(0.000000)
  swapc r6.x, r13.x, r6.y, l(1.000000), r6.x
  if_nz r14.x
    mov r15.xyz, r14.yzwy
    dp4 r6.y, r15.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r0.z, l(1.000000)
    dp4 r0.z, r0.yzzz, r15.xyzw
    add r0.z, r0.z, l(-1.000000)
    mad r0.z, r6.y, r0.z, l(1.000000)
    mad_sat r6.y, r13.w, r6.w, r7.w
    mul r6.y, r6.y, r6.y
    add r0.z, -r6.x, r0.z
    mad r0.z, r6.y, r0.z, r6.x
    min r6.x, r13.x, r0.z
    mul r14.x, r13.x, r0.z
    mul r14.y, r13.x, r6.x
  else
    mov r14.xy, l(1.000000,1.000000,0,0)
  endif
  add r0.z, r14.y, r14.x
  lt r0.z, l(0.000000), r0.z
  if_nz r0.z
    dp3 r0.z, r12.xyzx, r12.xyzx
    rsq r0.z, r0.z
    mul r6.xyw, r0.zzzz, r12.xyxz
    dp3 r0.z, r7.xyzx, r6.xywx
    mov_sat r7.w, r0.z
    max r11.w, r9.z, l(0.020000)
    dp3 r12.x, r7.xyzx, r4.xyzx
    dp3 r6.x, r4.xyzx, r6.xywx
    mad r6.y, r6.x, l(2.000000), l(2.000000)
    rsq r6.y, r6.y
    add r0.z, r0.z, r12.x
    mul_sat r0.z, r6.y, r0.z
    mad_sat r6.x, r6.y, r6.x, r6.y
    add r6.y, |r12.x|, l(0.000010)
    min r6.y, r6.y, l(1.000000)
    mul r12.xyz, r7.wwww, r8.yzwy
    mul r6.w, r11.w, r11.w
    mul r12.w, r6.w, r6.w
    mad r13.x, r0.z, r12.w, -r0.z
    mad r0.z, r13.x, r0.z, l(1.000000)
    mul r0.z, r0.z, r0.z
    mul r0.z, r0.z, l(3.14159274)
    div r0.z, r12.w, r0.z
    mad r11.w, -r11.w, r11.w, l(1.000000)
    mad r12.w, r6.y, r11.w, r6.w
    mad r6.w, r7.w, r11.w, r6.w
    mul r6.y, r6.w, r6.y
    mad r6.y, r7.w, r12.w, r6.y
    rcp r6.y, r6.y
    mul r0.z, r0.z, r6.y
    add r6.x, -r6.x, l(1.000000)
    mul r6.y, r6.x, r6.x
    mul r6.y, r6.y, r6.y
    mul r6.w, r6.x, r6.y
    mul_sat r11.w, r9.y, l(50.000000)
    mad r6.x, -r6.y, r6.x, l(1.000000)
    mul r13.xzw, r9.xxyw, r6.xxxx
    mad r6.xyw, r11.wwww, r6.wwww, r13.xzxw
    mul r0.z, r0.z, l(0.500000)
    mul r6.xyw, r6.xyxw, r0.zzzz
    mul r6.xyw, r6.xyxw, r7.wwww
    mad r6.xyw, r12.xyxz, l(0.318309873, 0.318309873, 0.000000, 0.318309873), r6.xyxw
    mul r11.xyz, r11.xyzx, r14.xxxx
    mul r6.xyw, r6.xyxw, r11.xyxz
  else
    mov r6.xyw, l(0,0,0,0)
  endif
  and r0.z, r13.y, cb2[16].w
  movc r6.xyw, r0.zzzz, r6.xyxw, l(0,0,0,0)
else
  mov r6.xyw, l(0,0,0,0)
endif
if_z r0.x
  ishl r0.z, r6.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t3.yzxw
  umin r0.z, r0.z, cb4[0].x
  bfi r7.w, l(31), l(1), r6.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r7.wwww, t3.yzwx
else
  ishl r11.x, r6.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r11.x, r11.xxxx, t6.xyzw
  umin r0.z, r11.x, cb4[40].x
  bfi r6.z, l(31), l(1), r6.z, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.w, r6.zzzz, t6.yzwx
endif
movc r6.z, r0.x, cb4[40].x, cb4[0].x
umin r0.z, r0.z, r6.z
dp3 r6.z, -r4.xyzx, r7.xyzx
add r6.z, r6.z, r6.z
mad r11.xyz, r7.xyzx, -r6.zzzz, -r4.xyzx
max r6.z, r9.z, l(0.020000)
mul r11.w, r6.z, r6.z
mad r6.z, -r6.z, r6.z, l(1.000000)
dp3 r12.x, r7.xyzx, r4.xyzx
add r12.y, r12.x, r12.x
mad r12.z, r12.y, r12.x, l(-1.000000)
add r12.w, |r12.x|, l(0.000010)
min r12.w, r12.w, l(1.000000)
mul r13.xyz, r8.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mul r13.w, r11.w, r11.w
mul r14.x, r9.y, l(50.000000)
mov_sat r14.x, r14.x
mov r0.w, l(1.000000)
mov r15.y, l(1.000000)
mov r14.yzw, r6.xxyw
mov r15.z, l(0)
loop
  uge r15.w, r15.z, r0.z
  breakc_nz r15.w
  iadd r15.w, r7.w, r15.z
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r16.x, r15.wwww, t4.xyzw
    imul null, r16.y, r16.x, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r16.yyyy, t2.xyzw
    imad r16.xyzw, r16.xxxx, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r16.xxxx, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r16.yyyy, t2.wxyz
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r16.zzzz, t2.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r16.wwww, t2.wxyz
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r15.w, r15.wwww, t7.yzwx
    imul null, r21.x, r15.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r21.xxxx, t5.xyzw
    imad r21.xyzw, r15.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r18.xyzw, r21.xxxx, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r19.xyzw, r21.yyyy, t5.wxyz
    ld_indexable(buffer)(float,float,float,float) r20.xyzw, r21.zzzz, t5.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r21.wwww, t5.wxyz
  endif
  eq r15.w, r18.w, l(0.000000)
  lt r21.x, l(-2.000000), r20.x
  add r17.xyz, -r5.xyzx, r17.xyzx
  dp3 r21.y, r17.xyzx, r17.xyzx
  rsq r21.z, r21.y
  mul r22.xyz, r17.xyzx, r21.zzzz
  mul r21.z, r17.w, r17.w
  mul r21.y, r21.z, r21.y
  mad r21.y, -r21.y, r21.y, l(1.000000)
  max r21.y, r21.y, l(0.000000)
  mul r21.y, r21.y, r21.y
  mul r23.xyz, r17.wwww, r17.xyzx
  dp3 r17.w, r23.xyzx, r23.xyzx
  min r17.w, r17.w, l(1.000000)
  add r17.w, -r17.w, l(1.000000)
  log r17.w, r17.w
  mul r17.w, r17.w, r18.w
  exp r17.w, r17.w
  movc r17.w, r15.w, r21.y, r17.w
  dp3 r18.w, r22.xyzx, r19.yzwy
  add r18.w, -r20.x, r18.w
  mul_sat r18.w, r20.y, r18.w
  mul r18.w, r18.w, r18.w
  mul r18.w, r17.w, r18.w
  movc r17.w, r21.x, r18.w, r17.w
  lt r18.w, l(0.000000), r17.w
  if_nz r18.w
    and r18.w, r19.x, l(255)
    movc r18.w, r18.w, l(1), l(0)
    if_nz r18.w
      and r21.xyzw, r19.xxxx, l(1, 2, 4, 8)
      movc r21.xyzw, r21.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r18.w, r19.x, l(4)
      ubfe r19.y, l(1), l(4), r19.x
      movc r22.x, r19.y, l(1.000000), l(0)
      and r19.yzw, r18.wwww, l(0, 2, 4, 8)
      movc r22.yzw, r19.yyzw, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r18.w, r22.xyzw, r10.xyzw
      dp4 r19.y, r21.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r19.z, r0.ywww, r21.xyzw
      add r19.z, r19.z, l(-1.000000)
      mad r19.y, r19.y, r19.z, l(1.000000)
      mul r19.yz, r18.wwww, r19.yyyy
    else
      mov r19.yz, l(0,1.000000,1.000000,0)
    endif
    add r18.w, r19.z, r19.y
    lt r18.w, l(0.000000), r18.w
    if_nz r18.w
      f16tof32 r18.w, r20.w
      mul r19.z, r18.w, l(0.500000)
      mad r20.xyw, -r19.zzzz, r16.yzyw, r17.xyxz
      mad r16.yzw, r19.zzzz, r16.yyzw, r17.xxyz
      lt r17.x, l(0.000000), r18.w
      if_nz r17.x
        dp3 r17.y, r20.xywx, r20.xywx
        dp3 r17.z, r16.yzwy, r16.yzwy
        rsq r17.y, r17.y
        rsq r17.z, r17.z
        mul r19.z, r17.z, r17.y
        dp3 r19.w, r20.xywx, r16.yzwy
        mul r19.w, r19.z, r19.w
        mad r21.x, r19.w, l(0.500000), r19.z
        add r21.x, r21.x, l(0.500000)
        div r21.y, r19.z, r21.x
        dp3 r19.z, r7.xyzx, r20.xywx
        dp3 r21.z, r7.xyzx, r16.yzwy
        mul r17.z, r17.z, r21.z
        mad r17.y, r19.z, r17.y, r17.z
        mul r21.x, r17.y, l(0.500000)
      else
        dp3 r17.y, r20.xywx, r20.xywx
        add r17.z, r17.y, l(1.000000)
        rcp r21.y, r17.z
        rsq r17.y, r17.y
        mul r22.xyz, r17.yyyy, r20.xywx
        dp3 r21.x, r7.xyzx, r22.xyzx
        mov r19.w, l(1.000000)
      endif
      lt r17.y, l(0.000000), r20.z
      mul r17.z, r20.z, r20.z
      mul_sat r17.z, r21.y, r17.z
      sqrt r17.z, r17.z
      lt r19.z, r21.x, r17.z
      max r21.z, -r17.z, r21.x
      add r21.z, r17.z, r21.z
      mul r21.z, r21.z, r21.z
      mul r17.z, r17.z, l(4.000000)
      div r17.z, r21.z, r17.z
      movc r17.z, r19.z, r17.z, r21.x
      movc_sat r17.y, r17.y, r17.z, r21.x
      movc r15.w, r15.w, r21.y, l(1.000000)
      add r16.yzw, -r20.xxyw, r16.yyzw
      dp3 r17.z, r11.xyzx, r16.yzwy
      mad r21.xyz, r17.zzzz, r11.xyzx, -r16.yzwy
      dp3 r19.z, r20.xywx, r21.xyzx
      mul r17.z, r17.z, r17.z
      mad r17.z, r18.w, r18.w, -r17.z
      div_sat r17.z, r19.z, r17.z
      mad r16.yzw, r17.zzzz, r16.yyzw, r20.xxyw
      movc r16.yzw, r17.xxxx, r16.yyzw, r20.xxyw
      dp3 r17.x, r16.yzwy, r16.yzwy
      rsq r17.x, r17.x
      mul r16.yzw, r16.yyzw, r17.xxxx
      mul r17.z, r17.x, r20.z
      mul_sat r17.z, r6.z, r17.z
      mul_sat r16.x, r16.x, r17.x
      dp3 r17.x, r7.xyzx, r16.yzwy
      dp3 r16.y, r4.xyzx, r16.yzwy
      mad r16.z, r16.y, l(2.000000), l(2.000000)
      rsq r16.z, r16.z
      add r16.w, r12.x, r17.x
      mul_sat r16.w, r16.z, r16.w
      mad_sat r16.z, r16.z, r16.y, r16.z
      lt r18.w, l(0.000000), r17.z
      if_nz r18.w
        mad r19.z, -r17.z, r17.z, l(1.000000)
        sqrt r19.z, r19.z
        dp2 r20.x, r12.xxxx, r17.xxxx
        add r20.y, -r16.y, r20.x
        ge r20.z, r20.y, r19.z
        if_nz r20.z
          mov r16.w, l(1.000000)
          mov r16.z, |r12.x|
        else
          mad r20.z, -r20.y, r20.y, l(1.000000)
          rsq r20.z, r20.z
          mul r20.z, r17.z, r20.z
          mad r20.w, -r20.y, r17.x, r12.x
          mul r21.x, r20.w, r20.z
          mad r20.y, -r20.y, r16.y, r12.z
          mul r21.y, r17.x, r17.x
          mad r21.y, -r12.x, r12.x, -r21.y
          add r21.y, r21.y, l(1.000000)
          mad r21.y, -r16.y, r16.y, r21.y
          mad_sat r20.x, r20.x, r16.y, r21.y
          sqrt r20.x, r20.x
          mul r20.xy, r20.xyxx, r20.zzzz
          mul r21.y, r12.x, r20.x
          add r21.z, r21.y, r21.y
          mad r21.w, r17.x, r19.z, r12.x
          mad r20.z, r20.z, r20.w, r21.w
          mad r20.w, r16.y, r19.z, r20.y
          add r20.w, r20.w, l(1.000000)
          mul r22.xy, r20.wwww, r20.xzxx
          mul r22.z, r20.z, r21.z
          mul r21.y, r21.y, r20.z
          mul r21.y, r21.y, l(0.500000)
          mad r21.y, r22.x, l(-0.500000), r21.y
          mul r21.y, r21.y, r22.y
          mad r22.w, -r22.x, l(2.000000), r22.z
          mul r22.z, r22.w, r22.z
          mad r22.x, r22.x, r22.x, r22.z
          mul r22.z, r20.w, r20.w
          mad r20.w, r16.y, r19.z, r20.w
          mad r20.w, r20.w, l(-0.500000), l(-0.500000)
          mul r20.w, r20.w, r22.y
          mad r20.w, r21.w, r22.z, r20.w
          mad r20.z, r20.z, r20.w, r22.x
          add r20.w, r21.y, r21.y
          mul r21.w, r21.y, r21.y
          mad r21.w, r20.z, r20.z, r21.w
          div r20.w, r20.w, r21.w
          mul r20.z, r20.z, r20.w
          mad r20.w, -r20.w, r21.y, l(1.000000)
          mul r20.x, r20.x, r20.z
          mad r20.x, r20.w, r21.x, r20.x
          mul r20.z, r21.z, r20.z
          mad r20.y, r20.w, r20.y, r20.z
          mad r17.x, r17.x, r19.z, r20.x
          mad r16.y, r16.y, r19.z, r20.y
          mad r19.z, r16.y, l(2.000000), l(2.000000)
          rsq r19.z, r19.z
          add r17.x, r12.x, r17.x
          mul_sat r16.w, r19.z, r17.x
          mad_sat r16.z, r19.z, r16.y, r19.z
        endif
      endif
      mul r15.w, r17.y, r15.w
      lt r16.y, l(0.000000), r16.x
      mul r16.x, r16.x, r16.x
      mad r17.x, r16.z, l(3.600000), l(0.400000)
      div r16.x, r16.x, r17.x
      mad r16.x, r11.w, r11.w, r16.x
      min r16.x, r16.x, l(1.000000)
      movc r15.x, r16.y, r16.x, r13.w
      mul r16.x, r17.z, l(0.250000)
      ishr r16.y, r15.x, l(1)
      iadd r16.y, r16.y, l(0x1fbd1df5)
      mad r16.y, r16.y, l(3.000000), r17.z
      mul r16.x, r16.y, r16.x
      add r16.y, r16.z, l(0.001000)
      div r16.x, r16.x, r16.y
      add r20.x, r15.x, r16.x
      div r20.y, r15.x, r20.x
      movc r17.xz, r18.wwww, r20.xxyx, r15.xxyx
      lt r16.x, r19.w, l(1.000000)
      add r18.w, -r19.w, l(1.000100)
      add r19.z, r19.w, l(1.000000)
      div r18.w, r18.w, r19.z
      sqrt r18.w, r18.w
      mul r19.z, r18.w, l(0.250000)
      ishr r19.w, r17.x, l(1)
      iadd r19.w, r19.w, l(0x1fbd1df5)
      mad r18.w, r19.w, l(3.000000), r18.w
      mul r18.w, r18.w, r19.z
      div r16.y, r18.w, r16.y
      add r16.y, r16.y, r17.x
      div r16.y, r17.x, r16.y
      sqrt r16.y, r16.y
      mul r16.y, r16.y, r17.z
      movc r16.x, r16.x, r16.y, r17.z
      mad r16.y, r16.w, r15.x, -r16.w
      mad r16.y, r16.y, r16.w, l(1.000000)
      mul r16.y, r16.y, r16.y
      mul r16.y, r16.y, l(3.14159274)
      div r16.y, r15.x, r16.y
      mul r16.x, r16.x, r16.y
      sqrt r15.x, r15.x
      add r16.y, -r15.x, l(1.000000)
      mad r16.w, r12.w, r16.y, r15.x
      mad r15.x, r17.y, r16.y, r15.x
      mul r15.x, r12.w, r15.x
      mad r15.x, r17.y, r16.w, r15.x
      rcp r15.x, r15.x
      mul r15.x, r15.x, r16.x
      add r16.x, -r16.z, l(1.000000)
      mul r16.y, r16.x, r16.x
      mul r16.y, r16.y, r16.y
      mul r16.z, r16.x, r16.y
      mad r16.x, -r16.y, r16.x, l(1.000000)
      mul r16.xyw, r9.xyxw, r16.xxxx
      mad r16.xyz, r14.xxxx, r16.zzzz, r16.xywx
      mul r15.x, r15.x, l(0.500000)
      mul r16.xyz, r16.xyzx, r15.xxxx
      mul r16.xyz, r15.wwww, r16.xyzx
      mad r16.xyz, r15.wwww, r13.xyzx, r16.xyzx
      mul r17.xyz, r17.wwww, r18.xyzx
      mul r17.xyz, r19.yyyy, r17.xyzx
      mul r16.xyz, r16.xyzx, r17.xyzx
    else
      mov r16.xyz, l(0,0,0,0)
    endif
  else
    mov r16.xyz, l(0,0,0,0)
  endif
  ushr r15.x, r19.x, l(8)
  and r15.x, r15.x, cb2[16].w
  add r16.xyz, r14.yzwy, r16.xyzx
  movc r14.yzw, r15.xxxx, r16.xxyz, r14.yyzw
  iadd r15.z, r15.z, l(1)
endloop
mad r0.xyz, r12.yyyy, r7.xyzx, -r4.xyzx
mov_sat r12.x, r12.x
log r4.x, r9.z
mad r4.x, -r4.x, l(1.200000), l(1.000000)
add r4.y, cb1[163].z, l(-1.000000)
add r4.x, -r4.x, r4.y
itof r0.w, cb0[28].x
sample_l_indexable(texturecubearray)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw, s1, r4.x
mul r0.xyz, r0.xyzx, cb0[31].xxxx
mul r0.xyz, r0.xyzx, cb1[146].xyzx
mad_sat r0.w, r9.z, cb1[165].x, cb1[165].y
mad r4.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.x
min r4.x, cb1[165].z, l(0.000000)
add r4.x, r4.x, l(-1.000000)
mad r0.w, r0.w, r4.x, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r8.xxxx, -r0.xyzx, r0.xyzx
mad r6.xyzw, r9.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r6.x, r6.x
mul r4.x, r12.x, l(-9.280000)
exp r4.x, r4.x
min r0.w, r0.w, r4.x
mad r0.w, r0.w, r6.x, r6.y
mad r4.xy, r0.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r6.zwzz
mul r0.w, r14.x, r4.y
mad r4.xyz, r9.xywx, r4.xxxx, r0.wwww
mul r0.xyz, r0.xyzx, r4.xyzx
mul r0.xyz, r4.wwww, r0.xyzx
mad r4.xyz, r9.xywx, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r4.xyz, r9.xywx, l(-4.795100, -4.795100, -4.795100, 0.000000), r4.xyzx
mad r4.xyz, r9.xywx, l(2.755200, 2.755200, 2.755200, 0.000000), r4.xyzx
add r4.xyz, r4.xyzx, l(1.332000, 1.332000, 1.332000, 0.000000)
max r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r0.xyzx, r4.xyzx, r14.yzwy
lt r0.w, l(0.000000), cb4[91].w
if_nz r0.w
  mov r5.w, l(1.000000)
  dp4 r1.x, r5.xyzw, r1.xyzw
  dp4 r1.y, r5.xyzw, r2.xyzw
  dp4 r0.w, r5.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.wwww
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r0.w, cb1[176].x, cb1[176].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb1[176].z
  mul r1.z, r0.w, cb1[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t9.xyzw, s0, l(0.000000)
  mul r2.x, r1.w, v4.w
  mad r1.xyz, v4.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v4.xyzx
  mov r2.x, v4.w
endif
mad r2.yzw, r9.xxyw, l(0.000000, 0.450000, 0.450000, 0.450000), r8.yyzw
add r2.yzw, -r0.xxyz, r2.yyzw
mad r0.xyz, cb1[134].zzzz, r2.yzwy, r0.xyzx
max r2.yzw, cb6[6].xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb1[130].x
if_nz r0.w
  add r3.xyz, r5.xyzx, -cb2[5].xyzx
  add r4.xyz, cb2[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.xyz, r4.xyzx, |r3.xyzx|
  or r0.w, r3.y, r3.x
  or r0.w, r3.z, r0.w
  dp3 r1.w, r5.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r1.w, r1.w, l(0.002000)
  frc r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  movc r3.xyz, r1.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.yzw, r0.wwww, r3.xxyz, r2.yyzw
endif
add r0.xyz, r0.xyzx, r2.yzwy
mad o0.xyz, r0.xyzx, r2.xxxx, r1.xyzx
mov o0.w, l(0)
add o0.xyz, r26.xyzw, r2.yzwy

ret
// Approximately 0 instruction slots used
