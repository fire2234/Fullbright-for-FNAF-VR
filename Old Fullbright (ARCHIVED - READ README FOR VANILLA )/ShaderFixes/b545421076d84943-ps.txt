//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Oct 24 14:16:23 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 4   xyzw        3     NONE   float   xyzw
// PACKED_EYE_INDEX         0   x           4     NONE    uint   x
// TEXCOORD                 7   xyzw        5     NONE   float   xyzw
// SV_Position              0   xyzw        6      POS   float   xyzw
// SV_IsFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[177], immediateIndexed
dcl_constantbuffer cb1[17], immediateIndexed
dcl_constantbuffer cb2[129], immediateIndexed
dcl_constantbuffer cb3[96], immediateIndexed
dcl_constantbuffer cb4[22], immediateIndexed
dcl_constantbuffer cb5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps constant v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps_siv linear noperspective v6.xyzw, position
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 21
and r0.x, v4.x, l(1)
if_z r0.x
  mov r1.x, cb0[4].x
  mov r1.y, cb0[5].x
  mov r1.z, cb0[6].x
  mov r1.w, cb0[7].x
  mov r2.x, cb0[4].y
  mov r2.y, cb0[5].y
  mov r2.z, cb0[6].y
  mov r2.w, cb0[7].y
  mov r3.x, cb0[4].w
  mov r3.y, cb0[5].w
  mov r3.z, cb0[6].w
  mov r3.w, cb0[7].w
  mov r4.x, cb0[40].x
  mov r4.y, cb0[41].x
  mov r4.z, cb0[42].x
  mov r4.w, cb0[43].x
  mov r5.x, cb0[40].y
  mov r5.y, cb0[41].y
  mov r5.z, cb0[42].y
  mov r5.w, cb0[43].y
  mov r6.x, cb0[40].z
  mov r6.y, cb0[41].z
  mov r6.z, cb0[42].z
  mov r6.w, cb0[43].z
  mov r7.x, cb0[40].w
  mov r7.y, cb0[41].w
  mov r7.z, cb0[42].w
  mov r7.w, cb0[43].w
  mov r0.yzw, cb0[62].xxyz
  mov r8.x, cb0[125].x
  mov r8.y, cb0[128].w
  mov r9.xyz, cb0[128].xyzx
  mov r8.zw, cb0[58].xxxy
  mov r10.xy, cb0[58].zwzz
  mov r10.zw, cb0[121].xxxy
  mov r11.xy, cb0[122].zwzz
else
  mov r1.x, cb2[4].x
  mov r1.y, cb2[5].x
  mov r1.z, cb2[6].x
  mov r1.w, cb2[7].x
  mov r2.x, cb2[4].y
  mov r2.y, cb2[5].y
  mov r2.z, cb2[6].y
  mov r2.w, cb2[7].y
  mov r3.x, cb2[4].w
  mov r3.y, cb2[5].w
  mov r3.z, cb2[6].w
  mov r3.w, cb2[7].w
  mov r4.x, cb2[40].x
  mov r4.y, cb2[41].x
  mov r4.z, cb2[42].x
  mov r4.w, cb2[43].x
  mov r5.x, cb2[40].y
  mov r5.y, cb2[41].y
  mov r5.z, cb2[42].y
  mov r5.w, cb2[43].y
  mov r6.x, cb2[40].z
  mov r6.y, cb2[41].z
  mov r6.z, cb2[42].z
  mov r6.w, cb2[43].z
  mov r7.x, cb2[40].w
  mov r7.y, cb2[41].w
  mov r7.z, cb2[42].w
  mov r7.w, cb2[43].w
  mov r0.yzw, cb2[62].xxyz
  mov r8.x, cb2[125].x
  mov r8.y, cb2[128].w
  mov r9.xyz, cb2[128].xyzx
  mov r8.zw, cb2[58].xxxy
  mov r10.xy, cb2[58].zwzz
  mov r10.zw, cb2[121].xxxy
  mov r11.xy, cb2[122].zwzz
endif
mul r12.xyz, v0.zxyz, v1.xyzx
mad r12.xyz, v1.zxyz, v0.xyzx, -r12.xyzx
mul r12.xyz, r12.xyzx, v1.wwww
add r10.zw, -r10.zzzw, v6.xxxy
mad r11.xy, r10.zwzz, r11.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r11.xy, r11.xyxx, v6.wwww
mov r11.z, v6.w
mul r11.xyw, r11.xyxz, l(2.000000, -2.000000, 0.000000, 1.000000)
mov r13.xyz, v6.xyzx
mov r13.w, l(1.000000)
dp4 r4.x, r13.xyzw, r4.xyzw
dp4 r4.y, r13.xyzw, r5.xyzw
dp4 r4.z, r13.xyzw, r6.xyzw
dp4 r4.w, r13.xyzw, r7.xyzw
div r4.xyz, r4.xyzx, r4.wwww
add r4.xyz, -r0.yzwy, r4.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r0.yz, v2.xyxx, t15.zxyw, s4, cb0[133].x
mad r5.xy, r0.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.y, r5.xyxx, r5.xyxx
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
sqrt r5.z, r0.y
mad r0.yzw, r5.xxyz, r8.yyyy, r9.xxyz
dp3 r5.x, r0.yzwy, r0.yzwy
rsq r5.x, r5.x
mul r0.yzw, r0.yyzw, r5.xxxx
mul r5.xyz, r12.xyzx, r0.zzzz
mad r5.xyz, r0.yyyy, v0.yzxy, r5.xyzx
mad r0.yzw, r0.wwww, v1.yyzx, r5.xxyz
dp3 r5.x, r0.yzwy, r0.yzwy
rsq r5.x, r5.x
mul r0.yzw, r0.yyzw, r5.xxxx
sample_b_indexable(texture2d)(float,float,float,float) r5.xyzw, v2.xyxx, t16.xyzw, s5, cb0[133].x
ilt r6.x, l(1), r8.x
add r5.w, r5.w, l(-0.333300)
lt r7.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r5.wwww
and r6.y, r7.x, l(8)
movc r6.y, r7.y, l(9), r6.y
movc r6.y, r7.z, l(13), r6.y
utof r6.z, r6.y
add r6.z, r6.z, l(-0.500000)
lt r6.z, r6.z, l(0.000000)
movc r6.z, r7.w, l(0), r6.z
and r6.z, r6.x, r6.z
discard_nz r6.z
not r6.x, r6.x
lt r5.w, r5.w, l(0.000000)
and r5.w, r6.x, r5.w
discard_nz r5.w
or r5.w, r6.x, r7.w
movc oMask, r5.w, l(15), r6.y
mov_sat r5.xyz, r5.xyzx
lt r5.w, l(0.000000), cb1[12].x
lt r6.x, l(0.000000), cb0[163].w
and r5.w, r5.w, r6.x
div r6.xy, r11.xyxx, r11.wwww
mad r6.xy, r6.xyxx, r8.zwzz, r10.yxyy
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r6.xyxx, t10.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r6.xyxx, t11.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r6.xyxx, t12.xywz, s1, l(0.000000)
mad r8.xyz, r8.yzxy, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.00392163, -1.00392163, -1.00392163, 0.000000)
mad r8.xyz, r0.yzwy, r8.wwww, r8.xyzx
mad r9.y, r9.z, l(0.200000), r9.y
mad r7.xyz, r5.xyzx, r7.wwww, r7.xyzx
movc r8.xyz, r5.wwww, r8.xyzx, r0.yzwy
movc r0.yzw, r5.wwww, r7.xxyz, r5.xxyz
movc r5.xy, r5.wwww, r9.xyxx, l(0,0.200000,0,0)
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v3.zwzz, t14.xyzw, s3
mad r9.xyzw, cb4[7].xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
mad_sat r7.xyzw, r7.xyzw, cb4[7].xyzw, r9.xyzw
mul r7.xyzw, r7.xyzw, r7.xyzw
mul r7.xyzw, r7.xyzw, cb4[6].xyzw
mul r5.z, r5.y, l(0.080000)
mad r9.xyz, -r5.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r0.yzwy
mad r5.yzw, r5.xxxx, r9.xxyz, r5.zzzz
mad r9.xyz, -r0.yzwy, r5.xxxx, r0.yzwy
mad r9.xyz, r9.xyzx, cb0[126].wwww, cb0[126].xyzx
mad r5.xyz, r5.yzwy, cb0[127].wwww, cb0[127].xyzx
mad r5.xyz, r5.xyzx, l(0.450000, 0.450000, 0.450000, 0.000000), r9.xyzx
mul r9.xy, v3.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000)
mad r9.zw, v3.xxxy, l(0.000000, 0.000000, 1.000000, 0.500000), l(0.000000, 0.000000, 0.000000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r9.xyxx, t13.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.zwzz, t13.xyzw, s2
mov r21.xyz, r5.yzwy



mad r5.w, r9.w, l(0.00392156886), r12.w
add r5.w, r5.w, l(-0.00196078443)
mad r5.w, r5.w, cb4[18].w, cb4[20].w
mul r12.xyz, r12.xyzx, r12.xyzx
mad r12.xyz, r12.xyzx, cb4[18].xyzx, cb4[20].xyzx
exp r5.w, r5.w
add r5.w, r5.w, l(-0.0185813606)
mad r9.xyzw, r9.xyzw, cb4[19].xyzw, cb4[21].xyzw
mov r8.w, l(1.000000)
dp4 r6.w, r9.xyzw, r8.xyzw
max r6.w, r6.w, l(0.000000)
mul r5.w, r5.w, r6.w
mul r9.xyz, r12.xyzx, r5.wwww
mul r9.xyz, r9.xyzx, cb0[146].xyzx
ilt r5.w, l(1), cb0[125].x
if_nz r5.w
  mul r10.xy, r6.xyxx, cb0[123].xyxx
  round_z r10.xy, r10.xyxx
  ftoi r12.xy, r10.xyxx
  mov r12.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r12.xyzz, t9.yzwx
  mad r6.w, r5.w, cb0[57].x, cb0[57].y
  mad r5.w, r5.w, cb0[57].z, -cb0[57].w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
  add r5.w, r5.w, r6.w
  mad r5.w, -r11.z, l(1.000000), r5.w
  div r5.w, |r5.w|, r11.w
  lt r5.w, l(0.010000), r5.w
  if_nz r5.w
    mov r13.y, -cb0[123].z
    mov r13.z, l(0)
    add r13.yz, r6.xxyx, r13.yyzy
    iadd r14.xyzw, r12.xxyy, l(1, -1, 1, -1)
    mov r12.w, r14.y
    ld_indexable(texture2d)(float,float,float,float) r5.w, r12.wyzz, t9.yzwx
    mad r6.w, r5.w, cb0[57].x, cb0[57].y
    mad r5.w, r5.w, cb0[57].z, -cb0[57].w
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    add r5.w, r5.w, r6.w
    mad r5.w, -r11.z, l(1.000000), r5.w
    mov r13.x, |r5.w|
    lt r5.w, r13.x, l(100000000.000000)
    mov r6.z, l(100000000.000000)
    movc r13.xyz, r5.wwww, r13.xyzx, r6.zxyz
    mov r15.y, l(0)
    mov r15.z, cb0[123].w
    add r15.yz, r6.xxyx, r15.yyzy
    mov r16.xz, r12.xxzx
    mov r16.yw, r14.zzzw
    ld_indexable(texture2d)(float,float,float,float) r5.w, r16.xyzz, t9.yzwx
    mad r6.z, r5.w, cb0[57].x, cb0[57].y
    mad r5.w, r5.w, cb0[57].z, -cb0[57].w
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    add r5.w, r5.w, r6.z
    mad r5.w, -r11.z, l(1.000000), r5.w
    mov r15.x, |r5.w|
    lt r5.w, r15.x, r13.x
    movc r13.xyz, r5.wwww, r15.xyzx, r13.xyzx
    mov r15.y, cb0[123].z
    mov r15.z, l(0)
    add r15.yz, r6.xxyx, r15.yyzy
    mov r14.yzw, r12.yyzz
    ld_indexable(texture2d)(float,float,float,float) r5.w, r14.xyzw, t9.yzwx
    mad r6.z, r5.w, cb0[57].x, cb0[57].y
    mad r5.w, r5.w, cb0[57].z, -cb0[57].w
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    add r5.w, r5.w, r6.z
    mad r5.w, -r11.z, l(1.000000), r5.w
    mov r15.x, |r5.w|
    lt r5.w, r15.x, r13.x
    movc r12.xyz, r5.wwww, r15.xyzx, r13.xyzx
    mov r10.x, l(0)
    mov r10.y, -cb0[123].w
    add r6.zw, r6.xxxy, r10.xxxy
    ld_indexable(texture2d)(float,float,float,float) r5.w, r16.xwzz, t9.yzwx
    mad r8.w, r5.w, cb0[57].x, cb0[57].y
    mad r5.w, r5.w, cb0[57].z, -cb0[57].w
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    add r5.w, r5.w, r8.w
    mad r5.w, -r11.z, l(1.000000), r5.w
    lt r5.w, |r5.w|, r12.x
    movc r6.xy, r5.wwww, r6.zwzz, r12.yzyy
  endif
endif
resinfo_indexable(texture2d)(float,float,float,float)_uint r6.zw, l(0), t8.zwxy
utof r6.zw, r6.zzzw
mul r6.zw, r6.zzzw, r6.xxxy
round_z r6.zw, r6.zzzw
ftoi r12.xy, r6.zwzz
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.w, r12.xyzw, t8.yzwx
mul r6.z, cb1[12].y, l(3.999000)
ftou r6.z, r6.z
and r6.z, r6.z, l(2)
movc r6.z, r6.z, cb0[164].y, l(1.000000)
add r5.w, r5.w, l(-1.000000)
mad r5.w, r6.z, r5.w, l(1.000000)
mul r9.xyz, r5.wwww, r9.xyzx
mul r9.xyz, r5.xyzx, r9.xyzx
mad r11.xyz, r0.yzwy, l(2.040400, 2.040400, 2.040400, 0.000000), l(-0.332400, -0.332400, -0.332400, 0.000000)
mad r11.xyz, r0.yzwy, l(-4.795100, -4.795100, -4.795100, 0.000000), r11.xyzx
mad r0.yzw, r0.yyzw, l(0.000000, 2.755200, 2.755200, 2.755200), r11.xxyz
add r0.yzw, r0.yyzw, l(0.000000, 1.332000, 1.332000, 1.332000)
max r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
ftou r6.zw, r10.zzzw
if_z r0.x
  mov r5.w, cb3[3].x
  mov r8.w, cb3[3].y
  mov r9.w, cb3[3].z
  mov r10.xyz, cb3[1].zxyz
  mov r10.w, cb3[2].x
else
  mov r5.w, cb3[43].x
  mov r8.w, cb3[43].y
  mov r9.w, cb3[43].z
  mov r10.xyz, cb3[41].zxyz
  mov r10.w, cb3[42].x
endif
mad r5.w, v6.w, r5.w, r8.w
log r5.w, r5.w
mul r5.w, r9.w, r5.w
max r5.w, r5.w, l(0.000000)
ftou r5.w, r5.w
iadd r8.w, r10.x, l(-1)
umin r5.w, r5.w, r8.w
ushr r6.zw, r6.zzzw, r10.wwww
imad r5.w, r5.w, r10.z, r6.w
imad r5.w, r5.w, r10.y, r6.z
if_nz cb3[95].x
  mul r6.xy, r6.xyxx, cb0[123].xyxx
  round_z r6.xy, r6.xyxx
  ftoi r6.xy, r6.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyzw, t7.xyzw
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
mul r6.xyzw, r6.xyzw, r6.xyzw
if_z r0.x
  mov r8.w, cb3[0].z
  mov r9.w, cb3[6].x
  mov r10.xy, cb3[6].zwzz
  mov r11.xyz, cb3[5].xyzx
  mov r12.xyz, cb3[4].xyzx
else
  mov r8.w, cb3[40].z
  mov r9.w, cb3[46].x
  mov r10.xy, cb3[46].zwzz
  mov r11.xyz, cb3[45].xyzx
  mov r12.xyz, cb3[44].xyzx
endif
if_nz r8.w
  and r13.xyzw, r9.wwww, l(255, 1, 2, 4)
  movc r13.xyzw, r13.xyzw, l(1,1.000000,1.000000,1.000000), l(0,0,0,0)
  and r8.w, r9.w, l(8)
  movc r14.w, r8.w, l(1.000000), l(0)
  ushr r10.zw, r9.wwww, l(0, 0, 4, 8)
  ubfe r8.w, l(1), l(4), r9.w
  movc r15.x, r8.w, l(1.000000), l(0)
  and r16.xyz, r10.zzzz, l(2, 4, 8, 0)
  movc r15.yzw, r16.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
  dp4 r8.w, r15.xyzw, r6.xyzw
  lt r9.w, r10.y, l(0.000000)
  swapc r15.x, r16.x, r9.w, l(1.000000), r8.w
  if_nz r13.x
    mov r14.xyz, r13.yzwy
    dp4 r8.w, r14.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    dp4 r9.w, r7.xyzw, r14.xyzw
    add r9.w, r9.w, l(-1.000000)
    mad r8.w, r8.w, r9.w, l(1.000000)
    mad_sat r9.w, r11.w, r10.x, r10.y
    mul r9.w, r9.w, r9.w
    add r8.w, -r15.x, r8.w
    mad r8.w, r9.w, r8.w, r15.x
    min r9.w, r16.x, r8.w
    mul r10.x, r16.x, r8.w
    mul r10.y, r16.x, r9.w
  else
    mov r10.xy, l(1.000000,1.000000,0,0)
  endif
  add r8.w, r10.y, r10.x
  lt r8.w, l(0.000000), r8.w
  if_nz r8.w
    dp3 r8.w, r12.xyzx, r12.xyzx
    rsq r8.w, r8.w
    mul r12.xyz, r8.wwww, r12.xyzx
    dp3_sat r8.w, r8.zxyz, r12.xyzx
    mul r12.xyz, r5.xyzx, r8.wwww
    mul r12.xyz, r12.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    mul r10.xyz, r10.xxxx, r11.xyzx
    mul r10.xyz, r10.xyzx, r12.xyzx
  else
    mov r10.xyz, l(0,0,0,0)
  endif
  and r8.w, r10.w, cb1[16].w
  movc r10.xyz, r8.wwww, r10.xyzx, l(0,0,0,0)
else
  mov r10.xyz, l(0,0,0,0)
endif
if_z r0.x
  ishl r8.w, r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r8.w, r8.wwww, t1.yzwx
  umin r8.w, r8.w, cb3[0].x
  bfi r9.w, l(31), l(1), r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t1.yzwx
else
  ishl r10.w, r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t4.yzwx
  umin r8.w, r10.w, cb3[40].x
  bfi r5.w, l(31), l(1), r5.w, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r9.w, r5.wwww, t4.yzwx
endif
movc r5.w, r0.x, cb3[40].x, cb3[0].x
umin r5.w, r5.w, r8.w
mul r11.xyz, r5.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mov r12.xyz, r10.xyzx
mov r8.w, l(0)
loop
  uge r10.w, r8.w, r5.w
  breakc_nz r10.w
  iadd r10.w, r8.w, r9.w
  if_z r0.x
    ld_indexable(buffer)(uint,uint,uint,uint) r11.w, r10.wwww, t2.yzwx
    imul null, r12.w, r11.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r12.wwww, t0.xyzw
    imad r14.xyzw, r11.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r14.xxxx, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r14.yyyy, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r14.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r14.xyz, r14.wwww, t0.xyzw
  else
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t5.yzwx
    imul null, r11.w, r10.w, l(5)
    ld_indexable(buffer)(float,float,float,float) r13.xyzw, r11.wwww, t3.xyzw
    imad r18.xyzw, r10.wwww, l(5, 5, 5, 5), l(1, 2, 3, 4)
    ld_indexable(buffer)(float,float,float,float) r15.xyzw, r18.xxxx, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r16.xyzw, r18.yyyy, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r17.xyzw, r18.zzzz, t3.xyzw
    ld_indexable(buffer)(float,float,float,float) r14.xyz, r18.wwww, t3.xyzw
  endif
  eq r10.w, r15.w, l(0.000000)
  lt r11.w, l(-2.000000), r17.x
  add r13.xyz, -r4.xyzx, r13.xyzx
  dp3 r12.w, r13.xyzx, r13.xyzx
  rsq r14.w, r12.w
  mul r18.xyz, r13.xyzx, r14.wwww
  mul r14.w, r13.w, r13.w
  mul r12.w, r12.w, r14.w
  mad r12.w, -r12.w, r12.w, l(1.000000)
  max r12.w, r12.w, l(0.000000)
  mul r12.w, r12.w, r12.w
  mul r19.xyz, r13.wwww, r13.xyzx
  dp3 r13.w, r19.xyzx, r19.xyzx
  min r13.w, r13.w, l(1.000000)
  add r13.w, -r13.w, l(1.000000)
  log r13.w, r13.w
  mul r13.w, r13.w, r15.w
  exp r13.w, r13.w
  movc r12.w, r10.w, r12.w, r13.w
  dp3 r13.w, r18.xyzx, r16.xyzx
  add r13.w, -r17.x, r13.w
  mul_sat r13.w, r17.y, r13.w
  mul r13.w, r13.w, r13.w
  mul r13.w, r12.w, r13.w
  movc r11.w, r11.w, r13.w, r12.w
  lt r12.w, l(0.000000), r11.w
  if_nz r12.w
    and r12.w, r16.w, l(255)
    movc r12.w, r12.w, l(1), l(0)
    if_nz r12.w
      and r18.xyzw, r16.wwww, l(1, 2, 4, 8)
      movc r18.xyzw, r18.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
      ushr r12.w, r16.w, l(4)
      ubfe r13.w, l(1), l(4), r16.w
      movc r19.x, r13.w, l(1.000000), l(0)
      and r16.xyz, r12.wwww, l(2, 4, 8, 0)
      movc r19.yzw, r16.xxyz, l(0,1.000000,1.000000,1.000000), l(0,0,0,0)
      dp4 r12.w, r19.xyzw, r6.xyzw
      dp4 r13.w, r18.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      dp4 r14.w, r7.xyzw, r18.xyzw
      add r14.w, r14.w, l(-1.000000)
      mad r13.w, r13.w, r14.w, l(1.000000)
      mul r16.xy, r12.wwww, r13.wwww
    else
      mov r16.xy, l(1.000000,1.000000,0,0)
    endif
    add r12.w, r16.y, r16.x
    lt r12.w, l(0.000000), r12.w
    if_nz r12.w
      f16tof32 r12.w, r17.w
      mul r13.w, r12.w, l(0.500000)
      mad r17.xyw, -r13.wwww, r14.xyxz, r13.xyxz
      mad r13.xyz, r13.wwww, r14.xyzx, r13.xyzx
      lt r12.w, l(0.000000), r12.w
      if_nz r12.w
        dp3 r12.w, r17.xywx, r17.xywx
        dp3 r13.w, r13.xyzx, r13.xyzx
        rsq r12.w, r12.w
        rsq r13.w, r13.w
        mul r14.x, r12.w, r13.w
        dp3 r14.y, r17.xywx, r13.xyzx
        mul r14.y, r14.x, r14.y
        mad r14.y, r14.y, l(0.500000), r14.x
        add r14.y, r14.y, l(0.500000)
        div r14.y, r14.x, r14.y
        dp3 r14.z, r8.zxyz, r17.xywx
        dp3 r13.x, r8.zxyz, r13.xyzx
        mul r13.x, r13.w, r13.x
        mad r12.w, r14.z, r12.w, r13.x
        mul r14.x, r12.w, l(0.500000)
      else
        dp3 r12.w, r17.xywx, r17.xywx
        add r13.x, r12.w, l(1.000000)
        rcp r14.y, r13.x
        rsq r12.w, r12.w
        mul r13.xyz, r12.wwww, r17.xywx
        dp3 r14.x, r8.zxyz, r13.xyzx
      endif
      lt r12.w, l(0.000000), r17.z
      mul r13.x, r17.z, r17.z
      mul_sat r13.x, r14.y, r13.x
      sqrt r13.x, r13.x
      lt r13.y, r14.x, r13.x
      max r13.z, -r13.x, r14.x
      add r13.z, r13.z, r13.x
      mul r13.z, r13.z, r13.z
      mul r13.x, r13.x, l(4.000000)
      div r13.x, r13.z, r13.x
      movc r13.x, r13.y, r13.x, r14.x
      movc_sat r12.w, r12.w, r13.x, r14.x
      movc r10.w, r10.w, r14.y, l(1.000000)
      mul r10.w, r12.w, r10.w
      mul r13.xyz, r11.xyzx, r10.wwww
      mul r14.xyz, r11.wwww, r15.xyzx
      mul r14.xyz, r16.xxxx, r14.xyzx
      mul r13.xyz, r13.xyzx, r14.xyzx
    else
      mov r13.xyz, l(0,0,0,0)
    endif
  else
    mov r13.xyz, l(0,0,0,0)
  endif
  ushr r10.w, r16.w, l(8)
  and r10.w, r10.w, cb1[16].w
  add r13.xyz, r12.xyzx, r13.xyzx
  movc r12.xyz, r10.wwww, r13.xyzx, r12.xyzx
  iadd r8.w, r8.w, l(1)
endloop
lt r0.x, l(0.000000), cb3[91].w
if_nz r0.x
  mov r4.w, l(1.000000)
  dp4 r1.x, r4.xyzw, r1.xyzw
  dp4 r1.y, r4.xyzw, r2.xyzw
  dp4 r0.x, r4.xyzw, r3.xyzw
  div r1.xy, r1.xyxx, r0.xxxx
  mad r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.x, r0.x, cb0[176].x, cb0[176].y
  log r0.x, r0.x
  mul r0.x, r0.x, cb0[176].z
  mul r1.z, r0.x, cb0[175].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r1.xyzx, t6.xyzw, s0, l(0.000000)
  mul r0.x, r1.w, v5.w
  mad r1.xyz, v5.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v5.xyzx
  mov r0.x, v5.w
endif
add r2.xyz, r5.xyzx, -r12.xyzx
mad r2.xyz, cb0[134].zzzz, r2.xyzx, r12.xyzx
max r3.xyz, cb5[2].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb0[130].x
if_nz r1.w
  add r5.xyz, r4.xyzx, -cb1[5].xyzx
  add r6.xyz, cb1[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r5.xyz, r6.xyzx, |r5.xyzx|
  or r1.w, r5.y, r5.x
  or r1.w, r5.z, r1.w
  dp3 r2.w, r4.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r2.w, r2.w, l(0.002000)
  frc r2.w, r2.w
  lt r2.w, l(0.500000), r2.w
  movc r4.xyz, r2.wwww, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r3.xyz, r1.wwww, r4.xyzx, r3.xyzx
endif
mad r0.yzw, r9.xxyz, r0.yyzw, r2.xxyz
add r0.yzw, r3.xxyz, r0.yyzw
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx
mov o0.w, l(0)
add o0.xyz, r21.xyzw, r0.yzwy

ret
// Approximately 0 instruction slots used
